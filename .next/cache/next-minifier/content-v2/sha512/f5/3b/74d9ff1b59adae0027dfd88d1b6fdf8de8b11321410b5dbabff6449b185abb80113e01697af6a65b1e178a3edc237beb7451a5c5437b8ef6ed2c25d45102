{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[3],{\"5aKs\":function(e,t,r){\"use strict\";r.r(t),function(e,a){var n=r(\"zCBh\"),i=r.n(n),s=r(\"aBMH\"),o=r(\"f66B\"),l=r.n(o),u=r(\"sHAy\"),c=r(\"7Ue9\"),h=r.n(c),f=r(\"oTm3\"),p=r.n(f),d=r(\"JBAE\"),y=r.n(d),g=r(\"WuVl\"),v=r.n(g),m={logErrors:!1},b=[];function w(e,t,r){if(r.get){var a=r.get;r.get=function(){var e=a.call(this);return Object.defineProperty(this,t,{value:e}),e}}else if(\"function\"===typeof r.value){var n=r.value;return{get:function(){var e=new Map;function r(){for(var t=arguments.length,r=Array(t),a=0;a<t;a++)r[a]=arguments[a];var i=r.length>0?r[0]:\"value\";if(e.has(i))return e.get(i);var s=n.apply(this,r);return e.set(i,s),s}return Object.defineProperty(this,t,{value:r}),r}}}}m.registerFormat=function(e){b.push(e)},m.openSync=function(e,t){throw new Error(\"fontkit.openSync unavailable for browser build\")},m.open=function(e,t,r){throw new Error(\"fontkit.open unavailable for browser build\")},m.create=function(e,t){for(var r=0;r<b.length;r++){var a=b[r];if(a.probe(e)){var n=new a(new i.a.DecodeStream(e));return t?n.getFont(t):n}}throw new Error(\"Unknown font format\")};var S=new i.a.Struct({firstCode:i.a.uint16,entryCount:i.a.uint16,idDelta:i.a.int16,idRangeOffset:i.a.uint16}),_=new i.a.Struct({startCharCode:i.a.uint32,endCharCode:i.a.uint32,glyphID:i.a.uint32}),k=new i.a.Struct({startUnicodeValue:i.a.uint24,additionalCount:i.a.uint8}),C=new i.a.Struct({unicodeValue:i.a.uint24,glyphID:i.a.uint16}),x=new i.a.Array(k,i.a.uint32),A=new i.a.Array(C,i.a.uint32),P=new i.a.Struct({varSelector:i.a.uint24,defaultUVS:new i.a.Pointer(i.a.uint32,x,{type:\"parent\"}),nonDefaultUVS:new i.a.Pointer(i.a.uint32,A,{type:\"parent\"})}),I=new i.a.VersionedStruct(i.a.uint16,{0:{length:i.a.uint16,language:i.a.uint16,codeMap:new i.a.LazyArray(i.a.uint8,256)},2:{length:i.a.uint16,language:i.a.uint16,subHeaderKeys:new i.a.Array(i.a.uint16,256),subHeaderCount:function(e){return Math.max.apply(Math,e.subHeaderKeys)},subHeaders:new i.a.LazyArray(S,\"subHeaderCount\"),glyphIndexArray:new i.a.LazyArray(i.a.uint16,\"subHeaderCount\")},4:{length:i.a.uint16,language:i.a.uint16,segCountX2:i.a.uint16,segCount:function(e){return e.segCountX2>>1},searchRange:i.a.uint16,entrySelector:i.a.uint16,rangeShift:i.a.uint16,endCode:new i.a.LazyArray(i.a.uint16,\"segCount\"),reservedPad:new i.a.Reserved(i.a.uint16),startCode:new i.a.LazyArray(i.a.uint16,\"segCount\"),idDelta:new i.a.LazyArray(i.a.int16,\"segCount\"),idRangeOffset:new i.a.LazyArray(i.a.uint16,\"segCount\"),glyphIndexArray:new i.a.LazyArray(i.a.uint16,(function(e){return(e.length-e._currentOffset)/2}))},6:{length:i.a.uint16,language:i.a.uint16,firstCode:i.a.uint16,entryCount:i.a.uint16,glyphIndices:new i.a.LazyArray(i.a.uint16,\"entryCount\")},8:{reserved:new i.a.Reserved(i.a.uint16),length:i.a.uint32,language:i.a.uint16,is32:new i.a.LazyArray(i.a.uint8,8192),nGroups:i.a.uint32,groups:new i.a.LazyArray(_,\"nGroups\")},10:{reserved:new i.a.Reserved(i.a.uint16),length:i.a.uint32,language:i.a.uint32,firstCode:i.a.uint32,entryCount:i.a.uint32,glyphIndices:new i.a.LazyArray(i.a.uint16,\"numChars\")},12:{reserved:new i.a.Reserved(i.a.uint16),length:i.a.uint32,language:i.a.uint32,nGroups:i.a.uint32,groups:new i.a.LazyArray(_,\"nGroups\")},13:{reserved:new i.a.Reserved(i.a.uint16),length:i.a.uint32,language:i.a.uint32,nGroups:i.a.uint32,groups:new i.a.LazyArray(_,\"nGroups\")},14:{length:i.a.uint32,numRecords:i.a.uint32,varSelectors:new i.a.LazyArray(P,\"numRecords\")}}),O=new i.a.Struct({platformID:i.a.uint16,encodingID:i.a.uint16,table:new i.a.Pointer(i.a.uint32,I,{type:\"parent\",lazy:!0})}),F=new i.a.Struct({version:i.a.uint16,numSubtables:i.a.uint16,tables:new i.a.Array(O,\"numSubtables\")}),D=new i.a.Struct({version:i.a.int32,revision:i.a.int32,checkSumAdjustment:i.a.uint32,magicNumber:i.a.uint32,flags:i.a.uint16,unitsPerEm:i.a.uint16,created:new i.a.Array(i.a.int32,2),modified:new i.a.Array(i.a.int32,2),xMin:i.a.int16,yMin:i.a.int16,xMax:i.a.int16,yMax:i.a.int16,macStyle:new i.a.Bitfield(i.a.uint16,[\"bold\",\"italic\",\"underline\",\"outline\",\"shadow\",\"condensed\",\"extended\"]),lowestRecPPEM:i.a.uint16,fontDirectionHint:i.a.int16,indexToLocFormat:i.a.int16,glyphDataFormat:i.a.int16}),T=new i.a.Struct({version:i.a.int32,ascent:i.a.int16,descent:i.a.int16,lineGap:i.a.int16,advanceWidthMax:i.a.uint16,minLeftSideBearing:i.a.int16,minRightSideBearing:i.a.int16,xMaxExtent:i.a.int16,caretSlopeRise:i.a.int16,caretSlopeRun:i.a.int16,caretOffset:i.a.int16,reserved:new i.a.Reserved(i.a.int16,4),metricDataFormat:i.a.int16,numberOfMetrics:i.a.uint16}),M=new i.a.Struct({advance:i.a.uint16,bearing:i.a.int16}),L=new i.a.Struct({metrics:new i.a.LazyArray(M,(function(e){return e.parent.hhea.numberOfMetrics})),bearings:new i.a.LazyArray(i.a.int16,(function(e){return e.parent.maxp.numGlyphs-e.parent.hhea.numberOfMetrics}))}),G=new i.a.Struct({version:i.a.int32,numGlyphs:i.a.uint16,maxPoints:i.a.uint16,maxContours:i.a.uint16,maxComponentPoints:i.a.uint16,maxComponentContours:i.a.uint16,maxZones:i.a.uint16,maxTwilightPoints:i.a.uint16,maxStorage:i.a.uint16,maxFunctionDefs:i.a.uint16,maxInstructionDefs:i.a.uint16,maxStackElements:i.a.uint16,maxSizeOfInstructions:i.a.uint16,maxComponentElements:i.a.uint16,maxComponentDepth:i.a.uint16});function B(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return 1===e&&z[r]?z[r]:E[e][t]}var E=[[\"utf16be\",\"utf16be\",\"utf16be\",\"utf16be\",\"utf16be\",\"utf16be\"],[\"macroman\",\"shift-jis\",\"big5\",\"euc-kr\",\"iso-8859-6\",\"iso-8859-8\",\"macgreek\",\"maccyrillic\",\"symbol\",\"Devanagari\",\"Gurmukhi\",\"Gujarati\",\"Oriya\",\"Bengali\",\"Tamil\",\"Telugu\",\"Kannada\",\"Malayalam\",\"Sinhalese\",\"Burmese\",\"Khmer\",\"macthai\",\"Laotian\",\"Georgian\",\"Armenian\",\"gb-2312-80\",\"Tibetan\",\"Mongolian\",\"Geez\",\"maccenteuro\",\"Vietnamese\",\"Sindhi\"],[\"ascii\"],[\"symbol\",\"utf16be\",\"shift-jis\",\"gb18030\",\"big5\",\"wansung\",\"johab\",null,null,null,\"utf16be\"]],z={15:\"maciceland\",17:\"macturkish\",18:\"maccroatian\",24:\"maccenteuro\",25:\"maccenteuro\",26:\"maccenteuro\",27:\"maccenteuro\",28:\"maccenteuro\",30:\"maciceland\",37:\"macromania\",38:\"maccenteuro\",39:\"maccenteuro\",40:\"maccenteuro\",143:\"macinuit\",146:\"macgaelic\"},R=[[],{0:\"en\",30:\"fo\",60:\"ks\",90:\"rw\",1:\"fr\",31:\"fa\",61:\"ku\",91:\"rn\",2:\"de\",32:\"ru\",62:\"sd\",92:\"ny\",3:\"it\",33:\"zh\",63:\"bo\",93:\"mg\",4:\"nl\",34:\"nl-BE\",64:\"ne\",94:\"eo\",5:\"sv\",35:\"ga\",65:\"sa\",128:\"cy\",6:\"es\",36:\"sq\",66:\"mr\",129:\"eu\",7:\"da\",37:\"ro\",67:\"bn\",130:\"ca\",8:\"pt\",38:\"cz\",68:\"as\",131:\"la\",9:\"no\",39:\"sk\",69:\"gu\",132:\"qu\",10:\"he\",40:\"si\",70:\"pa\",133:\"gn\",11:\"ja\",41:\"yi\",71:\"or\",134:\"ay\",12:\"ar\",42:\"sr\",72:\"ml\",135:\"tt\",13:\"fi\",43:\"mk\",73:\"kn\",136:\"ug\",14:\"el\",44:\"bg\",74:\"ta\",137:\"dz\",15:\"is\",45:\"uk\",75:\"te\",138:\"jv\",16:\"mt\",46:\"be\",76:\"si\",139:\"su\",17:\"tr\",47:\"uz\",77:\"my\",140:\"gl\",18:\"hr\",48:\"kk\",78:\"km\",141:\"af\",19:\"zh-Hant\",49:\"az-Cyrl\",79:\"lo\",142:\"br\",20:\"ur\",50:\"az-Arab\",80:\"vi\",143:\"iu\",21:\"hi\",51:\"hy\",81:\"id\",144:\"gd\",22:\"th\",52:\"ka\",82:\"tl\",145:\"gv\",23:\"ko\",53:\"mo\",83:\"ms\",146:\"ga\",24:\"lt\",54:\"ky\",84:\"ms-Arab\",147:\"to\",25:\"pl\",55:\"tg\",85:\"am\",148:\"el-polyton\",26:\"hu\",56:\"tk\",86:\"ti\",149:\"kl\",27:\"es\",57:\"mn-CN\",87:\"om\",150:\"az\",28:\"lv\",58:\"mn\",88:\"so\",151:\"nn\",29:\"se\",59:\"ps\",89:\"sw\"},[],{1078:\"af\",16393:\"en-IN\",1159:\"rw\",1074:\"tn\",1052:\"sq\",6153:\"en-IE\",1089:\"sw\",1115:\"si\",1156:\"gsw\",8201:\"en-JM\",1111:\"kok\",1051:\"sk\",1118:\"am\",17417:\"en-MY\",1042:\"ko\",1060:\"sl\",5121:\"ar-DZ\",5129:\"en-NZ\",1088:\"ky\",11274:\"es-AR\",15361:\"ar-BH\",13321:\"en-PH\",1108:\"lo\",16394:\"es-BO\",3073:\"ar\",18441:\"en-SG\",1062:\"lv\",13322:\"es-CL\",2049:\"ar-IQ\",7177:\"en-ZA\",1063:\"lt\",9226:\"es-CO\",11265:\"ar-JO\",11273:\"en-TT\",2094:\"dsb\",5130:\"es-CR\",13313:\"ar-KW\",2057:\"en-GB\",1134:\"lb\",7178:\"es-DO\",12289:\"ar-LB\",1033:\"en\",1071:\"mk\",12298:\"es-EC\",4097:\"ar-LY\",12297:\"en-ZW\",2110:\"ms-BN\",17418:\"es-SV\",6145:\"ary\",1061:\"et\",1086:\"ms\",4106:\"es-GT\",8193:\"ar-OM\",1080:\"fo\",1100:\"ml\",18442:\"es-HN\",16385:\"ar-QA\",1124:\"fil\",1082:\"mt\",2058:\"es-MX\",1025:\"ar-SA\",1035:\"fi\",1153:\"mi\",19466:\"es-NI\",10241:\"ar-SY\",2060:\"fr-BE\",1146:\"arn\",6154:\"es-PA\",7169:\"aeb\",3084:\"fr-CA\",1102:\"mr\",15370:\"es-PY\",14337:\"ar-AE\",1036:\"fr\",1148:\"moh\",10250:\"es-PE\",9217:\"ar-YE\",5132:\"fr-LU\",1104:\"mn\",20490:\"es-PR\",1067:\"hy\",6156:\"fr-MC\",2128:\"mn-CN\",3082:\"es\",1101:\"as\",4108:\"fr-CH\",1121:\"ne\",1034:\"es\",2092:\"az-Cyrl\",1122:\"fy\",1044:\"nb\",21514:\"es-US\",1068:\"az\",1110:\"gl\",2068:\"nn\",14346:\"es-UY\",1133:\"ba\",1079:\"ka\",1154:\"oc\",8202:\"es-VE\",1069:\"eu\",3079:\"de-AT\",1096:\"or\",2077:\"sv-FI\",1059:\"be\",1031:\"de\",1123:\"ps\",1053:\"sv\",2117:\"bn\",5127:\"de-LI\",1045:\"pl\",1114:\"syr\",1093:\"bn-IN\",4103:\"de-LU\",1046:\"pt\",1064:\"tg\",8218:\"bs-Cyrl\",2055:\"de-CH\",2070:\"pt-PT\",2143:\"tzm\",5146:\"bs\",1032:\"el\",1094:\"pa\",1097:\"ta\",1150:\"br\",1135:\"kl\",1131:\"qu-BO\",1092:\"tt\",1026:\"bg\",1095:\"gu\",2155:\"qu-EC\",1098:\"te\",1027:\"ca\",1128:\"ha\",3179:\"qu\",1054:\"th\",3076:\"zh-HK\",1037:\"he\",1048:\"ro\",1105:\"bo\",5124:\"zh-MO\",1081:\"hi\",1047:\"rm\",1055:\"tr\",2052:\"zh\",1038:\"hu\",1049:\"ru\",1090:\"tk\",4100:\"zh-SG\",1039:\"is\",9275:\"smn\",1152:\"ug\",1028:\"zh-TW\",1136:\"ig\",4155:\"smj-NO\",1058:\"uk\",1155:\"co\",1057:\"id\",5179:\"smj\",1070:\"hsb\",1050:\"hr\",1117:\"iu\",3131:\"se-FI\",1056:\"ur\",4122:\"hr-BA\",2141:\"iu-Latn\",1083:\"se\",2115:\"uz-Cyrl\",1029:\"cs\",2108:\"ga\",2107:\"se-SE\",1091:\"uz\",1030:\"da\",1076:\"xh\",8251:\"sms\",1066:\"vi\",1164:\"prs\",1077:\"zu\",6203:\"sma-NO\",1106:\"cy\",1125:\"dv\",1040:\"it\",7227:\"sms\",1160:\"wo\",2067:\"nl-BE\",2064:\"it-CH\",1103:\"sa\",1157:\"sah\",1043:\"nl\",1041:\"ja\",7194:\"sr-Cyrl-BA\",1144:\"ii\",3081:\"en-AU\",1099:\"kn\",3098:\"sr\",1130:\"yo\",10249:\"en-BZ\",1087:\"kk\",6170:\"sr-Latn-BA\",4105:\"en-CA\",1107:\"km\",2074:\"sr-Latn\",9225:\"en-029\",1158:\"quc\",1132:\"nso\"}],V=new i.a.Struct({platformID:i.a.uint16,encodingID:i.a.uint16,languageID:i.a.uint16,nameID:i.a.uint16,length:i.a.uint16,string:new i.a.Pointer(i.a.uint16,new i.a.String(\"length\",(function(e){return B(e.platformID,e.encodingID,e.languageID)})),{type:\"parent\",relativeTo:\"parent.stringOffset\",allowNull:!1})}),U=new i.a.Struct({length:i.a.uint16,tag:new i.a.Pointer(i.a.uint16,new i.a.String(\"length\",\"utf16be\"),{type:\"parent\",relativeTo:\"stringOffset\"})}),N=new i.a.VersionedStruct(i.a.uint16,{0:{count:i.a.uint16,stringOffset:i.a.uint16,records:new i.a.Array(V,\"count\")},1:{count:i.a.uint16,stringOffset:i.a.uint16,records:new i.a.Array(V,\"count\"),langTagCount:i.a.uint16,langTags:new i.a.Array(U,\"langTagCount\")}}),q=[\"copyright\",\"fontFamily\",\"fontSubfamily\",\"uniqueSubfamily\",\"fullName\",\"version\",\"postscriptName\",\"trademark\",\"manufacturer\",\"designer\",\"description\",\"vendorURL\",\"designerURL\",\"license\",\"licenseURL\",null,\"preferredFamily\",\"preferredSubfamily\",\"compatibleFull\",\"sampleText\",\"postscriptCIDFontName\",\"wwsFamilyName\",\"wwsSubfamilyName\"];N.process=function(e){var t={},r=this.records,a=Array.isArray(r),n=0;for(r=a?r:r[Symbol.iterator]();;){var i;if(a){if(n>=r.length)break;i=r[n++]}else{if((n=r.next()).done)break;i=n.value}var s=i,o=R[s.platformID][s.languageID];null==o&&null!=this.langTags&&s.languageID>=32768&&(o=this.langTags[s.languageID-32768].tag),null==o&&(o=s.platformID+\"-\"+s.languageID);var l=s.nameID>=256?\"fontFeatures\":q[s.nameID]||s.nameID;null==t[l]&&(t[l]={});var u=t[l];s.nameID>=256&&(u=u[s.nameID]||(u[s.nameID]={})),\"string\"!==typeof s.string&&\"string\"===typeof u[o]||(u[o]=s.string)}this.records=t},N.preEncode=function(){if(!Array.isArray(this.records)){this.version=0;var t=[];for(var r in this.records){var a=this.records[r];\"fontFeatures\"!==r&&(t.push({platformID:3,encodingID:1,languageID:1033,nameID:q.indexOf(r),length:e.byteLength(a.en,\"utf16le\"),string:a.en}),\"postscriptName\"===r&&t.push({platformID:1,encodingID:0,languageID:0,nameID:q.indexOf(r),length:a.en.length,string:a.en}))}this.records=t,this.count=t.length,this.stringOffset=N.size(this,null,!1)}};var j=new i.a.VersionedStruct(i.a.uint16,{header:{xAvgCharWidth:i.a.int16,usWeightClass:i.a.uint16,usWidthClass:i.a.uint16,fsType:new i.a.Bitfield(i.a.uint16,[null,\"noEmbedding\",\"viewOnly\",\"editable\",null,null,null,null,\"noSubsetting\",\"bitmapOnly\"]),ySubscriptXSize:i.a.int16,ySubscriptYSize:i.a.int16,ySubscriptXOffset:i.a.int16,ySubscriptYOffset:i.a.int16,ySuperscriptXSize:i.a.int16,ySuperscriptYSize:i.a.int16,ySuperscriptXOffset:i.a.int16,ySuperscriptYOffset:i.a.int16,yStrikeoutSize:i.a.int16,yStrikeoutPosition:i.a.int16,sFamilyClass:i.a.int16,panose:new i.a.Array(i.a.uint8,10),ulCharRange:new i.a.Array(i.a.uint32,4),vendorID:new i.a.String(4),fsSelection:new i.a.Bitfield(i.a.uint16,[\"italic\",\"underscore\",\"negative\",\"outlined\",\"strikeout\",\"bold\",\"regular\",\"useTypoMetrics\",\"wws\",\"oblique\"]),usFirstCharIndex:i.a.uint16,usLastCharIndex:i.a.uint16},0:{},1:{typoAscender:i.a.int16,typoDescender:i.a.int16,typoLineGap:i.a.int16,winAscent:i.a.uint16,winDescent:i.a.uint16,codePageRange:new i.a.Array(i.a.uint32,2)},2:{typoAscender:i.a.int16,typoDescender:i.a.int16,typoLineGap:i.a.int16,winAscent:i.a.uint16,winDescent:i.a.uint16,codePageRange:new i.a.Array(i.a.uint32,2),xHeight:i.a.int16,capHeight:i.a.int16,defaultChar:i.a.uint16,breakChar:i.a.uint16,maxContent:i.a.uint16},5:{typoAscender:i.a.int16,typoDescender:i.a.int16,typoLineGap:i.a.int16,winAscent:i.a.uint16,winDescent:i.a.uint16,codePageRange:new i.a.Array(i.a.uint32,2),xHeight:i.a.int16,capHeight:i.a.int16,defaultChar:i.a.uint16,breakChar:i.a.uint16,maxContent:i.a.uint16,usLowerOpticalPointSize:i.a.uint16,usUpperOpticalPointSize:i.a.uint16}}),H=j.versions;H[3]=H[4]=H[2];var Y=new i.a.VersionedStruct(i.a.fixed32,{header:{italicAngle:i.a.fixed32,underlinePosition:i.a.int16,underlineThickness:i.a.int16,isFixedPitch:i.a.uint32,minMemType42:i.a.uint32,maxMemType42:i.a.uint32,minMemType1:i.a.uint32,maxMemType1:i.a.uint32},1:{},2:{numberOfGlyphs:i.a.uint16,glyphNameIndex:new i.a.Array(i.a.uint16,\"numberOfGlyphs\"),names:new i.a.Array(new i.a.String(i.a.uint8))},2.5:{numberOfGlyphs:i.a.uint16,offsets:new i.a.Array(i.a.uint8,\"numberOfGlyphs\")},3:{},4:{map:new i.a.Array(i.a.uint32,(function(e){return e.parent.maxp.numGlyphs}))}}),W=new i.a.Struct({controlValues:new i.a.Array(i.a.int16)}),K=new i.a.Struct({instructions:new i.a.Array(i.a.uint8)}),X=new i.a.VersionedStruct(\"head.indexToLocFormat\",{0:{offsets:new i.a.Array(i.a.uint16)},1:{offsets:new i.a.Array(i.a.uint32)}});X.process=function(){if(0===this.version)for(var e=0;e<this.offsets.length;e++)this.offsets[e]<<=1},X.preEncode=function(){if(null==this.version&&(this.version=this.offsets[this.offsets.length-1]>65535?1:0,0===this.version))for(var e=0;e<this.offsets.length;e++)this.offsets[e]>>>=1};var J=new i.a.Struct({controlValueProgram:new i.a.Array(i.a.uint8)}),Z=new i.a.Array(new i.a.Buffer),Q=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},$=function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")},ee=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}(),te=function(e,t){if(\"function\"!==typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)},re=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!==typeof t&&\"function\"!==typeof t?e:t},ae=function(){function e(t){$(this,e),this.type=t}return e.prototype.getCFFVersion=function(e){for(;e&&!e.hdrSize;)e=e.parent;return e?e.version:-1},e.prototype.decode=function(e,t){var r=this.getCFFVersion(t)>=2?e.readUInt32BE():e.readUInt16BE();if(0===r)return[];var a=e.readUInt8(),n=void 0;if(1===a)n=i.a.uint8;else if(2===a)n=i.a.uint16;else if(3===a)n=i.a.uint24;else{if(4!==a)throw new Error(\"Bad offset size in CFFIndex: \"+a+\" \"+e.pos);n=i.a.uint32}for(var s=[],o=e.pos+(r+1)*a-1,l=n.decode(e),u=0;u<r;u++){var c=n.decode(e);if(null!=this.type){var h=e.pos;e.pos=o+l,t.length=c-l,s.push(this.type.decode(e,t)),e.pos=h}else s.push({offset:o+l,length:c-l});l=c}return e.pos=o+l,s},e.prototype.size=function(e,t){var r=2;if(0===e.length)return r;for(var a=this.type||new i.a.Buffer,n=1,s=0;s<e.length;s++){var o=e[s];n+=a.size(o,t)}var l=void 0;if(n<=255)l=i.a.uint8;else if(n<=65535)l=i.a.uint16;else if(n<=16777215)l=i.a.uint24;else{if(!(n<=4294967295))throw new Error(\"Bad offset in CFFIndex\");l=i.a.uint32}return r+=1+l.size()*(e.length+1),r+=n-1,r},e.prototype.encode=function(e,t,r){if(e.writeUInt16BE(t.length),0!==t.length){var a=this.type||new i.a.Buffer,n=[],s=1,o=t,l=Array.isArray(o),u=0;for(o=l?o:o[Symbol.iterator]();;){var c;if(l){if(u>=o.length)break;c=o[u++]}else{if((u=o.next()).done)break;c=u.value}var h=c,f=a.size(h,r);n.push(f),s+=f}var p=void 0;if(s<=255)p=i.a.uint8;else if(s<=65535)p=i.a.uint16;else if(s<=16777215)p=i.a.uint24;else{if(!(s<=4294967295))throw new Error(\"Bad offset in CFFIndex\");p=i.a.uint32}e.writeUInt8(p.size()),s=1,p.encode(e,s);var d=n,y=Array.isArray(d),g=0;for(d=y?d:d[Symbol.iterator]();;){var v;if(y){if(g>=d.length)break;v=d[g++]}else{if((g=d.next()).done)break;v=g.value}s+=v,p.encode(e,s)}var m=t,b=Array.isArray(m),w=0;for(m=b?m:m[Symbol.iterator]();;){var S;if(b){if(w>=m.length)break;S=m[w++]}else{if((w=m.next()).done)break;S=w.value}var _=S;a.encode(e,_,r)}}},e}(),ne=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\".\",\"E\",\"E-\",null,\"-\"],ie={\".\":10,E:11,\"E-\":12,\"-\":14},se=function(){function e(){$(this,e)}return e.decode=function(e,t){if(32<=t&&t<=246)return t-139;if(247<=t&&t<=250)return 256*(t-247)+e.readUInt8()+108;if(251<=t&&t<=254)return 256*-(t-251)-e.readUInt8()-108;if(28===t)return e.readInt16BE();if(29===t)return e.readInt32BE();if(30===t){for(var r=\"\";;){var a=e.readUInt8(),n=a>>4;if(15===n)break;r+=ne[n];var i=15&a;if(15===i)break;r+=ne[i]}return parseFloat(r)}return null},e.size=function(e){if(e.forceLarge&&(e=32768),(0|e)!==e){var t=\"\"+e;return 1+Math.ceil((t.length+1)/2)}return-107<=e&&e<=107?1:108<=e&&e<=1131||-1131<=e&&e<=-108?2:-32768<=e&&e<=32767?3:5},e.encode=function(e,t){var r=Number(t);if(t.forceLarge)return e.writeUInt8(29),e.writeInt32BE(r);if((0|r)===r)return-107<=r&&r<=107?e.writeUInt8(r+139):108<=r&&r<=1131?(r-=108,e.writeUInt8(247+(r>>8)),e.writeUInt8(255&r)):-1131<=r&&r<=-108?(r=-r-108,e.writeUInt8(251+(r>>8)),e.writeUInt8(255&r)):-32768<=r&&r<=32767?(e.writeUInt8(28),e.writeInt16BE(r)):(e.writeUInt8(29),e.writeInt32BE(r));e.writeUInt8(30);for(var a=\"\"+r,n=0;n<a.length;n+=2){var i=a[n],s=ie[i]||+i;if(n===a.length-1)var o=15;else{var l=a[n+1];o=ie[l]||+l}e.writeUInt8(s<<4|15&o)}return 15!==o?e.writeUInt8(240):void 0},e}(),oe=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];$(this,e),this.ops=t,this.fields={};var r=t,a=Array.isArray(r),n=0;for(r=a?r:r[Symbol.iterator]();;){var i;if(a){if(n>=r.length)break;i=r[n++]}else{if((n=r.next()).done)break;i=n.value}var s=i,o=Array.isArray(s[0])?s[0][0]<<8|s[0][1]:s[0];this.fields[o]=s}}return e.prototype.decodeOperands=function(e,t,r,a){var n=this;if(Array.isArray(e))return a.map((function(a,i){return n.decodeOperands(e[i],t,r,[a])}));if(null!=e.decode)return e.decode(t,r,a);switch(e){case\"number\":case\"offset\":case\"sid\":return a[0];case\"boolean\":return!!a[0];default:return a}},e.prototype.encodeOperands=function(e,t,r,a){var n=this;return Array.isArray(e)?a.map((function(a,i){return n.encodeOperands(e[i],t,r,a)[0]})):null!=e.encode?e.encode(t,a,r):\"number\"===typeof a?[a]:\"boolean\"===typeof a?[+a]:Array.isArray(a)?a:[a]},e.prototype.decode=function(e,t){var r=e.pos+t.length,a={},n=[];for(var i in Object.defineProperties(a,{parent:{value:t},_startOffset:{value:e.pos}}),this.fields){var o=this.fields[i];a[o[1]]=o[3]}for(;e.pos<r;){var l=e.readUInt8();if(l<28){12===l&&(l=l<<8|e.readUInt8());var u=this.fields[l];if(!u)throw new Error(\"Unknown operator \"+l);var c=this.decodeOperands(u[2],e,a,n);null!=c&&(c instanceof s.PropertyDescriptor?Object.defineProperty(a,u[1],c):a[u[1]]=c),n=[]}else n.push(se.decode(e,l))}return a},e.prototype.size=function(e,t){var r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],a={parent:t,val:e,pointerSize:0,startOffset:t.startOffset||0},n=0;for(var i in this.fields){var s=this.fields[i],o=e[s[1]];if(null!=o&&!l()(o,s[3])){var u=this.encodeOperands(s[2],null,a,o),c=u,h=Array.isArray(c),f=0;for(c=h?c:c[Symbol.iterator]();;){var p;if(h){if(f>=c.length)break;p=c[f++]}else{if((f=c.next()).done)break;p=f.value}var d=p;n+=se.size(d)}var y=Array.isArray(s[0])?s[0]:[s[0]];n+=y.length}}return r&&(n+=a.pointerSize),n},e.prototype.encode=function(e,t,r){var a={pointers:[],startOffset:e.pos,parent:r,val:t,pointerSize:0};a.pointerOffset=e.pos+this.size(t,a,!1);var n=this.ops,i=Array.isArray(n),s=0;for(n=i?n:n[Symbol.iterator]();;){var o;if(i){if(s>=n.length)break;o=n[s++]}else{if((s=n.next()).done)break;o=s.value}var u=o,c=t[u[1]];if(null!=c&&!l()(c,u[3])){var h=this.encodeOperands(u[2],e,a,c),f=Array.isArray(h),p=0;for(h=f?h:h[Symbol.iterator]();;){var d;if(f){if(p>=h.length)break;d=h[p++]}else{if((p=h.next()).done)break;d=p.value}var y=d;se.encode(e,y)}var g=Array.isArray(u[0])?u[0]:[u[0]],v=Array.isArray(g),m=0;for(g=v?g:g[Symbol.iterator]();;){var b;if(v){if(m>=g.length)break;b=g[m++]}else{if((m=g.next()).done)break;b=m.value}var w=b;e.writeUInt8(w)}}}for(var S=0;S<a.pointers.length;){var _=a.pointers[S++];_.type.encode(e,_.val,_.parent)}},e}(),le=function(e){function t(r){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return $(this,t),null==a.type&&(a.type=\"global\"),re(this,e.call(this,null,r,a))}return te(t,e),t.prototype.decode=function(t,r,a){return this.offsetType={decode:function(){return a[0]}},e.prototype.decode.call(this,t,r,a)},t.prototype.encode=function(t,r,a){if(!t)return this.offsetType={size:function(){return 0}},this.size(r,a),[new ue(0)];var n=null;return this.offsetType={encode:function(e,t){return n=t}},e.prototype.encode.call(this,t,r,a),[new ue(n)]},t}(i.a.Pointer),ue=function(){function e(t){$(this,e),this.val=t,this.forceLarge=!0}return e.prototype.valueOf=function(){return this.val},e}(),ce=new oe([[6,\"BlueValues\",\"delta\",null],[7,\"OtherBlues\",\"delta\",null],[8,\"FamilyBlues\",\"delta\",null],[9,\"FamilyOtherBlues\",\"delta\",null],[[12,9],\"BlueScale\",\"number\",.039625],[[12,10],\"BlueShift\",\"number\",7],[[12,11],\"BlueFuzz\",\"number\",1],[10,\"StdHW\",\"number\",null],[11,\"StdVW\",\"number\",null],[[12,12],\"StemSnapH\",\"delta\",null],[[12,13],\"StemSnapV\",\"delta\",null],[[12,14],\"ForceBold\",\"boolean\",!1],[[12,17],\"LanguageGroup\",\"number\",0],[[12,18],\"ExpansionFactor\",\"number\",.06],[[12,19],\"initialRandomSeed\",\"number\",0],[20,\"defaultWidthX\",\"number\",0],[21,\"nominalWidthX\",\"number\",0],[22,\"vsindex\",\"number\",0],[23,\"blend\",function(){function e(){$(this,e)}return e.decode=function(e,t,r){for(var a=r.pop();r.length>a;)r.pop()},e}(),null],[19,\"Subrs\",new le(new ae,{type:\"local\"}),null]]),he=[\".notdef\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quoteright\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"quoteleft\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"exclamdown\",\"cent\",\"sterling\",\"fraction\",\"yen\",\"florin\",\"section\",\"currency\",\"quotesingle\",\"quotedblleft\",\"guillemotleft\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"endash\",\"dagger\",\"daggerdbl\",\"periodcentered\",\"paragraph\",\"bullet\",\"quotesinglbase\",\"quotedblbase\",\"quotedblright\",\"guillemotright\",\"ellipsis\",\"perthousand\",\"questiondown\",\"grave\",\"acute\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"dieresis\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\",\"emdash\",\"AE\",\"ordfeminine\",\"Lslash\",\"Oslash\",\"OE\",\"ordmasculine\",\"ae\",\"dotlessi\",\"lslash\",\"oslash\",\"oe\",\"germandbls\",\"onesuperior\",\"logicalnot\",\"mu\",\"trademark\",\"Eth\",\"onehalf\",\"plusminus\",\"Thorn\",\"onequarter\",\"divide\",\"brokenbar\",\"degree\",\"thorn\",\"threequarters\",\"twosuperior\",\"registered\",\"minus\",\"eth\",\"multiply\",\"threesuperior\",\"copyright\",\"Aacute\",\"Acircumflex\",\"Adieresis\",\"Agrave\",\"Aring\",\"Atilde\",\"Ccedilla\",\"Eacute\",\"Ecircumflex\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Ntilde\",\"Oacute\",\"Ocircumflex\",\"Odieresis\",\"Ograve\",\"Otilde\",\"Scaron\",\"Uacute\",\"Ucircumflex\",\"Udieresis\",\"Ugrave\",\"Yacute\",\"Ydieresis\",\"Zcaron\",\"aacute\",\"acircumflex\",\"adieresis\",\"agrave\",\"aring\",\"atilde\",\"ccedilla\",\"eacute\",\"ecircumflex\",\"edieresis\",\"egrave\",\"iacute\",\"icircumflex\",\"idieresis\",\"igrave\",\"ntilde\",\"oacute\",\"ocircumflex\",\"odieresis\",\"ograve\",\"otilde\",\"scaron\",\"uacute\",\"ucircumflex\",\"udieresis\",\"ugrave\",\"yacute\",\"ydieresis\",\"zcaron\",\"exclamsmall\",\"Hungarumlautsmall\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"questionsmall\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"isuperior\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"ff\",\"ffi\",\"ffl\",\"parenleftinferior\",\"parenrightinferior\",\"Circumflexsmall\",\"hyphensuperior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"exclamdownsmall\",\"centoldstyle\",\"Lslashsmall\",\"Scaronsmall\",\"Zcaronsmall\",\"Dieresissmall\",\"Brevesmall\",\"Caronsmall\",\"Dotaccentsmall\",\"Macronsmall\",\"figuredash\",\"hypheninferior\",\"Ogoneksmall\",\"Ringsmall\",\"Cedillasmall\",\"questiondownsmall\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"zerosuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\",\"Agravesmall\",\"Aacutesmall\",\"Acircumflexsmall\",\"Atildesmall\",\"Adieresissmall\",\"Aringsmall\",\"AEsmall\",\"Ccedillasmall\",\"Egravesmall\",\"Eacutesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Igravesmall\",\"Iacutesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ethsmall\",\"Ntildesmall\",\"Ogravesmall\",\"Oacutesmall\",\"Ocircumflexsmall\",\"Otildesmall\",\"Odieresissmall\",\"OEsmall\",\"Oslashsmall\",\"Ugravesmall\",\"Uacutesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"Yacutesmall\",\"Thornsmall\",\"Ydieresissmall\",\"001.000\",\"001.001\",\"001.002\",\"001.003\",\"Black\",\"Bold\",\"Book\",\"Light\",\"Medium\",\"Regular\",\"Roman\",\"Semibold\"],fe=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quoteright\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"quoteleft\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"exclamdown\",\"cent\",\"sterling\",\"fraction\",\"yen\",\"florin\",\"section\",\"currency\",\"quotesingle\",\"quotedblleft\",\"guillemotleft\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"\",\"endash\",\"dagger\",\"daggerdbl\",\"periodcentered\",\"\",\"paragraph\",\"bullet\",\"quotesinglbase\",\"quotedblbase\",\"quotedblright\",\"guillemotright\",\"ellipsis\",\"perthousand\",\"\",\"questiondown\",\"\",\"grave\",\"acute\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"dieresis\",\"\",\"ring\",\"cedilla\",\"\",\"hungarumlaut\",\"ogonek\",\"caron\",\"emdash\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"AE\",\"\",\"ordfeminine\",\"\",\"\",\"\",\"\",\"Lslash\",\"Oslash\",\"OE\",\"ordmasculine\",\"\",\"\",\"\",\"\",\"\",\"ae\",\"\",\"\",\"\",\"dotlessi\",\"\",\"\",\"lslash\",\"oslash\",\"oe\",\"germandbls\"],pe=[\".notdef\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quoteright\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"quoteleft\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"exclamdown\",\"cent\",\"sterling\",\"fraction\",\"yen\",\"florin\",\"section\",\"currency\",\"quotesingle\",\"quotedblleft\",\"guillemotleft\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"endash\",\"dagger\",\"daggerdbl\",\"periodcentered\",\"paragraph\",\"bullet\",\"quotesinglbase\",\"quotedblbase\",\"quotedblright\",\"guillemotright\",\"ellipsis\",\"perthousand\",\"questiondown\",\"grave\",\"acute\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"dieresis\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\",\"emdash\",\"AE\",\"ordfeminine\",\"Lslash\",\"Oslash\",\"OE\",\"ordmasculine\",\"ae\",\"dotlessi\",\"lslash\",\"oslash\",\"oe\",\"germandbls\",\"onesuperior\",\"logicalnot\",\"mu\",\"trademark\",\"Eth\",\"onehalf\",\"plusminus\",\"Thorn\",\"onequarter\",\"divide\",\"brokenbar\",\"degree\",\"thorn\",\"threequarters\",\"twosuperior\",\"registered\",\"minus\",\"eth\",\"multiply\",\"threesuperior\",\"copyright\",\"Aacute\",\"Acircumflex\",\"Adieresis\",\"Agrave\",\"Aring\",\"Atilde\",\"Ccedilla\",\"Eacute\",\"Ecircumflex\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Ntilde\",\"Oacute\",\"Ocircumflex\",\"Odieresis\",\"Ograve\",\"Otilde\",\"Scaron\",\"Uacute\",\"Ucircumflex\",\"Udieresis\",\"Ugrave\",\"Yacute\",\"Ydieresis\",\"Zcaron\",\"aacute\",\"acircumflex\",\"adieresis\",\"agrave\",\"aring\",\"atilde\",\"ccedilla\",\"eacute\",\"ecircumflex\",\"edieresis\",\"egrave\",\"iacute\",\"icircumflex\",\"idieresis\",\"igrave\",\"ntilde\",\"oacute\",\"ocircumflex\",\"odieresis\",\"ograve\",\"otilde\",\"scaron\",\"uacute\",\"ucircumflex\",\"udieresis\",\"ugrave\",\"yacute\",\"ydieresis\",\"zcaron\"],de=new i.a.Struct({reserved:new i.a.Reserved(i.a.uint16),reqFeatureIndex:i.a.uint16,featureCount:i.a.uint16,featureIndexes:new i.a.Array(i.a.uint16,\"featureCount\")}),ye=new i.a.Struct({tag:new i.a.String(4),langSys:new i.a.Pointer(i.a.uint16,de,{type:\"parent\"})}),ge=new i.a.Struct({defaultLangSys:new i.a.Pointer(i.a.uint16,de),count:i.a.uint16,langSysRecords:new i.a.Array(ye,\"count\")}),ve=new i.a.Struct({tag:new i.a.String(4),script:new i.a.Pointer(i.a.uint16,ge,{type:\"parent\"})}),me=new i.a.Array(ve,i.a.uint16),be=new i.a.Struct({featureParams:i.a.uint16,lookupCount:i.a.uint16,lookupListIndexes:new i.a.Array(i.a.uint16,\"lookupCount\")}),we=new i.a.Struct({tag:new i.a.String(4),feature:new i.a.Pointer(i.a.uint16,be,{type:\"parent\"})}),Se=new i.a.Array(we,i.a.uint16),_e=new i.a.Struct({markAttachmentType:i.a.uint8,flags:new i.a.Bitfield(i.a.uint8,[\"rightToLeft\",\"ignoreBaseGlyphs\",\"ignoreLigatures\",\"ignoreMarks\",\"useMarkFilteringSet\"])});function ke(e){var t=new i.a.Struct({lookupType:i.a.uint16,flags:_e,subTableCount:i.a.uint16,subTables:new i.a.Array(new i.a.Pointer(i.a.uint16,e),\"subTableCount\"),markFilteringSet:new i.a.Optional(i.a.uint16,(function(e){return e.flags.flags.useMarkFilteringSet}))});return new i.a.LazyArray(new i.a.Pointer(i.a.uint16,t),i.a.uint16)}var Ce,xe=new i.a.Struct({start:i.a.uint16,end:i.a.uint16,startCoverageIndex:i.a.uint16}),Ae=new i.a.VersionedStruct(i.a.uint16,{1:{glyphCount:i.a.uint16,glyphs:new i.a.Array(i.a.uint16,\"glyphCount\")},2:{rangeCount:i.a.uint16,rangeRecords:new i.a.Array(xe,\"rangeCount\")}}),Pe=new i.a.Struct({start:i.a.uint16,end:i.a.uint16,class:i.a.uint16}),Ie=new i.a.VersionedStruct(i.a.uint16,{1:{startGlyph:i.a.uint16,glyphCount:i.a.uint16,classValueArray:new i.a.Array(i.a.uint16,\"glyphCount\")},2:{classRangeCount:i.a.uint16,classRangeRecord:new i.a.Array(Pe,\"classRangeCount\")}}),Oe=new i.a.Struct({a:i.a.uint16,b:i.a.uint16,deltaFormat:i.a.uint16}),Fe=new i.a.Struct({sequenceIndex:i.a.uint16,lookupListIndex:i.a.uint16}),De=new i.a.Struct({glyphCount:i.a.uint16,lookupCount:i.a.uint16,input:new i.a.Array(i.a.uint16,(function(e){return e.glyphCount-1})),lookupRecords:new i.a.Array(Fe,\"lookupCount\")}),Te=new i.a.Array(new i.a.Pointer(i.a.uint16,De),i.a.uint16),Me=new i.a.Struct({glyphCount:i.a.uint16,lookupCount:i.a.uint16,classes:new i.a.Array(i.a.uint16,(function(e){return e.glyphCount-1})),lookupRecords:new i.a.Array(Fe,\"lookupCount\")}),Le=new i.a.Array(new i.a.Pointer(i.a.uint16,Me),i.a.uint16),Ge=new i.a.VersionedStruct(i.a.uint16,{1:{coverage:new i.a.Pointer(i.a.uint16,Ae),ruleSetCount:i.a.uint16,ruleSets:new i.a.Array(new i.a.Pointer(i.a.uint16,Te),\"ruleSetCount\")},2:{coverage:new i.a.Pointer(i.a.uint16,Ae),classDef:new i.a.Pointer(i.a.uint16,Ie),classSetCnt:i.a.uint16,classSet:new i.a.Array(new i.a.Pointer(i.a.uint16,Le),\"classSetCnt\")},3:{glyphCount:i.a.uint16,lookupCount:i.a.uint16,coverages:new i.a.Array(new i.a.Pointer(i.a.uint16,Ae),\"glyphCount\"),lookupRecords:new i.a.Array(Fe,\"lookupCount\")}}),Be=new i.a.Struct({backtrackGlyphCount:i.a.uint16,backtrack:new i.a.Array(i.a.uint16,\"backtrackGlyphCount\"),inputGlyphCount:i.a.uint16,input:new i.a.Array(i.a.uint16,(function(e){return e.inputGlyphCount-1})),lookaheadGlyphCount:i.a.uint16,lookahead:new i.a.Array(i.a.uint16,\"lookaheadGlyphCount\"),lookupCount:i.a.uint16,lookupRecords:new i.a.Array(Fe,\"lookupCount\")}),Ee=new i.a.Array(new i.a.Pointer(i.a.uint16,Be),i.a.uint16),ze=new i.a.VersionedStruct(i.a.uint16,{1:{coverage:new i.a.Pointer(i.a.uint16,Ae),chainCount:i.a.uint16,chainRuleSets:new i.a.Array(new i.a.Pointer(i.a.uint16,Ee),\"chainCount\")},2:{coverage:new i.a.Pointer(i.a.uint16,Ae),backtrackClassDef:new i.a.Pointer(i.a.uint16,Ie),inputClassDef:new i.a.Pointer(i.a.uint16,Ie),lookaheadClassDef:new i.a.Pointer(i.a.uint16,Ie),chainCount:i.a.uint16,chainClassSet:new i.a.Array(new i.a.Pointer(i.a.uint16,Ee),\"chainCount\")},3:{backtrackGlyphCount:i.a.uint16,backtrackCoverage:new i.a.Array(new i.a.Pointer(i.a.uint16,Ae),\"backtrackGlyphCount\"),inputGlyphCount:i.a.uint16,inputCoverage:new i.a.Array(new i.a.Pointer(i.a.uint16,Ae),\"inputGlyphCount\"),lookaheadGlyphCount:i.a.uint16,lookaheadCoverage:new i.a.Array(new i.a.Pointer(i.a.uint16,Ae),\"lookaheadGlyphCount\"),lookupCount:i.a.uint16,lookupRecords:new i.a.Array(Fe,\"lookupCount\")}}),Re=new i.a.Fixed(16,\"BE\",14),Ve=new i.a.Struct({startCoord:Re,peakCoord:Re,endCoord:Re}),Ue=new i.a.Struct({axisCount:i.a.uint16,regionCount:i.a.uint16,variationRegions:new i.a.Array(new i.a.Array(Ve,\"axisCount\"),\"regionCount\")}),Ne=new i.a.Struct({shortDeltas:new i.a.Array(i.a.int16,(function(e){return e.parent.shortDeltaCount})),regionDeltas:new i.a.Array(i.a.int8,(function(e){return e.parent.regionIndexCount-e.parent.shortDeltaCount})),deltas:function(e){return e.shortDeltas.concat(e.regionDeltas)}}),qe=new i.a.Struct({itemCount:i.a.uint16,shortDeltaCount:i.a.uint16,regionIndexCount:i.a.uint16,regionIndexes:new i.a.Array(i.a.uint16,\"regionIndexCount\"),deltaSets:new i.a.Array(Ne,\"itemCount\")}),je=new i.a.Struct({format:i.a.uint16,variationRegionList:new i.a.Pointer(i.a.uint32,Ue),variationDataCount:i.a.uint16,itemVariationData:new i.a.Array(new i.a.Pointer(i.a.uint32,qe),\"variationDataCount\")}),He=new i.a.VersionedStruct(i.a.uint16,{1:(Ce={axisIndex:i.a.uint16},Ce.axisIndex=i.a.uint16,Ce.filterRangeMinValue=Re,Ce.filterRangeMaxValue=Re,Ce)}),Ye=new i.a.Struct({conditionCount:i.a.uint16,conditionTable:new i.a.Array(new i.a.Pointer(i.a.uint32,He),\"conditionCount\")}),We=new i.a.Struct({featureIndex:i.a.uint16,alternateFeatureTable:new i.a.Pointer(i.a.uint32,be,{type:\"parent\"})}),Ke=new i.a.Struct({version:i.a.fixed32,substitutionCount:i.a.uint16,substitutions:new i.a.Array(We,\"substitutionCount\")}),Xe=new i.a.Struct({conditionSet:new i.a.Pointer(i.a.uint32,Ye,{type:\"parent\"}),featureTableSubstitution:new i.a.Pointer(i.a.uint32,Ke,{type:\"parent\"})}),Je=new i.a.Struct({majorVersion:i.a.uint16,minorVersion:i.a.uint16,featureVariationRecordCount:i.a.uint32,featureVariationRecords:new i.a.Array(Xe,\"featureVariationRecordCount\")}),Ze=function(){function e(t,r){$(this,e),this.predefinedOps=t,this.type=r}return e.prototype.decode=function(e,t,r){return this.predefinedOps[r[0]]?this.predefinedOps[r[0]]:this.type.decode(e,t,r)},e.prototype.size=function(e,t){return this.type.size(e,t)},e.prototype.encode=function(e,t,r){var a=this.predefinedOps.indexOf(t);return-1!==a?a:this.type.encode(e,t,r)},e}(),Qe=function(e){function t(){return $(this,t),re(this,e.call(this,\"UInt8\"))}return te(t,e),t.prototype.decode=function(e){return 127&i.a.uint8.decode(e)},t}(i.a.Number),$e=new i.a.Struct({first:i.a.uint16,nLeft:i.a.uint8}),et=new i.a.Struct({first:i.a.uint16,nLeft:i.a.uint16}),tt=new Ze([fe,[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclamsmall\",\"Hungarumlautsmall\",\"\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"questionsmall\",\"\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"\",\"\",\"isuperior\",\"\",\"\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"\",\"\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"\",\"parenrightinferior\",\"Circumflexsmall\",\"hyphensuperior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"exclamdownsmall\",\"centoldstyle\",\"Lslashsmall\",\"\",\"\",\"Scaronsmall\",\"Zcaronsmall\",\"Dieresissmall\",\"Brevesmall\",\"Caronsmall\",\"\",\"Dotaccentsmall\",\"\",\"\",\"Macronsmall\",\"\",\"\",\"figuredash\",\"hypheninferior\",\"\",\"\",\"Ogoneksmall\",\"Ringsmall\",\"Cedillasmall\",\"\",\"\",\"\",\"onequarter\",\"onehalf\",\"threequarters\",\"questiondownsmall\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"\",\"\",\"zerosuperior\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\",\"Agravesmall\",\"Aacutesmall\",\"Acircumflexsmall\",\"Atildesmall\",\"Adieresissmall\",\"Aringsmall\",\"AEsmall\",\"Ccedillasmall\",\"Egravesmall\",\"Eacutesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Igravesmall\",\"Iacutesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ethsmall\",\"Ntildesmall\",\"Ogravesmall\",\"Oacutesmall\",\"Ocircumflexsmall\",\"Otildesmall\",\"Odieresissmall\",\"OEsmall\",\"Oslashsmall\",\"Ugravesmall\",\"Uacutesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"Yacutesmall\",\"Thornsmall\",\"Ydieresissmall\"]],new le(new i.a.VersionedStruct(new Qe,{0:{nCodes:i.a.uint8,codes:new i.a.Array(i.a.uint8,\"nCodes\")},1:{nRanges:i.a.uint8,ranges:new i.a.Array($e,\"nRanges\")}}),{lazy:!0})),rt=function(e){function t(){return $(this,t),re(this,e.apply(this,arguments))}return te(t,e),t.prototype.decode=function(e,t){for(var r=Object(s.resolveLength)(this.length,e,t),a=0,n=[];a<r;){var i=this.type.decode(e,t);i.offset=a,a+=i.nLeft+1,n.push(i)}return n},t}(i.a.Array),at=new Ze([pe,[\".notdef\",\"space\",\"exclamsmall\",\"Hungarumlautsmall\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"questionsmall\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"isuperior\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"parenrightinferior\",\"Circumflexsmall\",\"hyphensuperior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"exclamdownsmall\",\"centoldstyle\",\"Lslashsmall\",\"Scaronsmall\",\"Zcaronsmall\",\"Dieresissmall\",\"Brevesmall\",\"Caronsmall\",\"Dotaccentsmall\",\"Macronsmall\",\"figuredash\",\"hypheninferior\",\"Ogoneksmall\",\"Ringsmall\",\"Cedillasmall\",\"onequarter\",\"onehalf\",\"threequarters\",\"questiondownsmall\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"zerosuperior\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\",\"Agravesmall\",\"Aacutesmall\",\"Acircumflexsmall\",\"Atildesmall\",\"Adieresissmall\",\"Aringsmall\",\"AEsmall\",\"Ccedillasmall\",\"Egravesmall\",\"Eacutesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Igravesmall\",\"Iacutesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ethsmall\",\"Ntildesmall\",\"Ogravesmall\",\"Oacutesmall\",\"Ocircumflexsmall\",\"Otildesmall\",\"Odieresissmall\",\"OEsmall\",\"Oslashsmall\",\"Ugravesmall\",\"Uacutesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"Yacutesmall\",\"Thornsmall\",\"Ydieresissmall\"],[\".notdef\",\"space\",\"dollaroldstyle\",\"dollarsuperior\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"isuperior\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"parenrightinferior\",\"hyphensuperior\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"centoldstyle\",\"figuredash\",\"hypheninferior\",\"onequarter\",\"onehalf\",\"threequarters\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"zerosuperior\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\"]],new le(new i.a.VersionedStruct(i.a.uint8,{0:{glyphs:new i.a.Array(i.a.uint16,(function(e){return e.parent.CharStrings.length-1}))},1:{ranges:new rt($e,(function(e){return e.parent.CharStrings.length-1}))},2:{ranges:new rt(et,(function(e){return e.parent.CharStrings.length-1}))}}),{lazy:!0})),nt=new i.a.Struct({first:i.a.uint16,fd:i.a.uint8}),it=new i.a.Struct({first:i.a.uint32,fd:i.a.uint16}),st=new i.a.VersionedStruct(i.a.uint8,{0:{fds:new i.a.Array(i.a.uint8,(function(e){return e.parent.CharStrings.length}))},3:{nRanges:i.a.uint16,ranges:new i.a.Array(nt,\"nRanges\"),sentinel:i.a.uint16},4:{nRanges:i.a.uint32,ranges:new i.a.Array(it,\"nRanges\"),sentinel:i.a.uint32}}),ot=new le(ce),lt=function(){function e(){$(this,e)}return e.prototype.decode=function(e,t,r){return t.length=r[0],ot.decode(e,t,[r[1]])},e.prototype.size=function(e,t){return[ce.size(e,t,!1),ot.size(e,t)[0]]},e.prototype.encode=function(e,t,r){return[ce.size(t,r,!1),ot.encode(e,t,r)[0]]},e}(),ut=new oe([[18,\"Private\",new lt,null],[[12,38],\"FontName\",\"sid\",null]]),ct=new oe([[[12,30],\"ROS\",[\"sid\",\"sid\",\"number\"],null],[0,\"version\",\"sid\",null],[1,\"Notice\",\"sid\",null],[[12,0],\"Copyright\",\"sid\",null],[2,\"FullName\",\"sid\",null],[3,\"FamilyName\",\"sid\",null],[4,\"Weight\",\"sid\",null],[[12,1],\"isFixedPitch\",\"boolean\",!1],[[12,2],\"ItalicAngle\",\"number\",0],[[12,3],\"UnderlinePosition\",\"number\",-100],[[12,4],\"UnderlineThickness\",\"number\",50],[[12,5],\"PaintType\",\"number\",0],[[12,6],\"CharstringType\",\"number\",2],[[12,7],\"FontMatrix\",\"array\",[.001,0,0,.001,0,0]],[13,\"UniqueID\",\"number\",null],[5,\"FontBBox\",\"array\",[0,0,0,0]],[[12,8],\"StrokeWidth\",\"number\",0],[14,\"XUID\",\"array\",null],[15,\"charset\",at,pe],[16,\"Encoding\",tt,fe],[17,\"CharStrings\",new le(new ae),null],[18,\"Private\",new lt,null],[[12,20],\"SyntheticBase\",\"number\",null],[[12,21],\"PostScript\",\"sid\",null],[[12,22],\"BaseFontName\",\"sid\",null],[[12,23],\"BaseFontBlend\",\"delta\",null],[[12,31],\"CIDFontVersion\",\"number\",0],[[12,32],\"CIDFontRevision\",\"number\",0],[[12,33],\"CIDFontType\",\"number\",0],[[12,34],\"CIDCount\",\"number\",8720],[[12,35],\"UIDBase\",\"number\",null],[[12,37],\"FDSelect\",new le(st),null],[[12,36],\"FDArray\",new le(new ae(ut)),null],[[12,38],\"FontName\",\"sid\",null]]),ht=new i.a.Struct({length:i.a.uint16,itemVariationStore:je}),ft=new oe([[[12,7],\"FontMatrix\",\"array\",[.001,0,0,.001,0,0]],[17,\"CharStrings\",new le(new ae),null],[[12,37],\"FDSelect\",new le(st),null],[[12,36],\"FDArray\",new le(new ae(ut)),null],[24,\"vstore\",new le(ht),null],[25,\"maxstack\",\"number\",193]]),pt=new i.a.VersionedStruct(i.a.fixed16,{1:{hdrSize:i.a.uint8,offSize:i.a.uint8,nameIndex:new ae(new i.a.String(\"length\")),topDictIndex:new ae(ct),stringIndex:new ae(new i.a.String(\"length\")),globalSubrIndex:new ae},2:{hdrSize:i.a.uint8,length:i.a.uint16,topDict:ft,globalSubrIndex:new ae}}),dt=function(){function e(t){$(this,e),this.stream=t,this.decode()}return e.decode=function(t){return new e(t)},e.prototype.decode=function(){this.stream.pos;var e=pt.decode(this.stream);for(var t in e){var r=e[t];this[t]=r}if(this.version<2){if(1!==this.topDictIndex.length)throw new Error(\"Only a single font is allowed in CFF\");this.topDict=this.topDictIndex[0]}return this.isCIDFont=null!=this.topDict.ROS,this},e.prototype.string=function(e){return this.version>=2?null:e<he.length?he[e]:this.stringIndex[e-he.length]},e.prototype.getCharString=function(e){return this.stream.pos=this.topDict.CharStrings[e].offset,this.stream.readBuffer(this.topDict.CharStrings[e].length)},e.prototype.getGlyphName=function(e){if(this.version>=2)return null;if(this.isCIDFont)return null;var t=this.topDict.charset;if(Array.isArray(t))return t[e];if(0===e)return\".notdef\";switch(e-=1,t.version){case 0:return this.string(t.glyphs[e]);case 1:case 2:for(var r=0;r<t.ranges.length;r++){var a=t.ranges[r];if(a.offset<=e&&e<=a.offset+a.nLeft)return this.string(a.first+(e-a.offset))}}return null},e.prototype.fdForGlyph=function(e){if(!this.topDict.FDSelect)return null;switch(this.topDict.FDSelect.version){case 0:return this.topDict.FDSelect.fds[e];case 3:case 4:for(var t=this.topDict.FDSelect.ranges,r=0,a=t.length-1;r<=a;){var n=r+a>>1;if(e<t[n].first)a=n-1;else{if(!(n<a&&e>t[n+1].first))return t[n].fd;r=n+1}}default:throw new Error(\"Unknown FDSelect version: \"+this.topDict.FDSelect.version)}},e.prototype.privateDictForGlyph=function(e){if(this.topDict.FDSelect){var t=this.fdForGlyph(e);return this.topDict.FDArray[t]?this.topDict.FDArray[t].Private:null}return this.version<2?this.topDict.Private:this.topDict.FDArray[0].Private},ee(e,[{key:\"postscriptName\",get:function(){return this.version<2?this.nameIndex[0]:null}},{key:\"fullName\",get:function(){return this.string(this.topDict.FullName)}},{key:\"familyName\",get:function(){return this.string(this.topDict.FamilyName)}}]),e}(),yt=new i.a.Struct({glyphIndex:i.a.uint16,vertOriginY:i.a.int16}),gt=new i.a.Struct({majorVersion:i.a.uint16,minorVersion:i.a.uint16,defaultVertOriginY:i.a.int16,numVertOriginYMetrics:i.a.uint16,metrics:new i.a.Array(yt,\"numVertOriginYMetrics\")}),vt=new i.a.Struct({height:i.a.uint8,width:i.a.uint8,horiBearingX:i.a.int8,horiBearingY:i.a.int8,horiAdvance:i.a.uint8,vertBearingX:i.a.int8,vertBearingY:i.a.int8,vertAdvance:i.a.uint8}),mt=new i.a.Struct({height:i.a.uint8,width:i.a.uint8,bearingX:i.a.int8,bearingY:i.a.int8,advance:i.a.uint8}),bt=new i.a.Struct({glyph:i.a.uint16,xOffset:i.a.int8,yOffset:i.a.int8}),wt=function e(){$(this,e)},St=function e(){$(this,e)},_t=(new i.a.VersionedStruct(\"version\",{1:{metrics:mt,data:wt},2:{metrics:mt,data:St},5:{data:St},6:{metrics:vt,data:wt},7:{metrics:vt,data:St},8:{metrics:mt,pad:new i.a.Reserved(i.a.uint8),numComponents:i.a.uint16,components:new i.a.Array(bt,\"numComponents\")},9:{metrics:vt,pad:new i.a.Reserved(i.a.uint8),numComponents:i.a.uint16,components:new i.a.Array(bt,\"numComponents\")},17:{metrics:mt,dataLen:i.a.uint32,data:new i.a.Buffer(\"dataLen\")},18:{metrics:vt,dataLen:i.a.uint32,data:new i.a.Buffer(\"dataLen\")},19:{dataLen:i.a.uint32,data:new i.a.Buffer(\"dataLen\")}}),new i.a.Struct({ascender:i.a.int8,descender:i.a.int8,widthMax:i.a.uint8,caretSlopeNumerator:i.a.int8,caretSlopeDenominator:i.a.int8,caretOffset:i.a.int8,minOriginSB:i.a.int8,minAdvanceSB:i.a.int8,maxBeforeBL:i.a.int8,minAfterBL:i.a.int8,pad:new i.a.Reserved(i.a.int8,2)})),kt=new i.a.Struct({glyphCode:i.a.uint16,offset:i.a.uint16}),Ct=new i.a.VersionedStruct(i.a.uint16,{header:{imageFormat:i.a.uint16,imageDataOffset:i.a.uint32},1:{offsetArray:new i.a.Array(i.a.uint32,(function(e){return e.parent.lastGlyphIndex-e.parent.firstGlyphIndex+1}))},2:{imageSize:i.a.uint32,bigMetrics:vt},3:{offsetArray:new i.a.Array(i.a.uint16,(function(e){return e.parent.lastGlyphIndex-e.parent.firstGlyphIndex+1}))},4:{numGlyphs:i.a.uint32,glyphArray:new i.a.Array(kt,(function(e){return e.numGlyphs+1}))},5:{imageSize:i.a.uint32,bigMetrics:vt,numGlyphs:i.a.uint32,glyphCodeArray:new i.a.Array(i.a.uint16,\"numGlyphs\")}}),xt=new i.a.Struct({firstGlyphIndex:i.a.uint16,lastGlyphIndex:i.a.uint16,subtable:new i.a.Pointer(i.a.uint32,Ct)}),At=new i.a.Struct({indexSubTableArray:new i.a.Pointer(i.a.uint32,new i.a.Array(xt,1),{type:\"parent\"}),indexTablesSize:i.a.uint32,numberOfIndexSubTables:i.a.uint32,colorRef:i.a.uint32,hori:_t,vert:_t,startGlyphIndex:i.a.uint16,endGlyphIndex:i.a.uint16,ppemX:i.a.uint8,ppemY:i.a.uint8,bitDepth:i.a.uint8,flags:new i.a.Bitfield(i.a.uint8,[\"horizontal\",\"vertical\"])}),Pt=new i.a.Struct({version:i.a.uint32,numSizes:i.a.uint32,sizes:new i.a.Array(At,\"numSizes\")}),It=new i.a.Struct({ppem:i.a.uint16,resolution:i.a.uint16,imageOffsets:new i.a.Array(new i.a.Pointer(i.a.uint32,\"void\"),(function(e){return e.parent.parent.maxp.numGlyphs+1}))}),Ot=new i.a.Struct({version:i.a.uint16,flags:new i.a.Bitfield(i.a.uint16,[\"renderOutlines\"]),numImgTables:i.a.uint32,imageTables:new i.a.Array(new i.a.Pointer(i.a.uint32,It),\"numImgTables\")}),Ft=new i.a.Struct({gid:i.a.uint16,paletteIndex:i.a.uint16}),Dt=new i.a.Struct({gid:i.a.uint16,firstLayerIndex:i.a.uint16,numLayers:i.a.uint16}),Tt=new i.a.Struct({version:i.a.uint16,numBaseGlyphRecords:i.a.uint16,baseGlyphRecord:new i.a.Pointer(i.a.uint32,new i.a.Array(Dt,\"numBaseGlyphRecords\")),layerRecords:new i.a.Pointer(i.a.uint32,new i.a.Array(Ft,\"numLayerRecords\"),{lazy:!0}),numLayerRecords:i.a.uint16}),Mt=new i.a.Struct({blue:i.a.uint8,green:i.a.uint8,red:i.a.uint8,alpha:i.a.uint8}),Lt=new i.a.VersionedStruct(i.a.uint16,{header:{numPaletteEntries:i.a.uint16,numPalettes:i.a.uint16,numColorRecords:i.a.uint16,colorRecords:new i.a.Pointer(i.a.uint32,new i.a.Array(Mt,\"numColorRecords\")),colorRecordIndices:new i.a.Array(i.a.uint16,\"numPalettes\")},0:{},1:{offsetPaletteTypeArray:new i.a.Pointer(i.a.uint32,new i.a.Array(i.a.uint32,\"numPalettes\")),offsetPaletteLabelArray:new i.a.Pointer(i.a.uint32,new i.a.Array(i.a.uint16,\"numPalettes\")),offsetPaletteEntryLabelArray:new i.a.Pointer(i.a.uint32,new i.a.Array(i.a.uint16,\"numPaletteEntries\"))}}),Gt=new i.a.VersionedStruct(i.a.uint16,{1:{coordinate:i.a.int16},2:{coordinate:i.a.int16,referenceGlyph:i.a.uint16,baseCoordPoint:i.a.uint16},3:{coordinate:i.a.int16,deviceTable:new i.a.Pointer(i.a.uint16,Oe)}}),Bt=new i.a.Struct({defaultIndex:i.a.uint16,baseCoordCount:i.a.uint16,baseCoords:new i.a.Array(new i.a.Pointer(i.a.uint16,Gt),\"baseCoordCount\")}),Et=new i.a.Struct({tag:new i.a.String(4),minCoord:new i.a.Pointer(i.a.uint16,Gt,{type:\"parent\"}),maxCoord:new i.a.Pointer(i.a.uint16,Gt,{type:\"parent\"})}),zt=new i.a.Struct({minCoord:new i.a.Pointer(i.a.uint16,Gt),maxCoord:new i.a.Pointer(i.a.uint16,Gt),featMinMaxCount:i.a.uint16,featMinMaxRecords:new i.a.Array(Et,\"featMinMaxCount\")}),Rt=new i.a.Struct({tag:new i.a.String(4),minMax:new i.a.Pointer(i.a.uint16,zt,{type:\"parent\"})}),Vt=new i.a.Struct({baseValues:new i.a.Pointer(i.a.uint16,Bt),defaultMinMax:new i.a.Pointer(i.a.uint16,zt),baseLangSysCount:i.a.uint16,baseLangSysRecords:new i.a.Array(Rt,\"baseLangSysCount\")}),Ut=new i.a.Struct({tag:new i.a.String(4),script:new i.a.Pointer(i.a.uint16,Vt,{type:\"parent\"})}),Nt=new i.a.Array(Ut,i.a.uint16),qt=new i.a.Array(new i.a.String(4),i.a.uint16),jt=new i.a.Struct({baseTagList:new i.a.Pointer(i.a.uint16,qt),baseScriptList:new i.a.Pointer(i.a.uint16,Nt)}),Ht=new i.a.VersionedStruct(i.a.uint32,{header:{horizAxis:new i.a.Pointer(i.a.uint16,jt),vertAxis:new i.a.Pointer(i.a.uint16,jt)},65536:{},65537:{itemVariationStore:new i.a.Pointer(i.a.uint32,je)}}),Yt=new i.a.Array(i.a.uint16,i.a.uint16),Wt=new i.a.Struct({coverage:new i.a.Pointer(i.a.uint16,Ae),glyphCount:i.a.uint16,attachPoints:new i.a.Array(new i.a.Pointer(i.a.uint16,Yt),\"glyphCount\")}),Kt=new i.a.VersionedStruct(i.a.uint16,{1:{coordinate:i.a.int16},2:{caretValuePoint:i.a.uint16},3:{coordinate:i.a.int16,deviceTable:new i.a.Pointer(i.a.uint16,Oe)}}),Xt=new i.a.Array(new i.a.Pointer(i.a.uint16,Kt),i.a.uint16),Jt=new i.a.Struct({coverage:new i.a.Pointer(i.a.uint16,Ae),ligGlyphCount:i.a.uint16,ligGlyphs:new i.a.Array(new i.a.Pointer(i.a.uint16,Xt),\"ligGlyphCount\")}),Zt=new i.a.Struct({markSetTableFormat:i.a.uint16,markSetCount:i.a.uint16,coverage:new i.a.Array(new i.a.Pointer(i.a.uint32,Ae),\"markSetCount\")}),Qt=new i.a.VersionedStruct(i.a.uint32,{header:{glyphClassDef:new i.a.Pointer(i.a.uint16,Ie),attachList:new i.a.Pointer(i.a.uint16,Wt),ligCaretList:new i.a.Pointer(i.a.uint16,Jt),markAttachClassDef:new i.a.Pointer(i.a.uint16,Ie)},65536:{},65538:{markGlyphSetsDef:new i.a.Pointer(i.a.uint16,Zt)},65539:{markGlyphSetsDef:new i.a.Pointer(i.a.uint16,Zt),itemVariationStore:new i.a.Pointer(i.a.uint32,je)}}),$t=new i.a.Bitfield(i.a.uint16,[\"xPlacement\",\"yPlacement\",\"xAdvance\",\"yAdvance\",\"xPlaDevice\",\"yPlaDevice\",\"xAdvDevice\",\"yAdvDevice\"]),er={xPlacement:i.a.int16,yPlacement:i.a.int16,xAdvance:i.a.int16,yAdvance:i.a.int16,xPlaDevice:new i.a.Pointer(i.a.uint16,Oe,{type:\"global\",relativeTo:\"rel\"}),yPlaDevice:new i.a.Pointer(i.a.uint16,Oe,{type:\"global\",relativeTo:\"rel\"}),xAdvDevice:new i.a.Pointer(i.a.uint16,Oe,{type:\"global\",relativeTo:\"rel\"}),yAdvDevice:new i.a.Pointer(i.a.uint16,Oe,{type:\"global\",relativeTo:\"rel\"})},tr=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"valueFormat\";$(this,e),this.key=t}return e.prototype.buildStruct=function(e){for(var t=e;!t[this.key]&&t.parent;)t=t.parent;if(t[this.key]){var r={rel:function(){return t._startOffset}},a=t[this.key];for(var n in a)a[n]&&(r[n]=er[n]);return new i.a.Struct(r)}},e.prototype.size=function(e,t){return this.buildStruct(t).size(e,t)},e.prototype.decode=function(e,t){var r=this.buildStruct(t).decode(e,t);return delete r.rel,r},e}(),rr=new i.a.Struct({secondGlyph:i.a.uint16,value1:new tr(\"valueFormat1\"),value2:new tr(\"valueFormat2\")}),ar=new i.a.Array(rr,i.a.uint16),nr=new i.a.Struct({value1:new tr(\"valueFormat1\"),value2:new tr(\"valueFormat2\")}),ir=new i.a.VersionedStruct(i.a.uint16,{1:{xCoordinate:i.a.int16,yCoordinate:i.a.int16},2:{xCoordinate:i.a.int16,yCoordinate:i.a.int16,anchorPoint:i.a.uint16},3:{xCoordinate:i.a.int16,yCoordinate:i.a.int16,xDeviceTable:new i.a.Pointer(i.a.uint16,Oe),yDeviceTable:new i.a.Pointer(i.a.uint16,Oe)}}),sr=new i.a.Struct({entryAnchor:new i.a.Pointer(i.a.uint16,ir,{type:\"parent\"}),exitAnchor:new i.a.Pointer(i.a.uint16,ir,{type:\"parent\"})}),or=new i.a.Struct({class:i.a.uint16,markAnchor:new i.a.Pointer(i.a.uint16,ir,{type:\"parent\"})}),lr=new i.a.Array(or,i.a.uint16),ur=new i.a.Array(new i.a.Pointer(i.a.uint16,ir),(function(e){return e.parent.classCount})),cr=new i.a.Array(ur,i.a.uint16),hr=new i.a.Array(new i.a.Pointer(i.a.uint16,ir),(function(e){return e.parent.parent.classCount})),fr=new i.a.Array(hr,i.a.uint16),pr=new i.a.Array(new i.a.Pointer(i.a.uint16,fr),i.a.uint16),dr=new i.a.VersionedStruct(\"lookupType\",{1:new i.a.VersionedStruct(i.a.uint16,{1:{coverage:new i.a.Pointer(i.a.uint16,Ae),valueFormat:$t,value:new tr},2:{coverage:new i.a.Pointer(i.a.uint16,Ae),valueFormat:$t,valueCount:i.a.uint16,values:new i.a.LazyArray(new tr,\"valueCount\")}}),2:new i.a.VersionedStruct(i.a.uint16,{1:{coverage:new i.a.Pointer(i.a.uint16,Ae),valueFormat1:$t,valueFormat2:$t,pairSetCount:i.a.uint16,pairSets:new i.a.LazyArray(new i.a.Pointer(i.a.uint16,ar),\"pairSetCount\")},2:{coverage:new i.a.Pointer(i.a.uint16,Ae),valueFormat1:$t,valueFormat2:$t,classDef1:new i.a.Pointer(i.a.uint16,Ie),classDef2:new i.a.Pointer(i.a.uint16,Ie),class1Count:i.a.uint16,class2Count:i.a.uint16,classRecords:new i.a.LazyArray(new i.a.LazyArray(nr,\"class2Count\"),\"class1Count\")}}),3:{format:i.a.uint16,coverage:new i.a.Pointer(i.a.uint16,Ae),entryExitCount:i.a.uint16,entryExitRecords:new i.a.Array(sr,\"entryExitCount\")},4:{format:i.a.uint16,markCoverage:new i.a.Pointer(i.a.uint16,Ae),baseCoverage:new i.a.Pointer(i.a.uint16,Ae),classCount:i.a.uint16,markArray:new i.a.Pointer(i.a.uint16,lr),baseArray:new i.a.Pointer(i.a.uint16,cr)},5:{format:i.a.uint16,markCoverage:new i.a.Pointer(i.a.uint16,Ae),ligatureCoverage:new i.a.Pointer(i.a.uint16,Ae),classCount:i.a.uint16,markArray:new i.a.Pointer(i.a.uint16,lr),ligatureArray:new i.a.Pointer(i.a.uint16,pr)},6:{format:i.a.uint16,mark1Coverage:new i.a.Pointer(i.a.uint16,Ae),mark2Coverage:new i.a.Pointer(i.a.uint16,Ae),classCount:i.a.uint16,mark1Array:new i.a.Pointer(i.a.uint16,lr),mark2Array:new i.a.Pointer(i.a.uint16,cr)},7:Ge,8:ze,9:{posFormat:i.a.uint16,lookupType:i.a.uint16,extension:new i.a.Pointer(i.a.uint32,void 0)}});dr.versions[9].extension.type=dr;var yr=new i.a.VersionedStruct(i.a.uint32,{header:{scriptList:new i.a.Pointer(i.a.uint16,me),featureList:new i.a.Pointer(i.a.uint16,Se),lookupList:new i.a.Pointer(i.a.uint16,new ke(dr))},65536:{},65537:{featureVariations:new i.a.Pointer(i.a.uint32,Je)}}),gr=new i.a.Array(i.a.uint16,i.a.uint16),vr=gr,mr=new i.a.Struct({glyph:i.a.uint16,compCount:i.a.uint16,components:new i.a.Array(i.a.uint16,(function(e){return e.compCount-1}))}),br=new i.a.Array(new i.a.Pointer(i.a.uint16,mr),i.a.uint16),wr=new i.a.VersionedStruct(\"lookupType\",{1:new i.a.VersionedStruct(i.a.uint16,{1:{coverage:new i.a.Pointer(i.a.uint16,Ae),deltaGlyphID:i.a.int16},2:{coverage:new i.a.Pointer(i.a.uint16,Ae),glyphCount:i.a.uint16,substitute:new i.a.LazyArray(i.a.uint16,\"glyphCount\")}}),2:{substFormat:i.a.uint16,coverage:new i.a.Pointer(i.a.uint16,Ae),count:i.a.uint16,sequences:new i.a.LazyArray(new i.a.Pointer(i.a.uint16,gr),\"count\")},3:{substFormat:i.a.uint16,coverage:new i.a.Pointer(i.a.uint16,Ae),count:i.a.uint16,alternateSet:new i.a.LazyArray(new i.a.Pointer(i.a.uint16,vr),\"count\")},4:{substFormat:i.a.uint16,coverage:new i.a.Pointer(i.a.uint16,Ae),count:i.a.uint16,ligatureSets:new i.a.LazyArray(new i.a.Pointer(i.a.uint16,br),\"count\")},5:Ge,6:ze,7:{substFormat:i.a.uint16,lookupType:i.a.uint16,extension:new i.a.Pointer(i.a.uint32,void 0)},8:{substFormat:i.a.uint16,coverage:new i.a.Pointer(i.a.uint16,Ae),backtrackCoverage:new i.a.Array(new i.a.Pointer(i.a.uint16,Ae),\"backtrackGlyphCount\"),lookaheadGlyphCount:i.a.uint16,lookaheadCoverage:new i.a.Array(new i.a.Pointer(i.a.uint16,Ae),\"lookaheadGlyphCount\"),glyphCount:i.a.uint16,substitutes:new i.a.Array(i.a.uint16,\"glyphCount\")}});wr.versions[7].extension.type=wr;var Sr=new i.a.VersionedStruct(i.a.uint32,{header:{scriptList:new i.a.Pointer(i.a.uint16,me),featureList:new i.a.Pointer(i.a.uint16,Se),lookupList:new i.a.Pointer(i.a.uint16,new ke(wr))},65536:{},65537:{featureVariations:new i.a.Pointer(i.a.uint32,Je)}}),_r=new i.a.Array(i.a.uint16,i.a.uint16),kr=new i.a.Struct({shrinkageEnableGSUB:new i.a.Pointer(i.a.uint16,_r),shrinkageDisableGSUB:new i.a.Pointer(i.a.uint16,_r),shrinkageEnableGPOS:new i.a.Pointer(i.a.uint16,_r),shrinkageDisableGPOS:new i.a.Pointer(i.a.uint16,_r),shrinkageJstfMax:new i.a.Pointer(i.a.uint16,new ke(dr)),extensionEnableGSUB:new i.a.Pointer(i.a.uint16,_r),extensionDisableGSUB:new i.a.Pointer(i.a.uint16,_r),extensionEnableGPOS:new i.a.Pointer(i.a.uint16,_r),extensionDisableGPOS:new i.a.Pointer(i.a.uint16,_r),extensionJstfMax:new i.a.Pointer(i.a.uint16,new ke(dr))}),Cr=new i.a.Array(new i.a.Pointer(i.a.uint16,kr),i.a.uint16),xr=new i.a.Struct({tag:new i.a.String(4),jstfLangSys:new i.a.Pointer(i.a.uint16,Cr)}),Ar=new i.a.Struct({extenderGlyphs:new i.a.Pointer(i.a.uint16,new i.a.Array(i.a.uint16,i.a.uint16)),defaultLangSys:new i.a.Pointer(i.a.uint16,Cr),langSysCount:i.a.uint16,langSysRecords:new i.a.Array(xr,\"langSysCount\")}),Pr=new i.a.Struct({tag:new i.a.String(4),script:new i.a.Pointer(i.a.uint16,Ar,{type:\"parent\"})}),Ir=new i.a.Struct({version:i.a.uint32,scriptCount:i.a.uint16,scriptList:new i.a.Array(Pr,\"scriptCount\")}),Or=function(){function e(t){$(this,e),this._size=t}return e.prototype.decode=function(e,t){switch(this.size(0,t)){case 1:return e.readUInt8();case 2:return e.readUInt16BE();case 3:return e.readUInt24BE();case 4:return e.readUInt32BE()}},e.prototype.size=function(e,t){return Object(s.resolveLength)(this._size,null,t)},e}(),Fr=new i.a.Struct({entry:new Or((function(e){return 1+((48&e.parent.entryFormat)>>4)})),outerIndex:function(e){return e.entry>>1+(15&e.parent.entryFormat)},innerIndex:function(e){return e.entry&(1<<1+(15&e.parent.entryFormat))-1}}),Dr=new i.a.Struct({entryFormat:i.a.uint16,mapCount:i.a.uint16,mapData:new i.a.Array(Fr,\"mapCount\")}),Tr=new i.a.Struct({majorVersion:i.a.uint16,minorVersion:i.a.uint16,itemVariationStore:new i.a.Pointer(i.a.uint32,je),advanceWidthMapping:new i.a.Pointer(i.a.uint32,Dr),LSBMapping:new i.a.Pointer(i.a.uint32,Dr),RSBMapping:new i.a.Pointer(i.a.uint32,Dr)}),Mr=new i.a.Struct({format:i.a.uint32,length:i.a.uint32,offset:i.a.uint32}),Lr=new i.a.Struct({reserved:new i.a.Reserved(i.a.uint16,2),cbSignature:i.a.uint32,signature:new i.a.Buffer(\"cbSignature\")}),Gr=new i.a.Struct({ulVersion:i.a.uint32,usNumSigs:i.a.uint16,usFlag:i.a.uint16,signatures:new i.a.Array(Mr,\"usNumSigs\"),signatureBlocks:new i.a.Array(Lr,\"usNumSigs\")}),Br=new i.a.Struct({rangeMaxPPEM:i.a.uint16,rangeGaspBehavior:new i.a.Bitfield(i.a.uint16,[\"grayscale\",\"gridfit\",\"symmetricSmoothing\",\"symmetricGridfit\"])}),Er=new i.a.Struct({version:i.a.uint16,numRanges:i.a.uint16,gaspRanges:new i.a.Array(Br,\"numRanges\")}),zr=new i.a.Struct({pixelSize:i.a.uint8,maximumWidth:i.a.uint8,widths:new i.a.Array(i.a.uint8,(function(e){return e.parent.parent.maxp.numGlyphs}))}),Rr=new i.a.Struct({version:i.a.uint16,numRecords:i.a.int16,sizeDeviceRecord:i.a.int32,records:new i.a.Array(zr,\"numRecords\")}),Vr=new i.a.Struct({left:i.a.uint16,right:i.a.uint16,value:i.a.int16}),Ur=new i.a.Struct({firstGlyph:i.a.uint16,nGlyphs:i.a.uint16,offsets:new i.a.Array(i.a.uint16,\"nGlyphs\"),max:function(e){return e.offsets.length&&Math.max.apply(Math,e.offsets)}}),Nr=new i.a.Struct({off:function(e){return e._startOffset-e.parent.parent._startOffset},len:function(e){return((e.parent.leftTable.max-e.off)/e.parent.rowWidth+1)*(e.parent.rowWidth/2)},values:new i.a.LazyArray(i.a.int16,\"len\")}),qr=new i.a.VersionedStruct(\"format\",{0:{nPairs:i.a.uint16,searchRange:i.a.uint16,entrySelector:i.a.uint16,rangeShift:i.a.uint16,pairs:new i.a.Array(Vr,\"nPairs\")},2:{rowWidth:i.a.uint16,leftTable:new i.a.Pointer(i.a.uint16,Ur,{type:\"parent\"}),rightTable:new i.a.Pointer(i.a.uint16,Ur,{type:\"parent\"}),array:new i.a.Pointer(i.a.uint16,Nr,{type:\"parent\"})},3:{glyphCount:i.a.uint16,kernValueCount:i.a.uint8,leftClassCount:i.a.uint8,rightClassCount:i.a.uint8,flags:i.a.uint8,kernValue:new i.a.Array(i.a.int16,\"kernValueCount\"),leftClass:new i.a.Array(i.a.uint8,\"glyphCount\"),rightClass:new i.a.Array(i.a.uint8,\"glyphCount\"),kernIndex:new i.a.Array(i.a.uint8,(function(e){return e.leftClassCount*e.rightClassCount}))}}),jr=new i.a.VersionedStruct(\"version\",{0:{subVersion:i.a.uint16,length:i.a.uint16,format:i.a.uint8,coverage:new i.a.Bitfield(i.a.uint8,[\"horizontal\",\"minimum\",\"crossStream\",\"override\"]),subtable:qr,padding:new i.a.Reserved(i.a.uint8,(function(e){return e.length-e._currentOffset}))},1:{length:i.a.uint32,coverage:new i.a.Bitfield(i.a.uint8,[null,null,null,null,null,\"variation\",\"crossStream\",\"vertical\"]),format:i.a.uint8,tupleIndex:i.a.uint16,subtable:qr,padding:new i.a.Reserved(i.a.uint8,(function(e){return e.length-e._currentOffset}))}}),Hr=new i.a.VersionedStruct(i.a.uint16,{0:{nTables:i.a.uint16,tables:new i.a.Array(jr,\"nTables\")},1:{reserved:new i.a.Reserved(i.a.uint16),nTables:i.a.uint32,tables:new i.a.Array(jr,\"nTables\")}}),Yr=new i.a.Struct({version:i.a.uint16,numGlyphs:i.a.uint16,yPels:new i.a.Array(i.a.uint8,\"numGlyphs\")}),Wr=new i.a.Struct({version:i.a.uint16,fontNumber:i.a.uint32,pitch:i.a.uint16,xHeight:i.a.uint16,style:i.a.uint16,typeFamily:i.a.uint16,capHeight:i.a.uint16,symbolSet:i.a.uint16,typeface:new i.a.String(16),characterComplement:new i.a.String(8),fileName:new i.a.String(6),strokeWeight:new i.a.String(1),widthType:new i.a.String(1),serifStyle:i.a.uint8,reserved:new i.a.Reserved(i.a.uint8)}),Kr=new i.a.Struct({bCharSet:i.a.uint8,xRatio:i.a.uint8,yStartRatio:i.a.uint8,yEndRatio:i.a.uint8}),Xr=new i.a.Struct({yPelHeight:i.a.uint16,yMax:i.a.int16,yMin:i.a.int16}),Jr=new i.a.Struct({recs:i.a.uint16,startsz:i.a.uint8,endsz:i.a.uint8,entries:new i.a.Array(Xr,\"recs\")}),Zr=new i.a.Struct({version:i.a.uint16,numRecs:i.a.uint16,numRatios:i.a.uint16,ratioRanges:new i.a.Array(Kr,\"numRatios\"),offsets:new i.a.Array(i.a.uint16,\"numRatios\"),groups:new i.a.Array(Jr,\"numRecs\")}),Qr=new i.a.Struct({version:i.a.uint16,ascent:i.a.int16,descent:i.a.int16,lineGap:i.a.int16,advanceHeightMax:i.a.int16,minTopSideBearing:i.a.int16,minBottomSideBearing:i.a.int16,yMaxExtent:i.a.int16,caretSlopeRise:i.a.int16,caretSlopeRun:i.a.int16,caretOffset:i.a.int16,reserved:new i.a.Reserved(i.a.int16,4),metricDataFormat:i.a.int16,numberOfMetrics:i.a.uint16}),$r=new i.a.Struct({advance:i.a.uint16,bearing:i.a.int16}),ea=new i.a.Struct({metrics:new i.a.LazyArray($r,(function(e){return e.parent.vhea.numberOfMetrics})),bearings:new i.a.LazyArray(i.a.int16,(function(e){return e.parent.maxp.numGlyphs-e.parent.vhea.numberOfMetrics}))}),ta=new i.a.Fixed(16,\"BE\",14),ra=new i.a.Struct({fromCoord:ta,toCoord:ta}),aa=new i.a.Struct({pairCount:i.a.uint16,correspondence:new i.a.Array(ra,\"pairCount\")}),na=new i.a.Struct({version:i.a.fixed32,axisCount:i.a.uint32,segment:new i.a.Array(aa,\"axisCount\")}),ia=function(){function e(t,r,a){$(this,e),this.type=t,this.stream=r,this.parent=a,this.base=this.stream.pos,this._items=[]}return e.prototype.getItem=function(e){if(null==this._items[e]){var t=this.stream.pos;this.stream.pos=this.base+this.type.size(null,this.parent)*e,this._items[e]=this.type.decode(this.stream,this.parent),this.stream.pos=t}return this._items[e]},e.prototype.inspect=function(){return\"[UnboundedArray \"+this.type.constructor.name+\"]\"},e}(),sa=function(e){function t(r){return $(this,t),re(this,e.call(this,r,0))}return te(t,e),t.prototype.decode=function(e,t){return new ia(this.type,e,t)},t}(i.a.Array),oa=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:i.a.uint16,t=function(){function e(t){$(this,e),this.type=t}return e.prototype.decode=function(e,t){return t=t.parent.parent,this.type.decode(e,t)},e.prototype.size=function(e,t){return t=t.parent.parent,this.type.size(e,t)},e.prototype.encode=function(e,t,r){return r=r.parent.parent,this.type.encode(e,t,r)},e}();e=new t(e);var r=new i.a.Struct({unitSize:i.a.uint16,nUnits:i.a.uint16,searchRange:i.a.uint16,entrySelector:i.a.uint16,rangeShift:i.a.uint16}),a=new i.a.Struct({lastGlyph:i.a.uint16,firstGlyph:i.a.uint16,value:e}),n=new i.a.Struct({lastGlyph:i.a.uint16,firstGlyph:i.a.uint16,values:new i.a.Pointer(i.a.uint16,new i.a.Array(e,(function(e){return e.lastGlyph-e.firstGlyph+1})),{type:\"parent\"})}),s=new i.a.Struct({glyph:i.a.uint16,value:e});return new i.a.VersionedStruct(i.a.uint16,{0:{values:new sa(e)},2:{binarySearchHeader:r,segments:new i.a.Array(a,(function(e){return e.binarySearchHeader.nUnits}))},4:{binarySearchHeader:r,segments:new i.a.Array(n,(function(e){return e.binarySearchHeader.nUnits}))},6:{binarySearchHeader:r,segments:new i.a.Array(s,(function(e){return e.binarySearchHeader.nUnits}))},8:{firstGlyph:i.a.uint16,count:i.a.uint16,values:new i.a.Array(e,\"count\")}})};function la(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i.a.uint16,r=Object.assign({newState:i.a.uint16,flags:i.a.uint16},e),a=new i.a.Struct(r),n=new sa(new i.a.Array(i.a.uint16,(function(e){return e.nClasses}))),s=new i.a.Struct({nClasses:i.a.uint32,classTable:new i.a.Pointer(i.a.uint32,new oa(t)),stateArray:new i.a.Pointer(i.a.uint32,n),entryTable:new i.a.Pointer(i.a.uint32,new sa(a))});return s}var ua=new i.a.VersionedStruct(\"format\",{0:{deltas:new i.a.Array(i.a.int16,32)},1:{deltas:new i.a.Array(i.a.int16,32),mappingData:new oa(i.a.uint16)},2:{standardGlyph:i.a.uint16,controlPoints:new i.a.Array(i.a.uint16,32)},3:{standardGlyph:i.a.uint16,controlPoints:new i.a.Array(i.a.uint16,32),mappingData:new oa(i.a.uint16)}}),ca=new i.a.Struct({version:i.a.fixed32,format:i.a.uint16,defaultBaseline:i.a.uint16,subtable:ua}),ha=new i.a.Struct({setting:i.a.uint16,nameIndex:i.a.int16,name:function(e){return e.parent.parent.parent.name.records.fontFeatures[e.nameIndex]}}),fa=new i.a.Struct({feature:i.a.uint16,nSettings:i.a.uint16,settingTable:new i.a.Pointer(i.a.uint32,new i.a.Array(ha,\"nSettings\"),{type:\"parent\"}),featureFlags:new i.a.Bitfield(i.a.uint8,[null,null,null,null,null,null,\"hasDefault\",\"exclusive\"]),defaultSetting:i.a.uint8,nameIndex:i.a.int16,name:function(e){return e.parent.parent.name.records.fontFeatures[e.nameIndex]}}),pa=new i.a.Struct({version:i.a.fixed32,featureNameCount:i.a.uint16,reserved1:new i.a.Reserved(i.a.uint16),reserved2:new i.a.Reserved(i.a.uint32),featureNames:new i.a.Array(fa,\"featureNameCount\")}),da=new i.a.Struct({axisTag:new i.a.String(4),minValue:i.a.fixed32,defaultValue:i.a.fixed32,maxValue:i.a.fixed32,flags:i.a.uint16,nameID:i.a.uint16,name:function(e){return e.parent.parent.name.records.fontFeatures[e.nameID]}}),ya=new i.a.Struct({nameID:i.a.uint16,name:function(e){return e.parent.parent.name.records.fontFeatures[e.nameID]},flags:i.a.uint16,coord:new i.a.Array(i.a.fixed32,(function(e){return e.parent.axisCount})),postscriptNameID:new i.a.Optional(i.a.uint16,(function(e){return e.parent.instanceSize-e._currentOffset>0}))}),ga=new i.a.Struct({version:i.a.fixed32,offsetToData:i.a.uint16,countSizePairs:i.a.uint16,axisCount:i.a.uint16,axisSize:i.a.uint16,instanceCount:i.a.uint16,instanceSize:i.a.uint16,axis:new i.a.Array(da,\"axisCount\"),instance:new i.a.Array(ya,\"instanceCount\")}),va=new i.a.Fixed(16,\"BE\",14),ma=function(){function e(){$(this,e)}return e.decode=function(e,t){return t.flags?e.readUInt32BE():2*e.readUInt16BE()},e}(),ba=new i.a.Struct({version:i.a.uint16,reserved:new i.a.Reserved(i.a.uint16),axisCount:i.a.uint16,globalCoordCount:i.a.uint16,globalCoords:new i.a.Pointer(i.a.uint32,new i.a.Array(new i.a.Array(va,\"axisCount\"),\"globalCoordCount\")),glyphCount:i.a.uint16,flags:i.a.uint16,offsetToData:i.a.uint32,offsets:new i.a.Array(new i.a.Pointer(ma,\"void\",{relativeTo:\"offsetToData\",allowNull:!1}),(function(e){return e.glyphCount+1}))}),wa=new i.a.Struct({length:i.a.uint16,coverage:i.a.uint16,subFeatureFlags:i.a.uint32,stateTable:new function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=(arguments.length>1&&void 0!==arguments[1]||i.a.uint16,new i.a.Struct({version:function(){return 8},firstGlyph:i.a.uint16,values:new i.a.Array(i.a.uint8,i.a.uint16)})),r=Object.assign({newStateOffset:i.a.uint16,newState:function(e){return(e.newStateOffset-(e.parent.stateArray.base-e.parent._startOffset))/e.parent.nClasses},flags:i.a.uint16},e),a=new i.a.Struct(r),n=new sa(new i.a.Array(i.a.uint8,(function(e){return e.nClasses}))),s=new i.a.Struct({nClasses:i.a.uint16,classTable:new i.a.Pointer(i.a.uint16,t),stateArray:new i.a.Pointer(i.a.uint16,n),entryTable:new i.a.Pointer(i.a.uint16,new sa(a))});return s}}),Sa=new i.a.Struct({justClass:i.a.uint32,beforeGrowLimit:i.a.fixed32,beforeShrinkLimit:i.a.fixed32,afterGrowLimit:i.a.fixed32,afterShrinkLimit:i.a.fixed32,growFlags:i.a.uint16,shrinkFlags:i.a.uint16}),_a=new i.a.Array(Sa,i.a.uint32),ka=new i.a.VersionedStruct(\"actionType\",{0:{lowerLimit:i.a.fixed32,upperLimit:i.a.fixed32,order:i.a.uint16,glyphs:new i.a.Array(i.a.uint16,i.a.uint16)},1:{addGlyph:i.a.uint16},2:{substThreshold:i.a.fixed32,addGlyph:i.a.uint16,substGlyph:i.a.uint16},3:{},4:{variationAxis:i.a.uint32,minimumLimit:i.a.fixed32,noStretchValue:i.a.fixed32,maximumLimit:i.a.fixed32},5:{flags:i.a.uint16,glyph:i.a.uint16}}),Ca=new i.a.Struct({actionClass:i.a.uint16,actionType:i.a.uint16,actionLength:i.a.uint32,actionData:ka,padding:new i.a.Reserved(i.a.uint8,(function(e){return e.actionLength-e._currentOffset}))}),xa=new i.a.Array(Ca,i.a.uint32),Aa=new i.a.Struct({lookupTable:new oa(new i.a.Pointer(i.a.uint16,xa))}),Pa=new i.a.Struct({classTable:new i.a.Pointer(i.a.uint16,wa,{type:\"parent\"}),wdcOffset:i.a.uint16,postCompensationTable:new i.a.Pointer(i.a.uint16,Aa,{type:\"parent\"}),widthDeltaClusters:new oa(new i.a.Pointer(i.a.uint16,_a,{type:\"parent\",relativeTo:\"wdcOffset\"}))}),Ia=new i.a.Struct({version:i.a.uint32,format:i.a.uint16,horizontal:new i.a.Pointer(i.a.uint16,Pa),vertical:new i.a.Pointer(i.a.uint16,Pa)}),Oa={action:i.a.uint16},Fa={markIndex:i.a.uint16,currentIndex:i.a.uint16},Da={currentInsertIndex:i.a.uint16,markedInsertIndex:i.a.uint16},Ta=new i.a.Struct({items:new sa(new i.a.Pointer(i.a.uint32,new oa))}),Ma=new i.a.VersionedStruct(\"type\",{0:{stateTable:new la},1:{stateTable:new la(Fa),substitutionTable:new i.a.Pointer(i.a.uint32,Ta)},2:{stateTable:new la(Oa),ligatureActions:new i.a.Pointer(i.a.uint32,new sa(i.a.uint32)),components:new i.a.Pointer(i.a.uint32,new sa(i.a.uint16)),ligatureList:new i.a.Pointer(i.a.uint32,new sa(i.a.uint16))},4:{lookupTable:new oa},5:{stateTable:new la(Da),insertionActions:new i.a.Pointer(i.a.uint32,new sa(i.a.uint16))}}),La=new i.a.Struct({length:i.a.uint32,coverage:i.a.uint24,type:i.a.uint8,subFeatureFlags:i.a.uint32,table:Ma,padding:new i.a.Reserved(i.a.uint8,(function(e){return e.length-e._currentOffset}))}),Ga=new i.a.Struct({featureType:i.a.uint16,featureSetting:i.a.uint16,enableFlags:i.a.uint32,disableFlags:i.a.uint32}),Ba=new i.a.Struct({defaultFlags:i.a.uint32,chainLength:i.a.uint32,nFeatureEntries:i.a.uint32,nSubtables:i.a.uint32,features:new i.a.Array(Ga,\"nFeatureEntries\"),subtables:new i.a.Array(La,\"nSubtables\")}),Ea=new i.a.Struct({version:i.a.uint16,unused:new i.a.Reserved(i.a.uint16),nChains:i.a.uint32,chains:new i.a.Array(Ba,\"nChains\")}),za=new i.a.Struct({left:i.a.int16,top:i.a.int16,right:i.a.int16,bottom:i.a.int16}),Ra=new i.a.Struct({version:i.a.fixed32,format:i.a.uint16,lookupTable:new oa(za)}),Va={};Va.cmap=F,Va.head=D,Va.hhea=T,Va.hmtx=L,Va.maxp=G,Va.name=N,Va[\"OS/2\"]=j,Va.post=Y,Va.fpgm=K,Va.loca=X,Va.prep=J,Va[\"cvt \"]=W,Va.glyf=Z,Va[\"CFF \"]=dt,Va.CFF2=dt,Va.VORG=gt,Va.EBLC=Pt,Va.CBLC=Va.EBLC,Va.sbix=Ot,Va.COLR=Tt,Va.CPAL=Lt,Va.BASE=Ht,Va.GDEF=Qt,Va.GPOS=yr,Va.GSUB=Sr,Va.JSTF=Ir,Va.HVAR=Tr,Va.DSIG=Gr,Va.gasp=Er,Va.hdmx=Rr,Va.kern=Hr,Va.LTSH=Yr,Va.PCLT=Wr,Va.VDMX=Zr,Va.vhea=Qr,Va.vmtx=ea,Va.avar=na,Va.bsln=ca,Va.feat=pa,Va.fvar=ga,Va.gvar=ba,Va.just=Ia,Va.morx=Ea,Va.opbd=Ra;var Ua,Na=new i.a.Struct({tag:new i.a.String(4),checkSum:i.a.uint32,offset:new i.a.Pointer(i.a.uint32,\"void\",{type:\"global\"}),length:i.a.uint32}),qa=new i.a.Struct({tag:new i.a.String(4),numTables:i.a.uint16,searchRange:i.a.uint16,entrySelector:i.a.uint16,rangeShift:i.a.uint16,tables:new i.a.Array(Na,\"numTables\")});function ja(e,t){for(var r=0,a=e.length-1;r<=a;){var n=r+a>>1,i=t(e[n]);if(i<0)a=n-1;else{if(!(i>0))return n;r=n+1}}return-1}function Ha(e,t){for(var r=[];e<t;)r.push(e++);return r}function Ya(e,t,r,a,n){var i={};return Object.keys(a).forEach((function(e){i[e]=a[e]})),i.enumerable=!!i.enumerable,i.configurable=!!i.configurable,(\"value\"in i||i.initializer)&&(i.writable=!0),i=r.slice().reverse().reduce((function(r,a){return a(e,t,r)||r}),i),n&&void 0!==i.initializer&&(i.value=i.initializer?i.initializer.call(n):void 0,i.initializer=void 0),void 0===i.initializer&&(Object.defineProperty(e,t,i),i=null),i}qa.process=function(){var e={},t=this.tables,r=Array.isArray(t),a=0;for(t=r?t:t[Symbol.iterator]();;){var n;if(r){if(a>=t.length)break;n=t[a++]}else{if((a=t.next()).done)break;n=a.value}var i=n;e[i.tag]=i}this.tables=e},qa.preEncode=function(e){var t=[];for(var r in this.tables){var a=this.tables[r];a&&t.push({tag:r,checkSum:0,offset:new i.a.VoidPointer(Va[r],a),length:Va[r].size(a)})}this.tag=\"true\",this.numTables=t.length,this.tables=t,this.searchRange=16*Math.floor(Math.log(this.numTables)/Math.LN2),this.entrySelector=Math.floor(this.searchRange/Math.LN2),this.rangeShift=16*this.numTables-this.searchRange};try{var Wa=r(\"rPnE\")}catch(ho){}var Ka=(Ya((Ua=function(){function e(t){if($(this,e),this.encoding=null,this.cmap=this.findSubtable(t,[[3,10],[0,6],[0,4],[3,1],[0,3],[0,2],[0,1],[0,0]]),!this.cmap&&Wa){var r=t.tables,a=Array.isArray(r),n=0;for(r=a?r:r[Symbol.iterator]();;){var i;if(a){if(n>=r.length)break;i=r[n++]}else{if((n=r.next()).done)break;i=n.value}var s=i,o=B(s.platformID,s.encodingID,s.table.language-1);Wa.encodingExists(o)&&(this.cmap=s.table,this.encoding=o)}}if(!this.cmap)throw new Error(\"Could not find a supported cmap table\");this.uvs=this.findSubtable(t,[[0,5]]),this.uvs&&14!==this.uvs.version&&(this.uvs=null)}return e.prototype.findSubtable=function(e,t){var r=t,a=Array.isArray(r),n=0;for(r=a?r:r[Symbol.iterator]();;){var i;if(a){if(n>=r.length)break;i=r[n++]}else{if((n=r.next()).done)break;i=n.value}var s=i,o=s[0],l=s[1],u=e.tables,c=Array.isArray(u),h=0;for(u=c?u:u[Symbol.iterator]();;){var f;if(c){if(h>=u.length)break;f=u[h++]}else{if((h=u.next()).done)break;f=h.value}var p=f;if(p.platformID===o&&p.encodingID===l)return p.table}}return null},e.prototype.lookup=function(e,t){if(this.encoding){var r=Wa.encode(String.fromCodePoint(e),this.encoding);e=0;for(var a=0;a<r.length;a++)e=e<<8|r[a]}else if(t){var n=this.getVariationSelector(e,t);if(n)return n}var i=this.cmap;switch(i.version){case 0:return i.codeMap.get(e)||0;case 4:for(var s=0,o=i.segCount-1;s<=o;){var l=s+o>>1;if(e<i.startCode.get(l))o=l-1;else{if(!(e>i.endCode.get(l))){var u=i.idRangeOffset.get(l),c=void 0;if(0===u)c=e+i.idDelta.get(l);else{var h=u/2+(e-i.startCode.get(l))-(i.segCount-l);0!==(c=i.glyphIndexArray.get(h)||0)&&(c+=i.idDelta.get(l))}return 65535&c}s=l+1}}return 0;case 8:throw new Error(\"TODO: cmap format 8\");case 6:case 10:return i.glyphIndices.get(e-i.firstCode)||0;case 12:case 13:for(var f=0,p=i.nGroups-1;f<=p;){var d=f+p>>1,y=i.groups.get(d);if(e<y.startCharCode)p=d-1;else{if(!(e>y.endCharCode))return 12===i.version?y.glyphID+(e-y.startCharCode):y.glyphID;f=d+1}}return 0;case 14:throw new Error(\"TODO: cmap format 14\");default:throw new Error(\"Unknown cmap format \"+i.version)}},e.prototype.getVariationSelector=function(e,t){if(!this.uvs)return 0;var r=this.uvs.varSelectors.toArray(),a=ja(r,(function(e){return t-e.varSelector})),n=r[a];return-1!==a&&n.defaultUVS&&(a=ja(n.defaultUVS,(function(t){return e<t.startUnicodeValue?-1:e>t.startUnicodeValue+t.additionalCount?1:0}))),-1!==a&&n.nonDefaultUVS&&-1!==(a=ja(n.nonDefaultUVS,(function(t){return e-t.unicodeValue})))?n.nonDefaultUVS[a].glyphID:0},e.prototype.getCharacterSet=function(){var e=this.cmap;switch(e.version){case 0:return Ha(0,e.codeMap.length);case 4:for(var t=[],r=e.endCode.toArray(),a=0;a<r.length;a++){var n=r[a]+1,i=e.startCode.get(a);t.push.apply(t,Ha(i,n))}return t;case 8:throw new Error(\"TODO: cmap format 8\");case 6:case 10:return Ha(e.firstCode,e.firstCode+e.glyphIndices.length);case 12:case 13:var s=[],o=e.groups.toArray(),l=Array.isArray(o),u=0;for(o=l?o:o[Symbol.iterator]();;){var c;if(l){if(u>=o.length)break;c=o[u++]}else{if((u=o.next()).done)break;c=u.value}var h=c;s.push.apply(s,Ha(h.startCharCode,h.endCharCode+1))}return s;case 14:throw new Error(\"TODO: cmap format 14\");default:throw new Error(\"Unknown cmap format \"+e.version)}},e.prototype.codePointsForGlyph=function(e){var t=this.cmap;switch(t.version){case 0:for(var r=[],a=0;a<256;a++)t.codeMap.get(a)===e&&r.push(a);return r;case 4:for(var n=[],i=0;i<t.segCount;i++)for(var s=t.endCode.get(i),o=t.startCode.get(i),l=t.idRangeOffset.get(i),u=t.idDelta.get(i),c=o;c<=s;c++){var h=0;if(0===l)h=c+u;else{var f=l/2+(c-o)-(t.segCount-i);0!==(h=t.glyphIndexArray.get(f)||0)&&(h+=u)}h===e&&n.push(c)}return n;case 12:var p=[],d=t.groups.toArray(),y=Array.isArray(d),g=0;for(d=y?d:d[Symbol.iterator]();;){var v;if(y){if(g>=d.length)break;v=d[g++]}else{if((g=d.next()).done)break;v=g.value}var m=v;e>=m.glyphID&&e<=m.glyphID+(m.endCharCode-m.startCharCode)&&p.push(m.startCharCode+(e-m.glyphID))}return p;case 13:var b=[],w=t.groups.toArray(),S=Array.isArray(w),_=0;for(w=S?w:w[Symbol.iterator]();;){var k;if(S){if(_>=w.length)break;k=w[_++]}else{if((_=w.next()).done)break;k=_.value}var C=k;e===C.glyphID&&b.push.apply(b,Ha(C.startCharCode,C.endCharCode+1))}return b;default:throw new Error(\"Unknown cmap format \"+t.version)}},e}()).prototype,\"getCharacterSet\",[w],Object.getOwnPropertyDescriptor(Ua.prototype,\"getCharacterSet\"),Ua.prototype),Ya(Ua.prototype,\"codePointsForGlyph\",[w],Object.getOwnPropertyDescriptor(Ua.prototype,\"codePointsForGlyph\"),Ua.prototype),Ua),Xa=function(){function e(t){$(this,e),this.kern=t.kern}return e.prototype.process=function(e,t){for(var r=0;r<e.length-1;r++){var a=e[r].id,n=e[r+1].id;t[r].xAdvance+=this.getKerning(a,n)}},e.prototype.getKerning=function(e,t){var r=0,a=this.kern.tables,n=Array.isArray(a),i=0;for(a=n?a:a[Symbol.iterator]();;){var s;if(n){if(i>=a.length)break;s=a[i++]}else{if((i=a.next()).done)break;s=i.value}var o=s;if(!o.coverage.crossStream){switch(o.version){case 0:if(!o.coverage.horizontal)continue;break;case 1:if(o.coverage.vertical||o.coverage.variation)continue;break;default:throw new Error(\"Unsupported kerning table version \"+o.version)}var l=0,u=o.subtable;switch(o.format){case 0:var c=ja(u.pairs,(function(r){return e-r.left||t-r.right}));c>=0&&(l=u.pairs[c].value);break;case 2:var h=0,f=0;h=e>=u.leftTable.firstGlyph&&e<u.leftTable.firstGlyph+u.leftTable.nGlyphs?u.leftTable.offsets[e-u.leftTable.firstGlyph]:u.array.off,t>=u.rightTable.firstGlyph&&t<u.rightTable.firstGlyph+u.rightTable.nGlyphs&&(f=u.rightTable.offsets[t-u.rightTable.firstGlyph]);var p=(h+f-u.array.off)/2;l=u.array.values.get(p);break;case 3:if(e>=u.glyphCount||t>=u.glyphCount)return 0;l=u.kernValue[u.kernIndex[u.leftClass[e]*u.rightClassCount+u.rightClass[t]]];break;default:throw new Error(\"Unsupported kerning sub-table format \"+o.format)}o.coverage.override?r=l:r+=l}}return r},e}(),Ja=function(){function e(t){$(this,e),this.font=t}return e.prototype.positionGlyphs=function(e,t){for(var r=0,a=0,n=0;n<e.length;n++){e[n].isMark?a=n:(r!==a&&this.positionCluster(e,t,r,a),r=a=n)}return r!==a&&this.positionCluster(e,t,r,a),t},e.prototype.positionCluster=function(e,t,r,a){var n=e[r],i=n.cbox.copy();n.codePoints.length>1&&(i.minX+=(n.codePoints.length-1)*i.width/n.codePoints.length);for(var s=-t[r].xAdvance,o=0,l=this.font.unitsPerEm/16,u=r+1;u<=a;u++){var c=e[u],h=c.cbox,f=t[u],p=this.getCombiningClass(c.codePoints[0]);if(\"Not_Reordered\"!==p){switch(f.xOffset=f.yOffset=0,p){case\"Double_Above\":case\"Double_Below\":f.xOffset+=i.minX-h.width/2-h.minX;break;case\"Attached_Below_Left\":case\"Below_Left\":case\"Above_Left\":f.xOffset+=i.minX-h.minX;break;case\"Attached_Above_Right\":case\"Below_Right\":case\"Above_Right\":f.xOffset+=i.maxX-h.width-h.minX;break;default:f.xOffset+=i.minX+(i.width-h.width)/2-h.minX}switch(p){case\"Double_Below\":case\"Below_Left\":case\"Below\":case\"Below_Right\":case\"Attached_Below_Left\":case\"Attached_Below\":\"Attached_Below_Left\"!==p&&\"Attached_Below\"!==p||(i.minY+=l),f.yOffset=-i.minY-h.maxY,i.minY+=h.height;break;case\"Double_Above\":case\"Above_Left\":case\"Above\":case\"Above_Right\":case\"Attached_Above\":case\"Attached_Above_Right\":\"Attached_Above\"!==p&&\"Attached_Above_Right\"!==p||(i.maxY+=l),f.yOffset=i.maxY-h.minY,i.maxY+=h.height}f.xAdvance=f.yAdvance=0,f.xOffset+=s,f.yOffset+=o}else s-=f.xAdvance,o-=f.yAdvance}},e.prototype.getCombiningClass=function(e){var t=u.default.getCombiningClass(e);if(3584===(-256&e))if(\"Not_Reordered\"===t)switch(e){case 3633:case 3636:case 3637:case 3638:case 3639:case 3655:case 3660:case 3645:case 3662:return\"Above_Right\";case 3761:case 3764:case 3765:case 3766:case 3767:case 3771:case 3788:case 3789:return\"Above\";case 3772:return\"Below\"}else if(3642===e)return\"Below_Right\";switch(t){case\"CCC10\":case\"CCC11\":case\"CCC12\":case\"CCC13\":case\"CCC14\":case\"CCC15\":case\"CCC16\":case\"CCC17\":case\"CCC18\":case\"CCC20\":case\"CCC22\":return\"Below\";case\"CCC23\":return\"Attached_Above\";case\"CCC24\":return\"Above_Right\";case\"CCC25\":case\"CCC19\":return\"Above_Left\";case\"CCC26\":return\"Above\";case\"CCC21\":break;case\"CCC27\":case\"CCC28\":case\"CCC30\":case\"CCC31\":case\"CCC33\":case\"CCC34\":case\"CCC35\":case\"CCC36\":return\"Above\";case\"CCC29\":case\"CCC32\":return\"Below\";case\"CCC103\":return\"Below_Right\";case\"CCC107\":return\"Above_Right\";case\"CCC118\":return\"Below\";case\"CCC122\":return\"Above\";case\"CCC129\":case\"CCC132\":return\"Below\";case\"CCC130\":return\"Above\"}return t},e}(),Za=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1/0,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1/0,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1/0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1/0;$(this,e),this.minX=t,this.minY=r,this.maxX=a,this.maxY=n}return e.prototype.addPoint=function(e,t){Math.abs(e)!==1/0&&(e<this.minX&&(this.minX=e),e>this.maxX&&(this.maxX=e)),Math.abs(t)!==1/0&&(t<this.minY&&(this.minY=t),t>this.maxY&&(this.maxY=t))},e.prototype.copy=function(){return new e(this.minX,this.minY,this.maxX,this.maxY)},ee(e,[{key:\"width\",get:function(){return this.maxX-this.minX}},{key:\"height\",get:function(){return this.maxY-this.minY}}]),e}(),Qa={Caucasian_Albanian:\"aghb\",Arabic:\"arab\",Imperial_Aramaic:\"armi\",Armenian:\"armn\",Avestan:\"avst\",Balinese:\"bali\",Bamum:\"bamu\",Bassa_Vah:\"bass\",Batak:\"batk\",Bengali:[\"bng2\",\"beng\"],Bopomofo:\"bopo\",Brahmi:\"brah\",Braille:\"brai\",Buginese:\"bugi\",Buhid:\"buhd\",Chakma:\"cakm\",Canadian_Aboriginal:\"cans\",Carian:\"cari\",Cham:\"cham\",Cherokee:\"cher\",Coptic:\"copt\",Cypriot:\"cprt\",Cyrillic:\"cyrl\",Devanagari:[\"dev2\",\"deva\"],Deseret:\"dsrt\",Duployan:\"dupl\",Egyptian_Hieroglyphs:\"egyp\",Elbasan:\"elba\",Ethiopic:\"ethi\",Georgian:\"geor\",Glagolitic:\"glag\",Gothic:\"goth\",Grantha:\"gran\",Greek:\"grek\",Gujarati:[\"gjr2\",\"gujr\"],Gurmukhi:[\"gur2\",\"guru\"],Hangul:\"hang\",Han:\"hani\",Hanunoo:\"hano\",Hebrew:\"hebr\",Hiragana:\"hira\",Pahawh_Hmong:\"hmng\",Katakana_Or_Hiragana:\"hrkt\",Old_Italic:\"ital\",Javanese:\"java\",Kayah_Li:\"kali\",Katakana:\"kana\",Kharoshthi:\"khar\",Khmer:\"khmr\",Khojki:\"khoj\",Kannada:[\"knd2\",\"knda\"],Kaithi:\"kthi\",Tai_Tham:\"lana\",Lao:\"lao \",Latin:\"latn\",Lepcha:\"lepc\",Limbu:\"limb\",Linear_A:\"lina\",Linear_B:\"linb\",Lisu:\"lisu\",Lycian:\"lyci\",Lydian:\"lydi\",Mahajani:\"mahj\",Mandaic:\"mand\",Manichaean:\"mani\",Mende_Kikakui:\"mend\",Meroitic_Cursive:\"merc\",Meroitic_Hieroglyphs:\"mero\",Malayalam:[\"mlm2\",\"mlym\"],Modi:\"modi\",Mongolian:\"mong\",Mro:\"mroo\",Meetei_Mayek:\"mtei\",Myanmar:[\"mym2\",\"mymr\"],Old_North_Arabian:\"narb\",Nabataean:\"nbat\",Nko:\"nko \",Ogham:\"ogam\",Ol_Chiki:\"olck\",Old_Turkic:\"orkh\",Oriya:[\"ory2\",\"orya\"],Osmanya:\"osma\",Palmyrene:\"palm\",Pau_Cin_Hau:\"pauc\",Old_Permic:\"perm\",Phags_Pa:\"phag\",Inscriptional_Pahlavi:\"phli\",Psalter_Pahlavi:\"phlp\",Phoenician:\"phnx\",Miao:\"plrd\",Inscriptional_Parthian:\"prti\",Rejang:\"rjng\",Runic:\"runr\",Samaritan:\"samr\",Old_South_Arabian:\"sarb\",Saurashtra:\"saur\",Shavian:\"shaw\",Sharada:\"shrd\",Siddham:\"sidd\",Khudawadi:\"sind\",Sinhala:\"sinh\",Sora_Sompeng:\"sora\",Sundanese:\"sund\",Syloti_Nagri:\"sylo\",Syriac:\"syrc\",Tagbanwa:\"tagb\",Takri:\"takr\",Tai_Le:\"tale\",New_Tai_Lue:\"talu\",Tamil:[\"tml2\",\"taml\"],Tai_Viet:\"tavt\",Telugu:[\"tel2\",\"telu\"],Tifinagh:\"tfng\",Tagalog:\"tglg\",Thaana:\"thaa\",Thai:\"thai\",Tibetan:\"tibt\",Tirhuta:\"tirh\",Ugaritic:\"ugar\",Vai:\"vai \",Warang_Citi:\"wara\",Old_Persian:\"xpeo\",Cuneiform:\"xsux\",Yi:\"yi  \",Inherited:\"zinh\",Common:\"zyyy\",Unknown:\"zzzz\"},$a={};for(var en in Qa){var tn=Qa[en];if(Array.isArray(tn)){var rn=tn,an=Array.isArray(rn),nn=0;for(rn=an?rn:rn[Symbol.iterator]();;){var sn;if(an){if(nn>=rn.length)break;sn=rn[nn++]}else{if((nn=rn.next()).done)break;sn=nn.value}$a[sn]=en}}else $a[tn]=en}var on={arab:!0,hebr:!0,syrc:!0,thaa:!0,cprt:!0,khar:!0,phnx:!0,\"nko \":!0,lydi:!0,avst:!0,armi:!0,phli:!0,prti:!0,sarb:!0,orkh:!0,samr:!0,mand:!0,merc:!0,mero:!0,mani:!0,mend:!0,nbat:!0,narb:!0,palm:!0,phlp:!0};function ln(e){return on[e]?\"rtl\":\"ltr\"}for(var un=function(){function e(t,r,a,n,i){if($(this,e),this.glyphs=t,this.positions=null,this.stringIndices=null,this.script=a,this.language=n||null,this.direction=i||ln(a),this.features={},Array.isArray(r)){var s=r,o=Array.isArray(s),l=0;for(s=o?s:s[Symbol.iterator]();;){var u;if(o){if(l>=s.length)break;u=s[l++]}else{if((l=s.next()).done)break;u=l.value}var c=u;this.features[c]=!0}}else\"object\"===(\"undefined\"===typeof r?\"undefined\":Q(r))&&(this.features=r)}return ee(e,[{key:\"advanceWidth\",get:function(){var e=0,t=this.positions,r=Array.isArray(t),a=0;for(t=r?t:t[Symbol.iterator]();;){var n;if(r){if(a>=t.length)break;n=t[a++]}else{if((a=t.next()).done)break;n=a.value}e+=n.xAdvance}return e}},{key:\"advanceHeight\",get:function(){var e=0,t=this.positions,r=Array.isArray(t),a=0;for(t=r?t:t[Symbol.iterator]();;){var n;if(r){if(a>=t.length)break;n=t[a++]}else{if((a=t.next()).done)break;n=a.value}e+=n.yAdvance}return e}},{key:\"bbox\",get:function(){for(var e=new Za,t=0,r=0,a=0;a<this.glyphs.length;a++){var n=this.glyphs[a],i=this.positions[a],s=n.bbox;e.addPoint(s.minX+t+i.xOffset,s.minY+r+i.yOffset),e.addPoint(s.maxX+t+i.xOffset,s.maxY+r+i.yOffset),t+=i.xAdvance,r+=i.yAdvance}return e}}]),e}(),cn=function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;$(this,e),this.xAdvance=t,this.yAdvance=r,this.xOffset=a,this.yOffset=n},hn={allTypographicFeatures:{code:0,exclusive:!1,allTypeFeatures:0},ligatures:{code:1,exclusive:!1,requiredLigatures:0,commonLigatures:2,rareLigatures:4,rebusPictures:8,diphthongLigatures:10,squaredLigatures:12,abbrevSquaredLigatures:14,symbolLigatures:16,contextualLigatures:18,historicalLigatures:20},cursiveConnection:{code:2,exclusive:!0,unconnected:0,partiallyConnected:1,cursive:2},letterCase:{code:3,exclusive:!0},verticalSubstitution:{code:4,exclusive:!1,substituteVerticalForms:0},linguisticRearrangement:{code:5,exclusive:!1,linguisticRearrangement:0},numberSpacing:{code:6,exclusive:!0,monospacedNumbers:0,proportionalNumbers:1,thirdWidthNumbers:2,quarterWidthNumbers:3},smartSwash:{code:8,exclusive:!1,wordInitialSwashes:0,wordFinalSwashes:2,nonFinalSwashes:8},diacritics:{code:9,exclusive:!0,showDiacritics:0,hideDiacritics:1,decomposeDiacritics:2},verticalPosition:{code:10,exclusive:!0,normalPosition:0,superiors:1,inferiors:2,ordinals:3,scientificInferiors:4},fractions:{code:11,exclusive:!0,noFractions:0,verticalFractions:1,diagonalFractions:2},overlappingCharacters:{code:13,exclusive:!1,preventOverlap:0},typographicExtras:{code:14,exclusive:!1,slashedZero:4},mathematicalExtras:{code:15,exclusive:!1,mathematicalGreek:10},ornamentSets:{code:16,exclusive:!0,noOrnaments:0,dingbats:1,piCharacters:2,fleurons:3,decorativeBorders:4,internationalSymbols:5,mathSymbols:6},characterAlternatives:{code:17,exclusive:!0,noAlternates:0},designComplexity:{code:18,exclusive:!0,designLevel1:0,designLevel2:1,designLevel3:2,designLevel4:3,designLevel5:4},styleOptions:{code:19,exclusive:!0,noStyleOptions:0,displayText:1,engravedText:2,illuminatedCaps:3,titlingCaps:4,tallCaps:5},characterShape:{code:20,exclusive:!0,traditionalCharacters:0,simplifiedCharacters:1,JIS1978Characters:2,JIS1983Characters:3,JIS1990Characters:4,traditionalAltOne:5,traditionalAltTwo:6,traditionalAltThree:7,traditionalAltFour:8,traditionalAltFive:9,expertCharacters:10,JIS2004Characters:11,hojoCharacters:12,NLCCharacters:13,traditionalNamesCharacters:14},numberCase:{code:21,exclusive:!0,lowerCaseNumbers:0,upperCaseNumbers:1},textSpacing:{code:22,exclusive:!0,proportionalText:0,monospacedText:1,halfWidthText:2,thirdWidthText:3,quarterWidthText:4,altProportionalText:5,altHalfWidthText:6},transliteration:{code:23,exclusive:!0,noTransliteration:0},annotation:{code:24,exclusive:!0,noAnnotation:0,boxAnnotation:1,roundedBoxAnnotation:2,circleAnnotation:3,invertedCircleAnnotation:4,parenthesisAnnotation:5,periodAnnotation:6,romanNumeralAnnotation:7,diamondAnnotation:8,invertedBoxAnnotation:9,invertedRoundedBoxAnnotation:10},kanaSpacing:{code:25,exclusive:!0,fullWidthKana:0,proportionalKana:1},ideographicSpacing:{code:26,exclusive:!0,fullWidthIdeographs:0,proportionalIdeographs:1,halfWidthIdeographs:2},unicodeDecomposition:{code:27,exclusive:!1,canonicalComposition:0,compatibilityComposition:2,transcodingComposition:4},rubyKana:{code:28,exclusive:!1,rubyKana:2},CJKSymbolAlternatives:{code:29,exclusive:!0,noCJKSymbolAlternatives:0,CJKSymbolAltOne:1,CJKSymbolAltTwo:2,CJKSymbolAltThree:3,CJKSymbolAltFour:4,CJKSymbolAltFive:5},ideographicAlternatives:{code:30,exclusive:!0,noIdeographicAlternatives:0,ideographicAltOne:1,ideographicAltTwo:2,ideographicAltThree:3,ideographicAltFour:4,ideographicAltFive:5},CJKVerticalRomanPlacement:{code:31,exclusive:!0,CJKVerticalRomanCentered:0,CJKVerticalRomanHBaseline:1},italicCJKRoman:{code:32,exclusive:!1,CJKItalicRoman:2},caseSensitiveLayout:{code:33,exclusive:!1,caseSensitiveLayout:0,caseSensitiveSpacing:2},alternateKana:{code:34,exclusive:!1,alternateHorizKana:0,alternateVertKana:2},stylisticAlternatives:{code:35,exclusive:!1,noStylisticAlternates:0,stylisticAltOne:2,stylisticAltTwo:4,stylisticAltThree:6,stylisticAltFour:8,stylisticAltFive:10,stylisticAltSix:12,stylisticAltSeven:14,stylisticAltEight:16,stylisticAltNine:18,stylisticAltTen:20,stylisticAltEleven:22,stylisticAltTwelve:24,stylisticAltThirteen:26,stylisticAltFourteen:28,stylisticAltFifteen:30,stylisticAltSixteen:32,stylisticAltSeventeen:34,stylisticAltEighteen:36,stylisticAltNineteen:38,stylisticAltTwenty:40},contextualAlternates:{code:36,exclusive:!1,contextualAlternates:0,swashAlternates:2,contextualSwashAlternates:4},lowerCase:{code:37,exclusive:!0,defaultLowerCase:0,lowerCaseSmallCaps:1,lowerCasePetiteCaps:2},upperCase:{code:38,exclusive:!0,defaultUpperCase:0,upperCaseSmallCaps:1,upperCasePetiteCaps:2},languageTag:{code:39,exclusive:!0},CJKRomanSpacing:{code:103,exclusive:!0,halfWidthCJKRoman:0,proportionalCJKRoman:1,defaultCJKRoman:2,fullWidthCJKRoman:3}},fn=function(e,t){return[hn[e].code,hn[e][t]]},pn={rlig:fn(\"ligatures\",\"requiredLigatures\"),clig:fn(\"ligatures\",\"contextualLigatures\"),dlig:fn(\"ligatures\",\"rareLigatures\"),hlig:fn(\"ligatures\",\"historicalLigatures\"),liga:fn(\"ligatures\",\"commonLigatures\"),hist:fn(\"ligatures\",\"historicalLigatures\"),smcp:fn(\"lowerCase\",\"lowerCaseSmallCaps\"),pcap:fn(\"lowerCase\",\"lowerCasePetiteCaps\"),frac:fn(\"fractions\",\"diagonalFractions\"),dnom:fn(\"fractions\",\"diagonalFractions\"),numr:fn(\"fractions\",\"diagonalFractions\"),afrc:fn(\"fractions\",\"verticalFractions\"),case:fn(\"caseSensitiveLayout\",\"caseSensitiveLayout\"),ccmp:fn(\"unicodeDecomposition\",\"canonicalComposition\"),cpct:fn(\"CJKVerticalRomanPlacement\",\"CJKVerticalRomanCentered\"),valt:fn(\"CJKVerticalRomanPlacement\",\"CJKVerticalRomanCentered\"),swsh:fn(\"contextualAlternates\",\"swashAlternates\"),cswh:fn(\"contextualAlternates\",\"contextualSwashAlternates\"),curs:fn(\"cursiveConnection\",\"cursive\"),c2pc:fn(\"upperCase\",\"upperCasePetiteCaps\"),c2sc:fn(\"upperCase\",\"upperCaseSmallCaps\"),init:fn(\"smartSwash\",\"wordInitialSwashes\"),fin2:fn(\"smartSwash\",\"wordFinalSwashes\"),medi:fn(\"smartSwash\",\"nonFinalSwashes\"),med2:fn(\"smartSwash\",\"nonFinalSwashes\"),fin3:fn(\"smartSwash\",\"wordFinalSwashes\"),fina:fn(\"smartSwash\",\"wordFinalSwashes\"),pkna:fn(\"kanaSpacing\",\"proportionalKana\"),half:fn(\"textSpacing\",\"halfWidthText\"),halt:fn(\"textSpacing\",\"altHalfWidthText\"),hkna:fn(\"alternateKana\",\"alternateHorizKana\"),vkna:fn(\"alternateKana\",\"alternateVertKana\"),ital:fn(\"italicCJKRoman\",\"CJKItalicRoman\"),lnum:fn(\"numberCase\",\"upperCaseNumbers\"),onum:fn(\"numberCase\",\"lowerCaseNumbers\"),mgrk:fn(\"mathematicalExtras\",\"mathematicalGreek\"),calt:fn(\"contextualAlternates\",\"contextualAlternates\"),vrt2:fn(\"verticalSubstitution\",\"substituteVerticalForms\"),vert:fn(\"verticalSubstitution\",\"substituteVerticalForms\"),tnum:fn(\"numberSpacing\",\"monospacedNumbers\"),pnum:fn(\"numberSpacing\",\"proportionalNumbers\"),sups:fn(\"verticalPosition\",\"superiors\"),subs:fn(\"verticalPosition\",\"inferiors\"),ordn:fn(\"verticalPosition\",\"ordinals\"),pwid:fn(\"textSpacing\",\"proportionalText\"),hwid:fn(\"textSpacing\",\"halfWidthText\"),qwid:fn(\"textSpacing\",\"quarterWidthText\"),twid:fn(\"textSpacing\",\"thirdWidthText\"),fwid:fn(\"textSpacing\",\"proportionalText\"),palt:fn(\"textSpacing\",\"altProportionalText\"),trad:fn(\"characterShape\",\"traditionalCharacters\"),smpl:fn(\"characterShape\",\"simplifiedCharacters\"),jp78:fn(\"characterShape\",\"JIS1978Characters\"),jp83:fn(\"characterShape\",\"JIS1983Characters\"),jp90:fn(\"characterShape\",\"JIS1990Characters\"),jp04:fn(\"characterShape\",\"JIS2004Characters\"),expt:fn(\"characterShape\",\"expertCharacters\"),hojo:fn(\"characterShape\",\"hojoCharacters\"),nlck:fn(\"characterShape\",\"NLCCharacters\"),tnam:fn(\"characterShape\",\"traditionalNamesCharacters\"),ruby:fn(\"rubyKana\",\"rubyKana\"),titl:fn(\"styleOptions\",\"titlingCaps\"),zero:fn(\"typographicExtras\",\"slashedZero\"),ss01:fn(\"stylisticAlternatives\",\"stylisticAltOne\"),ss02:fn(\"stylisticAlternatives\",\"stylisticAltTwo\"),ss03:fn(\"stylisticAlternatives\",\"stylisticAltThree\"),ss04:fn(\"stylisticAlternatives\",\"stylisticAltFour\"),ss05:fn(\"stylisticAlternatives\",\"stylisticAltFive\"),ss06:fn(\"stylisticAlternatives\",\"stylisticAltSix\"),ss07:fn(\"stylisticAlternatives\",\"stylisticAltSeven\"),ss08:fn(\"stylisticAlternatives\",\"stylisticAltEight\"),ss09:fn(\"stylisticAlternatives\",\"stylisticAltNine\"),ss10:fn(\"stylisticAlternatives\",\"stylisticAltTen\"),ss11:fn(\"stylisticAlternatives\",\"stylisticAltEleven\"),ss12:fn(\"stylisticAlternatives\",\"stylisticAltTwelve\"),ss13:fn(\"stylisticAlternatives\",\"stylisticAltThirteen\"),ss14:fn(\"stylisticAlternatives\",\"stylisticAltFourteen\"),ss15:fn(\"stylisticAlternatives\",\"stylisticAltFifteen\"),ss16:fn(\"stylisticAlternatives\",\"stylisticAltSixteen\"),ss17:fn(\"stylisticAlternatives\",\"stylisticAltSeventeen\"),ss18:fn(\"stylisticAlternatives\",\"stylisticAltEighteen\"),ss19:fn(\"stylisticAlternatives\",\"stylisticAltNineteen\"),ss20:fn(\"stylisticAlternatives\",\"stylisticAltTwenty\")},dn=1;dn<=99;dn++)pn[\"cv\"+(\"00\"+dn).slice(-2)]=[hn.characterAlternatives.code,dn];var yn,gn={};for(var vn in pn){var mn=pn[vn];null==gn[mn[0]]&&(gn[mn[0]]={}),gn[mn[0]][mn[1]]=vn}function bn(e){var t=e[0],r=e[1];if(isNaN(t))var a=hn[t]&&hn[t].code;else a=t;if(isNaN(r))var n=hn[t]&&hn[t][r];else n=r;return[a,n]}var wn,Sn=(function(e,t,r,a,n){var i={};Object.keys(a).forEach((function(e){i[e]=a[e]})),i.enumerable=!!i.enumerable,i.configurable=!!i.configurable,(\"value\"in i||i.initializer)&&(i.writable=!0),i=r.slice().reverse().reduce((function(r,a){return a(e,t,r)||r}),i),n&&void 0!==i.initializer&&(i.value=i.initializer?i.initializer.call(n):void 0,i.initializer=void 0),void 0===i.initializer&&(Object.defineProperty(e,t,i),i=null)}((yn=function(){function e(t){$(this,e),this.table=t}return e.prototype.lookup=function(e){switch(this.table.version){case 0:return this.table.values.getItem(e);case 2:case 4:for(var t=0,r=this.table.binarySearchHeader.nUnits-1;t<=r;){var a=t+r>>1;if(65535===(s=this.table.segments[a]).firstGlyph)return null;if(e<s.firstGlyph)r=a-1;else{if(!(e>s.lastGlyph))return 2===this.table.version?s.value:s.values[e-s.firstGlyph];t=a+1}}return null;case 6:for(var n=0,i=this.table.binarySearchHeader.nUnits-1;n<=i;){var s;a=n+i>>1;if(65535===(s=this.table.segments[a]).glyph)return null;if(e<s.glyph)i=a-1;else{if(!(e>s.glyph))return s.value;n=a+1}}return null;case 8:return this.table.values[e-this.table.firstGlyph];default:throw new Error(\"Unknown lookup table format: \"+this.table.version)}},e.prototype.glyphsForValue=function(e){var t=[];switch(this.table.version){case 2:case 4:var r=this.table.segments,a=Array.isArray(r),n=0;for(r=a?r:r[Symbol.iterator]();;){var i;if(a){if(n>=r.length)break;i=r[n++]}else{if((n=r.next()).done)break;i=n.value}var s=i;if(2===this.table.version&&s.value===e)t.push.apply(t,Ha(s.firstGlyph,s.lastGlyph+1));else for(var o=0;o<s.values.length;o++)s.values[o]===e&&t.push(s.firstGlyph+o)}break;case 6:var l=this.table.segments,u=Array.isArray(l),c=0;for(l=u?l:l[Symbol.iterator]();;){var h;if(u){if(c>=l.length)break;h=l[c++]}else{if((c=l.next()).done)break;h=c.value}var f=h;f.value===e&&t.push(f.glyph)}break;case 8:for(var p=0;p<this.table.values.length;p++)this.table.values[p]===e&&t.push(this.table.firstGlyph+p);break;default:throw new Error(\"Unknown lookup table format: \"+this.table.version)}return t},e}()).prototype,\"glyphsForValue\",[w],Object.getOwnPropertyDescriptor(yn.prototype,\"glyphsForValue\"),yn.prototype),yn),_n=function(){function e(t){$(this,e),this.stateTable=t,this.lookupTable=new Sn(t.classTable)}return e.prototype.process=function(e,t,r){for(var a=0,n=t?e.length-1:0,i=t?-1:1;1===i&&n<=e.length||-1===i&&n>=-1;){var s=null,o=1,l=!0;n===e.length||-1===n?o=0:65535===(s=e[n]).id?o=2:null==(o=this.lookupTable.lookup(s.id))&&(o=1);var u=this.stateTable.stateArray.getItem(a)[o],c=this.stateTable.entryTable.getItem(u);0!==o&&2!==o&&(r(s,c,n),l=!(16384&c.flags)),a=c.newState,l&&(n+=i)}return e},e.prototype.traverse=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;if(!r.has(t)){r.add(t);for(var a=this.stateTable,n=a.nClasses,i=a.stateArray,s=a.entryTable,o=i.getItem(t),l=4;l<n;l++){var u=o[l],c=s.getItem(u),h=this.lookupTable.glyphsForValue(l),f=Array.isArray(h),p=0;for(h=f?h:h[Symbol.iterator]();;){var d;if(f){if(p>=h.length)break;d=h[p++]}else{if((p=h.next()).done)break;d=p.value}var y=d;e.enter&&e.enter(y,c),0!==c.newState&&this.traverse(e,c.newState,r),e.exit&&e.exit(y,c)}}}},e}();var kn=4194304,Cn=(function(e,t,r,a,n){var i={};Object.keys(a).forEach((function(e){i[e]=a[e]})),i.enumerable=!!i.enumerable,i.configurable=!!i.configurable,(\"value\"in i||i.initializer)&&(i.writable=!0),i=r.slice().reverse().reduce((function(r,a){return a(e,t,r)||r}),i),n&&void 0!==i.initializer&&(i.value=i.initializer?i.initializer.call(n):void 0,i.initializer=void 0),void 0===i.initializer&&(Object.defineProperty(e,t,i),i=null)}((wn=function(){function e(t){$(this,e),this.processIndicRearragement=this.processIndicRearragement.bind(this),this.processContextualSubstitution=this.processContextualSubstitution.bind(this),this.processLigature=this.processLigature.bind(this),this.processNoncontextualSubstitutions=this.processNoncontextualSubstitutions.bind(this),this.processGlyphInsertion=this.processGlyphInsertion.bind(this),this.font=t,this.morx=t.morx,this.inputCache=null}return e.prototype.process=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=this.morx.chains,a=Array.isArray(r),n=0;for(r=a?r:r[Symbol.iterator]();;){var i;if(a){if(n>=r.length)break;i=r[n++]}else{if((n=r.next()).done)break;i=n.value}var s=i,o=s.defaultFlags,l=s.features,u=Array.isArray(l),c=0;for(l=u?l:l[Symbol.iterator]();;){var h;if(u){if(c>=l.length)break;h=l[c++]}else{if((c=l.next()).done)break;h=c.value}var f=h,p=void 0;(p=t[f.featureType])&&p[f.featureSetting]&&(o&=f.disableFlags,o|=f.enableFlags)}var d=s.subtables,y=Array.isArray(d),g=0;for(d=y?d:d[Symbol.iterator]();;){var v;if(y){if(g>=d.length)break;v=d[g++]}else{if((g=d.next()).done)break;v=g.value}var m=v;m.subFeatureFlags&o&&this.processSubtable(m,e)}}for(var b=e.length-1;b>=0;)65535===e[b].id&&e.splice(b,1),b--;return e},e.prototype.processSubtable=function(e,t){if(this.subtable=e,this.glyphs=t,4!==this.subtable.type){this.ligatureStack=[],this.markedGlyph=null,this.firstGlyph=null,this.lastGlyph=null,this.markedIndex=null;var r=this.getStateMachine(e),a=this.getProcessor(),n=!!(this.subtable.coverage&kn);return r.process(this.glyphs,n,a)}this.processNoncontextualSubstitutions(this.subtable,this.glyphs)},e.prototype.getStateMachine=function(e){return new _n(e.table.stateTable)},e.prototype.getProcessor=function(){switch(this.subtable.type){case 0:return this.processIndicRearragement;case 1:return this.processContextualSubstitution;case 2:return this.processLigature;case 4:return this.processNoncontextualSubstitutions;case 5:return this.processGlyphInsertion;default:throw new Error(\"Invalid morx subtable type: \"+this.subtable.type)}},e.prototype.processIndicRearragement=function(e,t,r){32768&t.flags&&(this.firstGlyph=r),8192&t.flags&&(this.lastGlyph=r),function(e,t,r,a){switch(t){case 0:return e;case 1:return xn(e,[r,1],[a,0]);case 2:return xn(e,[r,0],[a,1]);case 3:return xn(e,[r,1],[a,1]);case 4:return xn(e,[r,2],[a,0]);case 5:return xn(e,[r,2],[a,0],!0,!1);case 6:return xn(e,[r,0],[a,2]);case 7:return xn(e,[r,0],[a,2],!1,!0);case 8:return xn(e,[r,1],[a,2]);case 9:return xn(e,[r,1],[a,2],!1,!0);case 10:return xn(e,[r,2],[a,1]);case 11:return xn(e,[r,2],[a,1],!0,!1);case 12:return xn(e,[r,2],[a,2]);case 13:return xn(e,[r,2],[a,2],!0,!1);case 14:return xn(e,[r,2],[a,2],!1,!0);case 15:return xn(e,[r,2],[a,2],!0,!0);default:throw new Error(\"Unknown verb: \"+t)}}(this.glyphs,15&t.flags,this.firstGlyph,this.lastGlyph)},e.prototype.processContextualSubstitution=function(e,t,r){var a=this.subtable.table.substitutionTable.items;if(65535!==t.markIndex){var n=a.getItem(t.markIndex),i=new Sn(n);e=this.glyphs[this.markedGlyph],(s=i.lookup(e.id))&&(this.glyphs[this.markedGlyph]=this.font.getGlyph(s,e.codePoints))}if(65535!==t.currentIndex){var s,o=a.getItem(t.currentIndex),l=new Sn(o);e=this.glyphs[r],(s=l.lookup(e.id))&&(this.glyphs[r]=this.font.getGlyph(s,e.codePoints))}32768&t.flags&&(this.markedGlyph=r)},e.prototype.processLigature=function(e,t,r){if(32768&t.flags&&this.ligatureStack.push(r),8192&t.flags){for(var a,n=this.subtable.table.ligatureActions,i=this.subtable.table.components,s=this.subtable.table.ligatureList,o=t.action,l=!1,u=0,c=[],h=[];!l;){var f,p=this.ligatureStack.pop();(f=c).unshift.apply(f,this.glyphs[p].codePoints);var d=n.getItem(o++);l=!!(2147483648&d);var y=!!(1073741824&d),g=(1073741823&d)<<2>>2;if(g+=this.glyphs[p].id,u+=i.getItem(g),l||y){var v=s.getItem(u);this.glyphs[p]=this.font.getGlyph(v,c),h.push(p),u=0,c=[]}else this.glyphs[p]=this.font.getGlyph(65535)}(a=this.ligatureStack).push.apply(a,h)}},e.prototype.processNoncontextualSubstitutions=function(e,t,r){var a=new Sn(e.table.lookupTable);for(r=0;r<t.length;r++){var n=t[r];if(65535!==n.id){var i=a.lookup(n.id);i&&(t[r]=this.font.getGlyph(i,n.codePoints))}}},e.prototype._insertGlyphs=function(e,t,r,a){this.glyphs[e].stringIndex;for(var n,i=[];r--;){var s=this.subtable.table.insertionActions.getItem(t++);i.push(this.font.getGlyph(s))}a||e++,(n=this.glyphs).splice.apply(n,[e,0].concat(i))},e.prototype.processGlyphInsertion=function(e,t,r){if(32768&t.flags&&(this.markedIndex=r),65535!==t.markedInsertIndex){var a=(31&t.flags)>>>5,n=!!(1024&t.flags);this._insertGlyphs(this.markedIndex,t.markedInsertIndex,a,n)}if(65535!==t.currentInsertIndex){var i=(992&t.flags)>>>5,s=!!(2048&t.flags);this._insertGlyphs(r,t.currentInsertIndex,i,s)}},e.prototype.getSupportedFeatures=function(){var e=[],t=this.morx.chains,r=Array.isArray(t),a=0;for(t=r?t:t[Symbol.iterator]();;){var n;if(r){if(a>=t.length)break;n=t[a++]}else{if((a=t.next()).done)break;n=a.value}var i=n.features,s=Array.isArray(i),o=0;for(i=s?i:i[Symbol.iterator]();;){var l;if(s){if(o>=i.length)break;l=i[o++]}else{if((o=i.next()).done)break;l=o.value}var u=l;e.push([u.featureType,u.featureSetting])}}return e},e.prototype.generateInputs=function(e){return this.inputCache||this.generateInputCache(),this.inputCache[e]||[]},e.prototype.generateInputCache=function(){this.inputCache={};var e=this.morx.chains,t=Array.isArray(e),r=0;for(e=t?e:e[Symbol.iterator]();;){var a;if(t){if(r>=e.length)break;a=e[r++]}else{if((r=e.next()).done)break;a=r.value}var n=a,i=n.defaultFlags,s=n.subtables,o=Array.isArray(s),l=0;for(s=o?s:s[Symbol.iterator]();;){var u;if(o){if(l>=s.length)break;u=s[l++]}else{if((l=s.next()).done)break;u=l.value}var c=u;c.subFeatureFlags&i&&this.generateInputsForSubtable(c)}}},e.prototype.generateInputsForSubtable=function(e){var t=this;if(2===e.type){if(!!(e.coverage&kn))throw new Error(\"Reverse subtable, not supported.\");this.subtable=e,this.ligatureStack=[];var r=this.getStateMachine(e),a=this.getProcessor(),n=[],i=[];this.glyphs=[],r.traverse({enter:function(e,r){var s=t.glyphs;i.push({glyphs:s.slice(),ligatureStack:t.ligatureStack.slice()});var o=t.font.getGlyph(e);n.push(o),s.push(n[n.length-1]),a(s[s.length-1],r,s.length-1);for(var l=0,u=0,c=0;c<s.length&&l<=1;c++)65535!==s[c].id&&(l++,u=s[c].id);if(1===l){var h=n.map((function(e){return e.id})),f=t.inputCache[u];f?f.push(h):t.inputCache[u]=[h]}},exit:function(){var e=i.pop();t.glyphs=e.glyphs,t.ligatureStack=e.ligatureStack,n.pop()}})}},e}()).prototype,\"getStateMachine\",[w],Object.getOwnPropertyDescriptor(wn.prototype,\"getStateMachine\"),wn.prototype),wn);function xn(e,t,r){var a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],n=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=e.splice(r[0]-(r[1]-1),r[1]);n&&i.reverse();var s=e.splice.apply(e,[t[0],t[1]].concat(i));return a&&s.reverse(),e.splice.apply(e,[r[0]-(t[1]-1),0].concat(s)),e}var An,Pn,In=function(){function e(t){$(this,e),this.font=t,this.morxProcessor=new Cn(t),this.fallbackPosition=!1}return e.prototype.substitute=function(e){\"rtl\"===e.direction&&e.glyphs.reverse(),this.morxProcessor.process(e.glyphs,function(e){var t={};for(var r in e){var a;(a=pn[r])&&(null==t[a[0]]&&(t[a[0]]={}),t[a[0]][a[1]]=e[r])}return t}(e.features))},e.prototype.getAvailableFeatures=function(e,t){return function(e){var t={};if(Array.isArray(e))for(var r=0;r<e.length;r++){var a,n=bn(e[r]);(a=gn[n[0]]&&gn[n[0]][n[1]])&&(t[a]=!0)}else if(\"object\"===(\"undefined\"===typeof e?\"undefined\":Q(e)))for(var i in e){var s=e[i];for(var o in s){var l=void 0,u=bn([i,o]);s[o]&&(l=gn[u[0]]&&gn[u[0]][u[1]])&&(t[l]=!0)}}return Object.keys(t)}(this.morxProcessor.getSupportedFeatures())},e.prototype.stringsForGlyph=function(e){var t=this.morxProcessor.generateInputs(e),r=new Set,a=t,n=Array.isArray(a),i=0;for(a=n?a:a[Symbol.iterator]();;){var s;if(n){if(i>=a.length)break;s=a[i++]}else{if((i=a.next()).done)break;s=i.value}var o=s;this._addStrings(o,0,r,\"\")}return r},e.prototype._addStrings=function(e,t,r,a){var n=this.font._cmapProcessor.codePointsForGlyph(e[t]),i=Array.isArray(n),s=0;for(n=i?n:n[Symbol.iterator]();;){var o;if(i){if(s>=n.length)break;o=n[s++]}else{if((s=n.next()).done)break;o=s.value}var l=o,u=a+String.fromCodePoint(l);t<e.length-1?this._addStrings(e,t+1,r,u):r.add(u)}},e}(),On=function(){function e(t,r,a){$(this,e),this.font=t,this.script=r,this.direction=a,this.stages=[],this.globalFeatures={},this.allFeatures={}}return e.prototype._addFeatures=function(e,t){var r=this.stages.length-1,a=this.stages[r],n=e,i=Array.isArray(n),s=0;for(n=i?n:n[Symbol.iterator]();;){var o;if(i){if(s>=n.length)break;o=n[s++]}else{if((s=n.next()).done)break;o=s.value}var l=o;null==this.allFeatures[l]&&(a.push(l),this.allFeatures[l]=r,t&&(this.globalFeatures[l]=!0))}},e.prototype.add=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(0===this.stages.length&&this.stages.push([]),\"string\"===typeof e&&(e=[e]),Array.isArray(e))this._addFeatures(e,t);else{if(\"object\"!==(\"undefined\"===typeof e?\"undefined\":Q(e)))throw new Error(\"Unsupported argument to ShapingPlan#add\");this._addFeatures(e.global||[],!0),this._addFeatures(e.local||[],!1)}},e.prototype.addStage=function(e,t){\"function\"===typeof e?this.stages.push(e,[]):(this.stages.push([]),this.add(e,t))},e.prototype.setFeatureOverrides=function(e){if(Array.isArray(e))this.add(e);else if(\"object\"===(\"undefined\"===typeof e?\"undefined\":Q(e)))for(var t in e)if(e[t])this.add(t);else if(null!=this.allFeatures[t]){var r=this.stages[this.allFeatures[t]];r.splice(r.indexOf(t),1),delete this.allFeatures[t],delete this.globalFeatures[t]}},e.prototype.assignGlobalFeatures=function(e){var t=e,r=Array.isArray(t),a=0;for(t=r?t:t[Symbol.iterator]();;){var n;if(r){if(a>=t.length)break;n=t[a++]}else{if((a=t.next()).done)break;n=a.value}var i=n;for(var s in this.globalFeatures)i.features[s]=!0}},e.prototype.process=function(e,t,r){var a=this.stages,n=Array.isArray(a),i=0;for(a=n?a:a[Symbol.iterator]();;){var s;if(n){if(i>=a.length)break;s=a[i++]}else{if((i=a.next()).done)break;s=i.value}var o=s;\"function\"===typeof o?r||o(this.font,t,this):o.length>0&&e.applyFeatures(o,t,r)}},e}(),Fn=[\"rvrn\"],Dn=[\"ccmp\",\"locl\",\"rlig\",\"mark\",\"mkmk\"],Tn=[\"frac\",\"numr\",\"dnom\"],Mn=[\"calt\",\"clig\",\"liga\",\"rclt\",\"curs\",\"kern\"],Ln={ltr:[\"ltra\",\"ltrm\"],rtl:[\"rtla\",\"rtlm\"]},Gn=(Pn=An=function(){function e(){$(this,e)}return e.plan=function(e,t,r){this.planPreprocessing(e),this.planFeatures(e),this.planPostprocessing(e,r),e.assignGlobalFeatures(t),this.assignFeatures(e,t)},e.planPreprocessing=function(e){e.add({global:[].concat(Fn,Ln[e.direction]),local:Tn})},e.planFeatures=function(e){},e.planPostprocessing=function(e,t){e.add([].concat(Dn,Mn)),e.setFeatureOverrides(t)},e.assignFeatures=function(e,t){for(var r=0;r<t.length;r++){var a=t[r];if(8260===a.codePoints[0]){for(var n=r,i=r+1;n>0&&u.default.isDigit(t[n-1].codePoints[0]);)t[n-1].features.numr=!0,t[n-1].features.frac=!0,n--;for(;i<t.length&&u.default.isDigit(t[i].codePoints[0]);)t[i].features.dnom=!0,t[i].features.frac=!0,i++;a.features.frac=!0,r=i-1}}},e}(),An.zeroMarkWidths=\"AFTER_GPOS\",Pn),Bn=[0,1,16,0,0,0,0,0,0,0,49,160,1,149,1,106,254,237,216,43,79,3,65,20,5,224,217,7,77,41,138,127,64,37,146,4,131,37,4,143,68,33,193,224,192,129,3,137,196,32,81,4,73,80,72,28,18,137,194,224,144,224,48,156,210,153,228,102,152,217,206,238,206,62,40,231,38,95,102,186,219,121,246,238,35,29,167,74,173,194,26,108,192,88,127,254,43,229,14,236,194,30,236,195,33,28,195,41,156,195,5,92,194,21,92,139,118,183,112,167,63,79,60,136,250,163,168,211,124,123,130,35,237,25,94,224,181,7,243,106,203,155,168,191,247,96,62,68,68,68,68,68,68,68,68,77,153,252,255,243,209,131,121,16,17,17,17,17,205,179,124,113,234,108,216,140,45,244,125,2,247,240,9,235,35,165,14,70,211,115,55,40,183,149,82,155,195,230,214,247,5,89,246,251,248,18,142,45,59,142,119,101,37,77,126,48,24,255,57,18,15,121,222,85,143,21,185,238,55,179,228,142,210,230,106,83,150,108,215,167,144,115,146,107,180,247,42,100,125,49,84,217,219,54,100,86,61,100,29,174,188,50,231,149,40,125,17,227,58,144,227,133,132,92,179,60,86,55,22,28,253,15,180,162,223,63,52,39,50,209,167,221,110,16,97,254,170,196,92,92,121,82,55,247,138,246,198,117,126,214,184,161,209,245,117,87,55,247,124,237,103,221,235,203,228,158,252,174,235,217,230,155,87,217,28,50,247,100,223,111,92,37,18,171,173,221,79,172,103,113,215,57,226,123,255,48,235,111,43,143,235,230,115,209,250,154,232,219,247,190,22,59,98,237,113,90,113,158,190,107,47,177,74,83,79,244,88,33,239,48,105,65,255,174,241,204,88,161,115,45,243,124,47,234,211,126,158,184,230,103,215,237,251,101,157,240,237,99,19,121,247,13],En=new h.a(new Uint8Array(Bn)),zn=[\"isol\",\"fina\",\"fin2\",\"fin3\",\"medi\",\"med2\",\"init\"],Rn=0,Vn=6,Un=\"isol\",Nn=\"fina\",qn=\"fin2\",jn=\"medi\",Hn=\"med2\",Yn=\"init\",Wn=null,Kn=[[[Wn,Wn,0],[Wn,Un,2],[Wn,Un,1],[Wn,Un,2],[Wn,Un,1],[Wn,Un,6]],[[Wn,Wn,0],[Wn,Un,2],[Wn,Un,1],[Wn,Un,2],[Wn,qn,5],[Wn,Un,6]],[[Wn,Wn,0],[Wn,Un,2],[Yn,Nn,1],[Yn,Nn,3],[Yn,Nn,4],[Yn,Nn,6]],[[Wn,Wn,0],[Wn,Un,2],[jn,Nn,1],[jn,Nn,3],[jn,Nn,4],[jn,Nn,6]],[[Wn,Wn,0],[Wn,Un,2],[Hn,Un,1],[Hn,Un,2],[Hn,qn,5],[Hn,Un,6]],[[Wn,Wn,0],[Wn,Un,2],[Un,Un,1],[Un,Un,2],[Un,qn,5],[Un,Un,6]],[[Wn,Wn,0],[Wn,Un,2],[Wn,Un,1],[Wn,Un,2],[Wn,\"fin3\",5],[Wn,Un,6]]],Xn=function(e){function t(){return $(this,t),re(this,e.apply(this,arguments))}return te(t,e),t.planFeatures=function(e){e.add([\"ccmp\",\"locl\"]);for(var t=0;t<zn.length;t++){var r=zn[t];e.addStage(r,!1)}e.addStage(\"mset\")},t.assignFeatures=function(t,r){e.assignFeatures.call(this,t,r);for(var a=-1,n=0,i=[],s=0;s<r.length;s++){var o,l,u=Jn((p=r[s]).codePoints[0]);if(u!==Vn){var c=Kn[n][u];l=c[0],o=c[1],n=c[2],l!==Wn&&-1!==a&&(i[a]=l),i[s]=o,a=s}else i[s]=Wn}for(var h=0;h<r.length;h++){var f,p=r[h];(f=i[h])&&(p.features[f]=!0)}},t}(Gn);function Jn(e){var t=En.get(e);if(t)return t-1;var r=u.default.getCategory(e);return\"Mn\"===r||\"Me\"===r||\"Cf\"===r?Vn:Rn}var Zn,Qn,$n=function(){function e(t,r){$(this,e),this.glyphs=t,this.reset(r)}return e.prototype.reset=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this.options=e,this.flags=e.flags||{},this.markAttachmentType=e.markAttachmentType||0,this.index=t},e.prototype.shouldIgnore=function(e){return this.flags.ignoreMarks&&e.isMark||this.flags.ignoreBaseGlyphs&&e.isBase||this.flags.ignoreLigatures&&e.isLigature||this.markAttachmentType&&e.isMark&&e.markAttachmentType!==this.markAttachmentType},e.prototype.move=function(e){for(this.index+=e;0<=this.index&&this.index<this.glyphs.length&&this.shouldIgnore(this.glyphs[this.index]);)this.index+=e;return 0>this.index||this.index>=this.glyphs.length?null:this.glyphs[this.index]},e.prototype.next=function(){return this.move(1)},e.prototype.prev=function(){return this.move(-1)},e.prototype.peek=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=this.index,r=this.increment(e);return this.index=t,r},e.prototype.peekIndex=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=this.index;this.increment(e);var r=this.index;return this.index=t,r},e.prototype.increment=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=e<0?-1:1;for(e=Math.abs(e);e--;)this.move(t);return this.glyphs[this.index]},ee(e,[{key:\"cur\",get:function(){return this.glyphs[this.index]||null}}]),e}(),ei=[\"DFLT\",\"dflt\",\"latn\"],ti=function(){function e(t,r){$(this,e),this.font=t,this.table=r,this.script=null,this.scriptTag=null,this.language=null,this.languageTag=null,this.features={},this.lookups={},this.variationsIndex=t._variationProcessor?this.findVariationsIndex(t._variationProcessor.normalizedCoords):-1,this.selectScript(),this.glyphs=[],this.positions=[],this.ligatureID=1,this.currentFeature=null}return e.prototype.findScript=function(e){if(null==this.table.scriptList)return null;Array.isArray(e)||(e=[e]);var t=e,r=Array.isArray(t),a=0;for(t=r?t:t[Symbol.iterator]();;){var n;if(r){if(a>=t.length)break;n=t[a++]}else{if((a=t.next()).done)break;n=a.value}var i=n,s=this.table.scriptList,o=Array.isArray(s),l=0;for(s=o?s:s[Symbol.iterator]();;){var u;if(o){if(l>=s.length)break;u=s[l++]}else{if((l=s.next()).done)break;u=l.value}var c=u;if(c.tag===i)return c}}return null},e.prototype.selectScript=function(e,t,r){var a=!1,n=void 0;if(!this.script||e!==this.scriptTag){if((n=this.findScript(e))||(n=this.findScript(ei)),!n)return this.scriptTag;this.scriptTag=n.tag,this.script=n.script,this.language=null,this.languageTag=null,a=!0}if(r&&r===this.direction||(this.direction=r||ln(e)),t&&t.length<4&&(t+=\" \".repeat(4-t.length)),!t||t!==this.languageTag){this.language=null;var i=this.script.langSysRecords,s=Array.isArray(i),o=0;for(i=s?i:i[Symbol.iterator]();;){var l;if(s){if(o>=i.length)break;l=i[o++]}else{if((o=i.next()).done)break;l=o.value}var u=l;if(u.tag===t){this.language=u.langSys,this.languageTag=u.tag;break}}this.language||(this.language=this.script.defaultLangSys,this.languageTag=null),a=!0}if(a&&(this.features={},this.language)){var c=this.language.featureIndexes,h=Array.isArray(c),f=0;for(c=h?c:c[Symbol.iterator]();;){var p;if(h){if(f>=c.length)break;p=c[f++]}else{if((f=c.next()).done)break;p=f.value}var d=p,y=this.table.featureList[d],g=this.substituteFeatureForVariations(d);this.features[y.tag]=g||y.feature}}return this.scriptTag},e.prototype.lookupsForFeatures=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments[1],r=[],a=e,n=Array.isArray(a),i=0;for(a=n?a:a[Symbol.iterator]();;){var s;if(n){if(i>=a.length)break;s=a[i++]}else{if((i=a.next()).done)break;s=i.value}var o=s,l=this.features[o];if(l){var u=l.lookupListIndexes,c=Array.isArray(u),h=0;for(u=c?u:u[Symbol.iterator]();;){var f;if(c){if(h>=u.length)break;f=u[h++]}else{if((h=u.next()).done)break;f=h.value}var p=f;t&&-1!==t.indexOf(p)||r.push({feature:o,index:p,lookup:this.table.lookupList.get(p)})}}}return r.sort((function(e,t){return e.index-t.index})),r},e.prototype.substituteFeatureForVariations=function(e){if(-1===this.variationsIndex)return null;var t=this.table.featureVariations.featureVariationRecords[this.variationsIndex].featureTableSubstitution.substitutions,r=Array.isArray(t),a=0;for(t=r?t:t[Symbol.iterator]();;){var n;if(r){if(a>=t.length)break;n=t[a++]}else{if((a=t.next()).done)break;n=a.value}var i=n;if(i.featureIndex===e)return i.alternateFeatureTable}return null},e.prototype.findVariationsIndex=function(e){var t=this.table.featureVariations;if(!t)return-1;for(var r=t.featureVariationRecords,a=0;a<r.length;a++){var n=r[a].conditionSet.conditionTable;if(this.variationConditionsMatch(n,e))return a}return-1},e.prototype.variationConditionsMatch=function(e,t){return e.every((function(e){var r=e.axisIndex<t.length?t[e.axisIndex]:0;return e.filterRangeMinValue<=r&&r<=e.filterRangeMaxValue}))},e.prototype.applyFeatures=function(e,t,r){var a=this.lookupsForFeatures(e);this.applyLookups(a,t,r)},e.prototype.applyLookups=function(e,t,r){this.glyphs=t,this.positions=r,this.glyphIterator=new $n(t);var a=e,n=Array.isArray(a),i=0;for(a=n?a:a[Symbol.iterator]();;){var s;if(n){if(i>=a.length)break;s=a[i++]}else{if((i=a.next()).done)break;s=i.value}var o=s,l=o.feature,u=o.lookup;for(this.currentFeature=l,this.glyphIterator.reset(u.flags);this.glyphIterator.index<t.length;)if(l in this.glyphIterator.cur.features){var c=u.subTables,h=Array.isArray(c),f=0;for(c=h?c:c[Symbol.iterator]();;){var p;if(h){if(f>=c.length)break;p=c[f++]}else{if((f=c.next()).done)break;p=f.value}var d=p;if(this.applyLookup(u.lookupType,d))break}this.glyphIterator.next()}else this.glyphIterator.next()}},e.prototype.applyLookup=function(e,t){throw new Error(\"applyLookup must be implemented by subclasses\")},e.prototype.applyLookupList=function(e){var t=this.glyphIterator.options,r=this.glyphIterator.index,a=e,n=Array.isArray(a),i=0;for(a=n?a:a[Symbol.iterator]();;){var s;if(n){if(i>=a.length)break;s=a[i++]}else{if((i=a.next()).done)break;s=i.value}var o=s;this.glyphIterator.reset(t,r),this.glyphIterator.increment(o.sequenceIndex);var l=this.table.lookupList.get(o.lookupListIndex);this.glyphIterator.reset(l.flags,this.glyphIterator.index);var u=l.subTables,c=Array.isArray(u),h=0;for(u=c?u:u[Symbol.iterator]();;){var f;if(c){if(h>=u.length)break;f=u[h++]}else{if((h=u.next()).done)break;f=h.value}var p=f;if(this.applyLookup(l.lookupType,p))break}}return this.glyphIterator.reset(t,r),!0},e.prototype.coverageIndex=function(e,t){switch(null==t&&(t=this.glyphIterator.cur.id),e.version){case 1:return e.glyphs.indexOf(t);case 2:var r=e.rangeRecords,a=Array.isArray(r),n=0;for(r=a?r:r[Symbol.iterator]();;){var i;if(a){if(n>=r.length)break;i=r[n++]}else{if((n=r.next()).done)break;i=n.value}var s=i;if(s.start<=t&&t<=s.end)return s.startCoverageIndex+t-s.start}}return-1},e.prototype.match=function(e,t,r,a){for(var n=this.glyphIterator.index,i=this.glyphIterator.increment(e),s=0;s<t.length&&i&&r(t[s],i);)a&&a.push(this.glyphIterator.index),s++,i=this.glyphIterator.next();return this.glyphIterator.index=n,!(s<t.length)&&(a||!0)},e.prototype.sequenceMatches=function(e,t){return this.match(e,t,(function(e,t){return e===t.id}))},e.prototype.sequenceMatchIndices=function(e,t){var r=this;return this.match(e,t,(function(e,t){return r.currentFeature in t.features&&e===t.id}),[])},e.prototype.coverageSequenceMatches=function(e,t){var r=this;return this.match(e,t,(function(e,t){return r.coverageIndex(e,t.id)>=0}))},e.prototype.getClassID=function(e,t){switch(t.version){case 1:var r=e-t.startGlyph;if(r>=0&&r<t.classValueArray.length)return t.classValueArray[r];break;case 2:var a=t.classRangeRecord,n=Array.isArray(a),i=0;for(a=n?a:a[Symbol.iterator]();;){var s;if(n){if(i>=a.length)break;s=a[i++]}else{if((i=a.next()).done)break;s=i.value}var o=s;if(o.start<=e&&e<=o.end)return o.class}}return 0},e.prototype.classSequenceMatches=function(e,t,r){var a=this;return this.match(e,t,(function(e,t){return e===a.getClassID(t.id,r)}))},e.prototype.applyContext=function(e){switch(e.version){case 1:var t=this.coverageIndex(e.coverage);if(-1===t)return!1;var r=e.ruleSets[t],a=r,n=Array.isArray(a),i=0;for(a=n?a:a[Symbol.iterator]();;){var s;if(n){if(i>=a.length)break;s=a[i++]}else{if((i=a.next()).done)break;s=i.value}var o=s;if(this.sequenceMatches(1,o.input))return this.applyLookupList(o.lookupRecords)}break;case 2:if(-1===this.coverageIndex(e.coverage))return!1;if(-1===(t=this.getClassID(this.glyphIterator.cur.id,e.classDef)))return!1;var l=r=e.classSet[t],u=Array.isArray(l),c=0;for(l=u?l:l[Symbol.iterator]();;){var h;if(u){if(c>=l.length)break;h=l[c++]}else{if((c=l.next()).done)break;h=c.value}var f=h;if(this.classSequenceMatches(1,f.classes,e.classDef))return this.applyLookupList(f.lookupRecords)}break;case 3:if(this.coverageSequenceMatches(0,e.coverages))return this.applyLookupList(e.lookupRecords)}return!1},e.prototype.applyChainingContext=function(e){switch(e.version){case 1:var t=this.coverageIndex(e.coverage);if(-1===t)return!1;var r=e.chainRuleSets[t],a=Array.isArray(r),n=0;for(r=a?r:r[Symbol.iterator]();;){var i;if(a){if(n>=r.length)break;i=r[n++]}else{if((n=r.next()).done)break;i=n.value}var s=i;if(this.sequenceMatches(-s.backtrack.length,s.backtrack)&&this.sequenceMatches(1,s.input)&&this.sequenceMatches(1+s.input.length,s.lookahead))return this.applyLookupList(s.lookupRecords)}break;case 2:if(-1===this.coverageIndex(e.coverage))return!1;t=this.getClassID(this.glyphIterator.cur.id,e.inputClassDef);var o=e.chainClassSet[t];if(!o)return!1;var l=o,u=Array.isArray(l),c=0;for(l=u?l:l[Symbol.iterator]();;){var h;if(u){if(c>=l.length)break;h=l[c++]}else{if((c=l.next()).done)break;h=c.value}var f=h;if(this.classSequenceMatches(-f.backtrack.length,f.backtrack,e.backtrackClassDef)&&this.classSequenceMatches(1,f.input,e.inputClassDef)&&this.classSequenceMatches(1+f.input.length,f.lookahead,e.lookaheadClassDef))return this.applyLookupList(f.lookupRecords)}break;case 3:if(this.coverageSequenceMatches(-e.backtrackGlyphCount,e.backtrackCoverage)&&this.coverageSequenceMatches(0,e.inputCoverage)&&this.coverageSequenceMatches(e.inputGlyphCount,e.lookaheadCoverage))return this.applyLookupList(e.lookupRecords)}return!1},e}(),ri=function(){function e(t,r){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],n=arguments[3],i=arguments[4];if($(this,e),this._font=t,this.codePoints=a,this.stringIndex=i,this.id=r,this.features={},Array.isArray(n))for(var s=0;s<n.length;s++){var o=n[s];this.features[o]=!0}else\"object\"===(\"undefined\"===typeof n?\"undefined\":Q(n))&&Object.assign(this.features,n);this.ligatureID=null,this.ligatureComponent=null,this.isLigated=!1,this.cursiveAttachment=null,this.markAttachment=null,this.shaperInfo=null,this.substituted=!1,this.isMultiplied=!1}return e.prototype.copy=function(){return new e(this._font,this.id,this.codePoints,this.features,this.stringIndex)},ee(e,[{key:\"id\",get:function(){return this._id},set:function(e){this._id=e,this.substituted=!0;var t=this._font.GDEF;if(t&&t.glyphClassDef){var r=ti.prototype.getClassID(e,t.glyphClassDef);this.isBase=1===r,this.isLigature=2===r,this.isMark=3===r,this.markAttachmentType=t.markAttachClassDef?ti.prototype.getClassID(e,t.markAttachClassDef):0}else this.isMark=this.codePoints.length>0&&this.codePoints.every(u.default.isMark),this.isBase=!this.isMark,this.isLigature=this.codePoints.length>1,this.markAttachmentType=0}},{key:\"advanceWidth\",get:function(){return this._font.getGlyph(this.id,this.codePoints).advanceWidth}}]),e}(),ai=(Qn=Zn=function(e){function t(){return $(this,t),re(this,e.apply(this,arguments))}return te(t,e),t.planFeatures=function(e){e.add([\"ljmo\",\"vjmo\",\"tjmo\"],!1)},t.assignFeatures=function(e,t){for(var r=0,a=0;a<t.length;){var n,i=t[a].codePoints[0],s=li(i),o=pi[r][s];switch(n=o[0],r=o[1],n){case ui:e.font.hasGlyphForCodePoint(i)||(a=yi(t,a,e.font));break;case ci:a=gi(t,a,e.font);break;case hi:vi(t,a,e.font);break;case fi:a=mi(t,a,e.font)}a++}},t}(Gn),Zn.zeroMarkWidths=\"NONE\",Qn),ni=44032,ii=4352,si=4449,oi=4519;function li(e){return function(e){return 4352<=e&&e<=4447||43360<=e&&e<=43388}(e)?1:function(e){return 4448<=e&&e<=4519||55216<=e&&e<=55238}(e)?2:function(e){return 4520<=e&&e<=4607||55243<=e&&e<=55291}(e)?3:function(e){return e-ni<11173&&(e-ni)%28===0}(e)?4:function(e){return ni<=e&&e<=55204}(e)?5:function(e){return 12334<=e&&e<=12335}(e)?6:0}var ui=1,ci=2,hi=4,fi=5,pi=[[[0,0],[0,1],[0,0],[0,0],[ui,2],[ui,3],[fi,0]],[[0,0],[0,1],[ci,2],[0,0],[ui,2],[ui,3],[fi,0]],[[0,0],[0,1],[0,0],[ci,3],[ui,2],[ui,3],[hi,0]],[[0,0],[0,1],[0,0],[0,0],[ui,2],[ui,3],[hi,0]]];function di(e,t,r){return new ri(e,e.glyphForCodePoint(t).id,[t],r)}function yi(e,t,r){var a=e[t],n=a.codePoints[0]-ni,i=oi+n%28,s=ii+(n=n/28|0)/21|0,o=si+n%21;if(!r.hasGlyphForCodePoint(s)||!r.hasGlyphForCodePoint(o)||i!==oi&&!r.hasGlyphForCodePoint(i))return t;var l=di(r,s,a.features);l.features.ljmo=!0;var u=di(r,o,a.features);u.features.vjmo=!0;var c=[l,u];if(i>oi){var h=di(r,i,a.features);h.features.tjmo=!0,c.push(h)}return e.splice.apply(e,[t,1].concat(c)),t+c.length-1}function gi(e,t,r){var a=e[t],n=li(e[t].codePoints[0]),i=e[t-1].codePoints[0],s=li(i),o=void 0,l=void 0,u=void 0,c=void 0;if(4===s&&3===n)o=i,c=a;else{2===n?(l=e[t-1],u=a):(l=e[t-2],u=e[t-1],c=a);var h=l.codePoints[0],f=u.codePoints[0];(function(e){return ii<=e&&e<=4370})(h)&&function(e){return si<=e&&e<=4469}(f)&&(o=ni+28*(21*(h-ii)+(f-si)))}var p=c&&c.codePoints[0]||oi;if(null!=o&&(p===oi||function(e){return 1<=e&&e<=4546}(p))){var d=o+(p-oi);if(r.hasGlyphForCodePoint(d)){var y=2===s?3:2;return e.splice(t-y+1,y,di(r,d,a.features)),t-y+1}}return l&&(l.features.ljmo=!0),u&&(u.features.vjmo=!0),c&&(c.features.tjmo=!0),4===s?(yi(e,t-1,r),t+1):t}function vi(e,t,r){var a=e[t],n=e[t].codePoints[0];if(0!==r.glyphForCodePoint(n).advanceWidth){var i=function(e){switch(li(e)){case 4:case 5:return 1;case 2:return 2;case 3:return 3}}(e[t-1].codePoints[0]);return e.splice(t,1),e.splice(t-i,0,a)}}function mi(e,t,r){var a=e[t],n=e[t].codePoints[0];if(r.hasGlyphForCodePoint(9676)){var i=di(r,9676,a.features),s=0===r.glyphForCodePoint(n).advanceWidth?t:t+1;e.splice(s,0,i),t++}return t}var bi,wi,Si={stateTable:[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],accepting:[!1,!0,!0,!0,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!0,!0,!1,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!1,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!0,!0,!0,!1,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!1,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!0,!1,!1,!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!1,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!1,!0,!1,!0,!0,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!1,!0,!1,!0,!0,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!1,!0,!0,!0,!0,!1,!1,!1,!0,!1,!0,!0,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!1,!0,!0,!0,!0,!1,!1,!1,!1,!1,!1,!1,!0,!0,!1,!1,!0,!0,!1,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!1,!0,!0,!1,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!0,!1,!0,!0,!0,!0,!1,!1,!1,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!0,!0],tags:[[],[\"broken_cluster\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"symbol_cluster\"],[],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"standalone_cluster\"]]},_i={categories:[\"O\",\"IND\",\"S\",\"GB\",\"B\",\"FM\",\"CGJ\",\"VMAbv\",\"VMPst\",\"VAbv\",\"VPst\",\"CMBlw\",\"VPre\",\"VBlw\",\"H\",\"VMBlw\",\"CMAbv\",\"MBlw\",\"CS\",\"R\",\"SUB\",\"MPst\",\"MPre\",\"FAbv\",\"FPst\",\"FBlw\",\"SMAbv\",\"SMBlw\",\"VMPre\",\"ZWNJ\",\"ZWJ\",\"WJ\",\"VS\",\"N\",\"HN\",\"MAbv\"],decompositions:{2507:[2503,2494],2508:[2503,2519],2888:[2887,2902],2891:[2887,2878],2892:[2887,2903],3018:[3014,3006],3019:[3015,3006],3020:[3014,3031],3144:[3142,3158],3264:[3263,3285],3271:[3270,3285],3272:[3270,3286],3274:[3270,3266],3275:[3270,3266,3285],3402:[3398,3390],3403:[3399,3390],3404:[3398,3415],3546:[3545,3530],3548:[3545,3535],3549:[3545,3535,3530],3550:[3545,3551],3635:[3661,3634],3763:[3789,3762],3955:[3953,3954],3957:[3953,3956],3958:[4018,3968],3959:[4018,3953,3968],3960:[4019,3968],3961:[4019,3953,3968],3969:[3953,3968],6971:[6970,6965],6973:[6972,6965],6976:[6974,6965],6977:[6975,6965],6979:[6978,6965],69934:[69937,69927],69935:[69938,69927],70475:[70471,70462],70476:[70471,70487],70843:[70841,70842],70844:[70841,70832],70846:[70841,70845],71098:[71096,71087],71099:[71097,71087]},stateTable:[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,23,0,0,2,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],accepting:[!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0],tags:[[],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"virama_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"number_joiner_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"numeral_cluster\"]]},ki=1,Ci=8,xi=16,Ai=32,Pi=64,Ii=128,Oi=8192,Fi=32768,Di=65536,Ti=1<<17,Mi={Start:1,Ra_To_Become_Reph:2,Pre_M:4,Pre_C:8,Base_C:16,After_Main:32,Above_C:64,Before_Sub:128,Below_C:256,After_Sub:512,Before_Post:1024,Post_C:2048,After_Post:4096,Final_C:8192,SMVD:16384,End:32768},Li=2|Di|Ti|4|2048|4096,Gi=Pi|Ai,Bi=xi|16384,Ei={Default:{hasOldSpec:!1,virama:0,basePos:\"Last\",rephPos:Mi.Before_Post,rephMode:\"Implicit\",blwfMode:\"Pre_And_Post\"},Devanagari:{hasOldSpec:!0,virama:2381,basePos:\"Last\",rephPos:Mi.Before_Post,rephMode:\"Implicit\",blwfMode:\"Pre_And_Post\"},Bengali:{hasOldSpec:!0,virama:2509,basePos:\"Last\",rephPos:Mi.After_Sub,rephMode:\"Implicit\",blwfMode:\"Pre_And_Post\"},Gurmukhi:{hasOldSpec:!0,virama:2637,basePos:\"Last\",rephPos:Mi.Before_Sub,rephMode:\"Implicit\",blwfMode:\"Pre_And_Post\"},Gujarati:{hasOldSpec:!0,virama:2765,basePos:\"Last\",rephPos:Mi.Before_Post,rephMode:\"Implicit\",blwfMode:\"Pre_And_Post\"},Oriya:{hasOldSpec:!0,virama:2893,basePos:\"Last\",rephPos:Mi.After_Main,rephMode:\"Implicit\",blwfMode:\"Pre_And_Post\"},Tamil:{hasOldSpec:!0,virama:3021,basePos:\"Last\",rephPos:Mi.After_Post,rephMode:\"Implicit\",blwfMode:\"Pre_And_Post\"},Telugu:{hasOldSpec:!0,virama:3149,basePos:\"Last\",rephPos:Mi.After_Post,rephMode:\"Explicit\",blwfMode:\"Post_Only\"},Kannada:{hasOldSpec:!0,virama:3277,basePos:\"Last\",rephPos:Mi.After_Post,rephMode:\"Implicit\",blwfMode:\"Post_Only\"},Malayalam:{hasOldSpec:!0,virama:3405,basePos:\"Last\",rephPos:Mi.After_Main,rephMode:\"Log_Repha\",blwfMode:\"Pre_And_Post\"},Khmer:{hasOldSpec:!1,virama:6098,basePos:\"First\",rephPos:Mi.Ra_To_Become_Reph,rephMode:\"Vis_Repha\",blwfMode:\"Pre_And_Post\"}},zi={6078:[6081,6078],6079:[6081,6079],6080:[6081,6080],6084:[6081,6084],6085:[6081,6085]},Ri=[0,17,0,0,0,0,0,0,0,0,194,160,1,177,13,78,242,237,157,127,172,29,69,21,199,247,245,222,119,127,188,119,251,110,95,133,68,98,251,71,67,137,49,197,152,166,16,107,138,105,21,9,34,81,219,24,132,104,177,6,67,176,36,4,106,48,109,132,82,130,63,10,216,31,198,146,148,88,19,172,37,65,44,137,40,38,160,173,41,70,146,106,172,169,70,76,99,180,182,9,105,32,169,5,98,65,41,45,224,119,238,206,188,123,238,220,153,217,249,181,187,239,209,61,201,39,187,59,59,59,115,230,156,51,179,179,179,123,223,59,94,75,146,151,192,171,224,13,48,167,158,36,239,5,243,193,37,224,21,164,253,175,22,190,189,24,101,45,2,75,192,50,135,114,175,64,222,79,128,107,192,42,112,61,88,3,110,6,183,129,175,131,141,134,242,150,226,220,10,240,77,240,93,176,25,108,7,59,193,35,224,56,242,60,134,237,207,64,194,121,154,111,15,128,131,224,79,224,111,224,40,56,1,78,130,211,224,44,168,141,38,73,27,76,130,139,192,2,240,126,240,33,240,97,176,28,92,5,62,13,174,3,55,130,155,193,109,224,78,112,55,184,15,60,8,190,15,126,0,126,4,126,2,158,228,199,207,128,103,193,239,193,159,193,17,112,12,188,8,94,1,175,129,115,163,169,206,245,70,146,116,192,5,141,244,120,30,182,11,193,165,96,49,88,10,150,131,171,249,249,207,98,123,61,88,3,110,1,183,55,82,155,172,231,91,91,54,242,252,223,198,246,46,176,149,31,63,192,183,155,80,215,14,150,94,239,95,179,203,177,14,27,118,144,50,247,96,127,47,120,10,236,3,191,3,127,4,127,5,255,0,47,128,147,36,255,155,124,123,154,167,109,99,62,198,126,173,153,36,227,224,61,205,212,94,239,195,246,226,102,154,103,17,79,91,130,237,50,112,101,51,141,39,17,75,215,226,120,37,184,1,172,1,183,128,219,249,53,235,249,118,19,182,155,121,121,226,186,173,56,222,209,52,183,117,87,198,121,106,227,31,35,239,22,110,251,245,216,254,20,199,191,0,191,38,101,252,22,251,127,0,247,224,124,7,252,69,81,254,223,45,234,180,101,173,136,5,148,121,204,177,220,151,34,234,81,20,255,134,206,255,1,111,128,164,149,36,163,173,52,125,111,61,181,185,156,127,54,63,47,250,226,5,56,158,7,22,114,104,222,69,173,52,110,150,144,244,179,6,93,88,108,47,35,121,87,241,250,175,145,244,248,56,242,92,77,242,49,93,133,223,62,211,82,235,45,48,157,171,168,168,240,99,91,213,175,42,42,42,42,42,42,42,42,42,28,217,198,215,25,202,214,67,102,39,127,214,189,174,101,127,205,91,154,244,55,53,233,95,224,207,202,95,198,246,171,224,14,176,1,220,11,238,7,91,193,67,224,135,224,81,240,4,120,170,149,174,45,237,195,246,0,56,8,14,131,35,224,40,56,1,78,181,210,245,156,215,177,125,139,61,223,183,241,12,15,46,108,167,245,206,107,247,117,88,136,253,75,219,246,109,172,168,168,168,168,8,135,173,91,94,134,177,247,76,173,191,222,94,22,101,219,162,162,162,34,14,175,145,119,82,91,121,255,94,134,113,230,74,112,173,52,215,251,156,227,220,175,195,199,138,83,188,142,183,193,23,219,253,247,169,95,193,254,173,82,153,119,180,251,239,117,40,236,189,204,6,156,187,119,26,204,63,147,57,41,43,192,157,96,127,55,155,45,200,119,72,147,247,85,164,47,156,76,146,213,224,33,240,252,228,224,249,227,56,223,153,139,185,56,88,13,238,29,75,146,103,65,50,14,95,129,187,192,10,28,239,227,219,163,124,75,153,223,25,78,147,185,17,121,54,146,124,191,193,254,57,126,124,197,236,36,185,27,236,7,15,143,196,229,28,47,243,178,9,216,115,34,221,223,52,161,214,241,128,38,189,162,162,162,162,34,127,222,41,121,12,142,125,255,113,97,121,183,252,250,203,126,254,43,155,171,192,253,152,7,126,175,61,252,60,202,190,243,121,24,233,187,200,60,113,55,246,31,111,167,243,209,45,138,242,196,247,119,236,219,177,51,252,26,246,188,205,190,169,99,229,253,156,151,245,43,69,125,12,86,230,254,246,224,243,241,205,124,251,92,123,184,62,155,57,38,251,102,138,173,119,179,57,179,124,253,33,148,121,24,28,105,247,231,198,199,120,61,47,98,251,50,248,175,164,207,219,237,254,60,188,129,62,52,27,92,56,70,230,180,60,223,124,158,118,134,127,247,181,27,233,151,32,237,131,99,195,250,95,62,214,63,62,202,203,254,232,152,157,15,5,247,248,248,31,117,124,10,172,2,159,7,95,2,55,129,29,56,183,22,219,117,96,195,88,58,79,254,14,216,198,206,129,93,96,15,216,11,158,36,122,62,51,150,206,167,15,130,195,224,8,56,10,78,128,83,22,237,121,29,121,206,128,145,113,245,249,7,224,203,54,206,77,142,247,143,47,194,254,2,126,252,32,142,63,128,253,197,252,248,35,216,126,76,83,22,181,255,82,69,108,217,194,174,223,211,40,191,47,219,232,89,36,91,13,245,127,114,92,127,221,59,138,126,58,19,219,175,226,95,205,119,81,28,120,182,37,70,221,172,191,177,241,110,37,233,219,236,158,116,3,137,171,213,216,191,9,156,203,41,158,178,218,183,174,158,234,120,171,52,254,124,205,48,30,157,15,80,63,126,3,182,216,52,158,95,159,119,141,63,241,109,229,183,52,249,46,39,247,249,117,26,63,138,243,108,222,177,221,112,126,61,223,103,191,97,217,140,178,86,242,227,237,216,223,9,30,49,140,145,50,187,45,126,75,241,114,14,223,204,63,10,29,159,152,65,241,172,107,199,47,103,72,27,88,140,236,135,174,207,129,67,224,121,240,79,174,251,11,22,109,96,109,165,191,225,96,191,17,184,15,233,39,199,211,216,103,223,95,236,37,249,214,146,107,79,35,207,217,241,52,109,164,227,222,183,92,17,191,101,88,105,81,46,123,222,104,119,6,211,232,239,31,196,111,186,68,219,39,121,94,246,108,177,143,204,253,22,75,115,212,139,120,59,31,15,152,31,78,39,98,247,255,233,194,188,214,187,187,125,148,167,13,237,220,114,158,216,64,135,203,220,42,180,46,213,250,199,76,98,129,52,94,186,216,167,232,57,117,53,22,198,133,197,238,177,218,72,194,150,64,103,26,245,241,193,125,27,202,214,121,186,114,190,75,217,246,143,22,155,77,206,76,208,117,26,35,36,235,124,86,190,46,57,159,149,207,87,207,178,109,53,211,218,225,226,179,233,96,15,149,190,101,235,23,203,7,58,41,91,23,31,157,203,210,127,186,199,68,153,54,41,35,118,108,164,108,189,203,182,81,153,177,84,134,253,169,222,121,213,239,43,101,196,196,68,107,144,250,172,8,140,68,100,142,93,190,118,51,165,133,103,233,137,185,233,254,172,102,63,221,133,86,189,127,109,207,70,99,28,110,35,154,55,83,55,110,147,54,41,143,225,250,156,236,107,107,217,199,137,169,44,142,16,221,177,171,15,123,215,26,252,43,206,83,81,149,193,68,248,183,195,253,219,81,248,79,200,44,158,71,72,135,231,103,254,149,235,83,73,167,57,156,54,212,38,201,191,83,249,44,253,43,226,59,100,108,177,245,239,80,91,10,246,175,156,87,222,103,194,252,43,108,47,252,43,144,69,78,167,254,165,146,53,38,235,218,99,188,198,210,191,83,227,42,233,143,245,201,12,133,36,113,237,191,194,167,218,227,130,252,107,219,127,101,68,63,18,125,74,248,88,229,223,144,251,45,181,137,28,75,174,227,179,177,142,140,88,106,206,144,241,217,213,191,163,22,227,243,168,69,255,85,201,168,102,76,136,61,62,119,147,126,191,13,153,235,49,223,138,252,54,227,179,169,47,235,238,149,98,95,78,83,229,147,211,180,233,150,243,47,89,104,95,86,141,223,226,222,60,75,234,219,140,134,101,255,86,249,95,39,121,188,151,80,137,60,159,238,213,29,50,86,231,208,159,93,253,201,250,115,179,57,12,237,83,52,93,62,110,100,244,103,122,157,41,166,168,93,232,53,46,254,205,18,27,159,207,36,255,234,242,10,17,227,181,141,127,233,177,216,183,241,175,60,246,170,100,74,215,8,254,237,118,83,124,196,213,23,190,253,139,250,64,220,47,117,48,201,26,47,109,218,155,53,94,210,152,12,157,15,153,198,74,113,79,53,218,196,113,190,107,59,39,142,230,103,151,62,73,98,67,228,179,209,131,138,170,143,233,214,47,196,57,177,21,107,25,170,245,16,109,44,56,142,167,116,125,195,85,98,251,194,151,174,193,166,58,59,83,97,215,211,126,58,171,57,184,142,196,182,141,218,32,44,77,172,41,249,172,11,153,236,41,246,109,210,109,125,147,229,47,249,60,45,223,164,139,171,253,19,158,151,61,75,211,231,105,149,253,133,111,152,200,246,103,63,19,18,227,76,79,23,199,184,87,197,80,158,180,56,186,243,214,235,78,14,113,70,227,183,203,109,40,215,203,76,82,203,136,13,235,113,50,194,88,76,197,103,13,152,174,245,178,251,51,139,147,134,78,247,73,123,122,237,119,200,159,7,162,63,152,160,107,213,170,123,185,79,236,170,164,236,49,191,135,229,252,65,23,43,170,251,42,139,157,222,220,154,61,247,79,12,142,85,83,176,186,61,231,85,116,109,66,213,6,89,31,99,204,142,164,121,198,107,41,34,143,184,86,164,83,104,89,153,117,217,48,57,108,75,85,189,140,22,175,191,167,135,165,253,196,181,242,123,152,172,24,87,73,87,218,15,69,85,142,77,249,73,224,245,161,245,231,221,62,159,114,139,128,74,222,117,248,158,207,171,189,178,248,172,99,244,174,147,210,108,158,73,98,213,175,130,214,111,211,238,188,234,119,149,24,246,103,226,93,127,81,247,104,155,117,149,8,107,4,194,247,166,245,24,25,250,172,49,181,38,195,239,253,189,253,217,41,34,93,85,6,155,35,116,44,238,75,98,46,58,101,255,192,117,207,208,49,160,168,241,59,70,253,177,245,103,244,236,91,84,31,80,244,99,155,103,25,121,238,79,69,164,247,222,81,27,158,25,76,107,30,42,123,90,63,99,198,180,137,199,90,160,235,253,110,200,126,30,62,163,162,123,158,160,107,71,186,103,12,149,127,101,196,188,87,171,191,195,243,135,210,207,57,198,183,170,237,81,234,215,197,133,56,239,242,28,61,225,183,190,160,91,39,84,173,17,54,106,131,215,210,216,9,29,255,67,175,167,239,194,196,61,207,251,254,155,67,12,201,182,203,242,135,156,62,94,55,151,31,210,159,92,97,247,253,86,210,95,139,82,225,122,31,180,246,91,158,247,50,197,125,70,229,11,214,215,6,214,78,70,236,237,205,230,77,202,58,53,99,131,109,220,100,221,31,101,25,154,63,104,108,97,138,73,211,152,68,215,45,91,53,115,221,46,247,233,129,24,39,250,134,206,159,178,100,234,219,219,49,62,255,29,243,96,174,132,42,77,140,99,99,131,125,91,148,97,235,207,88,184,214,23,122,158,230,51,109,77,215,132,180,51,143,178,109,235,179,173,195,75,151,81,208,232,31,199,184,23,248,232,49,213,110,139,103,76,37,205,196,249,55,173,190,190,163,18,211,231,62,18,90,87,12,253,99,180,195,86,92,117,170,119,226,182,81,27,183,57,83,84,61,42,95,250,92,155,87,172,196,142,185,60,237,230,83,135,141,174,190,82,100,204,248,232,80,196,249,162,37,111,155,103,181,189,104,253,99,148,17,59,22,243,142,233,188,218,90,100,125,182,229,229,41,54,122,210,247,32,242,247,4,242,179,42,253,93,83,158,235,127,170,119,115,58,123,133,250,62,215,117,14,151,53,73,213,121,221,154,133,106,13,97,164,255,155,19,151,248,138,246,59,224,28,215,138,92,214,89,109,126,75,68,227,38,120,61,212,103,125,194,102,205,130,147,21,207,165,188,119,177,137,103,5,173,90,159,41,251,231,60,126,152,214,209,92,223,127,119,73,127,49,174,161,234,236,18,217,230,166,53,75,186,150,56,240,126,168,238,127,63,11,233,47,38,127,139,113,222,170,221,1,241,222,235,47,101,172,119,91,198,169,188,254,171,122,255,148,37,33,223,136,38,30,254,29,154,79,4,218,70,46,67,59,111,25,73,223,115,54,20,223,39,198,246,141,238,221,172,234,61,30,211,77,108,243,22,211,124,206,166,173,170,54,169,202,20,223,180,134,232,101,51,39,182,61,239,83,119,55,194,121,215,241,50,84,95,27,188,99,157,198,137,237,248,151,49,134,100,221,127,153,190,226,155,92,33,161,243,47,23,31,196,242,109,168,207,77,250,184,182,49,182,254,166,244,68,147,183,72,29,125,109,173,146,50,234,13,109,111,17,254,14,185,222,166,189,177,219,17,98,203,44,187,230,113,62,203,62,182,118,178,21,223,120,202,58,31,18,47,161,101,219,232,239,122,189,141,221,242,138,197,24,109,241,41,67,213,230,50,165,8,155,103,197,102,30,49,145,151,132,212,19,67,47,155,254,101,202,151,135,255,116,109,44,35,126,92,252,83,68,28,21,97,243,60,234,114,209,169,140,250,203,106,127,86,157,236,185,109,84,250,150,152,109,233,223,225,162,34,242,201,127,199,110,96,13,205,112,28,27,89,26,100,13,121,168,237,19,254,207,145,58,251,197,236,195,62,117,217,214,235,91,102,140,54,186,74,104,27,125,203,142,85,71,104,253,121,248,64,64,191,207,23,127,23,105,218,189,211,179,88,11,151,105,100,188,183,144,197,250,61,65,224,120,97,146,222,119,232,62,127,107,57,178,125,179,254,46,50,123,103,74,223,201,229,53,254,217,148,97,180,87,1,241,152,21,155,38,91,138,223,6,9,223,251,252,46,196,57,198,10,236,183,114,140,216,72,148,191,53,158,163,127,93,255,102,56,123,127,106,122,47,63,133,244,183,39,166,252,229,25,23,212,230,177,198,54,159,49,46,150,175,122,101,229,112,191,96,113,198,124,36,222,207,103,141,63,38,253,133,142,42,93,125,245,247,185,222,212,215,202,238,67,46,136,223,41,101,222,143,164,119,68,3,237,13,253,94,199,243,239,181,210,124,67,182,143,236,123,122,94,151,87,72,151,252,255,3,29,66,228,191,143,79,199,180,169,242,244,166,211,250,132,246,43,97,19,185,110,211,183,79,84,178,206,103,9,213,161,140,251,140,77,124,235,206,211,184,20,115,50,249,94,147,37,161,253,35,175,182,11,145,207,171,218,28,243,25,74,70,246,185,172,95,12,255,187,66,219,175,250,6,195,69,138,244,63,253,237,105,86,204,143,215,213,107,54,177,245,15,149,162,238,133,3,117,90,124,67,145,213,175,92,237,151,53,207,180,125,134,115,125,62,148,197,247,121,209,247,121,201,183,126,157,62,62,207,200,62,245,135,232,234,98,87,185,158,16,201,91,207,34,36,166,45,99,180,53,52,62,105,186,156,199,116,141,79,27,92,174,205,210,53,164,111,248,232,31,35,94,109,245,160,182,178,105,115,72,123,66,36,15,219,134,138,169,204,24,62,116,209,33,73,134,235,119,209,67,149,87,46,199,164,131,46,77,181,85,213,105,210,223,166,60,213,245,46,177,98,123,141,174,45,121,245,153,172,152,176,169,39,207,250,93,36,70,57,161,250,231,209,254,24,182,45,194,23,121,215,27,234,223,80,125,66,109,20,106,243,60,226,168,104,41,163,78,157,252,31],Vi=_i.decompositions,Ui=new h.a(new Uint8Array(Ri)),Ni=new p.a(Si),qi=(wi=bi=function(e){function t(){return $(this,t),re(this,e.apply(this,arguments))}return te(t,e),t.planFeatures=function(e){e.addStage(Wi),e.addStage([\"locl\",\"ccmp\"]),e.addStage($i),e.addStage(\"nukt\"),e.addStage(\"akhn\"),e.addStage(\"rphf\",!1),e.addStage(\"rkrf\"),e.addStage(\"pref\",!1),e.addStage(\"blwf\",!1),e.addStage(\"abvf\",!1),e.addStage(\"half\",!1),e.addStage(\"pstf\",!1),e.addStage(\"vatu\"),e.addStage(\"cjct\"),e.addStage(\"cfar\",!1),e.addStage(es),e.addStage({local:[\"init\"],global:[\"pres\",\"abvs\",\"blws\",\"psts\",\"haln\",\"dist\",\"abvm\",\"blwm\",\"calt\",\"clig\"]}),e.unicodeScript=function(e){return $a[e]}(e.script),e.indicConfig=Ei[e.unicodeScript]||Ei.Default,e.isOldSpec=e.indicConfig.hasOldSpec&&\"2\"!==e.script[e.script.length-1]},t.assignFeatures=function(e,t){for(var r=function(r){var a=t[r].codePoints[0],n=zi[a]||Vi[a];if(n){var i=n.map((function(a){var n=e.font.glyphForCodePoint(a);return new ri(e.font,n.id,[a],t[r].features)}));t.splice.apply(t,[r,1].concat(i))}},a=t.length-1;a>=0;a--)r(a)},t}(Gn),bi.zeroMarkWidths=\"NONE\",wi);function ji(e){return Ui.get(e.codePoints[0])>>8}function Hi(e){return 1<<(255&Ui.get(e.codePoints[0]))}var Yi=function e(t,r,a,n){$(this,e),this.category=t,this.position=r,this.syllableType=a,this.syllable=n};function Wi(e,t){var r=0,a=0,n=Ni.match(t.map(ji)),i=Array.isArray(n),s=0;for(n=i?n:n[Symbol.iterator]();;){var o;if(i){if(s>=n.length)break;o=n[s++]}else{if((s=n.next()).done)break;o=s.value}var l=o,u=l[0],c=l[1],h=l[2];if(u>a){++r;for(var f=a;f<u;f++)t[f].shaperInfo=new Yi(ki,Mi.End,\"non_indic_cluster\",r)}++r;for(var p=u;p<=c;p++)t[p].shaperInfo=new Yi(1<<ji(t[p]),Hi(t[p]),h[0],r);a=c+1}if(a<t.length){++r;for(var d=a;d<t.length;d++)t[d].shaperInfo=new Yi(ki,Mi.End,\"non_indic_cluster\",r)}}function Ki(e){return e.shaperInfo.category&Li}function Xi(e){return e.shaperInfo.category&Gi}function Ji(e){return e.shaperInfo.category&Bi}function Zi(e,t){var r=e,a=Array.isArray(r),n=0;for(r=a?r:r[Symbol.iterator]();;){var i,s;if(a){if(n>=r.length)break;s=r[n++]}else{if((n=r.next()).done)break;s=n.value}s.features=((i={})[t]=!0,i)}return e[0]._font._layoutEngine.engine.GSUBProcessor.applyFeatures([t],e),1===e.length}function Qi(e,t,r){var a=[r,t,r];return Zi(a.slice(0,2),\"blwf\")||Zi(a.slice(1,3),\"blwf\")?Mi.Below_C:Zi(a.slice(0,2),\"pstf\")||Zi(a.slice(1,3),\"pstf\")||Zi(a.slice(0,2),\"pref\")||Zi(a.slice(1,3),\"pref\")?Mi.Post_C:Mi.Base_C}function $i(e,t,r){var a=r.indicConfig,n=e._layoutEngine.engine.GSUBProcessor.features,i=e.glyphForCodePoint(9676).id,s=e.glyphForCodePoint(a.virama).id;if(s)for(var o=new ri(e,s,[a.virama]),l=0;l<t.length;l++)t[l].shaperInfo.position===Mi.Base_C&&(t[l].shaperInfo.position=Qi(0,t[l].copy(),o));for(var u=0,c=ts(t,0);u<t.length;c=ts(t,u=c)){var h=t[u].shaperInfo,f=(h.category,h.syllableType);if(\"symbol_cluster\"!==f&&\"non_indic_cluster\"!==f){if(\"broken_cluster\"===f&&i){var p=new ri(e,i,[9676]);p.shaperInfo=new Yi(1<<ji(p),Hi(p),t[u].shaperInfo.syllableType,t[u].shaperInfo.syllable);for(var d=u;d<c&&t[d].shaperInfo.category===Fi;)d++;t.splice(d++,0,p),c++}var y=c,g=u,v=!1;if(a.rephPos!==Mi.Ra_To_Become_Reph&&n.rphf&&u+3<=c&&(\"Implicit\"===a.rephMode&&!Xi(t[u+2])||\"Explicit\"===a.rephMode&&t[u+2].shaperInfo.category===Pi)){var m=[t[u].copy(),t[u+1].copy(),t[u+2].copy()];if(Zi(m.slice(0,2),\"rphf\")||\"Explicit\"===a.rephMode&&Zi(m,\"rphf\")){for(g+=2;g<c&&Xi(t[g]);)g++;y=u,v=!0}}else if(\"Log_Repha\"===a.rephMode&&t[u].shaperInfo.category===Fi){for(g++;g<c&&Xi(t[g]);)g++;y=u,v=!0}switch(a.basePos){case\"Last\":var b=c,w=!1;do{var S=t[--b].shaperInfo;if(Ki(t[b])){if(S.position!==Mi.Below_C&&(S.position!==Mi.Post_C||w)){y=b;break}S.position===Mi.Below_C&&(w=!0),y=b}else if(u<b&&S.category===Pi&&t[b-1].shaperInfo.category===xi)break}while(b>g);break;case\"First\":for(var _=(y=u)+1;_<c;_++)Ki(t[_])&&(t[_].shaperInfo.position=Mi.Below_C)}v&&y===u&&g-y<=2&&(v=!1);for(var k=u;k<y;k++){var C=t[k].shaperInfo;C.position=Math.min(Mi.Pre_C,C.position)}y<c&&(t[y].shaperInfo.position=Mi.Base_C);for(var x=y+1;x<c;x++)if(t[x].shaperInfo.category===Ii){for(var A=x+1;A<c;A++)if(Ki(t[A])){t[A].shaperInfo.position=Mi.Final_C;break}break}if(v&&(t[u].shaperInfo.position=Mi.Ra_To_Become_Reph),r.isOldSpec)for(var P=\"Malayalam\"!==r.unicodeScript,I=y+1;I<c;I++)if(t[I].shaperInfo.category===xi){var O=void 0;for(O=c-1;O>I&&!(Ki(t[O])||P&&t[O].shaperInfo.category===xi);O--);if(t[O].shaperInfo.category!==xi&&O>I){var F=t[I];t.splice.apply(t,[I,0].concat(t.splice(I+1,O-I))),t[O]=F}break}for(var D=Mi.Start,T=u;T<c;T++){var M=t[T].shaperInfo;if(M.category&(Gi|Ci|Oi|Ti|Bi&M.category)){if(M.position=D,M.category===xi&&M.position===Mi.Pre_M)for(var L=T;L>u;L--)if(t[L-1].shaperInfo.position!==Mi.Pre_M){M.position=t[L-1].shaperInfo.position;break}}else M.position!==Mi.SMVD&&(D=M.position)}for(var G=y,B=y+1;B<c;B++)if(Ki(t[B])){for(var E=G+1;E<B;E++)t[E].shaperInfo.position<Mi.SMVD&&(t[E].shaperInfo.position=t[B].shaperInfo.position);G=B}else t[B].shaperInfo.category===Ii&&(G=B);var z=t.slice(u,c);z.sort((function(e,t){return e.shaperInfo.position-t.shaperInfo.position})),t.splice.apply(t,[u,z.length].concat(z));for(var R=u;R<c;R++)if(t[R].shaperInfo.position===Mi.Base_C){y=R;break}for(var V=u;V<c&&t[V].shaperInfo.position===Mi.Ra_To_Become_Reph;V++)t[V].features.rphf=!0;for(var U=!r.isOldSpec&&\"Pre_And_Post\"===a.blwfMode,N=u;N<y;N++)t[N].features.half=!0,U&&(t[N].features.blwf=!0);for(var q=y+1;q<c;q++)t[q].features.abvf=!0,t[q].features.pstf=!0,t[q].features.blwf=!0;if(r.isOldSpec&&\"Devanagari\"===r.unicodeScript)for(var j=u;j+1<y;j++)t[j].shaperInfo.category!==Di||t[j+1].shaperInfo.category!==xi||j+1!==y&&t[j+2].shaperInfo.category!==Pi||(t[j].features.blwf=!0,t[j+1].features.blwf=!0);if(n.pref&&y+2<c)for(var H=y+1;H+2-1<c;H++){if(Zi([t[H].copy(),t[H+1].copy()],\"pref\")){for(var Y=0;Y<2;Y++)t[H++].features.pref=!0;if(n.cfar)for(;H<c;H++)t[H].features.cfar=!0;break}}for(var W=u+1;W<c;W++)if(Xi(t[W])){var K=t[W].shaperInfo.category===Ai,X=W;do{X--,K&&delete t[X].features.half}while(X>u&&!Ki(t[X]))}}}}function es(e,t,r){for(var a=r.indicConfig,n=e._layoutEngine.engine.GSUBProcessor.features,i=0,s=ts(t,0);i<t.length;s=ts(t,i=s)){for(var o=!!n.pref,l=i;l<s;l++)if(t[l].shaperInfo.position>=Mi.Base_C){if(o&&l+1<s)for(var c=l+1;c<s;c++)if(t[c].features.pref){if(!t[c].substituted||!t[c].isLigated||t[c].isMultiplied){for(l=c;l<s&&Ji(t[l]);)l++;t[l].shaperInfo.position=Mi.BASE_C,o=!1}break}if(\"Malayalam\"===r.unicodeScript)for(var h=l+1;h<s;h++){for(;h<s&&Xi(t[h]);)h++;if(h===s||!Ji(t[h]))break;for(h++;h<s&&Xi(t[h]);)h++;h<s&&Ki(t[h])&&t[h].shaperInfo.position===Mi.Below_C&&(t[l=h].shaperInfo.position=Mi.Base_C)}i<l&&t[l].shaperInfo.position>Mi.Base_C&&l--;break}if(l===s&&i<l&&t[l-1].shaperInfo.category===Pi&&l--,l<s)for(;i<l&&t[l].shaperInfo.category&(Ci|Bi);)l--;if(i+1<s&&i<l){var f=l===s?l-2:l-1;if(\"Malayalam\"!==r.unicodeScript&&\"Tamil\"!==r.unicodeScript){for(;f>i&&!(t[f].shaperInfo.category&(Ii|Bi));)f--;Ji(t[f])&&t[f].shaperInfo.position!==Mi.Pre_M?f+1<s&&Xi(t[f+1])&&f++:f=i}if(i<f&&t[f].shaperInfo.position!==Mi.Pre_M)for(var p=f;p>i;p--)if(t[p-1].shaperInfo.position===Mi.Pre_M){var d=p-1;d<l&&l<=f&&l--;var y=t[d];t.splice.apply(t,[d,0].concat(t.splice(d+1,f-d))),t[f]=y,f--}}if(i+1<s&&t[i].shaperInfo.position===Mi.Ra_To_Become_Reph&&t[i].shaperInfo.category===Fi!==(t[i].isLigated&&!t[i].isMultiplied)){var g=void 0,v=a.rephPos,m=!1;if(v!==Mi.After_Post){for(g=i+1;g<l&&!Ji(t[g]);)g++;if(g<l&&Ji(t[g])&&(g+1<l&&Xi(t[g+1])&&g++,m=!0),!m&&v===Mi.After_Main){for(g=l;g+1<s&&t[g+1].shaperInfo.position<=Mi.After_Main;)g++;m=g<s}if(!m&&v===Mi.After_Sub){for(g=l;g+1<s&&!(t[g+1].shaperInfo.position&(Mi.Post_C|Mi.After_Post|Mi.SMVD));)g++;m=g<s}}if(!m){for(g=i+1;g<l&&!Ji(t[g]);)g++;g<l&&Ji(t[g])&&(g+1<l&&Xi(t[g+1])&&g++,m=!0)}if(!m){for(g=s-1;g>i&&t[g].shaperInfo.position===Mi.SMVD;)g--;if(Ji(t[g]))for(var b=l+1;b<g;b++)t[b].shaperInfo.category===Ii&&g--}var w=t[i];t.splice.apply(t,[i,0].concat(t.splice(i+1,g-i))),t[g]=w,i<l&&l<=g&&l--}if(o&&l+1<s)for(var S=l+1;S<s;S++)if(t[S].features.pref){if(t[S].isLigated&&!t[S].isMultiplied){var _=l;if(\"Malayalam\"!==r.unicodeScript&&\"Tamil\"!==r.unicodeScript){for(;_>i&&!(t[_-1].shaperInfo.category&(Ii|Bi));)_--;if(_>i&&t[_-1].shaperInfo.category===Ii)for(var k=S,C=l+1;C<k;C++)if(t[C].shaperInfo.category===Ii){_--;break}}_>i&&Ji(t[_-1])&&_<s&&Xi(t[_])&&_++;var x=S,A=t[x];t.splice.apply(t,[_+1,0].concat(t.splice(_,x-_))),t[_]=A,_<=l&&l<x&&l++}break}t[i].shaperInfo.position!==Mi.Pre_M||i&&/Cf|Mn/.test(u.default.getCategory(t[i-1].codePoints[0]))||(t[i].features.init=!0)}}function ts(e,t){if(t>=e.length)return t;for(var r=e[t].shaperInfo.syllable;++t<e.length&&e[t].shaperInfo.syllable===r;);return t}var rs,as,ns=[0,2,0,0,0,0,0,0,0,0,169,208,1,81,12,174,243,237,156,127,168,29,71,21,199,231,221,247,222,253,245,110,94,242,108,126,244,217,24,155,182,20,35,98,173,138,105,21,12,109,197,90,5,83,21,141,69,169,173,149,38,42,216,7,66,26,80,82,193,104,161,137,86,37,226,175,170,49,40,36,129,162,45,20,76,171,96,219,32,54,234,31,166,138,86,13,180,193,254,209,98,181,85,12,175,180,20,191,227,206,225,158,119,50,51,59,179,187,179,123,159,185,7,62,204,238,236,236,204,153,51,115,118,103,102,127,60,223,82,106,98,82,169,30,152,3,27,193,38,112,41,184,220,196,205,87,16,190,21,188,29,188,27,124,192,147,238,122,112,179,37,126,7,88,0,59,193,110,240,69,240,101,176,31,220,101,248,33,75,127,8,252,4,252,20,252,194,146,223,207,192,49,240,60,234,255,107,163,219,156,65,199,81,248,40,194,63,128,147,224,73,240,12,248,55,120,1,76,78,41,53,3,230,192,60,216,8,54,129,75,192,102,176,101,42,75,127,53,194,173,96,27,248,8,216,14,110,1,59,193,110,176,7,236,3,251,193,93,224,32,56,2,238,53,251,247,131,135,192,113,112,2,60,6,158,0,79,129,231,192,105,240,210,84,166,115,123,90,169,89,176,118,58,219,223,128,240,98,240,90,240,6,240,22,112,37,120,167,57,254,94,132,31,4,55,128,29,96,97,58,171,183,102,23,219,174,130,207,33,191,61,21,231,201,217,43,242,254,42,246,191,5,126,0,14,131,123,166,179,250,30,5,15,130,71,192,239,114,244,121,12,199,159,0,79,129,127,152,243,79,131,23,193,84,91,169,65,59,139,91,141,112,61,184,8,188,166,61,236,75,111,196,246,102,176,5,92,13,182,130,109,230,156,235,77,120,51,194,79,129,237,172,15,238,196,254,238,118,58,91,17,95,64,25,95,2,95,7,223,5,63,2,119,179,114,239,195,246,207,193,49,19,119,28,225,9,240,71,112,50,64,191,39,145,230,153,118,102,171,103,193,34,56,4,84,71,169,110,39,139,95,129,112,208,201,210,175,52,113,154,181,108,155,179,1,241,23,131,87,139,227,175,119,164,39,46,235,100,101,79,49,189,125,233,121,186,162,232,60,222,132,114,183,128,171,192,53,96,43,216,6,62,220,241,159,123,147,56,62,152,60,51,205,39,145,230,211,224,51,157,172,223,124,158,217,224,164,167,94,119,32,221,87,192,55,193,1,135,30,54,255,63,212,25,214,235,199,157,172,175,220,135,240,1,83,174,222,126,216,108,223,157,99,219,42,236,59,102,204,217,200,216,127,198,140,25,51,102,204,152,49,99,198,196,50,103,153,79,54,205,225,246,112,77,96,123,128,126,191,98,115,215,223,136,121,236,39,60,231,83,221,127,143,115,254,218,201,214,97,254,134,240,239,224,159,224,52,120,201,196,183,187,208,167,155,165,95,131,112,30,108,4,155,186,217,241,75,17,94,14,174,48,251,215,32,124,15,184,174,235,46,95,167,187,209,115,124,204,152,49,99,198,164,101,110,178,89,154,174,255,152,49,99,210,144,218,191,119,96,252,184,208,205,158,11,221,138,240,54,203,120,242,246,110,246,108,95,111,223,41,142,127,99,4,198,159,31,27,100,236,1,199,192,219,2,88,4,151,173,88,26,183,139,237,31,192,246,159,192,185,179,74,93,11,22,102,77,60,194,199,103,135,233,158,197,246,1,216,224,113,112,126,79,169,15,129,239,128,27,176,255,189,118,22,254,210,236,115,218,253,51,227,36,87,34,205,71,89,186,131,216,62,101,246,47,152,193,49,112,112,166,249,251,79,211,228,249,203,247,181,237,76,63,61,130,240,30,112,180,155,205,19,31,236,198,223,79,247,154,52,131,156,244,182,252,30,41,80,158,43,95,121,254,111,145,247,163,221,165,233,72,223,189,158,242,254,130,115,78,129,167,187,195,186,233,116,207,97,255,63,38,191,23,88,190,147,61,119,253,108,249,199,182,101,108,251,207,64,159,21,96,13,88,15,46,2,175,2,15,152,252,94,135,237,205,96,11,184,202,28,127,23,120,159,241,215,155,192,142,222,48,191,5,108,239,2,159,5,123,192,62,240,53,240,109,112,176,151,175,143,126,159,230,8,210,221,235,72,171,231,237,247,227,216,67,189,225,254,113,108,159,96,251,127,238,101,239,150,232,253,83,216,126,218,83,110,81,91,219,242,104,218,151,99,124,189,46,92,229,255,171,23,231,167,203,217,86,77,151,191,216,91,154,239,139,198,246,45,220,15,251,253,102,108,62,138,109,62,74,253,109,208,175,215,38,190,119,132,238,48,239,19,173,238,103,225,121,8,47,4,155,204,254,37,253,97,218,205,125,127,254,189,142,255,62,220,20,121,239,73,133,188,71,245,102,211,102,87,32,124,71,205,237,87,117,255,91,110,126,233,211,61,164,14,186,13,175,101,253,88,191,187,247,126,236,95,215,207,250,255,97,246,126,163,78,183,200,222,49,189,17,251,31,55,113,183,228,244,127,27,139,145,125,141,222,49,60,29,144,86,191,11,120,107,127,105,28,127,47,241,97,51,166,166,186,223,102,194,219,17,238,235,12,245,191,83,212,107,191,217,63,106,25,147,47,71,22,91,19,255,99,20,100,130,209,18,251,60,13,133,147,236,248,84,32,50,63,229,136,75,45,163,97,241,177,144,80,95,106,89,160,182,106,89,206,107,137,112,218,64,18,210,183,82,247,133,201,196,249,87,45,237,166,21,40,33,33,109,121,54,249,190,205,103,206,38,153,112,48,10,34,245,224,215,188,229,46,182,49,131,220,94,46,82,180,207,216,198,82,69,218,87,218,111,57,217,176,46,191,11,205,59,198,246,85,251,33,111,123,215,117,41,143,255,119,113,205,59,202,74,81,123,147,14,29,6,166,158,193,243,157,170,233,1,76,129,213,140,217,215,219,3,19,174,16,244,4,125,193,44,59,151,234,184,146,217,172,199,242,10,213,143,210,23,153,23,170,18,118,33,253,187,134,144,188,148,72,39,247,139,232,16,114,156,139,75,167,144,246,37,25,24,228,190,110,223,16,31,234,91,226,92,117,146,101,199,218,40,239,254,231,59,206,253,207,87,182,175,46,69,116,142,109,223,188,109,45,51,38,180,181,175,20,242,95,185,63,107,73,235,147,144,254,152,119,142,11,221,46,171,84,54,215,165,249,238,92,164,126,161,237,235,107,147,24,157,171,106,223,162,254,75,109,202,175,209,74,45,189,62,87,37,101,253,151,198,174,121,101,228,149,223,132,253,233,222,87,228,250,153,39,210,55,101,125,165,158,69,237,223,18,245,43,42,218,191,242,238,181,182,122,184,108,110,75,171,44,233,93,233,92,229,216,226,67,251,16,23,242,37,62,254,225,50,80,75,219,159,239,135,250,159,237,254,233,146,34,245,176,173,137,230,173,21,240,177,80,204,120,40,198,31,203,250,115,172,29,244,190,111,60,171,212,153,215,82,190,159,215,158,52,222,181,217,65,74,89,127,46,35,212,230,69,198,187,77,181,175,43,45,137,188,94,167,104,95,155,255,75,145,186,150,105,223,151,25,138,72,89,191,41,226,99,100,127,9,183,65,222,245,242,156,128,186,133,180,65,29,254,37,215,26,108,235,14,49,254,85,68,183,20,109,25,147,46,68,15,46,54,31,227,125,133,124,145,218,108,5,75,51,112,224,235,15,177,54,37,61,138,172,29,213,233,115,33,109,211,99,113,114,45,199,54,142,37,105,41,127,222,250,252,142,96,149,9,245,177,178,207,243,165,61,21,11,243,226,93,18,219,207,229,113,101,9,109,186,196,218,95,153,253,57,71,190,46,63,146,246,87,44,204,171,155,45,79,91,188,124,134,94,148,22,11,229,152,211,53,38,173,218,39,116,158,211,34,92,165,220,18,234,99,169,253,152,11,95,147,117,173,209,74,104,140,199,247,59,106,184,198,234,171,239,234,8,84,100,250,20,104,201,155,235,76,123,142,241,243,93,253,216,230,19,54,73,221,55,98,176,221,91,53,3,101,239,47,122,13,95,247,153,89,19,183,6,172,85,217,53,106,46,178,108,105,67,122,79,39,79,87,215,115,131,57,181,84,143,190,26,142,177,100,30,93,11,60,47,89,247,34,182,157,83,195,177,9,229,99,43,183,107,236,58,101,209,195,7,157,75,237,215,196,243,125,91,31,111,250,89,99,158,159,87,97,167,84,245,72,97,163,162,247,23,25,39,199,38,41,203,183,193,203,143,177,81,213,229,199,74,21,246,87,53,151,159,167,155,22,126,223,176,205,29,92,115,50,130,198,31,125,53,28,123,232,123,240,58,149,141,191,166,25,180,6,163,183,165,143,200,251,48,181,85,108,253,83,137,239,26,88,199,117,81,223,87,171,238,3,49,54,229,125,67,142,55,8,57,86,227,114,174,97,37,219,150,204,155,124,166,45,231,203,107,125,236,251,3,85,251,77,217,190,87,180,220,162,231,75,248,186,85,25,253,164,132,222,183,83,147,178,15,144,31,208,218,20,191,78,165,236,151,52,70,215,190,178,142,49,47,208,50,203,116,115,249,43,159,99,146,95,219,174,241,114,110,201,225,215,119,146,233,136,58,185,164,236,249,121,227,214,212,99,90,110,35,221,70,117,191,19,166,239,189,182,57,161,92,87,112,181,245,108,78,254,82,66,245,202,91,71,10,225,229,224,60,19,186,136,157,59,52,213,78,28,126,255,180,93,99,200,151,103,89,186,212,253,70,174,221,83,72,215,158,144,103,102,90,100,91,187,234,46,175,65,124,189,96,157,135,245,6,125,237,161,119,167,92,101,199,92,159,185,132,92,119,66,165,236,220,154,95,95,116,250,149,14,40,141,45,190,235,57,143,191,231,73,98,139,163,113,68,71,196,119,44,113,49,242,10,176,129,237,79,58,8,181,151,92,159,138,181,119,204,122,72,72,124,108,222,242,222,21,115,158,150,87,6,212,49,70,108,99,244,208,243,228,120,161,14,105,114,44,170,28,219,174,227,161,245,9,57,47,79,39,91,104,43,39,70,175,178,245,168,114,253,51,70,31,223,24,33,180,77,93,249,132,30,47,210,183,108,229,87,93,142,111,236,20,34,177,249,165,210,183,108,154,148,246,108,162,92,87,91,142,130,14,117,233,209,132,52,173,219,40,244,229,24,61,38,19,235,236,179,187,28,115,150,181,95,21,246,175,67,242,202,170,195,254,117,181,115,19,253,42,69,191,41,42,41,250,87,213,58,22,121,246,226,154,135,185,242,204,91,47,116,157,95,180,14,69,230,114,182,244,82,175,186,165,78,255,169,203,63,235,180,135,77,228,218,104,25,61,138,156,151,66,242,234,91,85,59,184,242,169,187,31,196,74,83,253,186,108,157,71,193,247,82,60,199,161,124,99,211,242,117,98,190,110,108,123,15,173,99,137,171,18,190,134,78,107,248,69,109,31,122,94,213,117,136,93,175,181,189,15,88,39,250,25,173,237,91,25,23,161,223,18,150,121,126,193,197,246,44,183,8,121,122,186,198,38,46,125,109,239,56,243,103,18,177,245,15,65,62,23,149,207,74,249,115,38,106,215,24,209,250,54,249,44,88,66,207,248,92,239,12,211,115,96,253,60,110,141,129,254,21,17,11,73,209,254,234,107,111,122,239,34,181,189,66,203,176,189,95,193,159,177,83,156,124,223,58,68,120,57,235,2,116,161,190,106,59,63,196,254,178,29,171,182,33,23,126,63,209,199,232,121,98,149,126,210,99,33,181,131,108,55,215,121,116,127,166,176,78,41,98,127,221,215,120,223,235,43,251,125,147,190,1,8,17,158,191,237,155,121,254,94,224,132,201,187,238,239,158,203,136,28,207,156,95,146,208,57,188,79,66,230,252,182,99,121,105,93,229,248,210,209,220,44,197,248,218,166,71,75,249,109,102,91,151,137,41,67,198,41,101,183,117,93,34,251,159,109,205,35,239,156,50,229,165,154,59,21,145,81,153,159,151,153,195,74,29,203,206,133,155,92,147,160,242,235,166,42,73,221,167,83,231,31,98,15,125,239,148,223,124,251,190,53,161,116,244,46,88,200,120,173,170,177,88,200,125,95,207,81,102,212,153,239,242,105,201,123,55,53,100,28,17,51,119,9,145,212,254,89,149,158,203,89,7,95,153,124,206,64,255,85,73,217,95,109,243,4,215,55,84,190,127,110,230,205,171,165,108,44,73,29,227,240,11,84,243,255,66,181,253,87,79,190,211,172,109,175,175,47,182,113,51,95,227,106,66,127,87,223,242,125,219,77,199,232,187,110,21,81,70,89,127,174,178,190,178,77,234,46,223,247,79,70,159,31,235,115,207,81,195,127,28,217,252,121,70,13,219,138,215,47,198,47,109,115,188,170,109,64,101,133,74,149,101,22,109,51,249,156,67,254,247,64,183,209,42,67,222,245,54,68,71,91,186,178,182,136,57,223,231,31,85,247,133,24,180,173,125,215,95,98,70,185,199,167,101,251,40,191,255,140,250,255,158,125,105,73,248,255,239,228,218,155,252,6,167,204,255,74,149,10,123,190,33,253,142,36,244,89,81,204,179,36,95,249,69,9,185,198,211,61,150,127,139,68,223,188,83,223,162,49,4,181,85,232,61,171,108,255,78,85,119,18,219,119,254,178,206,33,115,168,162,72,157,203,254,87,220,102,3,249,47,26,215,61,158,210,241,250,247,148,253,190,17,42,117,182,63,255,71,84,222,53,153,218,182,42,253,203,194,69,63,43,211,207,205,46,84,249,255,60,146,117,43,171,191,92,155,46,43,169,230,208,41,231,227,77,205,243,201,230,190,181,193,170,218,165,168,200,181,244,208,53,226,186,215,79,235,88,67,15,201,191,174,58,143,226,122,180,77,108,101,52,213,159,171,170,119,136,61,99,108,79,219,117,172,63,142,98,191,43,155,71,138,190,159,194,135,83,248,97,234,114,203,232,86,84,63,223,249,85,151,95,149,254,77,151,95,101,159,138,45,191,73,249,47],is=_i.categories,ss=_i.decompositions,os=new h.a(new Uint8Array(ns)),ls=new p.a(_i),us=(as=rs=function(e){function t(){return $(this,t),re(this,e.apply(this,arguments))}return te(t,e),t.planFeatures=function(e){e.addStage(fs),e.addStage([\"locl\",\"ccmp\",\"nukt\",\"akhn\"]),e.addStage(ps),e.addStage([\"rphf\"],!1),e.addStage(ds),e.addStage(ps),e.addStage([\"pref\"]),e.addStage(ys),e.addStage([\"rkrf\",\"abvf\",\"blwf\",\"half\",\"pstf\",\"vatu\",\"cjct\"]),e.addStage(gs),e.addStage([\"abvs\",\"blws\",\"pres\",\"psts\",\"dist\",\"abvm\",\"blwm\"])},t.assignFeatures=function(e,t){for(var r=function(r){var a=t[r].codePoints[0];if(ss[a]){var n=ss[a].map((function(a){var n=e.font.glyphForCodePoint(a);return new ri(e.font,n.id,[a],t[r].features)}));t.splice.apply(t,[r,1].concat(n))}},a=t.length-1;a>=0;a--)r(a)},t}(Gn),rs.zeroMarkWidths=\"BEFORE_GPOS\",as);function cs(e){return os.get(e.codePoints[0])}var hs=function e(t,r,a){$(this,e),this.category=t,this.syllableType=r,this.syllable=a};function fs(e,t){var r=0,a=ls.match(t.map(cs)),n=Array.isArray(a),i=0;for(a=n?a:a[Symbol.iterator]();;){var s;if(n){if(i>=a.length)break;s=a[i++]}else{if((i=a.next()).done)break;s=i.value}var o=s,l=o[0],u=o[1],c=o[2];++r;for(var h=l;h<=u;h++)t[h].shaperInfo=new hs(is[cs(t[h])],c[0],r);for(var f=\"R\"===t[l].shaperInfo.category?1:Math.min(3,u-l),p=l;p<l+f;p++)t[p].features.rphf=!0}}function ps(e,t){var r=t,a=Array.isArray(r),n=0;for(r=a?r:r[Symbol.iterator]();;){var i;if(a){if(n>=r.length)break;i=r[n++]}else{if((n=r.next()).done)break;i=n.value}i.substituted=!1}}function ds(e,t){var r=t,a=Array.isArray(r),n=0;for(r=a?r:r[Symbol.iterator]();;){var i;if(a){if(n>=r.length)break;i=r[n++]}else{if((n=r.next()).done)break;i=n.value}var s=i;s.substituted&&s.features.rphf&&(s.shaperInfo.category=\"R\")}}function ys(e,t){var r=t,a=Array.isArray(r),n=0;for(r=a?r:r[Symbol.iterator]();;){var i;if(a){if(n>=r.length)break;i=r[n++]}else{if((n=r.next()).done)break;i=n.value}var s=i;s.substituted&&(s.shaperInfo.category=\"VPre\")}}function gs(e,t){for(var r=e.glyphForCodePoint(9676).id,a=0,n=vs(t,0);a<t.length;n=vs(t,a=n)){var i=void 0,s=void 0,o=t[a].shaperInfo,l=o.syllableType;if(\"virama_terminated_cluster\"===l||\"standard_cluster\"===l||\"broken_cluster\"===l){if(\"broken_cluster\"===l&&r){var u=new ri(e,r,[9676]);for(u.shaperInfo=o,i=a;i<n&&\"R\"===t[i].shaperInfo.category;i++);t.splice(++i,0,u),n++}if(\"R\"===o.category&&n-a>1)for(i=a+1;i<n;i++)if(bs(o=t[i].shaperInfo)||ms(t[i])){ms(t[i])&&i--,t.splice.apply(t,[a,0].concat(t.splice(a+1,i-a),[t[i]]));break}for(i=a,s=n;i<n;i++)bs(o=t[i].shaperInfo)||ms(t[i])?s=ms(t[i])?i+1:i:(\"VPre\"===o.category||\"VMPre\"===o.category)&&s<i&&t.splice.apply(t,[s,1,t[i]].concat(t.splice(s,i-s)))}}}function vs(e,t){if(t>=e.length)return t;for(var r=e[t].shaperInfo.syllable;++t<e.length&&e[t].shaperInfo.syllable===r;);return t}function ms(e){return\"H\"===e.shaperInfo.category&&!e.isLigated}function bs(e){return\"B\"===e.category||\"GB\"===e.category}var ws={arab:Xn,mong:Xn,syrc:Xn,\"nko \":Xn,phag:Xn,mand:Xn,mani:Xn,phlp:Xn,hang:ai,bng2:qi,beng:qi,dev2:qi,deva:qi,gjr2:qi,gujr:qi,guru:qi,gur2:qi,knda:qi,knd2:qi,mlm2:qi,mlym:qi,ory2:qi,orya:qi,taml:qi,tml2:qi,telu:qi,tel2:qi,khmr:qi,bali:us,batk:us,brah:us,bugi:us,buhd:us,cakm:us,cham:us,dupl:us,egyp:us,gran:us,hano:us,java:us,kthi:us,kali:us,khar:us,khoj:us,sind:us,lepc:us,limb:us,mahj:us,mtei:us,modi:us,hmng:us,rjng:us,saur:us,shrd:us,sidd:us,sinh:us,sund:us,sylo:us,tglg:us,tagb:us,tale:us,lana:us,tavt:us,takr:us,tibt:us,tfng:us,tirh:us,latn:Gn,DFLT:Gn};for(var Ss=function(e){function t(){return $(this,t),re(this,e.apply(this,arguments))}return te(t,e),t.prototype.applyLookup=function(e,t){var r=this;switch(e){case 1:var a=this.coverageIndex(t.coverage);if(-1===a)return!1;var n=this.glyphIterator.cur;switch(t.version){case 1:n.id=n.id+t.deltaGlyphID&65535;break;case 2:n.id=t.substitute.get(a)}return!0;case 2:var i=this.coverageIndex(t.coverage);if(-1!==i){var s,o=t.sequences.get(i);this.glyphIterator.cur.id=o[0],this.glyphIterator.cur.ligatureComponent=0;var l=this.glyphIterator.cur.features,u=this.glyphIterator.cur,c=o.slice(1).map((function(e,t){var a=new ri(r.font,e,void 0,l);return a.shaperInfo=u.shaperInfo,a.isLigated=u.isLigated,a.ligatureComponent=t+1,a.substituted=!0,a.isMultiplied=!0,a}));return(s=this.glyphs).splice.apply(s,[this.glyphIterator.index+1,0].concat(c)),!0}return!1;case 3:var h=this.coverageIndex(t.coverage);if(-1!==h){return this.glyphIterator.cur.id=t.alternateSet.get(h)[0],!0}return!1;case 4:var f=this.coverageIndex(t.coverage);if(-1===f)return!1;var p=t.ligatureSets.get(f),d=Array.isArray(p),y=0;for(p=d?p:p[Symbol.iterator]();;){var g;if(d){if(y>=p.length)break;g=p[y++]}else{if((y=p.next()).done)break;g=y.value}var v=g,m=this.sequenceMatchIndices(1,v.components);if(m){var b=this.glyphIterator.cur,w=b.codePoints.slice(),S=m,_=Array.isArray(S),k=0;for(S=_?S:S[Symbol.iterator]();;){var C;if(_){if(k>=S.length)break;C=S[k++]}else{if((k=S.next()).done)break;C=k.value}var x=C;w.push.apply(w,this.glyphs[x].codePoints)}var A=new ri(this.font,v.glyph,w,b.features,b.stringIndex);A.shaperInfo=b.shaperInfo,A.isLigated=!0,A.substituted=!0;for(var P=b.isMark,I=0;I<m.length&&P;I++)P=this.glyphs[m[I]].isMark;A.ligatureID=P?null:this.ligatureID++;var O=b.ligatureID,F=b.codePoints.length,D=F,T=this.glyphIterator.index+1,M=m,L=Array.isArray(M),G=0;for(M=L?M:M[Symbol.iterator]();;){var B;if(L){if(G>=M.length)break;B=M[G++]}else{if((G=M.next()).done)break;B=G.value}var E=B;if(P)T=E;else for(;T<E;){var z=D-F+Math.min(this.glyphs[T].ligatureComponent||1,F);this.glyphs[T].ligatureID=A.ligatureID,this.glyphs[T].ligatureComponent=z,T++}O=this.glyphs[T].ligatureID,D+=F=this.glyphs[T].codePoints.length,T++}if(O&&!P)for(var R=T;R<this.glyphs.length&&this.glyphs[R].ligatureID===O;R++){z=D-F+Math.min(this.glyphs[R].ligatureComponent||1,F);this.glyphs[R].ligatureComponent=z}for(var V=m.length-1;V>=0;V--)this.glyphs.splice(m[V],1);return this.glyphs[this.glyphIterator.index]=A,!0}}return!1;case 5:return this.applyContext(t);case 6:return this.applyChainingContext(t);case 7:return this.applyLookup(t.lookupType,t.extension);default:throw new Error(\"GSUB lookupType \"+e+\" is not supported\")}},t}(ti),_s=function(e){function t(){return $(this,t),re(this,e.apply(this,arguments))}return te(t,e),t.prototype.applyPositionValue=function(e,t){var r=this.positions[this.glyphIterator.peekIndex(e)];null!=t.xAdvance&&(r.xAdvance+=t.xAdvance),null!=t.yAdvance&&(r.yAdvance+=t.yAdvance),null!=t.xPlacement&&(r.xOffset+=t.xPlacement),null!=t.yPlacement&&(r.yOffset+=t.yPlacement);var a=this.font._variationProcessor,n=this.font.GDEF&&this.font.GDEF.itemVariationStore;a&&n&&(t.xPlaDevice&&(r.xOffset+=a.getDelta(n,t.xPlaDevice.a,t.xPlaDevice.b)),t.yPlaDevice&&(r.yOffset+=a.getDelta(n,t.yPlaDevice.a,t.yPlaDevice.b)),t.xAdvDevice&&(r.xAdvance+=a.getDelta(n,t.xAdvDevice.a,t.xAdvDevice.b)),t.yAdvDevice&&(r.yAdvance+=a.getDelta(n,t.yAdvDevice.a,t.yAdvDevice.b)))},t.prototype.applyLookup=function(e,t){switch(e){case 1:var r=this.coverageIndex(t.coverage);if(-1===r)return!1;switch(t.version){case 1:this.applyPositionValue(0,t.value);break;case 2:this.applyPositionValue(0,t.values.get(r))}return!0;case 2:var a=this.glyphIterator.peek();if(!a)return!1;var n=this.coverageIndex(t.coverage);if(-1===n)return!1;switch(t.version){case 1:var i=t.pairSets.get(n),s=Array.isArray(i),o=0;for(i=s?i:i[Symbol.iterator]();;){var l;if(s){if(o>=i.length)break;l=i[o++]}else{if((o=i.next()).done)break;l=o.value}var u=l;if(u.secondGlyph===a.id)return this.applyPositionValue(0,u.value1),this.applyPositionValue(1,u.value2),!0}return!1;case 2:var c=this.getClassID(this.glyphIterator.cur.id,t.classDef1),h=this.getClassID(a.id,t.classDef2);if(-1===c||-1===h)return!1;var f=t.classRecords.get(c).get(h);return this.applyPositionValue(0,f.value1),this.applyPositionValue(1,f.value2),!0}case 3:var p=this.glyphIterator.peekIndex(),d=this.glyphs[p];if(!d)return!1;var y=t.entryExitRecords[this.coverageIndex(t.coverage)];if(!y||!y.exitAnchor)return!1;var g=t.entryExitRecords[this.coverageIndex(t.coverage,d.id)];if(!g||!g.entryAnchor)return!1;var v=this.getAnchor(g.entryAnchor),m=this.getAnchor(y.exitAnchor),b=this.positions[this.glyphIterator.index],w=this.positions[p];switch(this.direction){case\"ltr\":b.xAdvance=m.x+b.xOffset;var S=v.x+w.xOffset;w.xAdvance-=S,w.xOffset-=S;break;case\"rtl\":S=m.x+b.xOffset,b.xAdvance-=S,b.xOffset-=S,w.xAdvance=v.x+w.xOffset}return this.glyphIterator.flags.rightToLeft?(this.glyphIterator.cur.cursiveAttachment=p,b.yOffset=v.y-m.y):(d.cursiveAttachment=this.glyphIterator.index,b.yOffset=m.y-v.y),!0;case 4:var _=this.coverageIndex(t.markCoverage);if(-1===_)return!1;for(var k=this.glyphIterator.index;--k>=0&&(this.glyphs[k].isMark||this.glyphs[k].ligatureComponent>0););if(k<0)return!1;var C=this.coverageIndex(t.baseCoverage,this.glyphs[k].id);if(-1===C)return!1;var x=t.markArray[_],A=t.baseArray[C][x.class];return this.applyAnchor(x,A,k),!0;case 5:var P=this.coverageIndex(t.markCoverage);if(-1===P)return!1;for(var I=this.glyphIterator.index;--I>=0&&this.glyphs[I].isMark;);if(I<0)return!1;var O=this.coverageIndex(t.ligatureCoverage,this.glyphs[I].id);if(-1===O)return!1;var F=t.ligatureArray[O],D=this.glyphIterator.cur,T=this.glyphs[I],M=T.ligatureID&&T.ligatureID===D.ligatureID&&D.ligatureComponent>0?Math.min(D.ligatureComponent,T.codePoints.length)-1:T.codePoints.length-1,L=t.markArray[P],G=F[M][L.class];return this.applyAnchor(L,G,I),!0;case 6:var B=this.coverageIndex(t.mark1Coverage);if(-1===B)return!1;var E=this.glyphIterator.peekIndex(-1),z=this.glyphs[E];if(!z||!z.isMark)return!1;var R=this.glyphIterator.cur,V=!1;if(R.ligatureID===z.ligatureID?R.ligatureID?R.ligatureComponent===z.ligatureComponent&&(V=!0):V=!0:(R.ligatureID&&!R.ligatureComponent||z.ligatureID&&!z.ligatureComponent)&&(V=!0),!V)return!1;var U=this.coverageIndex(t.mark2Coverage,z.id);if(-1===U)return!1;var N=t.mark1Array[B],q=t.mark2Array[U][N.class];return this.applyAnchor(N,q,E),!0;case 7:return this.applyContext(t);case 8:return this.applyChainingContext(t);case 9:return this.applyLookup(t.lookupType,t.extension);default:throw new Error(\"Unsupported GPOS table: \"+e)}},t.prototype.applyAnchor=function(e,t,r){var a=this.getAnchor(t),n=this.getAnchor(e.markAnchor),i=(this.positions[r],this.positions[this.glyphIterator.index]);i.xOffset=a.x-n.x,i.yOffset=a.y-n.y,this.glyphIterator.cur.markAttachment=r},t.prototype.getAnchor=function(e){var t=e.xCoordinate,r=e.yCoordinate,a=this.font._variationProcessor,n=this.font.GDEF&&this.font.GDEF.itemVariationStore;return a&&n&&(e.xDeviceTable&&(t+=a.getDelta(n,e.xDeviceTable.a,e.xDeviceTable.b)),e.yDeviceTable&&(r+=a.getDelta(n,e.yDeviceTable.a,e.yDeviceTable.b))),{x:t,y:r}},t.prototype.applyFeatures=function(t,r,a){e.prototype.applyFeatures.call(this,t,r,a);for(var n=0;n<this.glyphs.length;n++)this.fixCursiveAttachment(n);this.fixMarkAttachment()},t.prototype.fixCursiveAttachment=function(e){var t=this.glyphs[e];if(null!=t.cursiveAttachment){var r=t.cursiveAttachment;t.cursiveAttachment=null,this.fixCursiveAttachment(r),this.positions[e].yOffset+=this.positions[r].yOffset}},t.prototype.fixMarkAttachment=function(){for(var e=0;e<this.glyphs.length;e++){var t=this.glyphs[e];if(null!=t.markAttachment){var r=t.markAttachment;if(this.positions[e].xOffset+=this.positions[r].xOffset,this.positions[e].yOffset+=this.positions[r].yOffset,\"ltr\"===this.direction)for(var a=r;a<e;a++)this.positions[e].xOffset-=this.positions[a].xAdvance,this.positions[e].yOffset-=this.positions[a].yAdvance;else for(var n=r+1;n<e+1;n++)this.positions[e].xOffset+=this.positions[n].xAdvance,this.positions[e].yOffset+=this.positions[n].yAdvance}}},t}(ti),ks=function(){function e(t){$(this,e),this.font=t,this.plan=null,this.GSUBProcessor=null,this.GPOSProcessor=null,this.fallbackPosition=!0,t.GSUB&&(this.GSUBProcessor=new Ss(t,t.GSUB)),t.GPOS&&(this.GPOSProcessor=new _s(t,t.GPOS))}return e.prototype.setup=function(e){var t=null;for(var r in this.GPOSProcessor&&(t=this.GPOSProcessor.selectScript(e.script,e.language,e.direction)),this.GSUBProcessor&&(t=this.GSUBProcessor.selectScript(e.script,e.language,e.direction)),this.shaper=function(e){Array.isArray(e)||(e=[e]);var t=e,r=Array.isArray(t),a=0;for(t=r?t:t[Symbol.iterator]();;){var n;if(r){if(a>=t.length)break;n=t[a++]}else{if((a=t.next()).done)break;n=a.value}var i=ws[n];if(i)return i}return Gn}(t),this.plan=new On(this.font,t,e.direction),this.shaper.plan(this.plan,e.glyphs,e.features),this.plan.allFeatures)e.features[r]=!0},e.prototype.substitute=function(e){this.GSUBProcessor&&this.plan.process(this.GSUBProcessor,e.glyphs)},e.prototype.position=function(e){return\"BEFORE_GPOS\"===this.shaper.zeroMarkWidths&&this.zeroMarkAdvances(e),this.GPOSProcessor&&this.plan.process(this.GPOSProcessor,e.glyphs,e.positions),\"AFTER_GPOS\"===this.shaper.zeroMarkWidths&&this.zeroMarkAdvances(e),\"rtl\"===e.direction&&(e.glyphs.reverse(),e.positions.reverse()),this.GPOSProcessor&&this.GPOSProcessor.features},e.prototype.zeroMarkAdvances=function(e){for(var t=0;t<e.glyphs;t++)e.glyphs[t].isMark&&(positions[t].xAdvance=0,positions[t].yAdvance=0)},e.prototype.cleanup=function(){this.glyphInfos=null,this.plan=null,this.shaper=null},e.prototype.getAvailableFeatures=function(e,t){var r=[];return this.GSUBProcessor&&(this.GSUBProcessor.selectScript(e,t),r.push.apply(r,Object.keys(this.GSUBProcessor.features))),this.GPOSProcessor&&(this.GPOSProcessor.selectScript(e,t),r.push.apply(r,Object.keys(this.GPOSProcessor.features))),r},e}(),Cs=function(){function e(t){$(this,e),this.font=t,this.unicodeLayoutEngine=null,this.kernProcessor=null,this.font.morx?this.engine=new In(this.font):(this.font.GSUB||this.font.GPOS)&&(this.engine=new ks(this.font))}return e.prototype.layout=function(e,t,r,a,n){var i=this;\"string\"===typeof t&&(n=a,a=r,r=t,t=[]),null==r&&(r=function(e){for(var t=e.length,r=0;r<t;){var a=e.charCodeAt(r++);if(55296<=a&&a<=56319&&r<t){var n=e.charCodeAt(r);56320<=n&&n<=57343&&(r++,a=((1023&a)<<10)+(1023&n)+65536)}var i=u.default.getScript(a);if(\"Common\"!==i&&\"Inherited\"!==i&&\"Unknown\"!==i)return Qa[i]}return Qa.Unknown}(e));var s=this.glyphsForString(e),o=new un(s,t,r,a,n);return 0===s.length?(o.positions=[],o):(this.engine&&this.engine.setup&&this.engine.setup(o),this.substitute(o),this.position(o),this.hideDefaultIgnorables(o.glyphs,o.positions),this.engine&&this.engine.cleanup&&this.engine.cleanup(),o.stringIndices=o.glyphs.map((function(e){return e.stringIndex})),o.glyphs=o.glyphs.map((function(e){return i.font.getGlyph(e.id,e.codePoints)})),o)},e.prototype.glyphsForString=function(e){for(var t=[],r=e.length,a=0,n=-1,i=-1;a<=r;){var s=0,o=0,l=a-1;if(a<r){if(55296<=(s=e.charCodeAt(a++))&&s<=56319&&a<r){var u=e.charCodeAt(a);56320<=u&&u<=57343&&(a++,s=((1023&s)<<10)+(1023&u)+65536)}o=65024<=s&&s<=65039||917760<=s&&s<=917999?1:0}else a++;0===i&&1===o?t.push(new ri(this.font,this.font._cmapProcessor.lookup(n,s),[n,s],null,l)):0===i&&0===o&&t.push(new ri(this.font,this.font._cmapProcessor.lookup(n),[n],null,l)),n=s,i=o}return t},e.prototype.substitute=function(e){this.engine&&this.engine.substitute&&this.engine.substitute(e)},e.prototype.position=function(e){e.positions=e.glyphs.map((function(e){return new cn(e.advanceWidth)}));var t=null;this.engine&&this.engine.position&&(t=this.engine.position(e)),t||this.engine&&!this.engine.fallbackPosition||(this.unicodeLayoutEngine||(this.unicodeLayoutEngine=new Ja(this.font)),this.unicodeLayoutEngine.positionGlyphs(e.glyphs,e.positions)),t&&t.kern||!1===e.features.kern||!this.font.kern||(this.kernProcessor||(this.kernProcessor=new Xa(this.font)),this.kernProcessor.process(e.glyphs,e.positions),e.features.kern=!0)},e.prototype.hideDefaultIgnorables=function(e,t){for(var r=this.font.glyphForCodePoint(32),a=0;a<e.length;a++)this.isDefaultIgnorable(e[a].codePoints[0])&&(e[a]=r,t[a].xAdvance=0,t[a].yAdvance=0)},e.prototype.isDefaultIgnorable=function(e){var t=e>>16;if(0===t)switch(e>>8){case 0:return 173===e;case 3:return 847===e;case 6:return 1564===e;case 23:return 6068<=e&&e<=6069;case 24:return 6155<=e&&e<=6158;case 32:return 8203<=e&&e<=8207||8234<=e&&e<=8238||8288<=e&&e<=8303;case 254:return 65024<=e&&e<=65039||65279===e;case 255:return 65520<=e&&e<=65528;default:return!1}else switch(t){case 1:return 113824<=e&&e<=113827||119155<=e&&e<=119162;case 14:return 917504<=e&&e<=921599;default:return!1}},e.prototype.getAvailableFeatures=function(e,t){var r=[];return this.engine&&r.push.apply(r,this.engine.getAvailableFeatures(e,t)),this.font.kern&&-1===r.indexOf(\"kern\")&&r.push(\"kern\"),r},e.prototype.stringsForGlyph=function(e){var t=new Set,r=this.font._cmapProcessor.codePointsForGlyph(e),a=Array.isArray(r),n=0;for(r=a?r:r[Symbol.iterator]();;){var i;if(a){if(n>=r.length)break;i=r[n++]}else{if((n=r.next()).done)break;i=n.value}var s=i;t.add(String.fromCodePoint(s))}if(this.engine&&this.engine.stringsForGlyph){var o=this.engine.stringsForGlyph(e),l=Array.isArray(o),u=0;for(o=l?o:o[Symbol.iterator]();;){var c;if(l){if(u>=o.length)break;c=o[u++]}else{if((u=o.next()).done)break;c=u.value}var h=c;t.add(h)}}return Array.from(t)},e}(),xs={moveTo:\"M\",lineTo:\"L\",quadraticCurveTo:\"Q\",bezierCurveTo:\"C\",closePath:\"Z\"},As=function(){function e(){$(this,e),this.commands=[],this._bbox=null,this._cbox=null}return e.prototype.toFunction=function(){var e=this.commands.map((function(e){return\"  ctx.\"+e.command+\"(\"+e.args.join(\", \")+\");\"}));return new Function(\"ctx\",e.join(\"\\n\"))},e.prototype.toSVG=function(){return this.commands.map((function(e){var t=e.args.map((function(e){return Math.round(100*e)/100}));return\"\"+xs[e.command]+t.join(\" \")})).join(\"\")},e.prototype.mapPoints=function(t){var r=new e,a=this.commands,n=Array.isArray(a),i=0;for(a=n?a:a[Symbol.iterator]();;){var s;if(n){if(i>=a.length)break;s=a[i++]}else{if((i=a.next()).done)break;s=i.value}for(var o=s,l=[],u=0;u<o.args.length;u+=2){var c=t(o.args[u],o.args[u+1]),h=c[0],f=c[1];l.push(h,f)}r[o.command].apply(r,l)}return r},e.prototype.transform=function(e,t,r,a,n,i){return this.mapPoints((function(s,o){return[s=e*s+r*o+n,o=t*s+a*o+i]}))},e.prototype.translate=function(e,t){return this.transform(1,0,0,1,e,t)},e.prototype.rotate=function(e){var t=Math.cos(e),r=Math.sin(e);return this.transform(t,r,-r,t,0,0)},e.prototype.scale=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;return this.transform(e,0,0,t,0,0)},ee(e,[{key:\"cbox\",get:function(){if(!this._cbox){var e=new Za,t=this.commands,r=Array.isArray(t),a=0;for(t=r?t:t[Symbol.iterator]();;){var n;if(r){if(a>=t.length)break;n=t[a++]}else{if((a=t.next()).done)break;n=a.value}for(var i=n,s=0;s<i.args.length;s+=2)e.addPoint(i.args[s],i.args[s+1])}this._cbox=Object.freeze(e)}return this._cbox}},{key:\"bbox\",get:function(){if(this._bbox)return this._bbox;var e=new Za,t=0,r=0,a=function(e){return Math.pow(1-e,3)*_[A]+3*Math.pow(1-e,2)*e*k[A]+3*(1-e)*Math.pow(e,2)*C[A]+Math.pow(e,3)*x[A]},n=this.commands,i=Array.isArray(n),s=0;for(n=i?n:n[Symbol.iterator]();;){var o;if(i){if(s>=n.length)break;o=n[s++]}else{if((s=n.next()).done)break;o=s.value}var l=o;switch(l.command){case\"moveTo\":case\"lineTo\":var u=l.args,c=u[0],h=u[1];e.addPoint(c,h),t=c,r=h;break;case\"quadraticCurveTo\":case\"bezierCurveTo\":if(\"quadraticCurveTo\"===l.command)var f=l.args,p=f[0],d=f[1],y=t+2/3*(p-t),g=r+2/3*(d-r),v=(w=f[2])+2/3*(p-w),m=(S=f[3])+2/3*(d-S);else var b=l.args,w=(y=b[0],g=b[1],v=b[2],m=b[3],b[4]),S=b[5];e.addPoint(w,S);for(var _=[t,r],k=[y,g],C=[v,m],x=[w,S],A=0;A<=1;A++){var P=6*_[A]-12*k[A]+6*C[A],I=-3*_[A]+9*k[A]-9*C[A]+3*x[A];if(l=3*k[A]-3*_[A],0!==I){var O=Math.pow(P,2)-4*l*I;if(!(O<0)){var F=(-P+Math.sqrt(O))/(2*I);0<F&&F<1&&(0===A?e.addPoint(a(F),e.maxY):1===A&&e.addPoint(e.maxX,a(F)));var D=(-P-Math.sqrt(O))/(2*I);0<D&&D<1&&(0===A?e.addPoint(a(D),e.maxY):1===A&&e.addPoint(e.maxX,a(D)))}}else{if(0===P)continue;var T=-l/P;0<T&&T<1&&(0===A?e.addPoint(a(T),e.maxY):1===A&&e.addPoint(e.maxX,a(T)))}}t=w,r=S}}return this._bbox=Object.freeze(e)}}]),e}(),Ps=[\"moveTo\",\"lineTo\",\"quadraticCurveTo\",\"bezierCurveTo\",\"closePath\"],Is=function(){var e=Ps[Os];As.prototype[e]=function(){for(var t=arguments.length,r=Array(t),a=0;a<t;a++)r[a]=arguments[a];return this._bbox=this._cbox=null,this.commands.push({command:e,args:r}),this}},Os=0;Os<Ps.length;Os++)Is();var Fs,Ds=[\".notdef\",\".null\",\"nonmarkingreturn\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quotesingle\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"grave\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"Adieresis\",\"Aring\",\"Ccedilla\",\"Eacute\",\"Ntilde\",\"Odieresis\",\"Udieresis\",\"aacute\",\"agrave\",\"acircumflex\",\"adieresis\",\"atilde\",\"aring\",\"ccedilla\",\"eacute\",\"egrave\",\"ecircumflex\",\"edieresis\",\"iacute\",\"igrave\",\"icircumflex\",\"idieresis\",\"ntilde\",\"oacute\",\"ograve\",\"ocircumflex\",\"odieresis\",\"otilde\",\"uacute\",\"ugrave\",\"ucircumflex\",\"udieresis\",\"dagger\",\"degree\",\"cent\",\"sterling\",\"section\",\"bullet\",\"paragraph\",\"germandbls\",\"registered\",\"copyright\",\"trademark\",\"acute\",\"dieresis\",\"notequal\",\"AE\",\"Oslash\",\"infinity\",\"plusminus\",\"lessequal\",\"greaterequal\",\"yen\",\"mu\",\"partialdiff\",\"summation\",\"product\",\"pi\",\"integral\",\"ordfeminine\",\"ordmasculine\",\"Omega\",\"ae\",\"oslash\",\"questiondown\",\"exclamdown\",\"logicalnot\",\"radical\",\"florin\",\"approxequal\",\"Delta\",\"guillemotleft\",\"guillemotright\",\"ellipsis\",\"nonbreakingspace\",\"Agrave\",\"Atilde\",\"Otilde\",\"OE\",\"oe\",\"endash\",\"emdash\",\"quotedblleft\",\"quotedblright\",\"quoteleft\",\"quoteright\",\"divide\",\"lozenge\",\"ydieresis\",\"Ydieresis\",\"fraction\",\"currency\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"daggerdbl\",\"periodcentered\",\"quotesinglbase\",\"quotedblbase\",\"perthousand\",\"Acircumflex\",\"Ecircumflex\",\"Aacute\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Oacute\",\"Ocircumflex\",\"apple\",\"Ograve\",\"Uacute\",\"Ucircumflex\",\"Ugrave\",\"dotlessi\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\",\"Lslash\",\"lslash\",\"Scaron\",\"scaron\",\"Zcaron\",\"zcaron\",\"brokenbar\",\"Eth\",\"eth\",\"Yacute\",\"yacute\",\"Thorn\",\"thorn\",\"minus\",\"multiply\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"onehalf\",\"onequarter\",\"threequarters\",\"franc\",\"Gbreve\",\"gbreve\",\"Idotaccent\",\"Scedilla\",\"scedilla\",\"Cacute\",\"cacute\",\"Ccaron\",\"ccaron\",\"dcroat\"];function Ts(e,t,r,a,n){var i={};return Object.keys(a).forEach((function(e){i[e]=a[e]})),i.enumerable=!!i.enumerable,i.configurable=!!i.configurable,(\"value\"in i||i.initializer)&&(i.writable=!0),i=r.slice().reverse().reduce((function(r,a){return a(e,t,r)||r}),i),n&&void 0!==i.initializer&&(i.value=i.initializer?i.initializer.call(n):void 0,i.initializer=void 0),void 0===i.initializer&&(Object.defineProperty(e,t,i),i=null),i}var Ms,Ls=(Ts((Fs=function(){function e(t,r,a){$(this,e),this.id=t,this.codePoints=r,this._font=a,this.isMark=this.codePoints.length>0&&this.codePoints.every(u.default.isMark),this.isLigature=this.codePoints.length>1}return e.prototype._getPath=function(){return new As},e.prototype._getCBox=function(){return this.path.cbox},e.prototype._getBBox=function(){return this.path.bbox},e.prototype._getTableMetrics=function(e){if(this.id<e.metrics.length)return e.metrics.get(this.id);var t=e.metrics.get(e.metrics.length-1);return{advance:t?t.advance:0,bearing:e.bearings.get(this.id-e.metrics.length)||0}},e.prototype._getMetrics=function(e){if(this._metrics)return this._metrics;var t=this._getTableMetrics(this._font.hmtx),r=t.advance,a=t.bearing;if(this._font.vmtx)var n=this._getTableMetrics(this._font.vmtx),i=n.advance,s=n.bearing;else{var o;if(\"undefined\"!==typeof e&&null!==e||(e=this.cbox),(o=this._font[\"OS/2\"])&&o.version>0)i=Math.abs(o.typoAscender-o.typoDescender),s=o.typoAscender-e.maxY;else{var l=this._font.hhea;i=Math.abs(l.ascent-l.descent),s=l.ascent-e.maxY}}return this._font._variationProcessor&&this._font.HVAR&&(r+=this._font._variationProcessor.getAdvanceAdjustment(this.id,this._font.HVAR)),this._metrics={advanceWidth:r,advanceHeight:i,leftBearing:a,topBearing:s}},e.prototype.getScaledPath=function(e){var t=1/this._font.unitsPerEm*e;return this.path.scale(t)},e.prototype._getName=function(){var e=this._font.post;if(!e)return null;switch(e.version){case 1:return Ds[this.id];case 2:var t=e.glyphNameIndex[this.id];return t<Ds.length?Ds[t]:e.names[t-Ds.length];case 2.5:return Ds[this.id+e.offsets[this.id]];case 4:return String.fromCharCode(e.map[this.id])}},e.prototype.render=function(e,t){e.save();var r=1/this._font.head.unitsPerEm*t;e.scale(r,r),this.path.toFunction()(e),e.fill(),e.restore()},ee(e,[{key:\"cbox\",get:function(){return this._getCBox()}},{key:\"bbox\",get:function(){return this._getBBox()}},{key:\"path\",get:function(){return this._getPath()}},{key:\"advanceWidth\",get:function(){return this._getMetrics().advanceWidth}},{key:\"advanceHeight\",get:function(){return this._getMetrics().advanceHeight}},{key:\"ligatureCaretPositions\",get:function(){}},{key:\"name\",get:function(){return this._getName()}}]),e}()).prototype,\"cbox\",[w],Object.getOwnPropertyDescriptor(Fs.prototype,\"cbox\"),Fs.prototype),Ts(Fs.prototype,\"bbox\",[w],Object.getOwnPropertyDescriptor(Fs.prototype,\"bbox\"),Fs.prototype),Ts(Fs.prototype,\"path\",[w],Object.getOwnPropertyDescriptor(Fs.prototype,\"path\"),Fs.prototype),Ts(Fs.prototype,\"advanceWidth\",[w],Object.getOwnPropertyDescriptor(Fs.prototype,\"advanceWidth\"),Fs.prototype),Ts(Fs.prototype,\"advanceHeight\",[w],Object.getOwnPropertyDescriptor(Fs.prototype,\"advanceHeight\"),Fs.prototype),Ts(Fs.prototype,\"name\",[w],Object.getOwnPropertyDescriptor(Fs.prototype,\"name\"),Fs.prototype),Fs),Gs=new i.a.Struct({numberOfContours:i.a.int16,xMin:i.a.int16,yMin:i.a.int16,xMax:i.a.int16,yMax:i.a.int16}),Bs=function(){function e(t,r){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;$(this,e),this.onCurve=t,this.endContour=r,this.x=a,this.y=n}return e.prototype.copy=function(){return new e(this.onCurve,this.endContour,this.x,this.y)},e}(),Es=function e(t,r,a){$(this,e),this.glyphID=t,this.dx=r,this.dy=a,this.pos=0,this.scaleX=this.scaleY=1,this.scale01=this.scale10=0},zs=function(e){function t(){return $(this,t),re(this,e.apply(this,arguments))}return te(t,e),t.prototype._getCBox=function(e){if(this._font._variationProcessor&&!e)return this.path.cbox;var t=this._font._getTableStream(\"glyf\");t.pos+=this._font.loca.offsets[this.id];var r=Gs.decode(t),a=new Za(r.xMin,r.yMin,r.xMax,r.yMax);return Object.freeze(a)},t.prototype._parseGlyphCoord=function(e,t,r,a){if(r){var n=e.readUInt8();a||(n=-n),n+=t}else if(a)n=t;else n=t+e.readInt16BE();return n},t.prototype._decode=function(){var e=this._font.loca.offsets[this.id];if(e===this._font.loca.offsets[this.id+1])return null;var t=this._font._getTableStream(\"glyf\");t.pos+=e;var r=t.pos,a=Gs.decode(t);return a.numberOfContours>0?this._decodeSimple(a,t):a.numberOfContours<0&&this._decodeComposite(a,t,r),a},t.prototype._decodeSimple=function(e,t){e.points=[];var r=new i.a.Array(i.a.uint16,e.numberOfContours).decode(t);e.instructions=new i.a.Array(i.a.uint8,i.a.uint16).decode(t);for(var a=[],n=r[r.length-1]+1;a.length<n;){var s=t.readUInt8();if(a.push(s),8&s)for(var o=t.readUInt8(),l=0;l<o;l++)a.push(s)}for(var u=0;u<a.length;u++){s=a[u];var c=new Bs(!!(1&s),r.indexOf(u)>=0,0,0);e.points.push(c)}var h=0;for(u=0;u<a.length;u++){s=a[u];e.points[u].x=h=this._parseGlyphCoord(t,h,2&s,16&s)}var f=0;for(u=0;u<a.length;u++){s=a[u];e.points[u].y=f=this._parseGlyphCoord(t,f,4&s,32&s)}if(this._font._variationProcessor){var p=e.points.slice();p.push.apply(p,this._getPhantomPoints(e)),this._font._variationProcessor.transformPoints(this.id,p),e.phantomPoints=p.slice(-4)}},t.prototype._decodeComposite=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;e.components=[];for(var a=!1,n=32;32&n;){n=t.readUInt16BE();var i=t.pos-r,s=t.readUInt16BE();if(a||(a=0!==(256&n)),1&n)var o=t.readInt16BE(),l=t.readInt16BE();else o=t.readInt8(),l=t.readInt8();(h=new Es(s,o,l)).pos=i,8&n?h.scaleX=h.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824:64&n?(h.scaleX=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,h.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824):128&n&&(h.scaleX=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,h.scale01=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,h.scale10=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,h.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824),e.components.push(h)}if(this._font._variationProcessor){for(var u=[],c=0;c<e.components.length;c++){var h=e.components[c];u.push(new Bs(!0,!0,h.dx,h.dy))}u.push.apply(u,this._getPhantomPoints(e)),this._font._variationProcessor.transformPoints(this.id,u),e.phantomPoints=u.splice(-4,4);for(var f=0;f<u.length;f++){var p=u[f];e.components[f].dx=p.x,e.components[f].dy=p.y}}return a},t.prototype._getPhantomPoints=function(e){var t=this._getCBox(!0);null==this._metrics&&(this._metrics=Ls.prototype._getMetrics.call(this,t));var r=this._metrics,a=r.advanceWidth,n=r.advanceHeight,i=r.leftBearing,s=r.topBearing;return[new Bs(!1,!0,e.xMin-i,0),new Bs(!1,!0,e.xMin-i+a,0),new Bs(!1,!0,0,e.yMax+s),new Bs(!1,!0,0,e.yMax+s+n)]},t.prototype._getContours=function(){var e=this._decode();if(!e)return[];var t=[];if(e.numberOfContours<0){var r=e.components,a=Array.isArray(r),n=0;for(r=a?r:r[Symbol.iterator]();;){var i;if(a){if(n>=r.length)break;i=r[n++]}else{if((n=r.next()).done)break;i=n.value}for(var s=i,o=this._font.getGlyph(s.glyphID)._getContours(),l=0;l<o.length;l++)for(var u=o[l],c=0;c<u.length;c++){var h=u[c],f=h.x*s.scaleX+h.y*s.scale01+s.dx,p=h.y*s.scaleY+h.x*s.scale10+s.dy;t.push(new Bs(h.onCurve,h.endContour,f,p))}}}else t=e.points||[];e.phantomPoints&&!this._font.directory.tables.HVAR&&(this._metrics.advanceWidth=e.phantomPoints[1].x-e.phantomPoints[0].x,this._metrics.advanceHeight=e.phantomPoints[3].y-e.phantomPoints[2].y,this._metrics.leftBearing=e.xMin-e.phantomPoints[0].x,this._metrics.topBearing=e.phantomPoints[2].y-e.yMax);for(var d=[],y=[],g=0;g<t.length;g++){var v=t[g];y.push(v),v.endContour&&(d.push(y),y=[])}return d},t.prototype._getMetrics=function(){if(this._metrics)return this._metrics;var t=this._getCBox(!0);return e.prototype._getMetrics.call(this,t),this._font._variationProcessor&&!this._font.HVAR&&this.path,this._metrics},t.prototype._getPath=function(){for(var e=this._getContours(),t=new As,r=0;r<e.length;r++){var a=e[r],n=a[0],i=a[a.length-1],s=0;if(n.onCurve){var o=null;s=1}else o=n=i.onCurve?i:new Bs(!1,!1,(n.x+i.x)/2,(n.y+i.y)/2);t.moveTo(n.x,n.y);for(var l=s;l<a.length;l++){var u=a[l],c=0===l?n:a[l-1];if(c.onCurve&&u.onCurve)t.lineTo(u.x,u.y);else if(c.onCurve&&!u.onCurve)o=u;else if(c.onCurve||u.onCurve){if(c.onCurve||!u.onCurve)throw new Error(\"Unknown TTF path state\");t.quadraticCurveTo(o.x,o.y,u.x,u.y);o=null}else{var h=(c.x+u.x)/2,f=(c.y+u.y)/2;t.quadraticCurveTo(c.x,c.y,h,f);var o=u}}o&&t.quadraticCurveTo(o.x,o.y,n.x,n.y),t.closePath()}return t},t}(Ls),Rs=function(e){function t(){return $(this,t),re(this,e.apply(this,arguments))}return te(t,e),t.prototype._getName=function(){return this._font.CFF2?e.prototype._getName.call(this):this._font[\"CFF \"].getGlyphName(this.id)},t.prototype.bias=function(e){return e.length<1240?107:e.length<33900?1131:32768},t.prototype._getPath=function(){var e=this._font.stream,t=(e.pos,this._font.CFF2||this._font[\"CFF \"]),r=t.topDict.CharStrings[this.id],a=r.offset+r.length;e.pos=r.offset;var n=new As,i=[],s=[],o=null,l=0,u=0,c=0,h=void 0,f=void 0,p=!1;this._usedGsubrs=h={},this._usedSubrs=f={};var d=t.globalSubrIndex||[],y=this.bias(d),g=t.privateDictForGlyph(this.id),v=g.Subrs||[],m=this.bias(v),b=t.topDict.vstore&&t.topDict.vstore.itemVariationStore,w=g.vsindex,S=this._font._variationProcessor;function _(){null==o&&(o=i.shift()+g.nominalWidthX)}function k(){return i.length%2!==0&&_(),l+=i.length>>1,i.length=0}function C(e,t){p&&n.closePath(),n.moveTo(e,t),p=!0}return function r(){for(;e.pos<a;){var o=e.readUInt8();if(o<32)switch(o){case 1:case 3:case 18:case 23:k();break;case 4:i.length>1&&_(),c+=i.shift(),C(u,c);break;case 5:for(;i.length>=2;)u+=i.shift(),c+=i.shift(),n.lineTo(u,c);break;case 6:case 7:for(var g=6===o;i.length>=1;)g?u+=i.shift():c+=i.shift(),n.lineTo(u,c),g=!g;break;case 8:for(;i.length>0;){var x=u+i.shift(),A=c+i.shift(),P=x+i.shift(),I=A+i.shift();u=P+i.shift(),c=I+i.shift(),n.bezierCurveTo(x,A,P,I,u,c)}break;case 10:var O=i.pop()+m,F=v[O];if(F){f[O]=!0;var D=e.pos,T=a;e.pos=F.offset,a=F.offset+F.length,r(),e.pos=D,a=T}break;case 11:if(t.version>=2)break;return;case 14:if(t.version>=2)break;i.length>0&&_(),p&&(n.closePath(),p=!1);break;case 15:if(t.version<2)throw new Error(\"vsindex operator not supported in CFF v1\");w=i.pop();break;case 16:if(t.version<2)throw new Error(\"blend operator not supported in CFF v1\");if(!S)throw new Error(\"blend operator in non-variation font\");for(var M=S.getBlendVector(b,w),L=i.pop(),G=L*M.length,B=i.length-G,E=B-L,z=0;z<L;z++){for(var R=i[E+z],V=0;V<M.length;V++)R+=M[V]*i[B++];i[E+z]=R}for(;G--;)i.pop();break;case 19:case 20:k(),e.pos+=l+7>>3;break;case 21:i.length>2&&_(),u+=i.shift(),c+=i.shift(),C(u,c);break;case 22:i.length>1&&_(),C(u+=i.shift(),c);break;case 24:for(;i.length>=8;){x=u+i.shift(),A=c+i.shift(),P=x+i.shift(),I=A+i.shift();u=P+i.shift(),c=I+i.shift(),n.bezierCurveTo(x,A,P,I,u,c)}u+=i.shift(),c+=i.shift(),n.lineTo(u,c);break;case 25:for(;i.length>=8;)u+=i.shift(),c+=i.shift(),n.lineTo(u,c);x=u+i.shift(),A=c+i.shift(),P=x+i.shift(),I=A+i.shift();u=P+i.shift(),c=I+i.shift(),n.bezierCurveTo(x,A,P,I,u,c);break;case 26:for(i.length%2&&(u+=i.shift());i.length>=4;)x=u,A=c+i.shift(),P=x+i.shift(),I=A+i.shift(),u=P,c=I+i.shift(),n.bezierCurveTo(x,A,P,I,u,c);break;case 27:for(i.length%2&&(c+=i.shift());i.length>=4;)x=u+i.shift(),A=c,P=x+i.shift(),I=A+i.shift(),u=P+i.shift(),c=I,n.bezierCurveTo(x,A,P,I,u,c);break;case 28:i.push(e.readInt16BE());break;case 29:if(O=i.pop()+y,F=d[O]){h[O]=!0;D=e.pos,T=a;e.pos=F.offset,a=F.offset+F.length,r(),e.pos=D,a=T}break;case 30:case 31:for(g=31===o;i.length>=4;)g?(x=u+i.shift(),A=c,P=x+i.shift(),I=A+i.shift(),c=I+i.shift(),u=P+(1===i.length?i.shift():0)):(x=u,A=c+i.shift(),P=x+i.shift(),I=A+i.shift(),u=P+i.shift(),c=I+(1===i.length?i.shift():0)),n.bezierCurveTo(x,A,P,I,u,c),g=!g;break;case 12:switch(o=e.readUInt8()){case 3:var U=i.pop(),N=i.pop();i.push(U&&N?1:0);break;case 4:U=i.pop(),N=i.pop(),i.push(U||N?1:0);break;case 5:U=i.pop(),i.push(U?0:1);break;case 9:U=i.pop(),i.push(Math.abs(U));break;case 10:U=i.pop(),N=i.pop(),i.push(U+N);break;case 11:U=i.pop(),N=i.pop(),i.push(U-N);break;case 12:U=i.pop(),N=i.pop(),i.push(U/N);break;case 14:U=i.pop(),i.push(-U);break;case 15:U=i.pop(),N=i.pop(),i.push(U===N?1:0);break;case 18:i.pop();break;case 20:var q=i.pop(),j=i.pop();s[j]=q;break;case 21:j=i.pop(),i.push(s[j]||0);break;case 22:var H=i.pop(),Y=i.pop(),W=i.pop(),K=i.pop();i.push(W<=K?H:Y);break;case 23:i.push(Math.random());break;case 24:U=i.pop(),N=i.pop(),i.push(U*N);break;case 26:U=i.pop(),i.push(Math.sqrt(U));break;case 27:U=i.pop(),i.push(U,U);break;case 28:U=i.pop(),N=i.pop(),i.push(N,U);break;case 29:(j=i.pop())<0?j=0:j>i.length-1&&(j=i.length-1),i.push(i[j]);break;case 30:var X=i.pop(),J=i.pop();if(J>=0)for(;J>0;){for(var Z=i[X-1],Q=X-2;Q>=0;Q--)i[Q+1]=i[Q];i[0]=Z,J--}else for(;J<0;){Z=i[0];for(var $=0;$<=X;$++)i[$]=i[$+1];i[X-1]=Z,J++}break;case 34:x=u+i.shift(),A=c,P=x+i.shift(),I=A+i.shift();var ee=P+i.shift(),te=I,re=ee+i.shift(),ae=te,ne=re+i.shift(),ie=ae,se=ne+i.shift(),oe=ie;u=se,c=oe,n.bezierCurveTo(x,A,P,I,ee,te),n.bezierCurveTo(re,ae,ne,ie,se,oe);break;case 35:for(var le=[],ue=0;ue<=5;ue++)u+=i.shift(),c+=i.shift(),le.push(u,c);n.bezierCurveTo.apply(n,le.slice(0,6)),n.bezierCurveTo.apply(n,le.slice(6)),i.shift();break;case 36:x=u+i.shift(),A=c+i.shift(),P=x+i.shift(),ae=te=I=A+i.shift(),ne=(re=(ee=P+i.shift())+i.shift())+i.shift(),ie=ae+i.shift(),se=ne+i.shift(),u=se,c=oe=ie,n.bezierCurveTo(x,A,P,I,ee,te),n.bezierCurveTo(re,ae,ne,ie,se,oe);break;case 37:var ce=u,he=c;le=[];for(var fe=0;fe<=4;fe++)u+=i.shift(),c+=i.shift(),le.push(u,c);Math.abs(u-ce)>Math.abs(c-he)?(u+=i.shift(),c=he):(u=ce,c+=i.shift()),le.push(u,c),n.bezierCurveTo.apply(n,le.slice(0,6)),n.bezierCurveTo.apply(n,le.slice(6));break;default:throw new Error(\"Unknown op: 12 \"+o)}break;default:throw new Error(\"Unknown op: \"+o)}else if(o<247)i.push(o-139);else if(o<251){var pe=e.readUInt8();i.push(256*(o-247)+pe+108)}else if(o<255){pe=e.readUInt8();i.push(256*-(o-251)-pe-108)}else i.push(e.readInt32BE()/65536)}}(),p&&n.closePath(),n},t}(Ls),Vs=new i.a.Struct({originX:i.a.uint16,originY:i.a.uint16,type:new i.a.String(4),data:new i.a.Buffer((function(e){return e.parent.buflen-e._currentOffset}))}),Us=function(e){function t(){return $(this,t),re(this,e.apply(this,arguments))}return te(t,e),t.prototype.getImageForSize=function(e){for(var t=0;t<this._font.sbix.imageTables.length;t++){var r=this._font.sbix.imageTables[t];if(r.ppem>=e)break}var a=r.imageOffsets,n=a[this.id],i=a[this.id+1];return n===i?null:(this._font.stream.pos=n,Vs.decode(this._font.stream,{buflen:i-n}))},t.prototype.render=function(t,r){var a=this.getImageForSize(r);if(null!=a){var n=r/this._font.unitsPerEm;t.image(a.data,{height:r,x:a.originX,y:(this.bbox.minY-a.originY)*n})}this._font.sbix.flags.renderOutlines&&e.prototype.render.call(this,t,r)},t}(zs),Ns=function e(t,r){$(this,e),this.glyph=t,this.color=r},qs=function(e){function t(){return $(this,t),re(this,e.apply(this,arguments))}return te(t,e),t.prototype._getBBox=function(){for(var e=new Za,t=0;t<this.layers.length;t++){var r=this.layers[t].glyph.bbox;e.addPoint(r.minX,r.minY),e.addPoint(r.maxX,r.maxY)}return e},t.prototype.render=function(e,t){var r=this.layers,a=Array.isArray(r),n=0;for(r=a?r:r[Symbol.iterator]();;){var i;if(a){if(n>=r.length)break;i=r[n++]}else{if((n=r.next()).done)break;i=n.value}var s=i,o=s.glyph,l=s.color;e.fillColor([l.red,l.green,l.blue],l.alpha/255*100),o.render(e,t)}},ee(t,[{key:\"layers\",get:function(){for(var e=this._font.CPAL,t=this._font.COLR,r=0,a=t.baseGlyphRecord.length-1;r<=a;){var n=r+a>>1,i=t.baseGlyphRecord[n];if(this.id<i.gid)a=n-1;else{if(!(this.id>i.gid)){var s=i;break}r=n+1}}if(null==s){var o=this._font._getBaseGlyph(this.id);return[new Ns(o,c={red:0,green:0,blue:0,alpha:255})]}for(var l=[],u=s.firstLayerIndex;u<s.firstLayerIndex+s.numLayers;u++){i=t.layerRecords[u];var c=e.colorRecords[i.paletteIndex];o=this._font._getBaseGlyph(i.gid);l.push(new Ns(o,c))}return l}}]),t}(Ls),js=function(){function e(t,r){$(this,e),this.font=t,this.normalizedCoords=this.normalizeCoords(r),this.blendVectors=new Map}return e.prototype.normalizeCoords=function(e){for(var t=[],r=0;r<this.font.fvar.axis.length;r++){var a=this.font.fvar.axis[r];e[r]<a.defaultValue?t.push((e[r]-a.defaultValue+Number.EPSILON)/(a.defaultValue-a.minValue+Number.EPSILON)):t.push((e[r]-a.defaultValue+Number.EPSILON)/(a.maxValue-a.defaultValue+Number.EPSILON))}if(this.font.avar)for(r=0;r<this.font.avar.segment.length;r++)for(var n=this.font.avar.segment[r],i=0;i<n.correspondence.length;i++){var s=n.correspondence[i];if(i>=1&&t[r]<s.fromCoord){var o=n.correspondence[i-1];t[r]=((t[r]-o.fromCoord)*(s.toCoord-o.toCoord)+Number.EPSILON)/(s.fromCoord-o.fromCoord+Number.EPSILON)+o.toCoord;break}}return t},e.prototype.transformPoints=function(e,t){if(this.font.fvar&&this.font.gvar){var r=this.font.gvar;if(!(e>=r.glyphCount)){var a=r.offsets[e];if(a!==r.offsets[e+1]){var n=this.font.stream;if(n.pos=a,!(n.pos>=n.length)){var i=n.readUInt16BE(),s=a+n.readUInt16BE();if(32768&i){var o=n.pos;n.pos=s;var l=this.decodePoints();s=n.pos,n.pos=o}var u=t.map((function(e){return e.copy()}));i&=4095;for(var c=0;c<i;c++){var h=n.readUInt16BE(),f=n.readUInt16BE();if(32768&f)for(var p=[],d=0;d<r.axisCount;d++)p.push(n.readInt16BE()/16384);else{if((4095&f)>=r.globalCoordCount)throw new Error(\"Invalid gvar table\");p=r.globalCoords[4095&f]}if(16384&f){for(var y=[],g=0;g<r.axisCount;g++)y.push(n.readInt16BE()/16384);for(var v=[],m=0;m<r.axisCount;m++)v.push(n.readInt16BE()/16384)}var b=this.tupleFactor(f,p,y,v);if(0!==b){o=n.pos;if(n.pos=s,8192&f)var w=this.decodePoints();else w=l;var S=0===w.length?t.length:w.length,_=this.decodeDeltas(S),k=this.decodeDeltas(S);if(0===w.length)for(var C=0;C<t.length;C++){var x=t[C];x.x+=Math.round(_[C]*b),x.y+=Math.round(k[C]*b)}else{for(var A=u.map((function(e){return e.copy()})),P=t.map((function(){return!1})),I=0;I<w.length;I++){var O=w[I];if(O<t.length){var F=A[O];P[O]=!0,F.x+=Math.round(_[I]*b),F.y+=Math.round(k[I]*b)}}this.interpolateMissingDeltas(A,u,P);for(var D=0;D<t.length;D++){var T=A[D].x-u[D].x,M=A[D].y-u[D].y;t[D].x+=T,t[D].y+=M}}s+=h,n.pos=o}else s+=h}}}}}},e.prototype.decodePoints=function(){var e=this.font.stream,t=e.readUInt8();128&t&&(t=(127&t)<<8|e.readUInt8());for(var r=new Uint16Array(t),a=0,n=0;a<t;)for(var i=e.readUInt8(),s=1+(127&i),o=128&i?e.readUInt16:e.readUInt8,l=0;l<s&&a<t;l++)n+=o.call(e),r[a++]=n;return r},e.prototype.decodeDeltas=function(e){for(var t=this.font.stream,r=0,a=new Int16Array(e);r<e;){var n=t.readUInt8(),i=1+(63&n);if(128&n)r+=i;else for(var s=64&n?t.readInt16BE:t.readInt8,o=0;o<i&&r<e;o++)a[r++]=s.call(t)}return a},e.prototype.tupleFactor=function(e,t,r,a){for(var n=this.normalizedCoords,i=this.font.gvar,s=1,o=0;o<i.axisCount;o++)if(0!==t[o]){if(0===n[o])return 0;if(0===(16384&e)){if(n[o]<Math.min(0,t[o])||n[o]>Math.max(0,t[o]))return 0;s=(s*n[o]+Number.EPSILON)/(t[o]+Number.EPSILON)}else{if(n[o]<r[o]||n[o]>a[o])return 0;s=n[o]<t[o]?s*(n[o]-r[o]+Number.EPSILON)/(t[o]-r[o]+Number.EPSILON):s*(a[o]-n[o]+Number.EPSILON)/(a[o]-t[o]+Number.EPSILON)}}return s},e.prototype.interpolateMissingDeltas=function(e,t,r){if(0!==e.length)for(var a=0;a<e.length;){for(var n=a,i=a,s=e[i];!s.endContour;)s=e[++i];for(;a<=i&&!r[a];)a++;if(!(a>i)){var o=a,l=a;for(a++;a<=i;)r[a]&&(this.deltaInterpolate(l+1,a-1,l,a,t,e),l=a),a++;l===o?this.deltaShift(n,i,l,t,e):(this.deltaInterpolate(l+1,i,l,o,t,e),o>0&&this.deltaInterpolate(n,o-1,l,o,t,e)),a=i+1}}},e.prototype.deltaInterpolate=function(e,t,r,a,n,i){if(!(e>t))for(var s=[\"x\",\"y\"],o=0;o<s.length;o++){var l=s[o];if(n[r][l]>n[a][l]){var u=r;r=a,a=u}var c=n[r][l],h=n[a][l],f=i[r][l],p=i[a][l];if(c!==h||f===p)for(var d=c===h?0:(p-f)/(h-c),y=e;y<=t;y++){var g=n[y][l];g<=c?g+=f-c:g>=h?g+=p-h:g=f+(g-c)*d,i[y][l]=g}}},e.prototype.deltaShift=function(e,t,r,a,n){var i=n[r].x-a[r].x,s=n[r].y-a[r].y;if(0!==i||0!==s)for(var o=e;o<=t;o++)o!==r&&(n[o].x+=i,n[o].y+=s)},e.prototype.getAdvanceAdjustment=function(e,t){var r=void 0,a=void 0;if(t.advanceWidthMapping){var n=e;n>=t.advanceWidthMapping.mapCount&&(n=t.advanceWidthMapping.mapCount-1);t.advanceWidthMapping.entryFormat;var i=t.advanceWidthMapping.mapData[n];r=i.outerIndex,a=i.innerIndex}else r=0,a=e;return this.getDelta(t.itemVariationStore,r,a)},e.prototype.getDelta=function(e,t,r){if(t>=e.itemVariationData.length)return 0;var a=e.itemVariationData[t];if(r>=a.deltaSets.length)return 0;for(var n=a.deltaSets[r],i=this.getBlendVector(e,t),s=0,o=0;o<a.regionIndexCount;o++)s+=n.deltas[o]*i[o];return s},e.prototype.getBlendVector=function(e,t){var r=e.itemVariationData[t];if(this.blendVectors.has(r))return this.blendVectors.get(r);for(var a=this.normalizedCoords,n=[],i=0;i<r.regionIndexCount;i++){for(var s=1,o=r.regionIndexes[i],l=e.variationRegionList.variationRegions[o],u=0;u<l.length;u++){var c=l[u];s*=c.startCoord>c.peakCoord||c.peakCoord>c.endCoord||c.startCoord<0&&c.endCoord>0&&0!==c.peakCoord||0===c.peakCoord?1:a[u]<c.startCoord||a[u]>c.endCoord?0:a[u]===c.peakCoord?1:a[u]<c.peakCoord?(a[u]-c.startCoord+Number.EPSILON)/(c.peakCoord-c.startCoord+Number.EPSILON):(c.endCoord-a[u]+Number.EPSILON)/(c.endCoord-c.peakCoord+Number.EPSILON)}n[i]=s}return this.blendVectors.set(r,n),n},e}(),Hs=function(){function e(t){$(this,e),this.font=t,this.glyphs=[],this.mapping={},this.includeGlyph(0)}return e.prototype.includeGlyph=function(e){return\"object\"===(\"undefined\"===typeof e?\"undefined\":Q(e))&&(e=e.id),null==this.mapping[e]&&(this.glyphs.push(e),this.mapping[e]=this.glyphs.length-1),this.mapping[e]},e.prototype.encodeStream=function(){var e=this,t=new i.a.EncodeStream;return a.nextTick((function(){return e.encode(t),t.end()})),t},e}(),Ys=function(){function e(){$(this,e)}return e.size=function(e){return e>=0&&e<=255?1:2},e.encode=function(e,t){t>=0&&t<=255?e.writeUInt8(t):e.writeInt16BE(t)},e}(),Ws=new i.a.Struct({numberOfContours:i.a.int16,xMin:i.a.int16,yMin:i.a.int16,xMax:i.a.int16,yMax:i.a.int16,endPtsOfContours:new i.a.Array(i.a.uint16,\"numberOfContours\"),instructions:new i.a.Array(i.a.uint8,i.a.uint16),flags:new i.a.Array(i.a.uint8,0),xPoints:new i.a.Array(Ys,0),yPoints:new i.a.Array(Ys,0)}),Ks=function(){function e(){$(this,e)}return e.prototype.encodeSimple=function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],r=[],a=[],n=[],s=[],o=0,l=0,u=0,c=0,h=0,f=0;f<e.commands.length;f++){for(var p=e.commands[f],d=0;d<p.args.length;d+=2){var y=p.args[d],g=p.args[d+1],v=0;if(\"quadraticCurveTo\"===p.command&&2===d){var m=e.commands[f+1];if(m&&\"quadraticCurveTo\"===m.command){var b=(l+m.args[0])/2,w=(u+m.args[1])/2;if(y===b&&g===w)continue}}\"quadraticCurveTo\"===p.command&&0===d||(v|=1),v=this._encodePoint(y,l,a,v,2,16),(v=this._encodePoint(g,u,n,v,4,32))===c&&o<255?(s[s.length-1]|=8,o++):(o>0&&(s.push(o),o=0),s.push(v),c=v),l=y,u=g,h++}\"closePath\"===p.command&&r.push(h-1)}e.commands.length>1&&\"closePath\"!==e.commands[e.commands.length-1].command&&r.push(h-1);var S=e.bbox,_={numberOfContours:r.length,xMin:S.minX,yMin:S.minY,xMax:S.maxX,yMax:S.maxY,endPtsOfContours:r,instructions:t,flags:s,xPoints:a,yPoints:n},k=Ws.size(_),C=4-k%4,x=new i.a.EncodeStream(k+C);return Ws.encode(x,_),0!==C&&x.fill(0,C),x.buffer},e.prototype._encodePoint=function(e,t,r,a,n,i){var s=e-t;return e===t?a|=i:(-255<=s&&s<=255&&(a|=n,s<0?s=-s:a|=i),r.push(s)),a},e}(),Xs=function(t){function r(e){$(this,r);var a=re(this,t.call(this,e));return a.glyphEncoder=new Ks,a}return te(r,t),r.prototype._addGlyph=function(t){var r=this.font.getGlyph(t),a=r._decode(),n=this.font.loca.offsets[t],i=this.font.loca.offsets[t+1],s=this.font._getTableStream(\"glyf\");s.pos+=n;var o=s.readBuffer(i-n);if(a&&a.numberOfContours<0){o=e.from(o);var l=a.components,u=Array.isArray(l),c=0;for(l=u?l:l[Symbol.iterator]();;){var h;if(u){if(c>=l.length)break;h=l[c++]}else{if((c=l.next()).done)break;h=c.value}var f=h;t=this.includeGlyph(f.glyphID),o.writeUInt16BE(t,f.pos)}}else a&&this.font._variationProcessor&&(o=this.glyphEncoder.encodeSimple(r.path,a.instructions));return this.glyf.push(o),this.loca.offsets.push(this.offset),this.hmtx.metrics.push({advance:r.advanceWidth,bearing:r._getMetrics().leftBearing}),this.offset+=o.length,this.glyf.length-1},r.prototype.encode=function(e){this.glyf=[],this.offset=0,this.loca={offsets:[]},this.hmtx={metrics:[],bearings:[]};for(var t=0;t<this.glyphs.length;)this._addGlyph(this.glyphs[t++]);var r=y()(this.font.maxp);r.numGlyphs=this.glyf.length,this.loca.offsets.push(this.offset),Va.loca.preEncode.call(this.loca);var a=y()(this.font.head);a.indexToLocFormat=this.loca.version;var n=y()(this.font.hhea);n.numberOfMetrics=this.hmtx.metrics.length,qa.encode(e,{tables:{head:a,hhea:n,loca:this.loca,maxp:r,\"cvt \":this.font[\"cvt \"],prep:this.font.prep,glyf:this.glyf,hmtx:this.hmtx,fpgm:this.font.fpgm}})},r}(Hs),Js=function(t){function r(e){$(this,r);var a=re(this,t.call(this,e));if(a.cff=a.font[\"CFF \"],!a.cff)throw new Error(\"Not a CFF Font\");return a}return te(r,t),r.prototype.subsetCharstrings=function(){this.charstrings=[];var e={},t=this.glyphs,r=Array.isArray(t),a=0;for(t=r?t:t[Symbol.iterator]();;){var n;if(r){if(a>=t.length)break;n=t[a++]}else{if((a=t.next()).done)break;n=a.value}var i=n;this.charstrings.push(this.cff.getCharString(i));var s=this.font.getGlyph(i);s.path;for(var o in s._usedGsubrs)e[o]=!0}this.gsubrs=this.subsetSubrs(this.cff.globalSubrIndex,e)},r.prototype.subsetSubrs=function(t,r){for(var a=[],n=0;n<t.length;n++){var i=t[n];r[n]?(this.cff.stream.pos=i.offset,a.push(this.cff.stream.readBuffer(i.length))):a.push(e.from([11]))}return a},r.prototype.subsetFontdict=function(e){e.FDArray=[],e.FDSelect={version:0,fds:[]};var t={},r=[],a=this.glyphs,n=Array.isArray(a),i=0;for(a=n?a:a[Symbol.iterator]();;){var s;if(n){if(i>=a.length)break;s=a[i++]}else{if((i=a.next()).done)break;s=i.value}var o=s,l=this.cff.fdForGlyph(o);if(null!=l){t[l]||(e.FDArray.push(Object.assign({},this.cff.topDict.FDArray[l])),r.push({})),t[l]=!0,e.FDSelect.fds.push(e.FDArray.length-1);var u=this.font.getGlyph(o);u.path;for(var c in u._usedSubrs)r[r.length-1][c]=!0}}for(var h=0;h<e.FDArray.length;h++){var f=e.FDArray[h];delete f.FontName,f.Private&&f.Private.Subrs&&(f.Private=Object.assign({},f.Private),f.Private.Subrs=this.subsetSubrs(f.Private.Subrs,r[h]))}},r.prototype.createCIDFontdict=function(e){var t={},r=this.glyphs,a=Array.isArray(r),n=0;for(r=a?r:r[Symbol.iterator]();;){var i;if(a){if(n>=r.length)break;i=r[n++]}else{if((n=r.next()).done)break;i=n.value}var s=i,o=this.font.getGlyph(s);o.path;for(var l in o._usedSubrs)t[l]=!0}var u=Object.assign({},this.cff.topDict.Private);return this.cff.topDict.Private&&this.cff.topDict.Private.Subrs&&(u.Subrs=this.subsetSubrs(this.cff.topDict.Private.Subrs,t)),e.FDArray=[{Private:u}],e.FDSelect={version:3,nRanges:1,ranges:[{first:0,fd:0}],sentinel:this.charstrings.length}},r.prototype.addString=function(e){return e?(this.strings||(this.strings=[]),this.strings.push(e),he.length+this.strings.length-1):null},r.prototype.encode=function(e){this.subsetCharstrings();var t={version:this.charstrings.length>255?2:1,ranges:[{first:1,nLeft:this.charstrings.length-2}]},r=Object.assign({},this.cff.topDict);r.Private=null,r.charset=t,r.Encoding=null,r.CharStrings=this.charstrings;for(var a=[\"version\",\"Notice\",\"Copyright\",\"FullName\",\"FamilyName\",\"Weight\",\"PostScript\",\"BaseFontName\",\"FontName\"],n=0;n<a.length;n++){var i=a[n];r[i]=this.addString(this.cff.string(r[i]))}r.ROS=[this.addString(\"Adobe\"),this.addString(\"Identity\"),0],r.CIDCount=this.charstrings.length,this.cff.isCIDFont?this.subsetFontdict(r):this.createCIDFontdict(r);var s={version:1,hdrSize:this.cff.hdrSize,offSize:this.cff.length,header:this.cff.header,nameIndex:[this.cff.postscriptName],topDictIndex:[r],stringIndex:this.strings,globalSubrIndex:this.gsubrs};pt.encode(e,s)},r}(Hs);function Zs(e,t,r,a,n){var i={};return Object.keys(a).forEach((function(e){i[e]=a[e]})),i.enumerable=!!i.enumerable,i.configurable=!!i.configurable,(\"value\"in i||i.initializer)&&(i.writable=!0),i=r.slice().reverse().reduce((function(r,a){return a(e,t,r)||r}),i),n&&void 0!==i.initializer&&(i.value=i.initializer?i.initializer.call(n):void 0,i.initializer=void 0),void 0===i.initializer&&(Object.defineProperty(e,t,i),i=null),i}var Qs=(Zs((Ms=function(){function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;for(var a in $(this,e),this.stream=t,this.variationCoords=r,this._directoryPos=this.stream.pos,this._tables={},this._glyphs={},this._decodeDirectory(),this.directory.tables){var n=this.directory.tables[a];Va[a]&&n.length>0&&Object.defineProperty(this,a,{get:this._getTable.bind(this,n)})}}return e.probe=function(e){var t=e.toString(\"ascii\",0,4);return\"true\"===t||\"OTTO\"===t||t===String.fromCharCode(0,1,0,0)},e.prototype._getTable=function(e){if(!(e.tag in this._tables))try{this._tables[e.tag]=this._decodeTable(e)}catch(t){m.logErrors&&(console.error(\"Error decoding table \"+e.tag),console.error(t.stack))}return this._tables[e.tag]},e.prototype._getTableStream=function(e){var t=this.directory.tables[e];return t?(this.stream.pos=t.offset,this.stream):null},e.prototype._decodeDirectory=function(){return this.directory=qa.decode(this.stream,{_startOffset:0})},e.prototype._decodeTable=function(e){var t=this.stream.pos,r=this._getTableStream(e.tag),a=Va[e.tag].decode(r,this,e.length);return this.stream.pos=t,a},e.prototype.getName=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"en\",r=this.name.records[e];return r?r[t]:null},e.prototype.hasGlyphForCodePoint=function(e){return!!this._cmapProcessor.lookup(e)},e.prototype.glyphForCodePoint=function(e){return this.getGlyph(this._cmapProcessor.lookup(e),[e])},e.prototype.glyphsForString=function(e){for(var t=[],r=e.length,a=0,n=-1,i=-1;a<=r;){var s=0,o=0;if(a<r){if(55296<=(s=e.charCodeAt(a++))&&s<=56319&&a<r){var l=e.charCodeAt(a);56320<=l&&l<=57343&&(a++,s=((1023&s)<<10)+(1023&l)+65536)}o=65024<=s&&s<=65039||917760<=s&&s<=917999?1:0}else a++;0===i&&1===o?t.push(this.getGlyph(this._cmapProcessor.lookup(n,s),[n,s])):0===i&&0===o&&t.push(this.glyphForCodePoint(n)),n=s,i=o}return t},e.prototype.layout=function(e,t,r,a,n){return this._layoutEngine.layout(e,t,r,a,n)},e.prototype.stringsForGlyph=function(e){return this._layoutEngine.stringsForGlyph(e)},e.prototype.getAvailableFeatures=function(e,t){return this._layoutEngine.getAvailableFeatures(e,t)},e.prototype._getBaseGlyph=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return this._glyphs[e]||(this.directory.tables.glyf?this._glyphs[e]=new zs(e,t,this):(this.directory.tables[\"CFF \"]||this.directory.tables.CFF2)&&(this._glyphs[e]=new Rs(e,t,this))),this._glyphs[e]||null},e.prototype.getGlyph=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return this._glyphs[e]||(this.directory.tables.sbix?this._glyphs[e]=new Us(e,t,this):this.directory.tables.COLR&&this.directory.tables.CPAL?this._glyphs[e]=new qs(e,t,this):this._getBaseGlyph(e,t)),this._glyphs[e]||null},e.prototype.createSubset=function(){return this.directory.tables[\"CFF \"]?new Js(this):new Xs(this)},e.prototype.getVariation=function(t){if(!this.directory.tables.fvar||!(this.directory.tables.gvar&&this.directory.tables.glyf||this.directory.tables.CFF2))throw new Error(\"Variations require a font with the fvar, gvar and glyf, or CFF2 tables.\");if(\"string\"===typeof t&&(t=this.namedVariations[t]),\"object\"!==(\"undefined\"===typeof t?\"undefined\":Q(t)))throw new Error(\"Variation settings must be either a variation name or settings object.\");var r=this.fvar.axis.map((function(e,r){var a=e.axisTag.trim();return a in t?Math.max(e.minValue,Math.min(e.maxValue,t[a])):e.defaultValue})),a=new i.a.DecodeStream(this.stream.buffer);a.pos=this._directoryPos;var n=new e(a,r);return n._tables=this._tables,n},e.prototype.getFont=function(e){return this.getVariation(e)},ee(e,[{key:\"postscriptName\",get:function(){var e=this.name.records.postscriptName;return e?e[Object.keys(e)[0]]:null}},{key:\"fullName\",get:function(){return this.getName(\"fullName\")}},{key:\"familyName\",get:function(){return this.getName(\"fontFamily\")}},{key:\"subfamilyName\",get:function(){return this.getName(\"fontSubfamily\")}},{key:\"copyright\",get:function(){return this.getName(\"copyright\")}},{key:\"version\",get:function(){return this.getName(\"version\")}},{key:\"ascent\",get:function(){return this.hhea.ascent}},{key:\"descent\",get:function(){return this.hhea.descent}},{key:\"lineGap\",get:function(){return this.hhea.lineGap}},{key:\"underlinePosition\",get:function(){return this.post.underlinePosition}},{key:\"underlineThickness\",get:function(){return this.post.underlineThickness}},{key:\"italicAngle\",get:function(){return this.post.italicAngle}},{key:\"capHeight\",get:function(){var e=this[\"OS/2\"];return e?e.capHeight:this.ascent}},{key:\"xHeight\",get:function(){var e=this[\"OS/2\"];return e?e.xHeight:0}},{key:\"numGlyphs\",get:function(){return this.maxp.numGlyphs}},{key:\"unitsPerEm\",get:function(){return this.head.unitsPerEm}},{key:\"bbox\",get:function(){return Object.freeze(new Za(this.head.xMin,this.head.yMin,this.head.xMax,this.head.yMax))}},{key:\"_cmapProcessor\",get:function(){return new Ka(this.cmap)}},{key:\"characterSet\",get:function(){return this._cmapProcessor.getCharacterSet()}},{key:\"_layoutEngine\",get:function(){return new Cs(this)}},{key:\"availableFeatures\",get:function(){return this._layoutEngine.getAvailableFeatures()}},{key:\"variationAxes\",get:function(){var e={};if(!this.fvar)return e;var t=this.fvar.axis,r=Array.isArray(t),a=0;for(t=r?t:t[Symbol.iterator]();;){var n;if(r){if(a>=t.length)break;n=t[a++]}else{if((a=t.next()).done)break;n=a.value}var i=n;e[i.axisTag.trim()]={name:i.name.en,min:i.minValue,default:i.defaultValue,max:i.maxValue}}return e}},{key:\"namedVariations\",get:function(){var e={};if(!this.fvar)return e;var t=this.fvar.instance,r=Array.isArray(t),a=0;for(t=r?t:t[Symbol.iterator]();;){var n;if(r){if(a>=t.length)break;n=t[a++]}else{if((a=t.next()).done)break;n=a.value}for(var i=n,s={},o=0;o<this.fvar.axis.length;o++){s[this.fvar.axis[o].axisTag.trim()]=i.coord[o]}e[i.name.en]=s}return e}},{key:\"_variationProcessor\",get:function(){if(!this.fvar)return null;var e=this.variationCoords;return e||this.CFF2?(e||(e=this.fvar.axis.map((function(e){return e.defaultValue}))),new js(this,e)):null}}]),e}()).prototype,\"bbox\",[w],Object.getOwnPropertyDescriptor(Ms.prototype,\"bbox\"),Ms.prototype),Zs(Ms.prototype,\"_cmapProcessor\",[w],Object.getOwnPropertyDescriptor(Ms.prototype,\"_cmapProcessor\"),Ms.prototype),Zs(Ms.prototype,\"characterSet\",[w],Object.getOwnPropertyDescriptor(Ms.prototype,\"characterSet\"),Ms.prototype),Zs(Ms.prototype,\"_layoutEngine\",[w],Object.getOwnPropertyDescriptor(Ms.prototype,\"_layoutEngine\"),Ms.prototype),Zs(Ms.prototype,\"variationAxes\",[w],Object.getOwnPropertyDescriptor(Ms.prototype,\"variationAxes\"),Ms.prototype),Zs(Ms.prototype,\"namedVariations\",[w],Object.getOwnPropertyDescriptor(Ms.prototype,\"namedVariations\"),Ms.prototype),Zs(Ms.prototype,\"_variationProcessor\",[w],Object.getOwnPropertyDescriptor(Ms.prototype,\"_variationProcessor\"),Ms.prototype),Ms),$s=new i.a.Struct({tag:new i.a.String(4),offset:new i.a.Pointer(i.a.uint32,\"void\",{type:\"global\"}),compLength:i.a.uint32,length:i.a.uint32,origChecksum:i.a.uint32}),eo=new i.a.Struct({tag:new i.a.String(4),flavor:i.a.uint32,length:i.a.uint32,numTables:i.a.uint16,reserved:new i.a.Reserved(i.a.uint16),totalSfntSize:i.a.uint32,majorVersion:i.a.uint16,minorVersion:i.a.uint16,metaOffset:i.a.uint32,metaLength:i.a.uint32,metaOrigLength:i.a.uint32,privOffset:i.a.uint32,privLength:i.a.uint32,tables:new i.a.Array($s,\"numTables\")});eo.process=function(){var e={},t=this.tables,r=Array.isArray(t),a=0;for(t=r?t:t[Symbol.iterator]();;){var n;if(r){if(a>=t.length)break;n=t[a++]}else{if((a=t.next()).done)break;n=a.value}var i=n;e[i.tag]=i}this.tables=e};var to=function(t){function r(){return $(this,r),re(this,t.apply(this,arguments))}return te(r,t),r.probe=function(e){return\"wOFF\"===e.toString(\"ascii\",0,4)},r.prototype._decodeDirectory=function(){this.directory=eo.decode(this.stream,{_startOffset:0})},r.prototype._getTableStream=function(t){var r=this.directory.tables[t];if(r){if(this.stream.pos=r.offset,r.compLength<r.length){this.stream.pos+=2;var a=e.alloc(r.length),n=v()(this.stream.readBuffer(r.compLength-2),a);return new i.a.DecodeStream(n)}return this.stream}return null},r}(Qs),ro=new i.a.VersionedStruct(i.a.uint32,{65536:{numFonts:i.a.uint32,offsets:new i.a.Array(i.a.uint32,\"numFonts\")},131072:{numFonts:i.a.uint32,offsets:new i.a.Array(i.a.uint32,\"numFonts\"),dsigTag:i.a.uint32,dsigLength:i.a.uint32,dsigOffset:i.a.uint32}}),ao=function(){function e(t){if($(this,e),this.stream=t,\"ttcf\"!==t.readString(4))throw new Error(\"Not a TrueType collection\");this.header=ro.decode(t)}return e.probe=function(e){return\"ttcf\"===e.toString(\"ascii\",0,4)},e.prototype.getFont=function(e){var t=this.header.offsets,r=Array.isArray(t),a=0;for(t=r?t:t[Symbol.iterator]();;){var n;if(r){if(a>=t.length)break;n=t[a++]}else{if((a=t.next()).done)break;n=a.value}var s=n,o=new i.a.DecodeStream(this.stream.buffer);o.pos=s;var l=new Qs(o);if(l.postscriptName===e)return l}return null},ee(e,[{key:\"fonts\",get:function(){var e=[],t=this.header.offsets,r=Array.isArray(t),a=0;for(t=r?t:t[Symbol.iterator]();;){var n;if(r){if(a>=t.length)break;n=t[a++]}else{if((a=t.next()).done)break;n=a.value}var s=n,o=new i.a.DecodeStream(this.stream.buffer);o.pos=s,e.push(new Qs(o))}return e}}]),e}(),no=new i.a.String(i.a.uint8),io=(new i.a.Struct({len:i.a.uint32,buf:new i.a.Buffer(\"len\")}),new i.a.Struct({id:i.a.uint16,nameOffset:i.a.int16,attr:i.a.uint8,dataOffset:i.a.uint24,handle:i.a.uint32})),so=new i.a.Struct({name:new i.a.String(4),maxTypeIndex:i.a.uint16,refList:new i.a.Pointer(i.a.uint16,new i.a.Array(io,(function(e){return e.maxTypeIndex+1})),{type:\"parent\"})}),oo=new i.a.Struct({length:i.a.uint16,types:new i.a.Array(so,(function(e){return e.length+1}))}),lo=new i.a.Struct({reserved:new i.a.Reserved(i.a.uint8,24),typeList:new i.a.Pointer(i.a.uint16,oo),nameListOffset:new i.a.Pointer(i.a.uint16,\"void\")}),uo=new i.a.Struct({dataOffset:i.a.uint32,map:new i.a.Pointer(i.a.uint32,lo),dataLength:i.a.uint32,mapLength:i.a.uint32}),co=function(){function e(t){$(this,e),this.stream=t,this.header=uo.decode(this.stream);var r=this.header.map.typeList.types,a=Array.isArray(r),n=0;for(r=a?r:r[Symbol.iterator]();;){var i;if(a){if(n>=r.length)break;i=r[n++]}else{if((n=r.next()).done)break;i=n.value}var s=i,o=s.refList,l=Array.isArray(o),u=0;for(o=l?o:o[Symbol.iterator]();;){var c;if(l){if(u>=o.length)break;c=o[u++]}else{if((u=o.next()).done)break;c=u.value}var h=c;h.nameOffset>=0?(this.stream.pos=h.nameOffset+this.header.map.nameListOffset,h.name=no.decode(this.stream)):h.name=null}\"sfnt\"===s.name&&(this.sfnt=s)}}return e.probe=function(e){var t=new i.a.DecodeStream(e);try{var r=uo.decode(t)}catch(l){return!1}var a=r.map.typeList.types,n=Array.isArray(a),s=0;for(a=n?a:a[Symbol.iterator]();;){var o;if(n){if(s>=a.length)break;o=a[s++]}else{if((s=a.next()).done)break;o=s.value}if(\"sfnt\"===o.name)return!0}return!1},e.prototype.getFont=function(e){if(!this.sfnt)return null;var t=this.sfnt.refList,r=Array.isArray(t),a=0;for(t=r?t:t[Symbol.iterator]();;){var n;if(r){if(a>=t.length)break;n=t[a++]}else{if((a=t.next()).done)break;n=a.value}var s=n,o=this.header.dataOffset+s.dataOffset+4,l=new i.a.DecodeStream(this.stream.buffer.slice(o)),u=new Qs(l);if(u.postscriptName===e)return u}return null},ee(e,[{key:\"fonts\",get:function(){var e=[],t=this.sfnt.refList,r=Array.isArray(t),a=0;for(t=r?t:t[Symbol.iterator]();;){var n;if(r){if(a>=t.length)break;n=t[a++]}else{if((a=t.next()).done)break;n=a.value}var s=n,o=this.header.dataOffset+s.dataOffset+4,l=new i.a.DecodeStream(this.stream.buffer.slice(o));e.push(new Qs(l))}return e}}]),e}();m.registerFormat(Qs),m.registerFormat(to),m.registerFormat(ao),m.registerFormat(co),t.default=m}.call(this,r(\"HDXh\").Buffer,r(\"8oxB\"))}}]);","map":{"version":3,"sources":["static/chunks/210e6083.bf910f5d83c2ecd8492e.js"],"names":["window","push","5aKs","module","__webpack_exports__","__webpack_require__","r","Buffer","process","restructure__WEBPACK_IMPORTED_MODULE_0__","restructure__WEBPACK_IMPORTED_MODULE_0___default","n","restructure_src_utils__WEBPACK_IMPORTED_MODULE_1__","deep_equal__WEBPACK_IMPORTED_MODULE_2__","deep_equal__WEBPACK_IMPORTED_MODULE_2___default","_react_pdf_unicode_properties__WEBPACK_IMPORTED_MODULE_3__","unicode_trie__WEBPACK_IMPORTED_MODULE_4__","unicode_trie__WEBPACK_IMPORTED_MODULE_4___default","dfa__WEBPACK_IMPORTED_MODULE_5__","dfa__WEBPACK_IMPORTED_MODULE_5___default","clone__WEBPACK_IMPORTED_MODULE_6__","clone__WEBPACK_IMPORTED_MODULE_6___default","tiny_inflate__WEBPACK_IMPORTED_MODULE_7__","tiny_inflate__WEBPACK_IMPORTED_MODULE_7___default","fontkit$1","logErrors","formats","cache","target","key","descriptor","get","value","call","this","Object","defineProperty","fn","Map","memoized","_len","arguments","length","args","Array","_key","has","result","apply","set","registerFormat","format","openSync","filename","postscriptName","Error","open","callback","create","buffer","i","probe","font","a","DecodeStream","getFont","SubHeader","Struct","firstCode","uint16","entryCount","idDelta","int16","idRangeOffset","CmapGroup","startCharCode","uint32","endCharCode","glyphID","UnicodeValueRange","startUnicodeValue","uint24","additionalCount","uint8","UVSMapping","unicodeValue","DefaultUVS","NonDefaultUVS","VarSelectorRecord","varSelector","defaultUVS","Pointer","type","nonDefaultUVS","CmapSubtable","VersionedStruct","0","language","codeMap","LazyArray","2","subHeaderKeys","subHeaderCount","t","Math","max","subHeaders","glyphIndexArray","4","segCountX2","segCount","searchRange","entrySelector","rangeShift","endCode","reservedPad","Reserved","startCode","_currentOffset","6","glyphIndices","8","reserved","is32","nGroups","groups","10","12","13","14","numRecords","varSelectors","CmapEntry","platformID","encodingID","table","lazy","cmap","version","numSubtables","tables","head","int32","revision","checkSumAdjustment","magicNumber","flags","unitsPerEm","created","modified","xMin","yMin","xMax","yMax","macStyle","Bitfield","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","hhea","ascent","descent","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfMetrics","HmtxEntry","advance","bearing","hmtx","metrics","parent","bearings","maxp","numGlyphs","maxPoints","maxContours","maxComponentPoints","maxComponentContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","getEncoding","languageID","undefined","MAC_LANGUAGE_ENCODINGS","ENCODINGS","15","17","18","24","25","26","27","28","30","37","38","39","40","143","146","LANGUAGES","60","90","1","31","61","91","32","62","92","3","33","63","93","34","64","94","5","35","65","128","36","66","129","7","67","130","68","131","9","69","132","70","133","11","41","71","134","42","72","135","43","73","136","44","74","137","45","75","138","16","46","76","139","47","77","140","48","78","141","19","49","79","142","20","50","80","21","51","81","144","22","52","82","145","23","53","83","54","84","147","55","85","148","56","86","149","57","87","150","58","88","151","29","59","89","1078","16393","1159","1074","1052","6153","1089","1115","1156","8201","1111","1051","1118","17417","1042","1060","5121","5129","1088","11274","15361","13321","1108","16394","3073","18441","1062","13322","2049","7177","1063","9226","11265","11273","2094","5130","13313","2057","1134","7178","12289","1033","1071","12298","4097","12297","2110","17418","6145","1061","1086","4106","8193","1080","1100","18442","16385","1124","1082","2058","1025","1035","1153","19466","10241","2060","1146","6154","7169","3084","1102","15370","14337","1036","1148","10250","9217","5132","1104","20490","1067","6156","2128","3082","1101","4108","1121","1034","2092","1122","1044","21514","1068","1110","2068","14346","1133","1079","1154","8202","1069","3079","1096","2077","1059","1031","1123","1053","2117","5127","1045","1114","1093","4103","1046","1064","8218","2055","2070","2143","5146","1032","1094","1097","1150","1135","1131","1092","1026","1095","2155","1098","1027","1128","3179","1054","3076","1037","1048","1105","5124","1081","1047","1055","2052","1038","1049","1090","4100","1039","9275","1152","1028","1136","4155","1058","1155","1057","5179","1070","1050","1117","3131","1056","4122","2141","1083","2115","1029","2108","2107","1091","1030","1076","8251","1066","1164","1077","6203","1106","1125","1040","7227","1160","2067","2064","1103","1157","1043","1041","7194","1144","3081","1099","3098","1130","10249","1087","6170","4105","1107","2074","9225","1158","1132","NameRecord","nameID","string","String","relativeTo","allowNull","LangTagRecord","tag","NameTable","count","stringOffset","records","langTagCount","langTags","NAMES","stream","_iterator","_isArray","isArray","_i","Symbol","iterator","_ref","next","done","record","obj","preEncode","val","indexOf","byteLength","en","size","OS2","header","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulCharRange","vendorID","fsSelection","usFirstCharIndex","usLastCharIndex","typoAscender","typoDescender","typoLineGap","winAscent","winDescent","codePageRange","xHeight","capHeight","defaultChar","breakChar","maxContent","usLowerOpticalPointSize","usUpperOpticalPointSize","versions","post","fixed32","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","numberOfGlyphs","glyphNameIndex","names","2.5","offsets","map","cvt","controlValues","fpgm","instructions","loca","prep","controlValueProgram","glyf","_typeof","constructor","prototype","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","props","enumerable","configurable","writable","protoProps","staticProps","inherits","subClass","superClass","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","CFFIndex","getCFFVersion","ctx","hdrSize","decode","readUInt32BE","readUInt16BE","offSize","readUInt8","offsetType","pos","ret","startPos","start","end","offset","arr","item","encode","writeUInt16BE","sizes","s","writeUInt8","_iterator2","_isArray2","_i2","_ref2","_iterator3","_isArray3","_i3","_ref3","_item","FLOAT_LOOKUP","FLOAT_ENCODE_LOOKUP",".","E","E-","-","CFFOperand","readInt16BE","readInt32BE","str","b","n1","n2","parseFloat","forceLarge","ceil","Number","writeInt32BE","writeInt16BE","c1","c2","FLOAT_EOF","CFFDict","ops","fields","field","decodeOperands","operands","_this","op","encodeOperands","_this2","_startOffset","_field","dict","includePointers","pointerSize","startOffset","len","k","pointers","pointerOffset","_iterator4","_isArray4","_i4","_ref4","_iterator5","_isArray5","_i5","_ref5","_op","ptr","CFFPointer","_r$Pointer","options","Ptr","valueOf","CFFPrivateDict","CFFBlendOp","numBlends","pop","standardStrings","StandardEncoding","ISOAdobeCharset","LangSysTable","reqFeatureIndex","featureCount","featureIndexes","LangSysRecord","langSys","Script","defaultLangSys","langSysRecords","ScriptRecord","script","ScriptList","Feature","featureParams","lookupCount","lookupListIndexes","FeatureRecord","feature","FeatureList","LookupFlags","markAttachmentType","LookupList","SubTable","Lookup","lookupType","subTableCount","subTables","markFilteringSet","Optional","useMarkFilteringSet","_","RangeRecord","startCoverageIndex","Coverage","glyphCount","glyphs","rangeCount","rangeRecords","ClassRangeRecord","class","ClassDef","startGlyph","classValueArray","classRangeCount","classRangeRecord","Device","deltaFormat","LookupRecord","sequenceIndex","lookupListIndex","Rule","input","lookupRecords","RuleSet","ClassRule","classes","ClassSet","Context","coverage","ruleSetCount","ruleSets","classDef","classSetCnt","classSet","coverages","ChainRule","backtrackGlyphCount","backtrack","inputGlyphCount","lookaheadGlyphCount","lookahead","ChainRuleSet","ChainingContext","chainCount","chainRuleSets","backtrackClassDef","inputClassDef","lookaheadClassDef","chainClassSet","backtrackCoverage","inputCoverage","lookaheadCoverage","F2DOT14","Fixed","RegionAxisCoordinates","startCoord","peakCoord","endCoord","VariationRegionList","axisCount","regionCount","variationRegions","DeltaSet","shortDeltas","shortDeltaCount","regionDeltas","int8","regionIndexCount","deltas","concat","ItemVariationData","itemCount","regionIndexes","deltaSets","ItemVariationStore","variationRegionList","variationDataCount","itemVariationData","ConditionTable","axisIndex","filterRangeMinValue","filterRangeMaxValue","ConditionSet","conditionCount","conditionTable","FeatureTableSubstitutionRecord","featureIndex","alternateFeatureTable","FeatureTableSubstitution","substitutionCount","substitutions","FeatureVariationRecord","conditionSet","featureTableSubstitution","FeatureVariations","majorVersion","minorVersion","featureVariationRecordCount","featureVariationRecords","PredefinedOp","predefinedOps","index","CFFEncodingVersion","_r$Number","Range1","first","nLeft","Range2","CFFEncoding","nCodes","codes","nRanges","ranges","RangeArray","_r$Array","res","range","CFFCharset","CharStrings","FDRange3","fd","FDRange4","FDSelect","fds","sentinel","CFFPrivateOp","FontDict","CFFTopDict","VariationStore","itemVariationStore","CFF2TopDict","CFFTop","fixed16","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDict","CFFFont","top","isCIDFont","ROS","sid","getCharString","glyph","readBuffer","getGlyphName","gid","charset","fdForGlyph","low","high","mid","privateDictForGlyph","FDArray","Private","FullName","FamilyName","VerticalOrigin","glyphIndex","vertOriginY","VORG","defaultVertOriginY","numVertOriginYMetrics","BigMetrics","height","width","horiBearingX","horiBearingY","horiAdvance","vertBearingX","vertBearingY","vertAdvance","SmallMetrics","bearingX","bearingY","EBDTComponent","xOffset","yOffset","ByteAligned","BitAligned","SBitLineMetrics","data","pad","numComponents","components","dataLen","ascender","descender","widthMax","caretSlopeNumerator","caretSlopeDenominator","minOriginSB","minAdvanceSB","maxBeforeBL","minAfterBL","CodeOffsetPair","glyphCode","IndexSubtable","imageFormat","imageDataOffset","offsetArray","lastGlyphIndex","firstGlyphIndex","imageSize","bigMetrics","glyphArray","glyphCodeArray","IndexSubtableArray","subtable","BitmapSizeTable","indexSubTableArray","indexTablesSize","numberOfIndexSubTables","colorRef","hori","vert","startGlyphIndex","endGlyphIndex","ppemX","ppemY","bitDepth","EBLC","numSizes","ImageTable","ppem","resolution","imageOffsets","sbix","numImgTables","imageTables","LayerRecord","paletteIndex","BaseGlyphRecord","firstLayerIndex","numLayers","COLR","numBaseGlyphRecords","baseGlyphRecord","layerRecords","numLayerRecords","ColorRecord","blue","green","red","alpha","CPAL","numPaletteEntries","numPalettes","numColorRecords","colorRecords","colorRecordIndices","offsetPaletteTypeArray","offsetPaletteLabelArray","offsetPaletteEntryLabelArray","BaseCoord","coordinate","referenceGlyph","baseCoordPoint","deviceTable","BaseValues","defaultIndex","baseCoordCount","baseCoords","FeatMinMaxRecord","minCoord","maxCoord","MinMax","featMinMaxCount","featMinMaxRecords","BaseLangSysRecord","minMax","BaseScript","baseValues","defaultMinMax","baseLangSysCount","baseLangSysRecords","BaseScriptRecord","BaseScriptList","BaseTagList","Axis","baseTagList","baseScriptList","BASE","horizAxis","vertAxis","65536","65537","AttachPoint","AttachList","attachPoints","CaretValue","caretValuePoint","LigGlyph","LigCaretList","ligGlyphCount","ligGlyphs","MarkGlyphSetsDef","markSetTableFormat","markSetCount","GDEF","glyphClassDef","attachList","ligCaretList","markAttachClassDef","65538","markGlyphSetsDef","65539","ValueFormat","types","xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","yPlaDevice","xAdvDevice","yAdvDevice","ValueRecord","buildStruct","struct","rel","PairValueRecord","secondGlyph","value1","value2","PairSet","Class2Record","Anchor","xCoordinate","yCoordinate","anchorPoint","xDeviceTable","yDeviceTable","EntryExitRecord","entryAnchor","exitAnchor","MarkRecord","markAnchor","MarkArray","BaseRecord","classCount","BaseArray","ComponentRecord","LigatureAttach","LigatureArray","GPOSLookup","valueFormat","valueCount","values","valueFormat1","valueFormat2","pairSetCount","pairSets","classDef1","classDef2","class1Count","class2Count","classRecords","entryExitCount","entryExitRecords","markCoverage","baseCoverage","markArray","baseArray","ligatureCoverage","ligatureArray","mark1Coverage","mark2Coverage","mark1Array","mark2Array","posFormat","extension","GPOS","scriptList","featureList","lookupList","featureVariations","Sequence","AlternateSet","Ligature","compCount","LigatureSet","GSUBLookup","deltaGlyphID","substitute","substFormat","sequences","alternateSet","ligatureSets","substitutes","GSUB","JstfGSUBModList","JstfPriority","shrinkageEnableGSUB","shrinkageDisableGSUB","shrinkageEnableGPOS","shrinkageDisableGPOS","shrinkageJstfMax","extensionEnableGSUB","extensionDisableGSUB","extensionEnableGPOS","extensionDisableGPOS","extensionJstfMax","JstfLangSys","JstfLangSysRecord","jstfLangSys","JstfScript","extenderGlyphs","langSysCount","JstfScriptRecord","JSTF","scriptCount","VariableSizeNumber","_size","readUInt24BE","MapDataEntry","entry","entryFormat","outerIndex","innerIndex","DeltaSetIndexMap","mapCount","mapData","HVAR","advanceWidthMapping","LSBMapping","RSBMapping","Signature","SignatureBlock","cbSignature","signature","DSIG","ulVersion","usNumSigs","usFlag","signatures","signatureBlocks","GaspRange","rangeMaxPPEM","rangeGaspBehavior","gasp","numRanges","gaspRanges","DeviceRecord","pixelSize","maximumWidth","widths","hdmx","sizeDeviceRecord","KernPair","left","right","ClassTable","firstGlyph","nGlyphs","Kern2Array","off","leftTable","rowWidth","KernSubtable","nPairs","pairs","rightTable","array","kernValueCount","leftClassCount","rightClassCount","kernValue","leftClass","rightClass","kernIndex","KernTable","subVersion","padding","tupleIndex","kern","nTables","LTSH","yPels","PCLT","fontNumber","pitch","style","typeFamily","symbolSet","typeface","characterComplement","fileName","strokeWeight","widthType","serifStyle","Ratio","bCharSet","xRatio","yStartRatio","yEndRatio","vTable","yPelHeight","VdmxGroup","recs","startsz","endsz","entries","VDMX","numRecs","numRatios","ratioRanges","vhea","advanceHeightMax","minTopSideBearing","minBottomSideBearing","yMaxExtent","VmtxEntry","vmtx","shortFrac","Correspondence","fromCoord","toCoord","Segment","pairCount","correspondence","avar","segment","UnboundedArrayAccessor","base","_items","getItem","inspect","name","UnboundedArray","LookupTable","ValueType","Shadow","BinarySearchHeader","unitSize","nUnits","LookupSegmentSingle","lastGlyph","LookupSegmentArray","LookupSingle","binarySearchHeader","segments","StateTable","entryData","assign","newState","Entry","StateArray","nClasses","StateHeader","classTable","stateArray","entryTable","BslnSubtable","mappingData","standardGlyph","controlPoints","bsln","defaultBaseline","Setting","setting","fontFeatures","FeatureName","nSettings","settingTable","featureFlags","defaultSetting","feat","featureNameCount","reserved1","reserved2","featureNames","Axis$1","axisTag","minValue","defaultValue","maxValue","Instance","coord","postscriptNameID","instanceSize","fvar","offsetToData","countSizePairs","axisSize","instanceCount","axis","shortFrac$1","Offset","gvar","globalCoordCount","globalCoords","ClassTable$1","subFeatureFlags","stateTable","ClassLookupTable","newStateOffset","StateHeader1","WidthDeltaRecord","justClass","beforeGrowLimit","beforeShrinkLimit","afterGrowLimit","afterShrinkLimit","growFlags","shrinkFlags","WidthDeltaCluster","ActionData","lowerLimit","upperLimit","order","addGlyph","substThreshold","substGlyph","variationAxis","minimumLimit","noStretchValue","maximumLimit","Action","actionClass","actionType","actionLength","actionData","PostcompensationAction","PostCompensationTable","lookupTable","JustificationTable","wdcOffset","postCompensationTable","widthDeltaClusters","just","horizontal","vertical","LigatureData","action","ContextualData","markIndex","currentIndex","InsertionData","currentInsertIndex","markedInsertIndex","SubstitutionTable","items","SubtableData","substitutionTable","ligatureActions","ligatureList","insertionActions","Subtable","FeatureEntry","featureType","featureSetting","enableFlags","disableFlags","MorxChain","defaultFlags","chainLength","nFeatureEntries","nSubtables","features","subtables","morx","unused","nChains","chains","OpticalBounds","bottom","opbd","CBLC","_class$1","TableEntry","checkSum","Directory","numTables","binarySearch","cmp","min","_applyDecoratedDescriptor$1","property","decorators","context","desc","forEach","initializer","slice","reverse","reduce","decorator","tables$$1","VoidPointer","floor","log","LN2","iconv","err","CmapProcessor","cmapTable","encoding","findSubtable","encodingExists","uvs","lookup","codepoint","variationSelector","buf","fromCodePoint","getVariationSelector","rangeOffset","_gid","_min","_max","_mid","group","selectors","toArray","x","sel","getCharacterSet","endCodes","tail","_res","codePointsForGlyph","_res2","delta","c","g","_res3","_i6","_ref6","_res4","_iterator6","_isArray6","_i7","_ref7","_group","getOwnPropertyDescriptor","KernProcessor","positions","id","getKerning","crossStream","variation","pairIdx","pair","leftOffset","rightOffset","override","UnicodeLayoutEngine","positionGlyphs","clusterStart","clusterEnd","isMark","positionCluster","baseBox","cbox","copy","codePoints","minX","yGap","mark","markBox","position","combiningClass","getCombiningClass","maxX","minY","maxY","codePoint","BBox","Infinity","addPoint","y","abs","UNICODE_SCRIPTS","Caucasian_Albanian","Arabic","Imperial_Aramaic","Armenian","Avestan","Balinese","Bamum","Bassa_Vah","Batak","Bengali","Bopomofo","Brahmi","Braille","Buginese","Buhid","Chakma","Canadian_Aboriginal","Carian","Cham","Cherokee","Coptic","Cypriot","Cyrillic","Devanagari","Deseret","Duployan","Egyptian_Hieroglyphs","Elbasan","Ethiopic","Georgian","Glagolitic","Gothic","Grantha","Greek","Gujarati","Gurmukhi","Hangul","Han","Hanunoo","Hebrew","Hiragana","Pahawh_Hmong","Katakana_Or_Hiragana","Old_Italic","Javanese","Kayah_Li","Katakana","Kharoshthi","Khmer","Khojki","Kannada","Kaithi","Tai_Tham","Lao","Latin","Lepcha","Limbu","Linear_A","Linear_B","Lisu","Lycian","Lydian","Mahajani","Mandaic","Manichaean","Mende_Kikakui","Meroitic_Cursive","Meroitic_Hieroglyphs","Malayalam","Modi","Mongolian","Mro","Meetei_Mayek","Myanmar","Old_North_Arabian","Nabataean","Nko","Ogham","Ol_Chiki","Old_Turkic","Oriya","Osmanya","Palmyrene","Pau_Cin_Hau","Old_Permic","Phags_Pa","Inscriptional_Pahlavi","Psalter_Pahlavi","Phoenician","Miao","Inscriptional_Parthian","Rejang","Runic","Samaritan","Old_South_Arabian","Saurashtra","Shavian","Sharada","Siddham","Khudawadi","Sinhala","Sora_Sompeng","Sundanese","Syloti_Nagri","Syriac","Tagbanwa","Takri","Tai_Le","New_Tai_Lue","Tamil","Tai_Viet","Telugu","Tifinagh","Tagalog","Thaana","Thai","Tibetan","Tirhuta","Ugaritic","Vai","Warang_Citi","Old_Persian","Cuneiform","Yi","Inherited","Common","Unknown","OPENTYPE_SCRIPTS","RTL","arab","hebr","syrc","thaa","cprt","khar","phnx","nko ","lydi","avst","armi","phli","prti","sarb","orkh","samr","mand","merc","mero","mani","mend","nbat","narb","palm","phlp","direction","GlyphRun","direction$$1","stringIndices","bbox","p","GlyphPosition","allTypographicFeatures","code","exclusive","allTypeFeatures","ligatures","requiredLigatures","commonLigatures","rareLigatures","rebusPictures","diphthongLigatures","squaredLigatures","abbrevSquaredLigatures","symbolLigatures","contextualLigatures","historicalLigatures","cursiveConnection","unconnected","partiallyConnected","cursive","letterCase","verticalSubstitution","substituteVerticalForms","linguisticRearrangement","numberSpacing","monospacedNumbers","proportionalNumbers","thirdWidthNumbers","quarterWidthNumbers","smartSwash","wordInitialSwashes","wordFinalSwashes","nonFinalSwashes","diacritics","showDiacritics","hideDiacritics","decomposeDiacritics","verticalPosition","normalPosition","superiors","inferiors","ordinals","scientificInferiors","fractions","noFractions","verticalFractions","diagonalFractions","overlappingCharacters","preventOverlap","typographicExtras","slashedZero","mathematicalExtras","mathematicalGreek","ornamentSets","noOrnaments","dingbats","piCharacters","fleurons","decorativeBorders","internationalSymbols","mathSymbols","characterAlternatives","noAlternates","designComplexity","designLevel1","designLevel2","designLevel3","designLevel4","designLevel5","styleOptions","noStyleOptions","displayText","engravedText","illuminatedCaps","titlingCaps","tallCaps","characterShape","traditionalCharacters","simplifiedCharacters","JIS1978Characters","JIS1983Characters","JIS1990Characters","traditionalAltOne","traditionalAltTwo","traditionalAltThree","traditionalAltFour","traditionalAltFive","expertCharacters","JIS2004Characters","hojoCharacters","NLCCharacters","traditionalNamesCharacters","numberCase","lowerCaseNumbers","upperCaseNumbers","textSpacing","proportionalText","monospacedText","halfWidthText","thirdWidthText","quarterWidthText","altProportionalText","altHalfWidthText","transliteration","noTransliteration","annotation","noAnnotation","boxAnnotation","roundedBoxAnnotation","circleAnnotation","invertedCircleAnnotation","parenthesisAnnotation","periodAnnotation","romanNumeralAnnotation","diamondAnnotation","invertedBoxAnnotation","invertedRoundedBoxAnnotation","kanaSpacing","fullWidthKana","proportionalKana","ideographicSpacing","fullWidthIdeographs","proportionalIdeographs","halfWidthIdeographs","unicodeDecomposition","canonicalComposition","compatibilityComposition","transcodingComposition","rubyKana","CJKSymbolAlternatives","noCJKSymbolAlternatives","CJKSymbolAltOne","CJKSymbolAltTwo","CJKSymbolAltThree","CJKSymbolAltFour","CJKSymbolAltFive","ideographicAlternatives","noIdeographicAlternatives","ideographicAltOne","ideographicAltTwo","ideographicAltThree","ideographicAltFour","ideographicAltFive","CJKVerticalRomanPlacement","CJKVerticalRomanCentered","CJKVerticalRomanHBaseline","italicCJKRoman","CJKItalicRoman","caseSensitiveLayout","caseSensitiveSpacing","alternateKana","alternateHorizKana","alternateVertKana","stylisticAlternatives","noStylisticAlternates","stylisticAltOne","stylisticAltTwo","stylisticAltThree","stylisticAltFour","stylisticAltFive","stylisticAltSix","stylisticAltSeven","stylisticAltEight","stylisticAltNine","stylisticAltTen","stylisticAltEleven","stylisticAltTwelve","stylisticAltThirteen","stylisticAltFourteen","stylisticAltFifteen","stylisticAltSixteen","stylisticAltSeventeen","stylisticAltEighteen","stylisticAltNineteen","stylisticAltTwenty","contextualAlternates","swashAlternates","contextualSwashAlternates","lowerCase","defaultLowerCase","lowerCaseSmallCaps","lowerCasePetiteCaps","upperCase","defaultUpperCase","upperCaseSmallCaps","upperCasePetiteCaps","languageTag","CJKRomanSpacing","halfWidthCJKRoman","proportionalCJKRoman","defaultCJKRoman","fullWidthCJKRoman","selector","OTMapping","rlig","clig","dlig","hlig","liga","hist","smcp","pcap","frac","dnom","numr","afrc","case","ccmp","cpct","valt","swsh","cswh","curs","c2pc","c2sc","init","fin2","medi","med2","fin3","fina","pkna","half","halt","hkna","vkna","ital","lnum","onum","mgrk","calt","vrt2","tnum","pnum","sups","subs","ordn","pwid","hwid","qwid","twid","fwid","palt","trad","smpl","jp78","jp83","jp90","jp04","expt","hojo","nlck","tnam","ruby","titl","zero","ss01","ss02","ss03","ss04","ss05","ss06","ss07","ss08","ss09","ss10","ss11","ss12","ss13","ss14","ss15","ss16","ss17","ss18","ss19","ss20","_class$3","AATMapping","ot","aat","mapFeatureStrings","f","isNaN","typeCode","settingCode","_class$2","AATLookupTable","_applyDecoratedDescriptor$3","seg","glyphsForValue","classValue","_segment","AATStateMachine","processEntry","currentState","dir","classCode","shouldAdvance","entryIndex","traverse","opts","state","visited","Set","add","_stateTable","row","enter","exit","REVERSE_DIRECTION","AATMorxProcessor","_applyDecoratedDescriptor$2","processIndicRearragement","bind","processContextualSubstitution","processLigature","processNoncontextualSubstitutions","processGlyphInsertion","inputCache","chain","processSubtable","splice","ligatureStack","markedGlyph","markedIndex","stateMachine","getStateMachine","getProcessor","verb","swap","reorderGlyphs","subsitutions","getGlyph","_lookup","_lookupTable","_ligatureStack","actions","actionIndex","last","ligatureIndex","ligatureGlyphs","_codePoints","componentGlyph","unshift","store","ligatureEntry","_insertGlyphs","insertionActionIndex","isBefore","_glyphs","insertions","_count","_isBefore","getSupportedFeatures","generateInputs","generateInputCache","_iterator7","_isArray7","generateInputsForSubtable","stack","found","_cache","_stack$pop","rangeA","rangeB","reverseA","reverseB","_class$4","_temp","AATLayoutEngine","morxProcessor","fallbackPosition","glyphRun","r$$1","mapOTToAAT","getAvailableFeatures","_feature","_r","_f","keys","mapAATToOT","stringsForGlyph","glyphStrings","_addStrings","strings","_cmapProcessor","ShapingPlan","stages","globalFeatures","allFeatures","_addFeatures","global","stageIndex","stage","arg","local","addStage","setFeatureOverrides","assignGlobalFeatures","processor","applyFeatures","VARIATION_FEATURES","COMMON_FEATURES","FRACTIONAL_FEATURES","HORIZONTAL_FEATURES","DIRECTIONAL_FEATURES","ltr","rtl","DefaultShaper","plan","_plan","planPreprocessing","planFeatures","planPostprocessing","assignFeatures","userFeatures","isDigit","zeroMarkWidths","trieData","trie","Uint8Array","FEATURES","ShapingClasses","ISOL","FINA","FIN2","MEDI","MED2","INIT","NONE","STATE_TABLE","ArabicShaper","_DefaultShaper","prev","curAction","prevAction","type$$1","getShapingClass","_STATE_TABLE$state$ty","category","getCategory","_class$5","_temp$1","GlyphIterator","reset","shouldIgnore","ignoreMarks","ignoreBaseGlyphs","isBase","ignoreLigatures","isLigature","move","peek","idx","increment","peekIndex","DEFAULT_SCRIPTS","OTProcessor","scriptTag","lookups","variationsIndex","_variationProcessor","findVariationsIndex","normalizedCoords","selectScript","ligatureID","currentFeature","findScript","changed","repeat","lang","substituteFeature","substituteFeatureForVariations","lookupsForFeatures","exclude","lookupIndex","sort","substitution","coords","variations","conditions","variationConditionsMatch","every","condition","advances","applyLookups","glyphIterator","_iterator8","_isArray8","_i8","_ref8","_ref9","cur","_iterator9","_isArray9","_i9","_ref10","applyLookup","applyLookupList","_iterator10","_isArray10","_i10","_ref11","lookupRecord","_iterator11","_isArray11","_i11","_ref12","coverageIndex","_iterator12","_isArray12","_i12","_ref13","match","sequence","matched","sequenceMatches","component","sequenceMatchIndices","coverageSequenceMatches","getClassID","_iterator13","_isArray13","_i13","_ref14","classSequenceMatches","_this3","classID","applyContext","set$$1","_iterator14","_isArray14","_i14","_ref15","rule","_iterator15","_isArray15","_i15","_ref16","_rule","applyChainingContext","_iterator16","_isArray16","_i16","_ref17","rules","_iterator17","_isArray17","_i17","_ref18","_rule2","GlyphInfo","_font","ligatureComponent","isLigated","cursiveAttachment","markAttachment","shaperInfo","substituted","isMultiplied","_id","advanceWidth","HangulShaper","getType","STATE_TABLE$1","DECOMPOSE","hasGlyphForCodePoint","decompose","COMPOSE","compose","TONE_MARK","reorderToneMark","INVALID","insertDottedCircle","HANGUL_BASE","L_BASE","V_BASE","T_BASE","isL","isV","isT","HANGUL_END","isLV","isLVT","isTone","glyphForCodePoint","l","v","ljmo","vjmo","insert","tjmo","prevType","lv","isCombiningL","isCombiningV","isCombiningT","del","getLength","dottedCircle","_class$6","_temp$2","indicMachine","accepting","tags","useData","categories","decompositions","2507","2508","2888","2891","2892","3018","3019","3020","3144","3264","3271","3272","3274","3275","3402","3403","3404","3546","3548","3549","3550","3635","3763","3955","3957","3958","3959","3960","3961","3969","6971","6973","6976","6977","6979","69934","69935","70475","70476","70843","70844","70846","71098","71099","CATEGORIES","POSITIONS","Start","Ra_To_Become_Reph","Pre_M","Pre_C","Base_C","After_Main","Above_C","Before_Sub","Below_C","After_Sub","Before_Post","Post_C","After_Post","Final_C","SMVD","End","CONSONANT_FLAGS","JOINER_FLAGS","HALANT_OR_COENG_FLAGS","INDIC_CONFIGS","Default","hasOldSpec","virama","basePos","rephPos","rephMode","blwfMode","INDIC_DECOMPOSITIONS","6078","6079","6080","6084","6085","trieData$1","trie$1","IndicShaper","setupSyllables","initialReordering","finalReordering","unicodeScript","fromOpenType","indicConfig","isOldSpec","_loop","d","decomposed","indicCategory","indicPosition","IndicInfo","syllableType","syllable","tags$$1","isConsonant","isJoiner","isHalantOrCoeng","wouldSubstitute","_glyph$features","_layoutEngine","engine","GSUBProcessor","consonantPosition","consonant","info","nextSyllable","_glyphs$start$shaperI","limit","hasReph","rphf","_g","seenBelow","_info","_info2","j","disallowDoubleHalants","_j","lastPos","_info3","_j2","_j3","blwf","abvf","pstf","pref","_i18","_j4","cfar","_i19","nonJoiner","_j5","tryPref","BASE_C","_i20","newPos","_i21","oldPos","tmp","newRephPos","_i22","reph","_i23","_newPos","_oldPos2","_oldPos","_tmp","test","_class$7","_temp$3","trieData$2","categories$1","decompositions$2","trie$2","stateMachine$1","UniversalShaper","setupSyllables$1","clearSubstitutionFlags","recordRphf","recordPref","reorder","useCategory","USEInfo","nextSyllable$1","isHalant","SHAPERS","mong","phag","hang","bng2","beng","dev2","deva","gjr2","gujr","guru","gur2","knda","knd2","mlm2","mlym","ory2","orya","taml","tml2","telu","tel2","khmr","bali","batk","brah","bugi","buhd","cakm","cham","dupl","egyp","gran","hano","java","kthi","kali","khoj","sind","lepc","limb","mahj","mtei","modi","hmng","rjng","saur","shrd","sidd","sinh","sund","sylo","tglg","tagb","tale","lana","tavt","takr","tibt","tfng","tirh","latn","DFLT","_OTProcessor","_index","curGlyph","replacement","_index2","_index3","ligature","_curGlyph","characters","_index4","ligatureGlyph","isMarkLigature","lastLigID","lastNumComps","curComps","matchIndex","GPOSProcessor","applyPositionValue","variationProcessor","variationStore","getDelta","nextGlyph","_pair","class1","class2","nextIndex","_nextGlyph","curRecord","nextRecord","getAnchor","rightToLeft","baseGlyphIndex","baseIndex","markRecord","baseAnchor","applyAnchor","_markIndex","_baseGlyphIndex","ligIndex","ligAttach","markGlyph","ligGlyph","compIndex","_markRecord","_baseAnchor","mark1Index","prevIndex","_cur","good","mark2Index","_markRecord2","_baseAnchor2","markCoords","markPos","anchor","fixCursiveAttachment","fixMarkAttachment","_k","OTLayoutEngine","setup","shaper","choose","zeroMarkAdvances","cleanup","glyphInfos","LayoutEngine","unicodeLayoutEngine","kernProcessor","layout","charCodeAt","_script","getScript","forString","glyphsForString","hideDefaultIgnorables","glyphInfo","nextState","positioned","space","isDefaultIgnorable","ch","plane","from","SVG_COMMANDS","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath","Path","commands","_bbox","_cbox","toFunction","cmds","command","join","Function","toSVG","round","mapPoints","path","_fn","transform","m0","m1","m2","m3","m4","m5","translate","rotate","angle","cos","sin","scale","scaleX","scaleY","freeze","cx","cy","pow","p0","p1","p2","p3","_c$args","_c$args2","qp1x","qp1y","cp1x","cp1y","cp2x","p3x","cp2y","p3y","_c$args3","b2ac","t1","sqrt","t2","_arr","_class$8","StandardNames","_applyDecoratedDescriptor$4","_class","Glyph","_getPath","_getCBox","_getBBox","_getTableMetrics","metric","_getMetrics","_metrics","_getTableMetrics2","leftBearing","_getTableMetrics3","advanceHeight","topBearing","os2","getAdvanceAdjustment","getScaledPath","_getName","fromCharCode","render","save","fill","restore","GlyfHeader","numberOfContours","Point","onCurve","endContour","Component","dx","dy","scale01","scale10","TTFGlyph","_Glyph","internal","_getTableStream","_parseGlyphCoord","short","same","_decode","glyfPos","_decodeSimple","_decodeComposite","points","endPtsOfContours","numCoords","flag","point","px","py","_getPhantomPoints","transformPoints","phantomPoints","haveInstructions","gPos","readInt8","_getContours","_contours","contour","_point","directory","contours","firstPt","lastPt","curvePt","pt","prevPt","midX","midY","CFFGlyph","CFF2","bias","cff","trans","nStems","usedGsubrs","usedSubrs","_usedGsubrs","_usedSubrs","gsubrs","gsubrsBias","privateDict","subrs","Subrs","subrsBias","vstore","vsindex","checkWidth","shift","nominalWidthX","parseStems","parse","phase","c1x","c1y","c2x","c2y","subr","e","blendVector","getBlendVector","numOperands","sum","s1","s2","v1","v2","random","c3x","c3y","c4x","c4y","c5x","c5y","c6x","c6y","pts","startx","starty","b1","SBIXImage","originX","originY","buflen","SBIXGlyph","_TTFGlyph","getImageForSize","img","image","renderOutlines","COLRLayer","color","COLRGlyph","layers","fillColor","cpal","colr","rec","baseLayer","_getBaseGlyph","GlyphVariationProcessor","normalizeCoords","blendVectors","normalized","EPSILON","glyphPoints","tupleCount","here","sharedPoints","decodePoints","origPoints","tupleDataSize","tupleCoords","startCoords","_a","endCoords","_a2","factor","tupleFactor","nPoints","xDeltas","decodeDeltas","yDeltas","outPoints","hasDelta","interpolateMissingDeltas","deltaX","deltaY","Uint16Array","run","runCount","readUInt16","Int16Array","inPoints","firstPoint","endPoint","firstDelta","curDelta","deltaInterpolate","deltaShift","ref1","ref2","iterable","in1","in2","out1","out2","_p","out","ref","_table$advanceWidthMa","itemStore","varData","deltaSet","netAdjustment","master","scalar","regionIndex","axes","Subset","mapping","includeGlyph","encodeStream","EncodeStream","nextTick","Point$1","Glyf","xPoints","yPoints","TTFGlyphEncoder","encodeSimple","lastX","lastY","lastFlag","pointCount","_encodePoint","shortFlag","sameFlag","diff","TTFSubset","_Subset","glyphEncoder","_addGlyph","curOffset","nextOffset","cvt ","CFFSubset","subsetCharstrings","charstrings","subsetSubrs","used","subsetFontdict","used_fds","used_subrs","FontName","createCIDFontdict","addString","Encoding","CIDCount","_applyDecoratedDescriptor","TTFFont","variationCoords","_directoryPos","_tables","_decodeDirectory","_getTable","toString","_decodeTable","console","error","getName","createSubset","getVariation","settings","namedVariations","trim","default","WOFFDirectoryEntry","compLength","origChecksum","WOFFDirectory","flavor","totalSfntSize","metaOffset","metaLength","metaOrigLength","privOffset","privLength","WOFFFont","_TTFFont","outBuffer","alloc","TTCHeader","numFonts","131072","dsigTag","dsigLength","dsigOffset","TrueTypeCollection","readString","fonts","DFontName","Ref","nameOffset","attr","dataOffset","handle","Type","maxTypeIndex","refList","TypeList","DFontMap","typeList","nameListOffset","DFontHeader","dataLength","mapLength","DFont","sfnt"],"mappings":"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AK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,EAAG,IAAK,IAAK,EAAG,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IA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B,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,GAAI,CAAC,kBAAmB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,CAAC,sBAAuB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,CAAC,sBAAuB,GAAI,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,GAAI,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,GAAI,CAAC,qBAAsB,kBAAmB,CAAC,qBAAsB,kBAAmB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,sBAAuB,CAAC,sBAAuB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,GAAI,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,CAAC,kBAAmB,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EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,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"},"name":"static/chunks/210e6083.bf910f5d83c2ecd8492e.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[3],{\n\n/***/ \"5aKs\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(Buffer, process) {/* harmony import */ var restructure__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"zCBh\");\n/* harmony import */ var restructure__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(restructure__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var restructure_src_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"aBMH\");\n/* harmony import */ var restructure_src_utils__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(restructure_src_utils__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var deep_equal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"f66B\");\n/* harmony import */ var deep_equal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(deep_equal__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _react_pdf_unicode_properties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"sHAy\");\n/* harmony import */ var unicode_trie__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"7Ue9\");\n/* harmony import */ var unicode_trie__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(unicode_trie__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var dfa__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"oTm3\");\n/* harmony import */ var dfa__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(dfa__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var clone__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"JBAE\");\n/* harmony import */ var clone__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(clone__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var tiny_inflate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"WuVl\");\n/* harmony import */ var tiny_inflate__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(tiny_inflate__WEBPACK_IMPORTED_MODULE_7__);\n\n\n\n\n\n\n\n\n\nvar fs = {}\n\nvar fontkit$1 = {};\nfontkit$1.logErrors = false;\n\nvar formats = [];\nfontkit$1.registerFormat = function (format) {\n  formats.push(format);\n};\n\nfontkit$1.openSync = function (filename, postscriptName) {\n  {\n    throw new Error('fontkit.openSync unavailable for browser build');\n  }\n  var buffer = fs.readFileSync(filename);\n  return fontkit$1.create(buffer, postscriptName);\n};\n\nfontkit$1.open = function (filename, postscriptName, callback) {\n  {\n    throw new Error('fontkit.open unavailable for browser build');\n  }\n\n  if (typeof postscriptName === 'function') {\n    callback = postscriptName;\n    postscriptName = null;\n  }\n\n  fs.readFile(filename, function (err, buffer) {\n    if (err) {\n      return callback(err);\n    }\n\n    try {\n      var font = fontkit$1.create(buffer, postscriptName);\n    } catch (e) {\n      return callback(e);\n    }\n\n    return callback(null, font);\n  });\n\n  return;\n};\n\nfontkit$1.create = function (buffer, postscriptName) {\n  for (var i = 0; i < formats.length; i++) {\n    var format = formats[i];\n    if (format.probe(buffer)) {\n      var font = new format(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.DecodeStream(buffer));\n      if (postscriptName) {\n        return font.getFont(postscriptName);\n      }\n\n      return font;\n    }\n  }\n\n  throw new Error('Unknown font format');\n};\n\n/**\n * This decorator caches the results of a getter or method such that\n * the results are lazily computed once, and then cached.\n * @private\n */\nfunction cache(target, key, descriptor) {\n  if (descriptor.get) {\n    var get = descriptor.get;\n    descriptor.get = function () {\n      var value = get.call(this);\n      Object.defineProperty(this, key, { value: value });\n      return value;\n    };\n  } else if (typeof descriptor.value === 'function') {\n    var fn = descriptor.value;\n\n    return {\n      get: function get() {\n        var cache = new Map();\n        function memoized() {\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var key = args.length > 0 ? args[0] : 'value';\n          if (cache.has(key)) {\n            return cache.get(key);\n          }\n\n          var result = fn.apply(this, args);\n          cache.set(key, result);\n          return result;\n        }\n\n        Object.defineProperty(this, key, { value: memoized });\n        return memoized;\n      }\n    };\n  }\n}\n\nvar SubHeader = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  firstCode: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  entryCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  idDelta: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  idRangeOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n});\n\nvar CmapGroup = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  startCharCode: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  endCharCode: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  glyphID: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32\n});\n\nvar UnicodeValueRange = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  startUnicodeValue: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint24,\n  additionalCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8\n});\n\nvar UVSMapping = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  unicodeValue: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint24,\n  glyphID: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n});\n\nvar DefaultUVS = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(UnicodeValueRange, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32);\nvar NonDefaultUVS = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(UVSMapping, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32);\n\nvar VarSelectorRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  varSelector: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint24,\n  defaultUVS: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, DefaultUVS, { type: 'parent' }),\n  nonDefaultUVS: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, NonDefaultUVS, { type: 'parent' })\n});\n\nvar CmapSubtable = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, {\n  0: { // Byte encoding\n    length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Total table length in bytes (set to 262 for format 0)\n    language: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Language code for this encoding subtable, or zero if language-independent\n    codeMap: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, 256)\n  },\n\n  2: { // High-byte mapping (CJK)\n    length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    language: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    subHeaderKeys: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 256),\n    subHeaderCount: function subHeaderCount(t) {\n      return Math.max.apply(Math, t.subHeaderKeys);\n    },\n    subHeaders: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(SubHeader, 'subHeaderCount'),\n    glyphIndexArray: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'subHeaderCount')\n  },\n\n  4: { // Segment mapping to delta values\n    length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Total table length in bytes\n    language: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Language code\n    segCountX2: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    segCount: function segCount(t) {\n      return t.segCountX2 >> 1;\n    },\n    searchRange: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    entrySelector: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    rangeShift: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    endCode: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'segCount'),\n    reservedPad: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16), // This value should be zero\n    startCode: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'segCount'),\n    idDelta: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, 'segCount'),\n    idRangeOffset: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'segCount'),\n    glyphIndexArray: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, function (t) {\n      return (t.length - t._currentOffset) / 2;\n    })\n  },\n\n  6: { // Trimmed table\n    length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    language: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    firstCode: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    entryCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    glyphIndices: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'entryCount')\n  },\n\n  8: { // mixed 16-bit and 32-bit coverage\n    reserved: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16),\n    length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    language: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    is32: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, 8192),\n    nGroups: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    groups: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  10: { // Trimmed Array\n    reserved: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16),\n    length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    language: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    firstCode: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    entryCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    glyphIndices: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'numChars')\n  },\n\n  12: { // Segmented coverage\n    reserved: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16),\n    length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    language: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    nGroups: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    groups: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  13: { // Many-to-one range mappings (same as 12 except for group.startGlyphID)\n    reserved: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16),\n    length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    language: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    nGroups: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    groups: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  14: { // Unicode Variation Sequences\n    length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    numRecords: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    varSelectors: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(VarSelectorRecord, 'numRecords')\n  }\n});\n\nvar CmapEntry = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  platformID: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Platform identifier\n  encodingID: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Platform-specific encoding identifier\n  table: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, CmapSubtable, { type: 'parent', lazy: true })\n});\n\n// character to glyph mapping\nvar cmap = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  numSubtables: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  tables: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(CmapEntry, 'numSubtables')\n});\n\n// font header\nvar head = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int32, // 0x00010000 (version 1.0)\n  revision: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int32, // set by font manufacturer\n  checkSumAdjustment: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  magicNumber: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, // set to 0x5F0F3CF5\n  flags: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  unitsPerEm: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // range from 64 to 16384\n  created: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int32, 2),\n  modified: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int32, 2),\n  xMin: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // for all glyph bounding boxes\n  yMin: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // for all glyph bounding boxes\n  xMax: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // for all glyph bounding boxes\n  yMax: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // for all glyph bounding boxes\n  macStyle: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ['bold', 'italic', 'underline', 'outline', 'shadow', 'condensed', 'extended']),\n  lowestRecPPEM: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // smallest readable size in pixels\n  fontDirectionHint: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  indexToLocFormat: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // 0 for short offsets, 1 for long\n  glyphDataFormat: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16 // 0 for current format\n});\n\n// horizontal header\nvar hhea = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int32,\n  ascent: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // Distance from baseline of highest ascender\n  descent: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // Distance from baseline of lowest descender\n  lineGap: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // Typographic line gap\n  advanceWidthMax: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Maximum advance width value in 'hmtx' table\n  minLeftSideBearing: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // Maximum advance width value in 'hmtx' table\n  minRightSideBearing: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // Minimum right sidebearing value\n  xMaxExtent: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  caretSlopeRise: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // Used to calculate the slope of the cursor (rise/run); 1 for vertical\n  caretSlopeRun: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // 0 for vertical\n  caretOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // Set to 0 for non-slanted fonts\n  reserved: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, 4),\n  metricDataFormat: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // 0 for current format\n  numberOfMetrics: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16 // Number of advance widths in 'hmtx' table\n});\n\nvar HmtxEntry = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  advance: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  bearing: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16\n});\n\nvar hmtx = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  metrics: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(HmtxEntry, function (t) {\n    return t.parent.hhea.numberOfMetrics;\n  }),\n  bearings: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics;\n  })\n});\n\n// maxiumum profile\nvar maxp = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int32,\n  numGlyphs: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // The number of glyphs in the font\n  maxPoints: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Maximum points in a non-composite glyph\n  maxContours: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Maximum contours in a non-composite glyph\n  maxComponentPoints: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Maximum points in a composite glyph\n  maxComponentContours: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Maximum contours in a composite glyph\n  maxZones: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // 1 if instructions do not use the twilight zone, 2 otherwise\n  maxTwilightPoints: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Maximum points used in Z0\n  maxStorage: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Number of Storage Area locations\n  maxFunctionDefs: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Number of FDEFs\n  maxInstructionDefs: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Number of IDEFs\n  maxStackElements: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Maximum stack depth\n  maxSizeOfInstructions: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Maximum byte count for glyph instructions\n  maxComponentElements: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Maximum number of components referenced at “top level” for any composite glyph\n  maxComponentDepth: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16 // Maximum levels of recursion; 1 for simple components\n});\n\n/**\n * Gets an encoding name from platform, encoding, and language ids.\n * Returned encoding names can be used in iconv-lite to decode text.\n */\nfunction getEncoding(platformID, encodingID) {\n  var languageID = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (platformID === 1 && MAC_LANGUAGE_ENCODINGS[languageID]) {\n    return MAC_LANGUAGE_ENCODINGS[languageID];\n  }\n\n  return ENCODINGS[platformID][encodingID];\n}\n\n// Map of platform ids to encoding ids.\nvar ENCODINGS = [\n// unicode\n['utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be'],\n\n// macintosh\n// Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n// 0\tRoman                 17\tMalayalam\n// 1\tJapanese\t            18\tSinhalese\n// 2\tTraditional Chinese\t  19\tBurmese\n// 3\tKorean\t              20\tKhmer\n// 4\tArabic\t              21\tThai\n// 5\tHebrew\t              22\tLaotian\n// 6\tGreek\t                23\tGeorgian\n// 7\tRussian\t              24\tArmenian\n// 8\tRSymbol\t              25\tSimplified Chinese\n// 9\tDevanagari\t          26\tTibetan\n// 10\tGurmukhi\t            27\tMongolian\n// 11\tGujarati\t            28\tGeez\n// 12\tOriya\t                29\tSlavic\n// 13\tBengali\t              30\tVietnamese\n// 14\tTamil\t                31\tSindhi\n// 15\tTelugu\t              32\t(Uninterpreted)\n// 16\tKannada\n['macroman', 'shift-jis', 'big5', 'euc-kr', 'iso-8859-6', 'iso-8859-8', 'macgreek', 'maccyrillic', 'symbol', 'Devanagari', 'Gurmukhi', 'Gujarati', 'Oriya', 'Bengali', 'Tamil', 'Telugu', 'Kannada', 'Malayalam', 'Sinhalese', 'Burmese', 'Khmer', 'macthai', 'Laotian', 'Georgian', 'Armenian', 'gb-2312-80', 'Tibetan', 'Mongolian', 'Geez', 'maccenteuro', 'Vietnamese', 'Sindhi'],\n\n// ISO (deprecated)\n['ascii'],\n\n// windows\n// Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n['symbol', 'utf16be', 'shift-jis', 'gb18030', 'big5', 'wansung', 'johab', null, null, null, 'utf16be']];\n\n// Overrides for Mac scripts by language id.\n// See http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nvar MAC_LANGUAGE_ENCODINGS = {\n  15: 'maciceland',\n  17: 'macturkish',\n  18: 'maccroatian',\n  24: 'maccenteuro',\n  25: 'maccenteuro',\n  26: 'maccenteuro',\n  27: 'maccenteuro',\n  28: 'maccenteuro',\n  30: 'maciceland',\n  37: 'macromania',\n  38: 'maccenteuro',\n  39: 'maccenteuro',\n  40: 'maccenteuro',\n  143: 'macinuit', // Unsupported by iconv-lite\n  146: 'macgaelic' // Unsupported by iconv-lite\n};\n\n// Map of platform ids to BCP-47 language codes.\nvar LANGUAGES = [\n// unicode\n[], { // macintosh\n  0: 'en', 30: 'fo', 60: 'ks', 90: 'rw',\n  1: 'fr', 31: 'fa', 61: 'ku', 91: 'rn',\n  2: 'de', 32: 'ru', 62: 'sd', 92: 'ny',\n  3: 'it', 33: 'zh', 63: 'bo', 93: 'mg',\n  4: 'nl', 34: 'nl-BE', 64: 'ne', 94: 'eo',\n  5: 'sv', 35: 'ga', 65: 'sa', 128: 'cy',\n  6: 'es', 36: 'sq', 66: 'mr', 129: 'eu',\n  7: 'da', 37: 'ro', 67: 'bn', 130: 'ca',\n  8: 'pt', 38: 'cz', 68: 'as', 131: 'la',\n  9: 'no', 39: 'sk', 69: 'gu', 132: 'qu',\n  10: 'he', 40: 'si', 70: 'pa', 133: 'gn',\n  11: 'ja', 41: 'yi', 71: 'or', 134: 'ay',\n  12: 'ar', 42: 'sr', 72: 'ml', 135: 'tt',\n  13: 'fi', 43: 'mk', 73: 'kn', 136: 'ug',\n  14: 'el', 44: 'bg', 74: 'ta', 137: 'dz',\n  15: 'is', 45: 'uk', 75: 'te', 138: 'jv',\n  16: 'mt', 46: 'be', 76: 'si', 139: 'su',\n  17: 'tr', 47: 'uz', 77: 'my', 140: 'gl',\n  18: 'hr', 48: 'kk', 78: 'km', 141: 'af',\n  19: 'zh-Hant', 49: 'az-Cyrl', 79: 'lo', 142: 'br',\n  20: 'ur', 50: 'az-Arab', 80: 'vi', 143: 'iu',\n  21: 'hi', 51: 'hy', 81: 'id', 144: 'gd',\n  22: 'th', 52: 'ka', 82: 'tl', 145: 'gv',\n  23: 'ko', 53: 'mo', 83: 'ms', 146: 'ga',\n  24: 'lt', 54: 'ky', 84: 'ms-Arab', 147: 'to',\n  25: 'pl', 55: 'tg', 85: 'am', 148: 'el-polyton',\n  26: 'hu', 56: 'tk', 86: 'ti', 149: 'kl',\n  27: 'es', 57: 'mn-CN', 87: 'om', 150: 'az',\n  28: 'lv', 58: 'mn', 88: 'so', 151: 'nn',\n  29: 'se', 59: 'ps', 89: 'sw'\n},\n\n// ISO (deprecated)\n[], { // windows                                        \n  0x0436: 'af', 0x4009: 'en-IN', 0x0487: 'rw', 0x0432: 'tn',\n  0x041C: 'sq', 0x1809: 'en-IE', 0x0441: 'sw', 0x045B: 'si',\n  0x0484: 'gsw', 0x2009: 'en-JM', 0x0457: 'kok', 0x041B: 'sk',\n  0x045E: 'am', 0x4409: 'en-MY', 0x0412: 'ko', 0x0424: 'sl',\n  0x1401: 'ar-DZ', 0x1409: 'en-NZ', 0x0440: 'ky', 0x2C0A: 'es-AR',\n  0x3C01: 'ar-BH', 0x3409: 'en-PH', 0x0454: 'lo', 0x400A: 'es-BO',\n  0x0C01: 'ar', 0x4809: 'en-SG', 0x0426: 'lv', 0x340A: 'es-CL',\n  0x0801: 'ar-IQ', 0x1C09: 'en-ZA', 0x0427: 'lt', 0x240A: 'es-CO',\n  0x2C01: 'ar-JO', 0x2C09: 'en-TT', 0x082E: 'dsb', 0x140A: 'es-CR',\n  0x3401: 'ar-KW', 0x0809: 'en-GB', 0x046E: 'lb', 0x1C0A: 'es-DO',\n  0x3001: 'ar-LB', 0x0409: 'en', 0x042F: 'mk', 0x300A: 'es-EC',\n  0x1001: 'ar-LY', 0x3009: 'en-ZW', 0x083E: 'ms-BN', 0x440A: 'es-SV',\n  0x1801: 'ary', 0x0425: 'et', 0x043E: 'ms', 0x100A: 'es-GT',\n  0x2001: 'ar-OM', 0x0438: 'fo', 0x044C: 'ml', 0x480A: 'es-HN',\n  0x4001: 'ar-QA', 0x0464: 'fil', 0x043A: 'mt', 0x080A: 'es-MX',\n  0x0401: 'ar-SA', 0x040B: 'fi', 0x0481: 'mi', 0x4C0A: 'es-NI',\n  0x2801: 'ar-SY', 0x080C: 'fr-BE', 0x047A: 'arn', 0x180A: 'es-PA',\n  0x1C01: 'aeb', 0x0C0C: 'fr-CA', 0x044E: 'mr', 0x3C0A: 'es-PY',\n  0x3801: 'ar-AE', 0x040C: 'fr', 0x047C: 'moh', 0x280A: 'es-PE',\n  0x2401: 'ar-YE', 0x140C: 'fr-LU', 0x0450: 'mn', 0x500A: 'es-PR',\n  0x042B: 'hy', 0x180C: 'fr-MC', 0x0850: 'mn-CN', 0x0C0A: 'es',\n  0x044D: 'as', 0x100C: 'fr-CH', 0x0461: 'ne', 0x040A: 'es',\n  0x082C: 'az-Cyrl', 0x0462: 'fy', 0x0414: 'nb', 0x540A: 'es-US',\n  0x042C: 'az', 0x0456: 'gl', 0x0814: 'nn', 0x380A: 'es-UY',\n  0x046D: 'ba', 0x0437: 'ka', 0x0482: 'oc', 0x200A: 'es-VE',\n  0x042D: 'eu', 0x0C07: 'de-AT', 0x0448: 'or', 0x081D: 'sv-FI',\n  0x0423: 'be', 0x0407: 'de', 0x0463: 'ps', 0x041D: 'sv',\n  0x0845: 'bn', 0x1407: 'de-LI', 0x0415: 'pl', 0x045A: 'syr',\n  0x0445: 'bn-IN', 0x1007: 'de-LU', 0x0416: 'pt', 0x0428: 'tg',\n  0x201A: 'bs-Cyrl', 0x0807: 'de-CH', 0x0816: 'pt-PT', 0x085F: 'tzm',\n  0x141A: 'bs', 0x0408: 'el', 0x0446: 'pa', 0x0449: 'ta',\n  0x047E: 'br', 0x046F: 'kl', 0x046B: 'qu-BO', 0x0444: 'tt',\n  0x0402: 'bg', 0x0447: 'gu', 0x086B: 'qu-EC', 0x044A: 'te',\n  0x0403: 'ca', 0x0468: 'ha', 0x0C6B: 'qu', 0x041E: 'th',\n  0x0C04: 'zh-HK', 0x040D: 'he', 0x0418: 'ro', 0x0451: 'bo',\n  0x1404: 'zh-MO', 0x0439: 'hi', 0x0417: 'rm', 0x041F: 'tr',\n  0x0804: 'zh', 0x040E: 'hu', 0x0419: 'ru', 0x0442: 'tk',\n  0x1004: 'zh-SG', 0x040F: 'is', 0x243B: 'smn', 0x0480: 'ug',\n  0x0404: 'zh-TW', 0x0470: 'ig', 0x103B: 'smj-NO', 0x0422: 'uk',\n  0x0483: 'co', 0x0421: 'id', 0x143B: 'smj', 0x042E: 'hsb',\n  0x041A: 'hr', 0x045D: 'iu', 0x0C3B: 'se-FI', 0x0420: 'ur',\n  0x101A: 'hr-BA', 0x085D: 'iu-Latn', 0x043B: 'se', 0x0843: 'uz-Cyrl',\n  0x0405: 'cs', 0x083C: 'ga', 0x083B: 'se-SE', 0x0443: 'uz',\n  0x0406: 'da', 0x0434: 'xh', 0x203B: 'sms', 0x042A: 'vi',\n  0x048C: 'prs', 0x0435: 'zu', 0x183B: 'sma-NO', 0x0452: 'cy',\n  0x0465: 'dv', 0x0410: 'it', 0x1C3B: 'sms', 0x0488: 'wo',\n  0x0813: 'nl-BE', 0x0810: 'it-CH', 0x044F: 'sa', 0x0485: 'sah',\n  0x0413: 'nl', 0x0411: 'ja', 0x1C1A: 'sr-Cyrl-BA', 0x0478: 'ii',\n  0x0C09: 'en-AU', 0x044B: 'kn', 0x0C1A: 'sr', 0x046A: 'yo',\n  0x2809: 'en-BZ', 0x043F: 'kk', 0x181A: 'sr-Latn-BA',\n  0x1009: 'en-CA', 0x0453: 'km', 0x081A: 'sr-Latn',\n  0x2409: 'en-029', 0x0486: 'quc', 0x046C: 'nso'\n}];\n\nvar NameRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  platformID: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  encodingID: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  languageID: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  nameID: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  string: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String('length', function (t) {\n    return getEncoding(t.platformID, t.encodingID, t.languageID);\n  }), { type: 'parent', relativeTo: 'parent.stringOffset', allowNull: false })\n});\n\nvar LangTagRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  tag: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String('length', 'utf16be'), { type: 'parent', relativeTo: 'stringOffset' })\n});\n\nvar NameTable = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, {\n  0: {\n    count: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    stringOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    records: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(NameRecord, 'count')\n  },\n  1: {\n    count: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    stringOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    records: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(NameRecord, 'count'),\n    langTagCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    langTags: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(LangTagRecord, 'langTagCount')\n  }\n});\n\nvar NAMES = ['copyright', 'fontFamily', 'fontSubfamily', 'uniqueSubfamily', 'fullName', 'version', 'postscriptName', // Note: A font may have only one PostScript name and that name must be ASCII.\n'trademark', 'manufacturer', 'designer', 'description', 'vendorURL', 'designerURL', 'license', 'licenseURL', null, // reserved\n'preferredFamily', 'preferredSubfamily', 'compatibleFull', 'sampleText', 'postscriptCIDFontName', 'wwsFamilyName', 'wwsSubfamilyName'];\n\nNameTable.process = function (stream) {\n  var records = {};\n  for (var _iterator = this.records, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var record = _ref;\n\n    // find out what language this is for\n    var language = LANGUAGES[record.platformID][record.languageID];\n\n    if (language == null && this.langTags != null && record.languageID >= 0x8000) {\n      language = this.langTags[record.languageID - 0x8000].tag;\n    }\n\n    if (language == null) {\n      language = record.platformID + '-' + record.languageID;\n    }\n\n    // if the nameID is >= 256, it is a font feature record (AAT)\n    var key = record.nameID >= 256 ? 'fontFeatures' : NAMES[record.nameID] || record.nameID;\n    if (records[key] == null) {\n      records[key] = {};\n    }\n\n    var obj = records[key];\n    if (record.nameID >= 256) {\n      obj = obj[record.nameID] || (obj[record.nameID] = {});\n    }\n\n    if (typeof record.string === 'string' || typeof obj[language] !== 'string') {\n      obj[language] = record.string;\n    }\n  }\n\n  this.records = records;\n};\n\nNameTable.preEncode = function () {\n  if (Array.isArray(this.records)) return;\n  this.version = 0;\n\n  var records = [];\n  for (var key in this.records) {\n    var val = this.records[key];\n    if (key === 'fontFeatures') continue;\n\n    records.push({\n      platformID: 3,\n      encodingID: 1,\n      languageID: 0x409,\n      nameID: NAMES.indexOf(key),\n      length: Buffer.byteLength(val.en, 'utf16le'),\n      string: val.en\n    });\n\n    if (key === 'postscriptName') {\n      records.push({\n        platformID: 1,\n        encodingID: 0,\n        languageID: 0,\n        nameID: NAMES.indexOf(key),\n        length: val.en.length,\n        string: val.en\n      });\n    }\n  }\n\n  this.records = records;\n  this.count = records.length;\n  this.stringOffset = NameTable.size(this, null, false);\n};\n\nvar OS2 = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, {\n  header: {\n    xAvgCharWidth: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // average weighted advance width of lower case letters and space\n    usWeightClass: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // visual weight of stroke in glyphs\n    usWidthClass: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // relative change from the normal aspect ratio (width to height ratio)\n    fsType: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, [// Indicates font embedding licensing rights\n    null, 'noEmbedding', 'viewOnly', 'editable', null, null, null, null, 'noSubsetting', 'bitmapOnly']),\n    ySubscriptXSize: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // recommended horizontal size in pixels for subscripts\n    ySubscriptYSize: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // recommended vertical size in pixels for subscripts\n    ySubscriptXOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // recommended horizontal offset for subscripts\n    ySubscriptYOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // recommended vertical offset form the baseline for subscripts\n    ySuperscriptXSize: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // recommended horizontal size in pixels for superscripts\n    ySuperscriptYSize: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // recommended vertical size in pixels for superscripts\n    ySuperscriptXOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // recommended horizontal offset for superscripts\n    ySuperscriptYOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // recommended vertical offset from the baseline for superscripts\n    yStrikeoutSize: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // width of the strikeout stroke\n    yStrikeoutPosition: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // position of the strikeout stroke relative to the baseline\n    sFamilyClass: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // classification of font-family design\n    panose: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, 10), // describe the visual characteristics of a given typeface\n    ulCharRange: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, 4),\n    vendorID: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(4), // four character identifier for the font vendor\n    fsSelection: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, [// bit field containing information about the font\n    'italic', 'underscore', 'negative', 'outlined', 'strikeout', 'bold', 'regular', 'useTypoMetrics', 'wws', 'oblique']),\n    usFirstCharIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // The minimum Unicode index in this font\n    usLastCharIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16 // The maximum Unicode index in this font\n  },\n\n  // The Apple version of this table ends here, but the Microsoft one continues on...\n  0: {},\n\n  1: {\n    typoAscender: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    typoDescender: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    typoLineGap: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    winAscent: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    winDescent: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    codePageRange: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, 2)\n  },\n\n  2: {\n    // these should be common with version 1 somehow\n    typoAscender: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    typoDescender: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    typoLineGap: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    winAscent: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    winDescent: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    codePageRange: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, 2),\n\n    xHeight: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    capHeight: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    defaultChar: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    breakChar: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    maxContent: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n  },\n\n  5: {\n    typoAscender: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    typoDescender: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    typoLineGap: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    winAscent: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    winDescent: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    codePageRange: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, 2),\n\n    xHeight: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    capHeight: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    defaultChar: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    breakChar: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    maxContent: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n\n    usLowerOpticalPointSize: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    usUpperOpticalPointSize: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n  }\n});\n\nvar versions = OS2.versions;\nversions[3] = versions[4] = versions[2];\n\n// PostScript information\nvar post = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32, {\n  header: { // these fields exist at the top of all versions\n    italicAngle: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32, // Italic angle in counter-clockwise degrees from the vertical.\n    underlinePosition: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // Suggested distance of the top of the underline from the baseline\n    underlineThickness: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // Suggested values for the underline thickness\n    isFixedPitch: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, // Whether the font is monospaced\n    minMemType42: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, // Minimum memory usage when a TrueType font is downloaded as a Type 42 font\n    maxMemType42: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, // Maximum memory usage when a TrueType font is downloaded as a Type 42 font\n    minMemType1: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, // Minimum memory usage when a TrueType font is downloaded as a Type 1 font\n    maxMemType1: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32 // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n  },\n\n  1: {}, // version 1 has no additional fields\n\n  2: {\n    numberOfGlyphs: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    glyphNameIndex: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'numberOfGlyphs'),\n    names: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8))\n  },\n\n  2.5: {\n    numberOfGlyphs: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    offsets: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, 'numberOfGlyphs')\n  },\n\n  3: {}, // version 3 has no additional fields\n\n  4: {\n    map: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, function (t) {\n      return t.parent.maxp.numGlyphs;\n    })\n  }\n});\n\n// An array of predefined values accessible by instructions\nvar cvt = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  controlValues: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16)\n});\n\n// A list of instructions that are executed once when a font is first used.\n// These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\nvar fpgm = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  instructions: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8)\n});\n\nvar loca = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct('head.indexToLocFormat', {\n  0: {\n    offsets: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16)\n  },\n  1: {\n    offsets: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32)\n  }\n});\n\nloca.process = function () {\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] <<= 1;\n    }\n  }\n};\n\nloca.preEncode = function () {\n  if (this.version != null) return;\n\n  // assume this.offsets is a sorted array\n  this.version = this.offsets[this.offsets.length - 1] > 0xffff ? 1 : 0;\n\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] >>>= 1;\n    }\n  }\n};\n\n// Set of instructions executed whenever the point size or font transformation change\nvar prep = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  controlValueProgram: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8)\n});\n\n// only used for encoding\nvar glyf = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Buffer());\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar CFFIndex = function () {\n  function CFFIndex(type) {\n    classCallCheck(this, CFFIndex);\n\n    this.type = type;\n  }\n\n  CFFIndex.prototype.getCFFVersion = function getCFFVersion(ctx) {\n    while (ctx && !ctx.hdrSize) {\n      ctx = ctx.parent;\n    }\n\n    return ctx ? ctx.version : -1;\n  };\n\n  CFFIndex.prototype.decode = function decode(stream, parent) {\n    var version = this.getCFFVersion(parent);\n    var count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();\n\n    if (count === 0) {\n      return [];\n    }\n\n    var offSize = stream.readUInt8();\n    var offsetType = void 0;\n    if (offSize === 1) {\n      offsetType = restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8;\n    } else if (offSize === 2) {\n      offsetType = restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16;\n    } else if (offSize === 3) {\n      offsetType = restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint24;\n    } else if (offSize === 4) {\n      offsetType = restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32;\n    } else {\n      throw new Error(\"Bad offset size in CFFIndex: \" + offSize + \" \" + stream.pos);\n    }\n\n    var ret = [];\n    var startPos = stream.pos + (count + 1) * offSize - 1;\n\n    var start = offsetType.decode(stream);\n    for (var i = 0; i < count; i++) {\n      var end = offsetType.decode(stream);\n\n      if (this.type != null) {\n        var pos = stream.pos;\n        stream.pos = startPos + start;\n\n        parent.length = end - start;\n        ret.push(this.type.decode(stream, parent));\n        stream.pos = pos;\n      } else {\n        ret.push({\n          offset: startPos + start,\n          length: end - start\n        });\n      }\n\n      start = end;\n    }\n\n    stream.pos = startPos + start;\n    return ret;\n  };\n\n  CFFIndex.prototype.size = function size(arr, parent) {\n    var size = 2;\n    if (arr.length === 0) {\n      return size;\n    }\n\n    var type = this.type || new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Buffer();\n\n    // find maximum offset to detminine offset type\n    var offset = 1;\n    for (var i = 0; i < arr.length; i++) {\n      var item = arr[i];\n      offset += type.size(item, parent);\n    }\n\n    var offsetType = void 0;\n    if (offset <= 0xff) {\n      offsetType = restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    size += 1 + offsetType.size() * (arr.length + 1);\n    size += offset - 1;\n\n    return size;\n  };\n\n  CFFIndex.prototype.encode = function encode(stream, arr, parent) {\n    stream.writeUInt16BE(arr.length);\n    if (arr.length === 0) {\n      return;\n    }\n\n    var type = this.type || new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Buffer();\n\n    // find maximum offset to detminine offset type\n    var sizes = [];\n    var offset = 1;\n    for (var _iterator = arr, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var item = _ref;\n\n      var s = type.size(item, parent);\n      sizes.push(s);\n      offset += s;\n    }\n\n    var offsetType = void 0;\n    if (offset <= 0xff) {\n      offsetType = restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    // write offset size\n    stream.writeUInt8(offsetType.size());\n\n    // write elements\n    offset = 1;\n    offsetType.encode(stream, offset);\n\n    for (var _iterator2 = sizes, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var size = _ref2;\n\n      offset += size;\n      offsetType.encode(stream, offset);\n    }\n\n    for (var _iterator3 = arr, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var _item = _ref3;\n\n      type.encode(stream, _item, parent);\n    }\n\n    return;\n  };\n\n  return CFFIndex;\n}();\n\nvar FLOAT_EOF = 0xf;\nvar FLOAT_LOOKUP = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n\nvar FLOAT_ENCODE_LOOKUP = {\n  '.': 10,\n  'E': 11,\n  'E-': 12,\n  '-': 14\n};\n\nvar CFFOperand = function () {\n  function CFFOperand() {\n    classCallCheck(this, CFFOperand);\n  }\n\n  CFFOperand.decode = function decode(stream, value) {\n    if (32 <= value && value <= 246) {\n      return value - 139;\n    }\n\n    if (247 <= value && value <= 250) {\n      return (value - 247) * 256 + stream.readUInt8() + 108;\n    }\n\n    if (251 <= value && value <= 254) {\n      return -(value - 251) * 256 - stream.readUInt8() - 108;\n    }\n\n    if (value === 28) {\n      return stream.readInt16BE();\n    }\n\n    if (value === 29) {\n      return stream.readInt32BE();\n    }\n\n    if (value === 30) {\n      var str = '';\n      while (true) {\n        var b = stream.readUInt8();\n\n        var n1 = b >> 4;\n        if (n1 === FLOAT_EOF) {\n          break;\n        }\n        str += FLOAT_LOOKUP[n1];\n\n        var n2 = b & 15;\n        if (n2 === FLOAT_EOF) {\n          break;\n        }\n        str += FLOAT_LOOKUP[n2];\n      }\n\n      return parseFloat(str);\n    }\n\n    return null;\n  };\n\n  CFFOperand.size = function size(value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, set to 32768\n    if (value.forceLarge) {\n      value = 32768;\n    }\n\n    if ((value | 0) !== value) {\n      // floating point\n      var str = '' + value;\n      return 1 + Math.ceil((str.length + 1) / 2);\n    } else if (-107 <= value && value <= 107) {\n      return 1;\n    } else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) {\n      return 2;\n    } else if (-32768 <= value && value <= 32767) {\n      return 3;\n    } else {\n      return 5;\n    }\n  };\n\n  CFFOperand.encode = function encode(stream, value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, save the old value and set to 32768\n    var val = Number(value);\n\n    if (value.forceLarge) {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    } else if ((val | 0) !== val) {\n      // floating point\n      stream.writeUInt8(30);\n\n      var str = '' + val;\n      for (var i = 0; i < str.length; i += 2) {\n        var c1 = str[i];\n        var n1 = FLOAT_ENCODE_LOOKUP[c1] || +c1;\n\n        if (i === str.length - 1) {\n          var n2 = FLOAT_EOF;\n        } else {\n          var c2 = str[i + 1];\n          var n2 = FLOAT_ENCODE_LOOKUP[c2] || +c2;\n        }\n\n        stream.writeUInt8(n1 << 4 | n2 & 15);\n      }\n\n      if (n2 !== FLOAT_EOF) {\n        return stream.writeUInt8(FLOAT_EOF << 4);\n      }\n    } else if (-107 <= val && val <= 107) {\n      return stream.writeUInt8(val + 139);\n    } else if (108 <= val && val <= 1131) {\n      val -= 108;\n      stream.writeUInt8((val >> 8) + 247);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-1131 <= val && val <= -108) {\n      val = -val - 108;\n      stream.writeUInt8((val >> 8) + 251);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-32768 <= val && val <= 32767) {\n      stream.writeUInt8(28);\n      return stream.writeInt16BE(val);\n    } else {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    }\n  };\n\n  return CFFOperand;\n}();\n\nvar CFFDict = function () {\n  function CFFDict() {\n    var ops = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, CFFDict);\n\n    this.ops = ops;\n    this.fields = {};\n    for (var _iterator = ops, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var field = _ref;\n\n      var key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n      this.fields[key] = field;\n    }\n  }\n\n  CFFDict.prototype.decodeOperands = function decodeOperands(type, stream, ret, operands) {\n    var _this = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this.decodeOperands(type[i], stream, ret, [op]);\n      });\n    } else if (type.decode != null) {\n      return type.decode(stream, ret, operands);\n    } else {\n      switch (type) {\n        case 'number':\n        case 'offset':\n        case 'sid':\n          return operands[0];\n        case 'boolean':\n          return !!operands[0];\n        default:\n          return operands;\n      }\n    }\n  };\n\n  CFFDict.prototype.encodeOperands = function encodeOperands(type, stream, ctx, operands) {\n    var _this2 = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this2.encodeOperands(type[i], stream, ctx, op)[0];\n      });\n    } else if (type.encode != null) {\n      return type.encode(stream, operands, ctx);\n    } else if (typeof operands === 'number') {\n      return [operands];\n    } else if (typeof operands === 'boolean') {\n      return [+operands];\n    } else if (Array.isArray(operands)) {\n      return operands;\n    } else {\n      return [operands];\n    }\n  };\n\n  CFFDict.prototype.decode = function decode(stream, parent) {\n    var end = stream.pos + parent.length;\n    var ret = {};\n    var operands = [];\n\n    // define hidden properties\n    Object.defineProperties(ret, {\n      parent: { value: parent },\n      _startOffset: { value: stream.pos }\n    });\n\n    // fill in defaults\n    for (var key in this.fields) {\n      var field = this.fields[key];\n      ret[field[1]] = field[3];\n    }\n\n    while (stream.pos < end) {\n      var b = stream.readUInt8();\n      if (b < 28) {\n        if (b === 12) {\n          b = b << 8 | stream.readUInt8();\n        }\n\n        var _field = this.fields[b];\n        if (!_field) {\n          throw new Error('Unknown operator ' + b);\n        }\n\n        var val = this.decodeOperands(_field[2], stream, ret, operands);\n        if (val != null) {\n          if (val instanceof restructure_src_utils__WEBPACK_IMPORTED_MODULE_1__[\"PropertyDescriptor\"]) {\n            Object.defineProperty(ret, _field[1], val);\n          } else {\n            ret[_field[1]] = val;\n          }\n        }\n\n        operands = [];\n      } else {\n        operands.push(CFFOperand.decode(stream, b));\n      }\n    }\n\n    return ret;\n  };\n\n  CFFDict.prototype.size = function size(dict, parent) {\n    var includePointers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    var ctx = {\n      parent: parent,\n      val: dict,\n      pointerSize: 0,\n      startOffset: parent.startOffset || 0\n    };\n\n    var len = 0;\n\n    for (var k in this.fields) {\n      var field = this.fields[k];\n      var val = dict[field[1]];\n      if (val == null || deep_equal__WEBPACK_IMPORTED_MODULE_2___default()(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], null, ctx, val);\n      for (var _iterator2 = operands, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var op = _ref2;\n\n        len += CFFOperand.size(op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      len += key.length;\n    }\n\n    if (includePointers) {\n      len += ctx.pointerSize;\n    }\n\n    return len;\n  };\n\n  CFFDict.prototype.encode = function encode(stream, dict, parent) {\n    var ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent: parent,\n      val: dict,\n      pointerSize: 0\n    };\n\n    ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n\n    for (var _iterator3 = this.ops, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var field = _ref3;\n\n      var val = dict[field[1]];\n      if (val == null || deep_equal__WEBPACK_IMPORTED_MODULE_2___default()(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], stream, ctx, val);\n      for (var _iterator4 = operands, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n        var _ref4;\n\n        if (_isArray4) {\n          if (_i4 >= _iterator4.length) break;\n          _ref4 = _iterator4[_i4++];\n        } else {\n          _i4 = _iterator4.next();\n          if (_i4.done) break;\n          _ref4 = _i4.value;\n        }\n\n        var op = _ref4;\n\n        CFFOperand.encode(stream, op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      for (var _iterator5 = key, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n        var _ref5;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref5 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref5 = _i5.value;\n        }\n\n        var _op = _ref5;\n\n        stream.writeUInt8(_op);\n      }\n    }\n\n    var i = 0;\n    while (i < ctx.pointers.length) {\n      var ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n\n    return;\n  };\n\n  return CFFDict;\n}();\n\nvar CFFPointer = function (_r$Pointer) {\n  inherits(CFFPointer, _r$Pointer);\n\n  function CFFPointer(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, CFFPointer);\n\n    if (options.type == null) {\n      options.type = 'global';\n    }\n\n    return possibleConstructorReturn(this, _r$Pointer.call(this, null, type, options));\n  }\n\n  CFFPointer.prototype.decode = function decode(stream, parent, operands) {\n    this.offsetType = {\n      decode: function decode() {\n        return operands[0];\n      }\n    };\n\n    return _r$Pointer.prototype.decode.call(this, stream, parent, operands);\n  };\n\n  CFFPointer.prototype.encode = function encode(stream, value, ctx) {\n    if (!stream) {\n      // compute the size (so ctx.pointerSize is correct)\n      this.offsetType = {\n        size: function size() {\n          return 0;\n        }\n      };\n\n      this.size(value, ctx);\n      return [new Ptr(0)];\n    }\n\n    var ptr = null;\n    this.offsetType = {\n      encode: function encode(stream, val) {\n        return ptr = val;\n      }\n    };\n\n    _r$Pointer.prototype.encode.call(this, stream, value, ctx);\n    return [new Ptr(ptr)];\n  };\n\n  return CFFPointer;\n}(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer);\n\nvar Ptr = function () {\n  function Ptr(val) {\n    classCallCheck(this, Ptr);\n\n    this.val = val;\n    this.forceLarge = true;\n  }\n\n  Ptr.prototype.valueOf = function valueOf() {\n    return this.val;\n  };\n\n  return Ptr;\n}();\n\nvar CFFBlendOp = function () {\n  function CFFBlendOp() {\n    classCallCheck(this, CFFBlendOp);\n  }\n\n  CFFBlendOp.decode = function decode(stream, parent, operands) {\n    var numBlends = operands.pop();\n\n    // TODO: actually blend. For now just consume the deltas\n    // since we don't use any of the values anyway.\n    while (operands.length > numBlends) {\n      operands.pop();\n    }\n  };\n\n  return CFFBlendOp;\n}();\n\nvar CFFPrivateDict = new CFFDict([\n// key       name                    type                                          default\n[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'number', 0.039625], [[12, 10], 'BlueShift', 'number', 7], [[12, 11], 'BlueFuzz', 'number', 1], [10, 'StdHW', 'number', null], [11, 'StdVW', 'number', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'boolean', false], [[12, 17], 'LanguageGroup', 'number', 0], [[12, 18], 'ExpansionFactor', 'number', 0.06], [[12, 19], 'initialRandomSeed', 'number', 0], [20, 'defaultWidthX', 'number', 0], [21, 'nominalWidthX', 'number', 0], [22, 'vsindex', 'number', 0], [23, 'blend', CFFBlendOp, null], [19, 'Subrs', new CFFPointer(new CFFIndex(), { type: 'local' }), null]]);\n\n// Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\nvar standardStrings = [\".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\", \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\", \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\", \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\", \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\", \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\", \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\", \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\", \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\", \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\", \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\", \"ydieresis\", \"zcaron\", \"exclamsmall\", \"Hungarumlautsmall\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\", \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\", \"001.000\", \"001.001\", \"001.002\", \"001.003\", \"Black\", \"Bold\", \"Book\", \"Light\", \"Medium\", \"Regular\", \"Roman\", \"Semibold\"];\n\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\n\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\n\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\n\n//########################\n// Scripts and Languages #\n//########################\n\nvar LangSysTable = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  reserved: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16),\n  reqFeatureIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  featureCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  featureIndexes: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'featureCount')\n});\n\nvar LangSysRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  tag: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(4),\n  langSys: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, LangSysTable, { type: 'parent' })\n});\n\nvar Script = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  defaultLangSys: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, LangSysTable),\n  count: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  langSysRecords: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(LangSysRecord, 'count')\n});\n\nvar ScriptRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  tag: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(4),\n  script: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Script, { type: 'parent' })\n});\n\nvar ScriptList = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(ScriptRecord, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\n\n//#######################\n// Features and Lookups #\n//#######################\n\nvar Feature = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  featureParams: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // pointer\n  lookupCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  lookupListIndexes: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'lookupCount')\n});\n\nvar FeatureRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  tag: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(4),\n  feature: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Feature, { type: 'parent' })\n});\n\nvar FeatureList = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(FeatureRecord, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\n\nvar LookupFlags = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  markAttachmentType: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  flags: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, ['rightToLeft', 'ignoreBaseGlyphs', 'ignoreLigatures', 'ignoreMarks', 'useMarkFilteringSet'])\n});\n\nfunction LookupList(SubTable) {\n  var Lookup = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n    lookupType: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    flags: LookupFlags,\n    subTableCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    subTables: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, SubTable), 'subTableCount'),\n    markFilteringSet: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Optional(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, function (t) {\n      return t.flags.flags.useMarkFilteringSet;\n    })\n  });\n\n  return new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Lookup), restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\n}\n\n//#################\n// Coverage Table #\n//#################\n\nvar RangeRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  start: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  end: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  startCoverageIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n});\n\nvar Coverage = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, {\n  1: {\n    glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    glyphs: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'glyphCount')\n  },\n  2: {\n    rangeCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    rangeRecords: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(RangeRecord, 'rangeCount')\n  }\n});\n\n//#########################\n// Class Definition Table #\n//#########################\n\nvar ClassRangeRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  start: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  end: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  class: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n});\n\nvar ClassDef = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, {\n  1: { // Class array\n    startGlyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    classValueArray: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'glyphCount')\n  },\n  2: { // Class ranges\n    classRangeCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    classRangeRecord: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(ClassRangeRecord, 'classRangeCount')\n  }\n});\n\n//###############\n// Device Table #\n//###############\n\nvar Device = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  a: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // startSize for hinting Device, outerIndex for VariationIndex\n  b: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // endSize for Device, innerIndex for VariationIndex\n  deltaFormat: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n});\n\n//#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\n\nvar LookupRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  sequenceIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  lookupListIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n});\n\nvar Rule = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  lookupCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  input: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(LookupRecord, 'lookupCount')\n});\n\nvar RuleSet = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Rule), restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\n\nvar ClassRule = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  lookupCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  classes: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(LookupRecord, 'lookupCount')\n});\n\nvar ClassSet = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ClassRule), restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\n\nvar Context = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, {\n  1: { // Simple context\n    coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n    ruleSetCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    ruleSets: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, RuleSet), 'ruleSetCount')\n  },\n  2: { // Class-based context\n    coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n    classDef: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ClassDef),\n    classSetCnt: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    classSet: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ClassSet), 'classSetCnt')\n  },\n  3: {\n    glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    lookupCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    coverages: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage), 'glyphCount'),\n    lookupRecords: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(LookupRecord, 'lookupCount')\n  }\n});\n\n//######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\n\nvar ChainRule = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  backtrackGlyphCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  backtrack: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'backtrackGlyphCount'),\n  inputGlyphCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  input: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, function (t) {\n    return t.inputGlyphCount - 1;\n  }),\n  lookaheadGlyphCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  lookahead: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'lookaheadGlyphCount'),\n  lookupCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  lookupRecords: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(LookupRecord, 'lookupCount')\n});\n\nvar ChainRuleSet = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ChainRule), restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\n\nvar ChainingContext = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, {\n  1: { // Simple context glyph substitution\n    coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n    chainCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    chainRuleSets: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ChainRuleSet), 'chainCount')\n  },\n\n  2: { // Class-based chaining context\n    coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n    backtrackClassDef: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ClassDef),\n    inputClassDef: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ClassDef),\n    lookaheadClassDef: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ClassDef),\n    chainCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    chainClassSet: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ChainRuleSet), 'chainCount')\n  },\n\n  3: { // Coverage-based chaining context\n    backtrackGlyphCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    backtrackCoverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage), 'backtrackGlyphCount'),\n    inputGlyphCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    inputCoverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage), 'inputGlyphCount'),\n    lookaheadGlyphCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    lookaheadCoverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage), 'lookaheadGlyphCount'),\n    lookupCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    lookupRecords: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(LookupRecord, 'lookupCount')\n  }\n});\n\nvar _;\n\n/*******************\n * Variation Store *\n *******************/\n\nvar F2DOT14 = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Fixed(16, 'BE', 14);\nvar RegionAxisCoordinates = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  startCoord: F2DOT14,\n  peakCoord: F2DOT14,\n  endCoord: F2DOT14\n});\n\nvar VariationRegionList = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  axisCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  regionCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  variationRegions: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(RegionAxisCoordinates, 'axisCount'), 'regionCount')\n});\n\nvar DeltaSet = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  shortDeltas: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, function (t) {\n    return t.parent.shortDeltaCount;\n  }),\n  regionDeltas: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8, function (t) {\n    return t.parent.regionIndexCount - t.parent.shortDeltaCount;\n  }),\n  deltas: function deltas(t) {\n    return t.shortDeltas.concat(t.regionDeltas);\n  }\n});\n\nvar ItemVariationData = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  itemCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  shortDeltaCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  regionIndexCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  regionIndexes: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'regionIndexCount'),\n  deltaSets: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(DeltaSet, 'itemCount')\n});\n\nvar ItemVariationStore = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  format: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  variationRegionList: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, VariationRegionList),\n  variationDataCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  itemVariationData: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, ItemVariationData), 'variationDataCount')\n});\n\n/**********************\n * Feature Variations *\n **********************/\n\nvar ConditionTable = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, {\n  1: (_ = {\n    axisIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n  }, _['axisIndex'] = restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, _.filterRangeMinValue = F2DOT14, _.filterRangeMaxValue = F2DOT14, _)\n});\n\nvar ConditionSet = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  conditionCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  conditionTable: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, ConditionTable), 'conditionCount')\n});\n\nvar FeatureTableSubstitutionRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  featureIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  alternateFeatureTable: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, Feature, { type: 'parent' })\n});\n\nvar FeatureTableSubstitution = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32,\n  substitutionCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  substitutions: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(FeatureTableSubstitutionRecord, 'substitutionCount')\n});\n\nvar FeatureVariationRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  conditionSet: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, ConditionSet, { type: 'parent' }),\n  featureTableSubstitution: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, FeatureTableSubstitution, { type: 'parent' })\n});\n\nvar FeatureVariations = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  majorVersion: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  minorVersion: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  featureVariationRecordCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  featureVariationRecords: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(FeatureVariationRecord, 'featureVariationRecordCount')\n});\n\n// Checks if an operand is an index of a predefined value,\n// otherwise delegates to the provided type.\n\nvar PredefinedOp = function () {\n  function PredefinedOp(predefinedOps, type) {\n    classCallCheck(this, PredefinedOp);\n\n    this.predefinedOps = predefinedOps;\n    this.type = type;\n  }\n\n  PredefinedOp.prototype.decode = function decode(stream, parent, operands) {\n    if (this.predefinedOps[operands[0]]) {\n      return this.predefinedOps[operands[0]];\n    }\n\n    return this.type.decode(stream, parent, operands);\n  };\n\n  PredefinedOp.prototype.size = function size(value, ctx) {\n    return this.type.size(value, ctx);\n  };\n\n  PredefinedOp.prototype.encode = function encode(stream, value, ctx) {\n    var index = this.predefinedOps.indexOf(value);\n    if (index !== -1) {\n      return index;\n    }\n\n    return this.type.encode(stream, value, ctx);\n  };\n\n  return PredefinedOp;\n}();\n\nvar CFFEncodingVersion = function (_r$Number) {\n  inherits(CFFEncodingVersion, _r$Number);\n\n  function CFFEncodingVersion() {\n    classCallCheck(this, CFFEncodingVersion);\n    return possibleConstructorReturn(this, _r$Number.call(this, 'UInt8'));\n  }\n\n  CFFEncodingVersion.prototype.decode = function decode(stream) {\n    return restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8.decode(stream) & 0x7f;\n  };\n\n  return CFFEncodingVersion;\n}(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Number);\n\nvar Range1 = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  first: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  nLeft: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8\n});\n\nvar Range2 = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  first: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  nLeft: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n});\n\nvar CFFCustomEncoding = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(new CFFEncodingVersion(), {\n  0: {\n    nCodes: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n    codes: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, 'nCodes')\n  },\n\n  1: {\n    nRanges: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n    ranges: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(Range1, 'nRanges')\n\n    // TODO: supplement?\n  } });\n\nvar CFFEncoding = new PredefinedOp([StandardEncoding, ExpertEncoding], new CFFPointer(CFFCustomEncoding, { lazy: true }));\n\n// Decodes an array of ranges until the total\n// length is equal to the provided length.\n\nvar RangeArray = function (_r$Array) {\n  inherits(RangeArray, _r$Array);\n\n  function RangeArray() {\n    classCallCheck(this, RangeArray);\n    return possibleConstructorReturn(this, _r$Array.apply(this, arguments));\n  }\n\n  RangeArray.prototype.decode = function decode(stream, parent) {\n    var length = Object(restructure_src_utils__WEBPACK_IMPORTED_MODULE_1__[\"resolveLength\"])(this.length, stream, parent);\n    var count = 0;\n    var res = [];\n    while (count < length) {\n      var range = this.type.decode(stream, parent);\n      range.offset = count;\n      count += range.nLeft + 1;\n      res.push(range);\n    }\n\n    return res;\n  };\n\n  return RangeArray;\n}(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array);\n\nvar CFFCustomCharset = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, {\n  0: {\n    glyphs: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n\n  1: {\n    ranges: new RangeArray(Range1, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n\n  2: {\n    ranges: new RangeArray(Range2, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  }\n});\n\nvar CFFCharset = new PredefinedOp([ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset], new CFFPointer(CFFCustomCharset, { lazy: true }));\n\nvar FDRange3 = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  first: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  fd: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8\n});\n\nvar FDRange4 = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  first: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  fd: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n});\n\nvar FDSelect = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, {\n  0: {\n    fds: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, function (t) {\n      return t.parent.CharStrings.length;\n    })\n  },\n\n  3: {\n    nRanges: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    ranges: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(FDRange3, 'nRanges'),\n    sentinel: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n  },\n\n  4: {\n    nRanges: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    ranges: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(FDRange4, 'nRanges'),\n    sentinel: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32\n  }\n});\n\nvar ptr = new CFFPointer(CFFPrivateDict);\n\nvar CFFPrivateOp = function () {\n  function CFFPrivateOp() {\n    classCallCheck(this, CFFPrivateOp);\n  }\n\n  CFFPrivateOp.prototype.decode = function decode(stream, parent, operands) {\n    parent.length = operands[0];\n    return ptr.decode(stream, parent, [operands[1]]);\n  };\n\n  CFFPrivateOp.prototype.size = function size(dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.size(dict, ctx)[0]];\n  };\n\n  CFFPrivateOp.prototype.encode = function encode(stream, dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.encode(stream, dict, ctx)[0]];\n  };\n\n  return CFFPrivateOp;\n}();\n\nvar FontDict = new CFFDict([\n// key       name                   type(s)                                 default\n[18, 'Private', new CFFPrivateOp(), null], [[12, 38], 'FontName', 'sid', null]]);\n\nvar CFFTopDict = new CFFDict([\n// key       name                   type(s)                                 default\n[[12, 30], 'ROS', ['sid', 'sid', 'number'], null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'boolean', false], [[12, 2], 'ItalicAngle', 'number', 0], [[12, 3], 'UnderlinePosition', 'number', -100], [[12, 4], 'UnderlineThickness', 'number', 50], [[12, 5], 'PaintType', 'number', 0], [[12, 6], 'CharstringType', 'number', 2], [[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'number', null], [5, 'FontBBox', 'array', [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'number', 0], [14, 'XUID', 'array', null], [15, 'charset', CFFCharset, ISOAdobeCharset], [16, 'Encoding', CFFEncoding, StandardEncoding], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [18, 'Private', new CFFPrivateOp(), null], [[12, 20], 'SyntheticBase', 'number', null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null],\n\n// CID font specific\n[[12, 31], 'CIDFontVersion', 'number', 0], [[12, 32], 'CIDFontRevision', 'number', 0], [[12, 33], 'CIDFontType', 'number', 0], [[12, 34], 'CIDCount', 'number', 8720], [[12, 35], 'UIDBase', 'number', null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [[12, 38], 'FontName', 'sid', null]]);\n\nvar VariationStore = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  itemVariationStore: ItemVariationStore\n});\n\nvar CFF2TopDict = new CFFDict([[[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [24, 'vstore', new CFFPointer(VariationStore), null], [25, 'maxstack', 'number', 193]]);\n\nvar CFFTop = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed16, {\n  1: {\n    hdrSize: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n    offSize: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n    nameIndex: new CFFIndex(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String('length')),\n    topDictIndex: new CFFIndex(CFFTopDict),\n    stringIndex: new CFFIndex(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String('length')),\n    globalSubrIndex: new CFFIndex()\n  },\n\n  2: {\n    hdrSize: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n    length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    topDict: CFF2TopDict,\n    globalSubrIndex: new CFFIndex()\n  }\n});\n\nvar CFFFont = function () {\n  function CFFFont(stream) {\n    classCallCheck(this, CFFFont);\n\n    this.stream = stream;\n    this.decode();\n  }\n\n  CFFFont.decode = function decode(stream) {\n    return new CFFFont(stream);\n  };\n\n  CFFFont.prototype.decode = function decode() {\n    var start = this.stream.pos;\n    var top = CFFTop.decode(this.stream);\n    for (var key in top) {\n      var val = top[key];\n      this[key] = val;\n    }\n\n    if (this.version < 2) {\n      if (this.topDictIndex.length !== 1) {\n        throw new Error(\"Only a single font is allowed in CFF\");\n      }\n\n      this.topDict = this.topDictIndex[0];\n    }\n\n    this.isCIDFont = this.topDict.ROS != null;\n    return this;\n  };\n\n  CFFFont.prototype.string = function string(sid) {\n    if (this.version >= 2) {\n      return null;\n    }\n\n    if (sid < standardStrings.length) {\n      return standardStrings[sid];\n    }\n\n    return this.stringIndex[sid - standardStrings.length];\n  };\n\n  CFFFont.prototype.getCharString = function getCharString(glyph) {\n    this.stream.pos = this.topDict.CharStrings[glyph].offset;\n    return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n  };\n\n  CFFFont.prototype.getGlyphName = function getGlyphName(gid) {\n    // CFF2 glyph names are in the post table.\n    if (this.version >= 2) {\n      return null;\n    }\n\n    // CID-keyed fonts don't have glyph names\n    if (this.isCIDFont) {\n      return null;\n    }\n\n    var charset = this.topDict.charset;\n\n    if (Array.isArray(charset)) {\n      return charset[gid];\n    }\n\n    if (gid === 0) {\n      return '.notdef';\n    }\n\n    gid -= 1;\n\n    switch (charset.version) {\n      case 0:\n        return this.string(charset.glyphs[gid]);\n\n      case 1:\n      case 2:\n        for (var i = 0; i < charset.ranges.length; i++) {\n          var range = charset.ranges[i];\n          if (range.offset <= gid && gid <= range.offset + range.nLeft) {\n            return this.string(range.first + (gid - range.offset));\n          }\n        }\n        break;\n    }\n\n    return null;\n  };\n\n  CFFFont.prototype.fdForGlyph = function fdForGlyph(gid) {\n    if (!this.topDict.FDSelect) {\n      return null;\n    }\n\n    switch (this.topDict.FDSelect.version) {\n      case 0:\n        return this.topDict.FDSelect.fds[gid];\n\n      case 3:\n      case 4:\n        var ranges = this.topDict.FDSelect.ranges;\n\n        var low = 0;\n        var high = ranges.length - 1;\n\n        while (low <= high) {\n          var mid = low + high >> 1;\n\n          if (gid < ranges[mid].first) {\n            high = mid - 1;\n          } else if (mid < high && gid > ranges[mid + 1].first) {\n            low = mid + 1;\n          } else {\n            return ranges[mid].fd;\n          }\n        }\n      default:\n        throw new Error('Unknown FDSelect version: ' + this.topDict.FDSelect.version);\n    }\n  };\n\n  CFFFont.prototype.privateDictForGlyph = function privateDictForGlyph(gid) {\n    if (this.topDict.FDSelect) {\n      var fd = this.fdForGlyph(gid);\n      if (this.topDict.FDArray[fd]) {\n        return this.topDict.FDArray[fd].Private;\n      }\n\n      return null;\n    }\n\n    if (this.version < 2) {\n      return this.topDict.Private;\n    }\n\n    return this.topDict.FDArray[0].Private;\n  };\n\n  createClass(CFFFont, [{\n    key: 'postscriptName',\n    get: function get$$1() {\n      if (this.version < 2) {\n        return this.nameIndex[0];\n      }\n\n      return null;\n    }\n  }, {\n    key: 'fullName',\n    get: function get$$1() {\n      return this.string(this.topDict.FullName);\n    }\n  }, {\n    key: 'familyName',\n    get: function get$$1() {\n      return this.string(this.topDict.FamilyName);\n    }\n  }]);\n  return CFFFont;\n}();\n\nvar VerticalOrigin = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  glyphIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  vertOriginY: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16\n});\n\nvar VORG = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  majorVersion: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  minorVersion: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  defaultVertOriginY: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  numVertOriginYMetrics: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  metrics: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(VerticalOrigin, 'numVertOriginYMetrics')\n});\n\nvar BigMetrics = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  height: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  width: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  horiBearingX: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8,\n  horiBearingY: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8,\n  horiAdvance: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  vertBearingX: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8,\n  vertBearingY: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8,\n  vertAdvance: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8\n});\n\nvar SmallMetrics = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  height: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  width: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  bearingX: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8,\n  bearingY: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8,\n  advance: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8\n});\n\nvar EBDTComponent = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  glyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  xOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8,\n  yOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8\n});\n\nvar ByteAligned = function ByteAligned() {\n  classCallCheck(this, ByteAligned);\n};\n\nvar BitAligned = function BitAligned() {\n  classCallCheck(this, BitAligned);\n};\n\nvar glyph = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct('version', {\n  1: {\n    metrics: SmallMetrics,\n    data: ByteAligned\n  },\n\n  2: {\n    metrics: SmallMetrics,\n    data: BitAligned\n  },\n\n  // format 3 is deprecated\n  // format 4 is not supported by Microsoft\n\n  5: {\n    data: BitAligned\n  },\n\n  6: {\n    metrics: BigMetrics,\n    data: ByteAligned\n  },\n\n  7: {\n    metrics: BigMetrics,\n    data: BitAligned\n  },\n\n  8: {\n    metrics: SmallMetrics,\n    pad: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8),\n    numComponents: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    components: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(EBDTComponent, 'numComponents')\n  },\n\n  9: {\n    metrics: BigMetrics,\n    pad: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8),\n    numComponents: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    components: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(EBDTComponent, 'numComponents')\n  },\n\n  17: {\n    metrics: SmallMetrics,\n    dataLen: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    data: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Buffer('dataLen')\n  },\n\n  18: {\n    metrics: BigMetrics,\n    dataLen: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    data: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Buffer('dataLen')\n  },\n\n  19: {\n    dataLen: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    data: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Buffer('dataLen')\n  }\n});\n\nvar SBitLineMetrics = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  ascender: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8,\n  descender: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8,\n  widthMax: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  caretSlopeNumerator: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8,\n  caretSlopeDenominator: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8,\n  caretOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8,\n  minOriginSB: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8,\n  minAdvanceSB: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8,\n  maxBeforeBL: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8,\n  minAfterBL: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8,\n  pad: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int8, 2)\n});\n\nvar CodeOffsetPair = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  glyphCode: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  offset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n});\n\nvar IndexSubtable = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, {\n  header: {\n    imageFormat: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    imageDataOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32\n  },\n\n  1: {\n    offsetArray: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n\n  2: {\n    imageSize: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    bigMetrics: BigMetrics\n  },\n\n  3: {\n    offsetArray: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n\n  4: {\n    numGlyphs: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    glyphArray: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(CodeOffsetPair, function (t) {\n      return t.numGlyphs + 1;\n    })\n  },\n\n  5: {\n    imageSize: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    bigMetrics: BigMetrics,\n    numGlyphs: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    glyphCodeArray: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'numGlyphs')\n  }\n});\n\nvar IndexSubtableArray = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  firstGlyphIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  lastGlyphIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  subtable: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, IndexSubtable)\n});\n\nvar BitmapSizeTable = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  indexSubTableArray: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(IndexSubtableArray, 1), { type: 'parent' }),\n  indexTablesSize: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  numberOfIndexSubTables: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  colorRef: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  hori: SBitLineMetrics,\n  vert: SBitLineMetrics,\n  startGlyphIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  endGlyphIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  ppemX: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  ppemY: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  bitDepth: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  flags: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, ['horizontal', 'vertical'])\n});\n\nvar EBLC = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, // 0x00020000\n  numSizes: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  sizes: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(BitmapSizeTable, 'numSizes')\n});\n\nvar ImageTable = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  ppem: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  resolution: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  imageOffsets: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, 'void'), function (t) {\n    return t.parent.parent.maxp.numGlyphs + 1;\n  })\n});\n\n// This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\nvar sbix = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  flags: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ['renderOutlines']),\n  numImgTables: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  imageTables: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, ImageTable), 'numImgTables')\n});\n\nvar LayerRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  gid: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Glyph ID of layer glyph (must be in z-order from bottom to top).\n  paletteIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16 // Index value to use in the appropriate palette. This value must\n}); // be less than numPaletteEntries in the CPAL table, except for\n// the special case noted below. Each palette entry is 16 bits.\n// A palette index of 0xFFFF is a special case indicating that\n// the text foreground color should be used.\n\nvar BaseGlyphRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  gid: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Glyph ID of reference glyph. This glyph is for reference only\n  // and is not rendered for color.\n  firstLayerIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Index (from beginning of the Layer Records) to the layer record.\n  // There will be numLayers consecutive entries for this base glyph.\n  numLayers: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n});\n\nvar COLR = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  numBaseGlyphRecords: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  baseGlyphRecord: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(BaseGlyphRecord, 'numBaseGlyphRecords')),\n  layerRecords: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(LayerRecord, 'numLayerRecords'), { lazy: true }),\n  numLayerRecords: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n});\n\nvar ColorRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  blue: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  green: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  red: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  alpha: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8\n});\n\nvar CPAL = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, {\n  header: {\n    numPaletteEntries: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    numPalettes: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    numColorRecords: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    colorRecords: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(ColorRecord, 'numColorRecords')),\n    colorRecordIndices: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'numPalettes')\n  },\n  0: {},\n  1: {\n    offsetPaletteTypeArray: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, 'numPalettes')),\n    offsetPaletteLabelArray: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'numPalettes')),\n    offsetPaletteEntryLabelArray: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'numPaletteEntries'))\n  }\n});\n\nvar BaseCoord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, {\n  1: { // Design units only\n    coordinate: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16 // X or Y value, in design units\n  },\n\n  2: { // Design units plus contour point\n    coordinate: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // X or Y value, in design units\n    referenceGlyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // GlyphID of control glyph\n    baseCoordPoint: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16 // Index of contour point on the referenceGlyph\n  },\n\n  3: { // Design units plus Device table\n    coordinate: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // X or Y value, in design units\n    deviceTable: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Device) // Device table for X or Y value\n  }\n});\n\nvar BaseValues = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  defaultIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Index of default baseline for this script-same index in the BaseTagList\n  baseCoordCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  baseCoords: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, BaseCoord), 'baseCoordCount')\n});\n\nvar FeatMinMaxRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  tag: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(4), // 4-byte feature identification tag-must match FeatureTag in FeatureList\n  minCoord: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, BaseCoord, { type: 'parent' }), // May be NULL\n  maxCoord: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, BaseCoord, { type: 'parent' }) // May be NULL\n});\n\nvar MinMax = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  minCoord: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, BaseCoord), // May be NULL\n  maxCoord: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, BaseCoord), // May be NULL\n  featMinMaxCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // May be 0\n  featMinMaxRecords: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(FeatMinMaxRecord, 'featMinMaxCount') // In alphabetical order\n});\n\nvar BaseLangSysRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  tag: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(4), // 4-byte language system identification tag\n  minMax: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, MinMax, { type: 'parent' })\n});\n\nvar BaseScript = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  baseValues: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, BaseValues), // May be NULL\n  defaultMinMax: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, MinMax), // May be NULL\n  baseLangSysCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // May be 0\n  baseLangSysRecords: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(BaseLangSysRecord, 'baseLangSysCount') // in alphabetical order by BaseLangSysTag\n});\n\nvar BaseScriptRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  tag: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(4), // 4-byte script identification tag\n  script: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, BaseScript, { type: 'parent' })\n});\n\nvar BaseScriptList = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(BaseScriptRecord, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\n\n// Array of 4-byte baseline identification tags-must be in alphabetical order\nvar BaseTagList = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(4), restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\n\nvar Axis = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  baseTagList: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, BaseTagList), // May be NULL\n  baseScriptList: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, BaseScriptList)\n});\n\nvar BASE = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, {\n  header: {\n    horizAxis: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Axis), // May be NULL\n    vertAxis: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Axis) // May be NULL\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    itemVariationStore: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, ItemVariationStore)\n  }\n});\n\nvar AttachPoint = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\nvar AttachList = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n  glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  attachPoints: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, AttachPoint), 'glyphCount')\n});\n\nvar CaretValue = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, {\n  1: { // Design units only\n    coordinate: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16\n  },\n\n  2: { // Contour point\n    caretValuePoint: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n  },\n\n  3: { // Design units plus Device table\n    coordinate: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    deviceTable: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Device)\n  }\n});\n\nvar LigGlyph = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, CaretValue), restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\n\nvar LigCaretList = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n  ligGlyphCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  ligGlyphs: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, LigGlyph), 'ligGlyphCount')\n});\n\nvar MarkGlyphSetsDef = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  markSetTableFormat: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  markSetCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, Coverage), 'markSetCount')\n});\n\nvar GDEF = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, {\n  header: {\n    glyphClassDef: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ClassDef),\n    attachList: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, AttachList),\n    ligCaretList: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, LigCaretList),\n    markAttachClassDef: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ClassDef)\n  },\n\n  0x00010000: {},\n  0x00010002: {\n    markGlyphSetsDef: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, MarkGlyphSetsDef)\n  },\n  0x00010003: {\n    markGlyphSetsDef: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, MarkGlyphSetsDef),\n    itemVariationStore: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, ItemVariationStore)\n  }\n});\n\nvar ValueFormat = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ['xPlacement', 'yPlacement', 'xAdvance', 'yAdvance', 'xPlaDevice', 'yPlaDevice', 'xAdvDevice', 'yAdvDevice']);\n\nvar types = {\n  xPlacement: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  yPlacement: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  xAdvance: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  yAdvance: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  xPlaDevice: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Device, { type: 'global', relativeTo: 'rel' }),\n  yPlaDevice: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Device, { type: 'global', relativeTo: 'rel' }),\n  xAdvDevice: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Device, { type: 'global', relativeTo: 'rel' }),\n  yAdvDevice: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Device, { type: 'global', relativeTo: 'rel' })\n};\n\nvar ValueRecord = function () {\n  function ValueRecord() {\n    var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'valueFormat';\n    classCallCheck(this, ValueRecord);\n\n    this.key = key;\n  }\n\n  ValueRecord.prototype.buildStruct = function buildStruct(parent) {\n    var struct = parent;\n    while (!struct[this.key] && struct.parent) {\n      struct = struct.parent;\n    }\n\n    if (!struct[this.key]) return;\n\n    var fields = {};\n    fields.rel = function () {\n      return struct._startOffset;\n    };\n\n    var format = struct[this.key];\n    for (var key in format) {\n      if (format[key]) {\n        fields[key] = types[key];\n      }\n    }\n\n    return new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct(fields);\n  };\n\n  ValueRecord.prototype.size = function size(val, ctx) {\n    return this.buildStruct(ctx).size(val, ctx);\n  };\n\n  ValueRecord.prototype.decode = function decode(stream, parent) {\n    var res = this.buildStruct(parent).decode(stream, parent);\n    delete res.rel;\n    return res;\n  };\n\n  return ValueRecord;\n}();\n\nvar PairValueRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  secondGlyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\n\nvar PairSet = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(PairValueRecord, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\n\nvar Class2Record = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\n\nvar Anchor = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, {\n  1: { // Design units only\n    xCoordinate: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    yCoordinate: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16\n  },\n\n  2: { // Design units plus contour point\n    xCoordinate: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    yCoordinate: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    anchorPoint: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n  },\n\n  3: { // Design units plus Device tables\n    xCoordinate: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    yCoordinate: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n    xDeviceTable: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Device),\n    yDeviceTable: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Device)\n  }\n});\n\nvar EntryExitRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  entryAnchor: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Anchor, { type: 'parent' }),\n  exitAnchor: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Anchor, { type: 'parent' })\n});\n\nvar MarkRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  class: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  markAnchor: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Anchor, { type: 'parent' })\n});\n\nvar MarkArray = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(MarkRecord, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\n\nvar BaseRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Anchor), function (t) {\n  return t.parent.classCount;\n});\nvar BaseArray = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(BaseRecord, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\n\nvar ComponentRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Anchor), function (t) {\n  return t.parent.parent.classCount;\n});\nvar LigatureAttach = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(ComponentRecord, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\nvar LigatureArray = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, LigatureAttach), restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\n\nvar GPOSLookup = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct('lookupType', {\n  1: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, { // Single Adjustment\n    1: { // Single positioning value\n      coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n      valueFormat: ValueFormat,\n      value: new ValueRecord()\n    },\n    2: {\n      coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n      valueFormat: ValueFormat,\n      valueCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n      values: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(new ValueRecord(), 'valueCount')\n    }\n  }),\n\n  2: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, { // Pair Adjustment Positioning\n    1: { // Adjustments for glyph pairs\n      coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      pairSetCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n      pairSets: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, PairSet), 'pairSetCount')\n    },\n\n    2: { // Class pair adjustment\n      coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      classDef1: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ClassDef),\n      classDef2: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ClassDef),\n      class1Count: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n      class2Count: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n      classRecords: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(Class2Record, 'class2Count'), 'class1Count')\n    }\n  }),\n\n  3: { // Cursive Attachment Positioning\n    format: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n    entryExitCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    entryExitRecords: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(EntryExitRecord, 'entryExitCount')\n  },\n\n  4: { // MarkToBase Attachment Positioning\n    format: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    markCoverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n    baseCoverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n    classCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    markArray: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, MarkArray),\n    baseArray: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, BaseArray)\n  },\n\n  5: { // MarkToLigature Attachment Positioning\n    format: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    markCoverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n    ligatureCoverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n    classCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    markArray: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, MarkArray),\n    ligatureArray: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, LigatureArray)\n  },\n\n  6: { // MarkToMark Attachment Positioning\n    format: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    mark1Coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n    mark2Coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n    classCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    mark1Array: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, MarkArray),\n    mark2Array: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, BaseArray)\n  },\n\n  7: Context, // Contextual positioning\n  8: ChainingContext, // Chaining contextual positioning\n\n  9: { // Extension Positioning\n    posFormat: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    lookupType: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // cannot also be 9\n    extension: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, undefined)\n  }\n});\n\n// Fix circular reference\nGPOSLookup.versions[9].extension.type = GPOSLookup;\n\nvar GPOS = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, {\n  header: {\n    scriptList: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ScriptList),\n    featureList: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, FeatureList),\n    lookupList: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, new LookupList(GPOSLookup))\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, FeatureVariations)\n  }\n});\n\nvar Sequence = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\nvar AlternateSet = Sequence;\n\nvar Ligature = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  glyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  compCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  components: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, function (t) {\n    return t.compCount - 1;\n  })\n});\n\nvar LigatureSet = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Ligature), restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\n\nvar GSUBLookup = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct('lookupType', {\n  1: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, { // Single Substitution\n    1: {\n      coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n      deltaGlyphID: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16\n    },\n    2: {\n      coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n      glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n      substitute: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'glyphCount')\n    }\n  }),\n\n  2: { // Multiple Substitution\n    substFormat: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n    count: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    sequences: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Sequence), 'count')\n  },\n\n  3: { // Alternate Substitution\n    substFormat: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n    count: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    alternateSet: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, AlternateSet), 'count')\n  },\n\n  4: { // Ligature Substitution\n    substFormat: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n    count: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    ligatureSets: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, LigatureSet), 'count')\n  },\n\n  5: Context, // Contextual Substitution\n  6: ChainingContext, // Chaining Contextual Substitution\n\n  7: { // Extension Substitution\n    substFormat: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    lookupType: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // cannot also be 7\n    extension: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, undefined)\n  },\n\n  8: { // Reverse Chaining Contextual Single Substitution\n    substFormat: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage),\n    backtrackCoverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage), 'backtrackGlyphCount'),\n    lookaheadGlyphCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    lookaheadCoverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Coverage), 'lookaheadGlyphCount'),\n    glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    substitutes: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'glyphCount')\n  }\n});\n\n// Fix circular reference\nGSUBLookup.versions[7].extension.type = GSUBLookup;\n\nvar GSUB = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, {\n  header: {\n    scriptList: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ScriptList),\n    featureList: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, FeatureList),\n    lookupList: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, new LookupList(GSUBLookup))\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, FeatureVariations)\n  }\n});\n\nvar JstfGSUBModList = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\n\nvar JstfPriority = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  shrinkageEnableGSUB: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, JstfGSUBModList),\n  shrinkageDisableGSUB: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, JstfGSUBModList),\n  shrinkageEnableGPOS: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, JstfGSUBModList),\n  shrinkageDisableGPOS: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, JstfGSUBModList),\n  shrinkageJstfMax: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, new LookupList(GPOSLookup)),\n  extensionEnableGSUB: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, JstfGSUBModList),\n  extensionDisableGSUB: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, JstfGSUBModList),\n  extensionEnableGPOS: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, JstfGSUBModList),\n  extensionDisableGPOS: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, JstfGSUBModList),\n  extensionJstfMax: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, new LookupList(GPOSLookup))\n});\n\nvar JstfLangSys = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, JstfPriority), restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16);\n\nvar JstfLangSysRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  tag: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(4),\n  jstfLangSys: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, JstfLangSys)\n});\n\nvar JstfScript = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  extenderGlyphs: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16)), // array of glyphs to extend line length\n  defaultLangSys: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, JstfLangSys),\n  langSysCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  langSysRecords: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(JstfLangSysRecord, 'langSysCount')\n});\n\nvar JstfScriptRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  tag: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(4),\n  script: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, JstfScript, { type: 'parent' })\n});\n\nvar JSTF = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, // should be 0x00010000\n  scriptCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  scriptList: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(JstfScriptRecord, 'scriptCount')\n});\n\n// TODO: add this to restructure\n\nvar VariableSizeNumber = function () {\n  function VariableSizeNumber(size) {\n    classCallCheck(this, VariableSizeNumber);\n\n    this._size = size;\n  }\n\n  VariableSizeNumber.prototype.decode = function decode(stream, parent) {\n    switch (this.size(0, parent)) {\n      case 1:\n        return stream.readUInt8();\n      case 2:\n        return stream.readUInt16BE();\n      case 3:\n        return stream.readUInt24BE();\n      case 4:\n        return stream.readUInt32BE();\n    }\n  };\n\n  VariableSizeNumber.prototype.size = function size(val, parent) {\n    return Object(restructure_src_utils__WEBPACK_IMPORTED_MODULE_1__[\"resolveLength\"])(this._size, null, parent);\n  };\n\n  return VariableSizeNumber;\n}();\n\nvar MapDataEntry = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  entry: new VariableSizeNumber(function (t) {\n    return ((t.parent.entryFormat & 0x0030) >> 4) + 1;\n  }),\n  outerIndex: function outerIndex(t) {\n    return t.entry >> (t.parent.entryFormat & 0x000F) + 1;\n  },\n  innerIndex: function innerIndex(t) {\n    return t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1;\n  }\n});\n\nvar DeltaSetIndexMap = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  entryFormat: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  mapCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  mapData: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(MapDataEntry, 'mapCount')\n});\n\nvar HVAR = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  majorVersion: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  minorVersion: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  itemVariationStore: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, ItemVariationStore),\n  advanceWidthMapping: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, DeltaSetIndexMap),\n  LSBMapping: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, DeltaSetIndexMap),\n  RSBMapping: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, DeltaSetIndexMap)\n});\n\nvar Signature = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  format: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  offset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32\n});\n\nvar SignatureBlock = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  reserved: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 2),\n  cbSignature: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, // Length (in bytes) of the PKCS#7 packet in pbSignature\n  signature: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Buffer('cbSignature')\n});\n\nvar DSIG = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  ulVersion: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, // Version number of the DSIG table (0x00000001)\n  usNumSigs: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Number of signatures in the table\n  usFlag: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Permission flags\n  signatures: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(Signature, 'usNumSigs'),\n  signatureBlocks: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(SignatureBlock, 'usNumSigs')\n});\n\nvar GaspRange = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  rangeMaxPPEM: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Upper limit of range, in ppem\n  rangeGaspBehavior: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, [// Flags describing desired rasterizer behavior\n  'grayscale', 'gridfit', 'symmetricSmoothing', 'symmetricGridfit' // only in version 1, for ClearType\n  ])\n});\n\nvar gasp = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // set to 0\n  numRanges: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  gaspRanges: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(GaspRange, 'numRanges') // Sorted by ppem\n});\n\nvar DeviceRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  pixelSize: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  maximumWidth: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  widths: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, function (t) {\n    return t.parent.parent.maxp.numGlyphs;\n  })\n});\n\n// The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\nvar hdmx = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  numRecords: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  sizeDeviceRecord: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int32,\n  records: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(DeviceRecord, 'numRecords')\n});\n\nvar KernPair = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  left: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  right: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  value: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16\n});\n\nvar ClassTable = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  firstGlyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  nGlyphs: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  offsets: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'nGlyphs'),\n  max: function max(t) {\n    return t.offsets.length && Math.max.apply(Math, t.offsets);\n  }\n});\n\nvar Kern2Array = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  off: function off(t) {\n    return t._startOffset - t.parent.parent._startOffset;\n  },\n  len: function len(t) {\n    return ((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2);\n  },\n  values: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, 'len')\n});\n\nvar KernSubtable = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct('format', {\n  0: {\n    nPairs: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    searchRange: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    entrySelector: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    rangeShift: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    pairs: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(KernPair, 'nPairs')\n  },\n\n  2: {\n    rowWidth: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    leftTable: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ClassTable, { type: 'parent' }),\n    rightTable: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ClassTable, { type: 'parent' }),\n    array: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, Kern2Array, { type: 'parent' })\n  },\n\n  3: {\n    glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    kernValueCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n    leftClassCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n    rightClassCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n    flags: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n    kernValue: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, 'kernValueCount'),\n    leftClass: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, 'glyphCount'),\n    rightClass: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, 'glyphCount'),\n    kernIndex: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, function (t) {\n      return t.leftClassCount * t.rightClassCount;\n    })\n  }\n});\n\nvar KernTable = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct('version', {\n  0: { // Microsoft uses this format\n    subVersion: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Microsoft has an extra sub-table version number\n    length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Length of the subtable, in bytes\n    format: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, // Format of subtable\n    coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, ['horizontal', // 1 if table has horizontal data, 0 if vertical\n    'minimum', // If set to 1, the table has minimum values. If set to 0, the table has kerning values.\n    'crossStream', // If set to 1, kerning is perpendicular to the flow of the text\n    'override' // If set to 1 the value in this table replaces the accumulated value\n    ]),\n    subtable: KernSubtable,\n    padding: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  },\n  1: { // Apple uses this format\n    length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    coverage: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, [null, null, null, null, null, 'variation', // Set if table has variation kerning values\n    'crossStream', // Set if table has cross-stream kerning values\n    'vertical' // Set if table has vertical kerning values\n    ]),\n    format: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n    tupleIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    subtable: KernSubtable,\n    padding: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  }\n});\n\nvar kern = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, {\n  0: { // Microsoft Version\n    nTables: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    tables: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(KernTable, 'nTables')\n  },\n\n  1: { // Apple Version\n    reserved: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16), // the other half of the version number\n    nTables: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    tables: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(KernTable, 'nTables')\n  }\n});\n\n// Linear Threshold table\n// Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\nvar LTSH = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  numGlyphs: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  yPels: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, 'numGlyphs')\n});\n\n// PCL 5 Table\n// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\nvar PCLT = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  fontNumber: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  pitch: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  xHeight: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  style: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  typeFamily: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  capHeight: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  symbolSet: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  typeface: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(16),\n  characterComplement: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(8),\n  fileName: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(6),\n  strokeWeight: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(1),\n  widthType: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(1),\n  serifStyle: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  reserved: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8)\n});\n\n// VDMX tables contain ascender/descender overrides for certain (usually small)\n// sizes. This is needed in order to match font metrics on Windows.\n\nvar Ratio = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  bCharSet: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, // Character set\n  xRatio: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, // Value to use for x-Ratio\n  yStartRatio: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, // Starting y-Ratio value\n  yEndRatio: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8 // Ending y-Ratio value\n});\n\nvar vTable = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  yPelHeight: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // yPelHeight to which values apply\n  yMax: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // Maximum value (in pels) for this yPelHeight\n  yMin: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16 // Minimum value (in pels) for this yPelHeight\n});\n\nvar VdmxGroup = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  recs: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Number of height records in this group\n  startsz: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, // Starting yPelHeight\n  endsz: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, // Ending yPelHeight\n  entries: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(vTable, 'recs') // The VDMX records\n});\n\nvar VDMX = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Version number (0 or 1)\n  numRecs: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Number of VDMX groups present\n  numRatios: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Number of aspect ratio groupings\n  ratioRanges: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(Ratio, 'numRatios'), // Ratio ranges\n  offsets: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'numRatios'), // Offset to the VDMX group for this ratio range\n  groups: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(VdmxGroup, 'numRecs') // The actual VDMX groupings\n});\n\n// Vertical Header Table\nvar vhea = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // Version number of the Vertical Header Table\n  ascent: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // The vertical typographic ascender for this font\n  descent: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // The vertical typographic descender for this font\n  lineGap: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // The vertical typographic line gap for this font\n  advanceHeightMax: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // The maximum advance height measurement found in the font\n  minTopSideBearing: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // The minimum top side bearing measurement found in the font\n  minBottomSideBearing: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // The minimum bottom side bearing measurement found in the font\n  yMaxExtent: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  caretSlopeRise: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // Caret slope (rise/run)\n  caretSlopeRun: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  caretOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // Set value equal to 0 for nonslanted fonts\n  reserved: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, 4),\n  metricDataFormat: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // Set to 0\n  numberOfMetrics: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16 // Number of advance heights in the Vertical Metrics table\n});\n\nvar VmtxEntry = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  advance: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, // The advance height of the glyph\n  bearing: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16 // The top sidebearing of the glyph\n});\n\n// Vertical Metrics Table\nvar vmtx = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  metrics: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(VmtxEntry, function (t) {\n    return t.parent.vhea.numberOfMetrics;\n  }),\n  bearings: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics;\n  })\n});\n\nvar shortFrac = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Fixed(16, 'BE', 14);\n\nvar Correspondence = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  fromCoord: shortFrac,\n  toCoord: shortFrac\n});\n\nvar Segment = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  pairCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  correspondence: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(Correspondence, 'pairCount')\n});\n\nvar avar = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32,\n  axisCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  segment: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(Segment, 'axisCount')\n});\n\nvar UnboundedArrayAccessor = function () {\n  function UnboundedArrayAccessor(type, stream, parent) {\n    classCallCheck(this, UnboundedArrayAccessor);\n\n    this.type = type;\n    this.stream = stream;\n    this.parent = parent;\n    this.base = this.stream.pos;\n    this._items = [];\n  }\n\n  UnboundedArrayAccessor.prototype.getItem = function getItem(index) {\n    if (this._items[index] == null) {\n      var pos = this.stream.pos;\n      this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n      this._items[index] = this.type.decode(this.stream, this.parent);\n      this.stream.pos = pos;\n    }\n\n    return this._items[index];\n  };\n\n  UnboundedArrayAccessor.prototype.inspect = function inspect() {\n    return '[UnboundedArray ' + this.type.constructor.name + ']';\n  };\n\n  return UnboundedArrayAccessor;\n}();\n\nvar UnboundedArray = function (_r$Array) {\n  inherits(UnboundedArray, _r$Array);\n\n  function UnboundedArray(type) {\n    classCallCheck(this, UnboundedArray);\n    return possibleConstructorReturn(this, _r$Array.call(this, type, 0));\n  }\n\n  UnboundedArray.prototype.decode = function decode(stream, parent) {\n    return new UnboundedArrayAccessor(this.type, stream, parent);\n  };\n\n  return UnboundedArray;\n}(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array);\n\nvar LookupTable = function LookupTable() {\n  var ValueType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16;\n\n  // Helper class that makes internal structures invisible to pointers\n  var Shadow = function () {\n    function Shadow(type) {\n      classCallCheck(this, Shadow);\n\n      this.type = type;\n    }\n\n    Shadow.prototype.decode = function decode(stream, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.decode(stream, ctx);\n    };\n\n    Shadow.prototype.size = function size(val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.size(val, ctx);\n    };\n\n    Shadow.prototype.encode = function encode(stream, val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.encode(stream, val, ctx);\n    };\n\n    return Shadow;\n  }();\n\n  ValueType = new Shadow(ValueType);\n\n  var BinarySearchHeader = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n    unitSize: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    nUnits: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    searchRange: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    entrySelector: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    rangeShift: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n  });\n\n  var LookupSegmentSingle = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n    lastGlyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    firstGlyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    value: ValueType\n  });\n\n  var LookupSegmentArray = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n    lastGlyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    firstGlyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    values: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(ValueType, function (t) {\n      return t.lastGlyph - t.firstGlyph + 1;\n    }), { type: 'parent' })\n  });\n\n  var LookupSingle = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n    glyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    value: ValueType\n  });\n\n  return new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, {\n    0: {\n      values: new UnboundedArray(ValueType) // length == number of glyphs maybe?\n    },\n    2: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(LookupSegmentSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    4: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(LookupSegmentArray, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    6: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(LookupSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    8: {\n      firstGlyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n      count: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n      values: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(ValueType, 'count')\n    }\n  });\n};\n\nfunction StateTable() {\n  var entryData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var lookupType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16;\n\n  var entry = Object.assign({\n    newState: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    flags: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n  }, entryData);\n\n  var Entry = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct(entry);\n  var StateArray = new UnboundedArray(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, function (t) {\n    return t.nClasses;\n  }));\n\n  var StateHeader = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n    nClasses: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    classTable: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, new LookupTable(lookupType)),\n    stateArray: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, StateArray),\n    entryTable: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, new UnboundedArray(Entry))\n  });\n\n  return StateHeader;\n}\n\n// This is the old version of the StateTable structure\nfunction StateTable1() {\n  var entryData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var lookupType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16;\n\n  var ClassLookupTable = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n    version: function version() {\n      return 8;\n    },\n    // simulate LookupTable\n    firstGlyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    values: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16)\n  });\n\n  var entry = Object.assign({\n    newStateOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    // convert offset to stateArray index\n    newState: function newState(t) {\n      return (t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses;\n    },\n    flags: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n  }, entryData);\n\n  var Entry = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct(entry);\n  var StateArray = new UnboundedArray(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, function (t) {\n    return t.nClasses;\n  }));\n\n  var StateHeader1 = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n    nClasses: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    classTable: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ClassLookupTable),\n    stateArray: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, StateArray),\n    entryTable: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, new UnboundedArray(Entry))\n  });\n\n  return StateHeader1;\n}\n\nvar BslnSubtable = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct('format', {\n  0: { // Distance-based, no mapping\n    deltas: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, 32)\n  },\n\n  1: { // Distance-based, with mapping\n    deltas: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, 32),\n    mappingData: new LookupTable(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16)\n  },\n\n  2: { // Control point-based, no mapping\n    standardGlyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    controlPoints: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 32)\n  },\n\n  3: { // Control point-based, with mapping\n    standardGlyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    controlPoints: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 32),\n    mappingData: new LookupTable(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16)\n  }\n});\n\nvar bsln = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32,\n  format: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  defaultBaseline: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  subtable: BslnSubtable\n});\n\nvar Setting = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  setting: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  nameIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  name: function name(t) {\n    return t.parent.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\n\nvar FeatureName = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  feature: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  nSettings: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  settingTable: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(Setting, 'nSettings'), { type: 'parent' }),\n  featureFlags: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, [null, null, null, null, null, null, 'hasDefault', 'exclusive']),\n  defaultSetting: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  nameIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\n\nvar feat = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32,\n  featureNameCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  reserved1: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16),\n  reserved2: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32),\n  featureNames: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(FeatureName, 'featureNameCount')\n});\n\nvar Axis$1 = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  axisTag: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(4),\n  minValue: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32,\n  defaultValue: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32,\n  maxValue: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32,\n  flags: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  nameID: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  }\n});\n\nvar Instance = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  nameID: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  },\n  flags: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  coord: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32, function (t) {\n    return t.parent.axisCount;\n  }),\n  postscriptNameID: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Optional(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, function (t) {\n    return t.parent.instanceSize - t._currentOffset > 0;\n  })\n});\n\nvar fvar = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32,\n  offsetToData: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  countSizePairs: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  axisCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  axisSize: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  instanceCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  instanceSize: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  axis: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(Axis$1, 'axisCount'),\n  instance: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(Instance, 'instanceCount')\n});\n\nvar shortFrac$1 = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Fixed(16, 'BE', 14);\n\nvar Offset = function () {\n  function Offset() {\n    classCallCheck(this, Offset);\n  }\n\n  Offset.decode = function decode(stream, parent) {\n    // In short format, offsets are multiplied by 2.\n    // This doesn't seem to be documented by Apple, but it\n    // is implemented this way in Freetype.\n    return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;\n  };\n\n  return Offset;\n}();\n\nvar gvar = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  reserved: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16),\n  axisCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  globalCoordCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  globalCoords: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(shortFrac$1, 'axisCount'), 'globalCoordCount')),\n  glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  flags: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  offsetToData: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  offsets: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(Offset, 'void', { relativeTo: 'offsetToData', allowNull: false }), function (t) {\n    return t.glyphCount + 1;\n  })\n});\n\nvar ClassTable$1 = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  coverage: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  subFeatureFlags: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  stateTable: new StateTable1()\n});\n\nvar WidthDeltaRecord = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  justClass: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  beforeGrowLimit: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32,\n  beforeShrinkLimit: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32,\n  afterGrowLimit: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32,\n  afterShrinkLimit: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32,\n  growFlags: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  shrinkFlags: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n});\n\nvar WidthDeltaCluster = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(WidthDeltaRecord, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32);\n\nvar ActionData = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct('actionType', {\n  0: { // Decomposition action\n    lowerLimit: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32,\n    upperLimit: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32,\n    order: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    glyphs: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16)\n  },\n\n  1: { // Unconditional add glyph action\n    addGlyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n  },\n\n  2: { // Conditional add glyph action\n    substThreshold: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32,\n    addGlyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    substGlyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n  },\n\n  3: {}, // Stretch glyph action (no data, not supported by CoreText)\n\n  4: { // Ductile glyph action (not supported by CoreText)\n    variationAxis: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    minimumLimit: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32,\n    noStretchValue: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32,\n    maximumLimit: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32\n  },\n\n  5: { // Repeated add glyph action\n    flags: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n    glyph: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n  }\n});\n\nvar Action = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  actionClass: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  actionType: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  actionLength: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  actionData: ActionData,\n  padding: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, function (t) {\n    return t.actionLength - t._currentOffset;\n  })\n});\n\nvar PostcompensationAction = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(Action, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32);\nvar PostCompensationTable = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  lookupTable: new LookupTable(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, PostcompensationAction))\n});\n\nvar JustificationTable = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  classTable: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, ClassTable$1, { type: 'parent' }),\n  wdcOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  postCompensationTable: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, PostCompensationTable, { type: 'parent' }),\n  widthDeltaClusters: new LookupTable(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, WidthDeltaCluster, { type: 'parent', relativeTo: 'wdcOffset' }))\n});\n\nvar just = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  format: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  horizontal: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, JustificationTable),\n  vertical: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, JustificationTable)\n});\n\nvar LigatureData = {\n  action: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n};\n\nvar ContextualData = {\n  markIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  currentIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n};\n\nvar InsertionData = {\n  currentInsertIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  markedInsertIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16\n};\n\nvar SubstitutionTable = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  items: new UnboundedArray(new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, new LookupTable()))\n});\n\nvar SubtableData = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct('type', {\n  0: { // Indic Rearrangement Subtable\n    stateTable: new StateTable()\n  },\n\n  1: { // Contextual Glyph Substitution Subtable\n    stateTable: new StateTable(ContextualData),\n    substitutionTable: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, SubstitutionTable)\n  },\n\n  2: { // Ligature subtable\n    stateTable: new StateTable(LigatureData),\n    ligatureActions: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, new UnboundedArray(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32)),\n    components: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, new UnboundedArray(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16)),\n    ligatureList: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, new UnboundedArray(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16))\n  },\n\n  4: { // Non-contextual Glyph Substitution Subtable\n    lookupTable: new LookupTable()\n  },\n\n  5: { // Glyph Insertion Subtable\n    stateTable: new StateTable(InsertionData),\n    insertionActions: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, new UnboundedArray(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16))\n  }\n});\n\nvar Subtable = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  coverage: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint24,\n  type: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  subFeatureFlags: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  table: SubtableData,\n  padding: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, function (t) {\n    return t.length - t._currentOffset;\n  })\n});\n\nvar FeatureEntry = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  featureType: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  featureSetting: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  enableFlags: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  disableFlags: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32\n});\n\nvar MorxChain = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  defaultFlags: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  chainLength: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  nFeatureEntries: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  nSubtables: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  features: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(FeatureEntry, 'nFeatureEntries'),\n  subtables: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(Subtable, 'nSubtables')\n});\n\nvar morx = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  unused: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16),\n  nChains: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  chains: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(MorxChain, 'nChains')\n});\n\nvar OpticalBounds = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  left: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  top: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  right: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  bottom: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16\n});\n\nvar opbd = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  version: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.fixed32,\n  format: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  lookupTable: new LookupTable(OpticalBounds)\n});\n\nvar tables = {};\n// Required Tables\ntables.cmap = cmap;\ntables.head = head;\ntables.hhea = hhea;\ntables.hmtx = hmtx;\ntables.maxp = maxp;\ntables.name = NameTable;\ntables['OS/2'] = OS2;\ntables.post = post;\n\n// TrueType Outlines\ntables.fpgm = fpgm;\ntables.loca = loca;\ntables.prep = prep;\ntables['cvt '] = cvt;\ntables.glyf = glyf;\n\n// PostScript Outlines\ntables['CFF '] = CFFFont;\ntables['CFF2'] = CFFFont;\ntables.VORG = VORG;\n\n// Bitmap Glyphs\ntables.EBLC = EBLC;\ntables.CBLC = tables.EBLC;\ntables.sbix = sbix;\ntables.COLR = COLR;\ntables.CPAL = CPAL;\n\n// Advanced OpenType Tables\ntables.BASE = BASE;\ntables.GDEF = GDEF;\ntables.GPOS = GPOS;\ntables.GSUB = GSUB;\ntables.JSTF = JSTF;\n\n// OpenType variations tables\ntables.HVAR = HVAR;\n\n// Other OpenType Tables\ntables.DSIG = DSIG;\ntables.gasp = gasp;\ntables.hdmx = hdmx;\ntables.kern = kern;\ntables.LTSH = LTSH;\ntables.PCLT = PCLT;\ntables.VDMX = VDMX;\ntables.vhea = vhea;\ntables.vmtx = vmtx;\n\n// Apple Advanced Typography Tables\ntables.avar = avar;\ntables.bsln = bsln;\ntables.feat = feat;\ntables.fvar = fvar;\ntables.gvar = gvar;\ntables.just = just;\ntables.morx = morx;\ntables.opbd = opbd;\n\nvar TableEntry = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  tag: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(4),\n  checkSum: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  offset: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, 'void', { type: 'global' }),\n  length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32\n});\n\nvar Directory = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  tag: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(4),\n  numTables: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  searchRange: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  entrySelector: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  rangeShift: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  tables: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(TableEntry, 'numTables')\n});\n\nDirectory.process = function () {\n  var tables$$1 = {};\n  for (var _iterator = this.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var table = _ref;\n\n    tables$$1[table.tag] = table;\n  }\n\n  this.tables = tables$$1;\n};\n\nDirectory.preEncode = function (stream) {\n  var tables$$1 = [];\n  for (var tag in this.tables) {\n    var table = this.tables[tag];\n    if (table) {\n      tables$$1.push({\n        tag: tag,\n        checkSum: 0,\n        offset: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VoidPointer(tables[tag], table),\n        length: tables[tag].size(table)\n      });\n    }\n  }\n\n  this.tag = 'true';\n  this.numTables = tables$$1.length;\n  this.tables = tables$$1;\n\n  this.searchRange = Math.floor(Math.log(this.numTables) / Math.LN2) * 16;\n  this.entrySelector = Math.floor(this.searchRange / Math.LN2);\n  this.rangeShift = this.numTables * 16 - this.searchRange;\n};\n\nfunction binarySearch(arr, cmp) {\n  var min = 0;\n  var max = arr.length - 1;\n  while (min <= max) {\n    var mid = min + max >> 1;\n    var res = cmp(arr[mid]);\n\n    if (res < 0) {\n      max = mid - 1;\n    } else if (res > 0) {\n      min = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n}\n\nfunction range(index, end) {\n  var range = [];\n  while (index < end) {\n    range.push(index++);\n  }\n  return range;\n}\n\nvar _class$1;\n\nfunction _applyDecoratedDescriptor$1(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n// iconv-lite is an optional dependency.\ntry {\n  var iconv = __webpack_require__(\"rPnE\");\n} catch (err) {}\n\nvar CmapProcessor = (_class$1 = function () {\n  function CmapProcessor(cmapTable) {\n    classCallCheck(this, CmapProcessor);\n\n    // Attempt to find a Unicode cmap first\n    this.encoding = null;\n    this.cmap = this.findSubtable(cmapTable, [\n    // 32-bit subtables\n    [3, 10], [0, 6], [0, 4],\n\n    // 16-bit subtables\n    [3, 1], [0, 3], [0, 2], [0, 1], [0, 0]]);\n\n    // If not unicode cmap was found, and iconv-lite is installed,\n    // take the first table with a supported encoding.\n    if (!this.cmap && iconv) {\n      for (var _iterator = cmapTable.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var cmap = _ref;\n\n        var encoding = getEncoding(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n        if (iconv.encodingExists(encoding)) {\n          this.cmap = cmap.table;\n          this.encoding = encoding;\n        }\n      }\n    }\n\n    if (!this.cmap) {\n      throw new Error(\"Could not find a supported cmap table\");\n    }\n\n    this.uvs = this.findSubtable(cmapTable, [[0, 5]]);\n    if (this.uvs && this.uvs.version !== 14) {\n      this.uvs = null;\n    }\n  }\n\n  CmapProcessor.prototype.findSubtable = function findSubtable(cmapTable, pairs) {\n    for (var _iterator2 = pairs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var _ref3 = _ref2,\n          platformID = _ref3[0],\n          encodingID = _ref3[1];\n\n      for (var _iterator3 = cmapTable.tables, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref4;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref4 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref4 = _i3.value;\n        }\n\n        var cmap = _ref4;\n\n        if (cmap.platformID === platformID && cmap.encodingID === encodingID) {\n          return cmap.table;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  CmapProcessor.prototype.lookup = function lookup(codepoint, variationSelector) {\n    // If there is no Unicode cmap in this font, we need to re-encode\n    // the codepoint in the encoding that the cmap supports.\n    if (this.encoding) {\n      var buf = iconv.encode(String.fromCodePoint(codepoint), this.encoding);\n      codepoint = 0;\n      for (var i = 0; i < buf.length; i++) {\n        codepoint = codepoint << 8 | buf[i];\n      }\n\n      // Otherwise, try to get a Unicode variation selector for this codepoint if one is provided.\n    } else if (variationSelector) {\n      var gid = this.getVariationSelector(codepoint, variationSelector);\n      if (gid) {\n        return gid;\n      }\n    }\n\n    var cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        return cmap.codeMap.get(codepoint) || 0;\n\n      case 4:\n        {\n          var min = 0;\n          var max = cmap.segCount - 1;\n          while (min <= max) {\n            var mid = min + max >> 1;\n\n            if (codepoint < cmap.startCode.get(mid)) {\n              max = mid - 1;\n            } else if (codepoint > cmap.endCode.get(mid)) {\n              min = mid + 1;\n            } else {\n              var rangeOffset = cmap.idRangeOffset.get(mid);\n              var _gid = void 0;\n\n              if (rangeOffset === 0) {\n                _gid = codepoint + cmap.idDelta.get(mid);\n              } else {\n                var index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n                _gid = cmap.glyphIndexArray.get(index) || 0;\n                if (_gid !== 0) {\n                  _gid += cmap.idDelta.get(mid);\n                }\n              }\n\n              return _gid & 0xffff;\n            }\n          }\n\n          return 0;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n\n      case 12:\n      case 13:\n        {\n          var _min = 0;\n          var _max = cmap.nGroups - 1;\n          while (_min <= _max) {\n            var _mid = _min + _max >> 1;\n            var group = cmap.groups.get(_mid);\n\n            if (codepoint < group.startCharCode) {\n              _max = _mid - 1;\n            } else if (codepoint > group.endCharCode) {\n              _min = _mid + 1;\n            } else {\n              if (cmap.version === 12) {\n                return group.glyphID + (codepoint - group.startCharCode);\n              } else {\n                return group.glyphID;\n              }\n            }\n          }\n\n          return 0;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error('Unknown cmap format ' + cmap.version);\n    }\n  };\n\n  CmapProcessor.prototype.getVariationSelector = function getVariationSelector(codepoint, variationSelector) {\n    if (!this.uvs) {\n      return 0;\n    }\n\n    var selectors = this.uvs.varSelectors.toArray();\n    var i = binarySearch(selectors, function (x) {\n      return variationSelector - x.varSelector;\n    });\n    var sel = selectors[i];\n\n    if (i !== -1 && sel.defaultUVS) {\n      i = binarySearch(sel.defaultUVS, function (x) {\n        return codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? +1 : 0;\n      });\n    }\n\n    if (i !== -1 && sel.nonDefaultUVS) {\n      i = binarySearch(sel.nonDefaultUVS, function (x) {\n        return codepoint - x.unicodeValue;\n      });\n      if (i !== -1) {\n        return sel.nonDefaultUVS[i].glyphID;\n      }\n    }\n\n    return 0;\n  };\n\n  CmapProcessor.prototype.getCharacterSet = function getCharacterSet() {\n    var cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        return range(0, cmap.codeMap.length);\n\n      case 4:\n        {\n          var res = [];\n          var endCodes = cmap.endCode.toArray();\n          for (var i = 0; i < endCodes.length; i++) {\n            var tail = endCodes[i] + 1;\n            var start = cmap.startCode.get(i);\n            res.push.apply(res, range(start, tail));\n          }\n\n          return res;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return range(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n\n      case 12:\n      case 13:\n        {\n          var _res = [];\n          for (var _iterator4 = cmap.groups.toArray(), _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n            var _ref5;\n\n            if (_isArray4) {\n              if (_i4 >= _iterator4.length) break;\n              _ref5 = _iterator4[_i4++];\n            } else {\n              _i4 = _iterator4.next();\n              if (_i4.done) break;\n              _ref5 = _i4.value;\n            }\n\n            var group = _ref5;\n\n            _res.push.apply(_res, range(group.startCharCode, group.endCharCode + 1));\n          }\n\n          return _res;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error('Unknown cmap format ' + cmap.version);\n    }\n  };\n\n  CmapProcessor.prototype.codePointsForGlyph = function codePointsForGlyph(gid) {\n    var cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        {\n          var res = [];\n          for (var i = 0; i < 256; i++) {\n            if (cmap.codeMap.get(i) === gid) {\n              res.push(i);\n            }\n          }\n\n          return res;\n        }\n\n      case 4:\n        {\n          var _res2 = [];\n          for (var _i5 = 0; _i5 < cmap.segCount; _i5++) {\n            var end = cmap.endCode.get(_i5);\n            var start = cmap.startCode.get(_i5);\n            var rangeOffset = cmap.idRangeOffset.get(_i5);\n            var delta = cmap.idDelta.get(_i5);\n\n            for (var c = start; c <= end; c++) {\n              var g = 0;\n              if (rangeOffset === 0) {\n                g = c + delta;\n              } else {\n                var index = rangeOffset / 2 + (c - start) - (cmap.segCount - _i5);\n                g = cmap.glyphIndexArray.get(index) || 0;\n                if (g !== 0) {\n                  g += delta;\n                }\n              }\n\n              if (g === gid) {\n                _res2.push(c);\n              }\n            }\n          }\n\n          return _res2;\n        }\n\n      case 12:\n        {\n          var _res3 = [];\n          for (var _iterator5 = cmap.groups.toArray(), _isArray5 = Array.isArray(_iterator5), _i6 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n            var _ref6;\n\n            if (_isArray5) {\n              if (_i6 >= _iterator5.length) break;\n              _ref6 = _iterator5[_i6++];\n            } else {\n              _i6 = _iterator5.next();\n              if (_i6.done) break;\n              _ref6 = _i6.value;\n            }\n\n            var group = _ref6;\n\n            if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) {\n              _res3.push(group.startCharCode + (gid - group.glyphID));\n            }\n          }\n\n          return _res3;\n        }\n\n      case 13:\n        {\n          var _res4 = [];\n          for (var _iterator6 = cmap.groups.toArray(), _isArray6 = Array.isArray(_iterator6), _i7 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n            var _ref7;\n\n            if (_isArray6) {\n              if (_i7 >= _iterator6.length) break;\n              _ref7 = _iterator6[_i7++];\n            } else {\n              _i7 = _iterator6.next();\n              if (_i7.done) break;\n              _ref7 = _i7.value;\n            }\n\n            var _group = _ref7;\n\n            if (gid === _group.glyphID) {\n              _res4.push.apply(_res4, range(_group.startCharCode, _group.endCharCode + 1));\n            }\n          }\n\n          return _res4;\n        }\n\n      default:\n        throw new Error('Unknown cmap format ' + cmap.version);\n    }\n  };\n\n  return CmapProcessor;\n}(), _applyDecoratedDescriptor$1(_class$1.prototype, 'getCharacterSet', [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, 'getCharacterSet'), _class$1.prototype), _applyDecoratedDescriptor$1(_class$1.prototype, 'codePointsForGlyph', [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, 'codePointsForGlyph'), _class$1.prototype), _class$1);\n\nvar KernProcessor = function () {\n  function KernProcessor(font) {\n    classCallCheck(this, KernProcessor);\n\n    this.kern = font.kern;\n  }\n\n  KernProcessor.prototype.process = function process(glyphs, positions) {\n    for (var glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++) {\n      var left = glyphs[glyphIndex].id;\n      var right = glyphs[glyphIndex + 1].id;\n      positions[glyphIndex].xAdvance += this.getKerning(left, right);\n    }\n  };\n\n  KernProcessor.prototype.getKerning = function getKerning(left, right) {\n    var res = 0;\n\n    for (var _iterator = this.kern.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var table = _ref;\n\n      if (table.coverage.crossStream) {\n        continue;\n      }\n\n      switch (table.version) {\n        case 0:\n          if (!table.coverage.horizontal) {\n            continue;\n          }\n\n          break;\n        case 1:\n          if (table.coverage.vertical || table.coverage.variation) {\n            continue;\n          }\n\n          break;\n        default:\n          throw new Error('Unsupported kerning table version ' + table.version);\n      }\n\n      var val = 0;\n      var s = table.subtable;\n      switch (table.format) {\n        case 0:\n          var pairIdx = binarySearch(s.pairs, function (pair) {\n            return left - pair.left || right - pair.right;\n          });\n\n          if (pairIdx >= 0) {\n            val = s.pairs[pairIdx].value;\n          }\n\n          break;\n\n        case 2:\n          var leftOffset = 0,\n              rightOffset = 0;\n          if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) {\n            leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n          } else {\n            leftOffset = s.array.off;\n          }\n\n          if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) {\n            rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n          }\n\n          var index = (leftOffset + rightOffset - s.array.off) / 2;\n          val = s.array.values.get(index);\n          break;\n\n        case 3:\n          if (left >= s.glyphCount || right >= s.glyphCount) {\n            return 0;\n          }\n\n          val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n          break;\n\n        default:\n          throw new Error('Unsupported kerning sub-table format ' + table.format);\n      }\n\n      // Microsoft supports the override flag, which resets the result\n      // Otherwise, the sum of the results from all subtables is returned\n      if (table.coverage.override) {\n        res = val;\n      } else {\n        res += val;\n      }\n    }\n\n    return res;\n  };\n\n  return KernProcessor;\n}();\n\n/**\n * This class is used when GPOS does not define 'mark' or 'mkmk' features\n * for positioning marks relative to base glyphs. It uses the unicode\n * combining class property to position marks.\n *\n * Based on code from Harfbuzz, thanks!\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-fallback.cc\n */\n\nvar UnicodeLayoutEngine = function () {\n  function UnicodeLayoutEngine(font) {\n    classCallCheck(this, UnicodeLayoutEngine);\n\n    this.font = font;\n  }\n\n  UnicodeLayoutEngine.prototype.positionGlyphs = function positionGlyphs(glyphs, positions) {\n    // find each base + mark cluster, and position the marks relative to the base\n    var clusterStart = 0;\n    var clusterEnd = 0;\n    for (var index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n      if (glyph.isMark) {\n        // TODO: handle ligatures\n        clusterEnd = index;\n      } else {\n        if (clusterStart !== clusterEnd) {\n          this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        }\n\n        clusterStart = clusterEnd = index;\n      }\n    }\n\n    if (clusterStart !== clusterEnd) {\n      this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n    }\n\n    return positions;\n  };\n\n  UnicodeLayoutEngine.prototype.positionCluster = function positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n    var base = glyphs[clusterStart];\n    var baseBox = base.cbox.copy();\n\n    // adjust bounding box for ligature glyphs\n    if (base.codePoints.length > 1) {\n      // LTR. TODO: RTL support.\n      baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;\n    }\n\n    var xOffset = -positions[clusterStart].xAdvance;\n    var yOffset = 0;\n    var yGap = this.font.unitsPerEm / 16;\n\n    // position each of the mark glyphs relative to the base glyph\n    for (var index = clusterStart + 1; index <= clusterEnd; index++) {\n      var mark = glyphs[index];\n      var markBox = mark.cbox;\n      var position = positions[index];\n\n      var combiningClass = this.getCombiningClass(mark.codePoints[0]);\n\n      if (combiningClass !== 'Not_Reordered') {\n        position.xOffset = position.yOffset = 0;\n\n        // x positioning\n        switch (combiningClass) {\n          case 'Double_Above':\n          case 'Double_Below':\n            // LTR. TODO: RTL support.\n            position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n            break;\n\n          case 'Attached_Below_Left':\n          case 'Below_Left':\n          case 'Above_Left':\n            // left align\n            position.xOffset += baseBox.minX - markBox.minX;\n            break;\n\n          case 'Attached_Above_Right':\n          case 'Below_Right':\n          case 'Above_Right':\n            // right align\n            position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n            break;\n\n          default:\n            // Attached_Below, Attached_Above, Below, Above, other\n            // center align\n            position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n        }\n\n        // y positioning\n        switch (combiningClass) {\n          case 'Double_Below':\n          case 'Below_Left':\n          case 'Below':\n          case 'Below_Right':\n          case 'Attached_Below_Left':\n          case 'Attached_Below':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Below_Left' || combiningClass === 'Attached_Below') {\n              baseBox.minY += yGap;\n            }\n\n            position.yOffset = -baseBox.minY - markBox.maxY;\n            baseBox.minY += markBox.height;\n            break;\n\n          case 'Double_Above':\n          case 'Above_Left':\n          case 'Above':\n          case 'Above_Right':\n          case 'Attached_Above':\n          case 'Attached_Above_Right':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Above' || combiningClass === 'Attached_Above_Right') {\n              baseBox.maxY += yGap;\n            }\n\n            position.yOffset = baseBox.maxY - markBox.minY;\n            baseBox.maxY += markBox.height;\n            break;\n        }\n\n        position.xAdvance = position.yAdvance = 0;\n        position.xOffset += xOffset;\n        position.yOffset += yOffset;\n      } else {\n        xOffset -= position.xAdvance;\n        yOffset -= position.yAdvance;\n      }\n    }\n\n    return;\n  };\n\n  UnicodeLayoutEngine.prototype.getCombiningClass = function getCombiningClass(codePoint) {\n    var combiningClass = _react_pdf_unicode_properties__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getCombiningClass(codePoint);\n\n    // Thai / Lao need some per-character work\n    if ((codePoint & ~0xff) === 0x0e00) {\n      if (combiningClass === 'Not_Reordered') {\n        switch (codePoint) {\n          case 0x0e31:\n          case 0x0e34:\n          case 0x0e35:\n          case 0x0e36:\n          case 0x0e37:\n          case 0x0e47:\n          case 0x0e4c:\n          case 0x0e3d:\n          case 0x0e4e:\n            return 'Above_Right';\n\n          case 0x0eb1:\n          case 0x0eb4:\n          case 0x0eb5:\n          case 0x0eb6:\n          case 0x0eb7:\n          case 0x0ebb:\n          case 0x0ecc:\n          case 0x0ecd:\n            return 'Above';\n\n          case 0x0ebc:\n            return 'Below';\n        }\n      } else if (codePoint === 0x0e3a) {\n        // virama\n        return 'Below_Right';\n      }\n    }\n\n    switch (combiningClass) {\n      // Hebrew\n\n      case 'CCC10': // sheva\n      case 'CCC11': // hataf segol\n      case 'CCC12': // hataf patah\n      case 'CCC13': // hataf qamats\n      case 'CCC14': // hiriq\n      case 'CCC15': // tsere\n      case 'CCC16': // segol\n      case 'CCC17': // patah\n      case 'CCC18': // qamats\n      case 'CCC20': // qubuts\n      case 'CCC22':\n        // meteg\n        return 'Below';\n\n      case 'CCC23':\n        // rafe\n        return 'Attached_Above';\n\n      case 'CCC24':\n        // shin dot\n        return 'Above_Right';\n\n      case 'CCC25': // sin dot\n      case 'CCC19':\n        // holam\n        return 'Above_Left';\n\n      case 'CCC26':\n        // point varika\n        return 'Above';\n\n      case 'CCC21':\n        // dagesh\n        break;\n\n      // Arabic and Syriac\n\n      case 'CCC27': // fathatan\n      case 'CCC28': // dammatan\n      case 'CCC30': // fatha\n      case 'CCC31': // damma\n      case 'CCC33': // shadda\n      case 'CCC34': // sukun\n      case 'CCC35': // superscript alef\n      case 'CCC36':\n        // superscript alaph\n        return 'Above';\n\n      case 'CCC29': // kasratan\n      case 'CCC32':\n        // kasra\n        return 'Below';\n\n      // Thai\n\n      case 'CCC103':\n        // sara u / sara uu\n        return 'Below_Right';\n\n      case 'CCC107':\n        // mai\n        return 'Above_Right';\n\n      // Lao\n\n      case 'CCC118':\n        // sign u / sign uu\n        return 'Below';\n\n      case 'CCC122':\n        // mai\n        return 'Above';\n\n      // Tibetan\n\n      case 'CCC129': // sign aa\n      case 'CCC132':\n        // sign u\n        return 'Below';\n\n      case 'CCC130':\n        // sign i\n        return 'Above';\n    }\n\n    return combiningClass;\n  };\n\n  return UnicodeLayoutEngine;\n}();\n\n/**\n * Represents a glyph bounding box\n */\nvar BBox = function () {\n  function BBox() {\n    var minX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Infinity;\n    var minY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n    var maxX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -Infinity;\n    var maxY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -Infinity;\n    classCallCheck(this, BBox);\n\n    /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * The width of the bounding box\n   * @type {number}\n   */\n\n\n  BBox.prototype.addPoint = function addPoint(x, y) {\n    if (Math.abs(x) !== Infinity) {\n      if (x < this.minX) {\n        this.minX = x;\n      }\n\n      if (x > this.maxX) {\n        this.maxX = x;\n      }\n    }\n\n    if (Math.abs(y) !== Infinity) {\n      if (y < this.minY) {\n        this.minY = y;\n      }\n\n      if (y > this.maxY) {\n        this.maxY = y;\n      }\n    }\n  };\n\n  BBox.prototype.copy = function copy() {\n    return new BBox(this.minX, this.minY, this.maxX, this.maxY);\n  };\n\n  createClass(BBox, [{\n    key: \"width\",\n    get: function get$$1() {\n      return this.maxX - this.minX;\n    }\n\n    /**\n     * The height of the bounding box\n     * @type {number}\n     */\n\n  }, {\n    key: \"height\",\n    get: function get$$1() {\n      return this.maxY - this.minY;\n    }\n  }]);\n  return BBox;\n}();\n\n// This maps the Unicode Script property to an OpenType script tag\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\nvar UNICODE_SCRIPTS = {\n  Caucasian_Albanian: 'aghb',\n  Arabic: 'arab',\n  Imperial_Aramaic: 'armi',\n  Armenian: 'armn',\n  Avestan: 'avst',\n  Balinese: 'bali',\n  Bamum: 'bamu',\n  Bassa_Vah: 'bass',\n  Batak: 'batk',\n  Bengali: ['bng2', 'beng'],\n  Bopomofo: 'bopo',\n  Brahmi: 'brah',\n  Braille: 'brai',\n  Buginese: 'bugi',\n  Buhid: 'buhd',\n  Chakma: 'cakm',\n  Canadian_Aboriginal: 'cans',\n  Carian: 'cari',\n  Cham: 'cham',\n  Cherokee: 'cher',\n  Coptic: 'copt',\n  Cypriot: 'cprt',\n  Cyrillic: 'cyrl',\n  Devanagari: ['dev2', 'deva'],\n  Deseret: 'dsrt',\n  Duployan: 'dupl',\n  Egyptian_Hieroglyphs: 'egyp',\n  Elbasan: 'elba',\n  Ethiopic: 'ethi',\n  Georgian: 'geor',\n  Glagolitic: 'glag',\n  Gothic: 'goth',\n  Grantha: 'gran',\n  Greek: 'grek',\n  Gujarati: ['gjr2', 'gujr'],\n  Gurmukhi: ['gur2', 'guru'],\n  Hangul: 'hang',\n  Han: 'hani',\n  Hanunoo: 'hano',\n  Hebrew: 'hebr',\n  Hiragana: 'hira',\n  Pahawh_Hmong: 'hmng',\n  Katakana_Or_Hiragana: 'hrkt',\n  Old_Italic: 'ital',\n  Javanese: 'java',\n  Kayah_Li: 'kali',\n  Katakana: 'kana',\n  Kharoshthi: 'khar',\n  Khmer: 'khmr',\n  Khojki: 'khoj',\n  Kannada: ['knd2', 'knda'],\n  Kaithi: 'kthi',\n  Tai_Tham: 'lana',\n  Lao: 'lao ',\n  Latin: 'latn',\n  Lepcha: 'lepc',\n  Limbu: 'limb',\n  Linear_A: 'lina',\n  Linear_B: 'linb',\n  Lisu: 'lisu',\n  Lycian: 'lyci',\n  Lydian: 'lydi',\n  Mahajani: 'mahj',\n  Mandaic: 'mand',\n  Manichaean: 'mani',\n  Mende_Kikakui: 'mend',\n  Meroitic_Cursive: 'merc',\n  Meroitic_Hieroglyphs: 'mero',\n  Malayalam: ['mlm2', 'mlym'],\n  Modi: 'modi',\n  Mongolian: 'mong',\n  Mro: 'mroo',\n  Meetei_Mayek: 'mtei',\n  Myanmar: ['mym2', 'mymr'],\n  Old_North_Arabian: 'narb',\n  Nabataean: 'nbat',\n  Nko: 'nko ',\n  Ogham: 'ogam',\n  Ol_Chiki: 'olck',\n  Old_Turkic: 'orkh',\n  Oriya: ['ory2', 'orya'],\n  Osmanya: 'osma',\n  Palmyrene: 'palm',\n  Pau_Cin_Hau: 'pauc',\n  Old_Permic: 'perm',\n  Phags_Pa: 'phag',\n  Inscriptional_Pahlavi: 'phli',\n  Psalter_Pahlavi: 'phlp',\n  Phoenician: 'phnx',\n  Miao: 'plrd',\n  Inscriptional_Parthian: 'prti',\n  Rejang: 'rjng',\n  Runic: 'runr',\n  Samaritan: 'samr',\n  Old_South_Arabian: 'sarb',\n  Saurashtra: 'saur',\n  Shavian: 'shaw',\n  Sharada: 'shrd',\n  Siddham: 'sidd',\n  Khudawadi: 'sind',\n  Sinhala: 'sinh',\n  Sora_Sompeng: 'sora',\n  Sundanese: 'sund',\n  Syloti_Nagri: 'sylo',\n  Syriac: 'syrc',\n  Tagbanwa: 'tagb',\n  Takri: 'takr',\n  Tai_Le: 'tale',\n  New_Tai_Lue: 'talu',\n  Tamil: ['tml2', 'taml'],\n  Tai_Viet: 'tavt',\n  Telugu: ['tel2', 'telu'],\n  Tifinagh: 'tfng',\n  Tagalog: 'tglg',\n  Thaana: 'thaa',\n  Thai: 'thai',\n  Tibetan: 'tibt',\n  Tirhuta: 'tirh',\n  Ugaritic: 'ugar',\n  Vai: 'vai ',\n  Warang_Citi: 'wara',\n  Old_Persian: 'xpeo',\n  Cuneiform: 'xsux',\n  Yi: 'yi  ',\n  Inherited: 'zinh',\n  Common: 'zyyy',\n  Unknown: 'zzzz'\n};\n\nvar OPENTYPE_SCRIPTS = {};\nfor (var script in UNICODE_SCRIPTS) {\n  var tag = UNICODE_SCRIPTS[script];\n  if (Array.isArray(tag)) {\n    for (var _iterator = tag, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var t = _ref;\n\n      OPENTYPE_SCRIPTS[t] = script;\n    }\n  } else {\n    OPENTYPE_SCRIPTS[tag] = script;\n  }\n}\n\n\n\nfunction fromOpenType(tag) {\n  return OPENTYPE_SCRIPTS[tag];\n}\n\nfunction forString(string) {\n  var len = string.length;\n  var idx = 0;\n  while (idx < len) {\n    var code = string.charCodeAt(idx++);\n\n    // Check if this is a high surrogate\n    if (0xd800 <= code && code <= 0xdbff && idx < len) {\n      var next = string.charCodeAt(idx);\n\n      // Check if this is a low surrogate\n      if (0xdc00 <= next && next <= 0xdfff) {\n        idx++;\n        code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n      }\n    }\n\n    var _script = _react_pdf_unicode_properties__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getScript(code);\n    if (_script !== 'Common' && _script !== 'Inherited' && _script !== 'Unknown') {\n      return UNICODE_SCRIPTS[_script];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n}\n\n\n\n// The scripts in this map are written from right to left\nvar RTL = {\n  arab: true, // Arabic\n  hebr: true, // Hebrew\n  syrc: true, // Syriac\n  thaa: true, // Thaana\n  cprt: true, // Cypriot Syllabary\n  khar: true, // Kharosthi\n  phnx: true, // Phoenician\n  'nko ': true, // N'Ko\n  lydi: true, // Lydian\n  avst: true, // Avestan\n  armi: true, // Imperial Aramaic\n  phli: true, // Inscriptional Pahlavi\n  prti: true, // Inscriptional Parthian\n  sarb: true, // Old South Arabian\n  orkh: true, // Old Turkic, Orkhon Runic\n  samr: true, // Samaritan\n  mand: true, // Mandaic, Mandaean\n  merc: true, // Meroitic Cursive\n  mero: true, // Meroitic Hieroglyphs\n\n  // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n  mani: true, // Manichaean\n  mend: true, // Mende Kikakui\n  nbat: true, // Nabataean\n  narb: true, // Old North Arabian\n  palm: true, // Palmyrene\n  phlp: true // Psalter Pahlavi\n};\n\nfunction direction(script) {\n  if (RTL[script]) {\n    return 'rtl';\n  }\n\n  return 'ltr';\n}\n\n/**\n * Represents a run of Glyph and GlyphPosition objects.\n * Returned by the font layout method.\n */\n\nvar GlyphRun = function () {\n  function GlyphRun(glyphs, features, script, language, direction$$1) {\n    classCallCheck(this, GlyphRun);\n\n    /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */\n    this.glyphs = glyphs;\n\n    /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */\n    this.positions = null;\n\n    /**\n     * An array of indices to indices in the input string for each glyph\n     * @type {number[]}\n     */\n    this.stringIndices = null;\n\n    /**\n     * The script that was requested for shaping. This was either passed in or detected automatically.\n     * @type {string}\n     */\n    this.script = script;\n\n    /**\n     * The language requested for shaping, as passed in. If `null`, the default language for the\n     * script was used.\n     * @type {string}\n     */\n    this.language = language || null;\n\n    /**\n     * The direction requested for shaping, as passed in (either ltr or rtl).\n     * If `null`, the default direction of the script is used.\n     * @type {string}\n     */\n    this.direction = direction$$1 || direction(script);\n\n    /**\n     * The features requested during shaping. This is a combination of user\n     * specified features and features chosen by the shaper.\n     * @type {object}\n     */\n    this.features = {};\n\n    // Convert features to an object\n    if (Array.isArray(features)) {\n      for (var _iterator = features, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var tag = _ref;\n\n        this.features[tag] = true;\n      }\n    } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n      this.features = features;\n    }\n  }\n\n  /**\n   * The total advance width of the run.\n   * @type {number}\n   */\n\n\n  createClass(GlyphRun, [{\n    key: 'advanceWidth',\n    get: function get$$1() {\n      var width = 0;\n      for (var _iterator2 = this.positions, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var position = _ref2;\n\n        width += position.xAdvance;\n      }\n\n      return width;\n    }\n\n    /**\n     * The total advance height of the run.\n     * @type {number}\n     */\n\n  }, {\n    key: 'advanceHeight',\n    get: function get$$1() {\n      var height = 0;\n      for (var _iterator3 = this.positions, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var position = _ref3;\n\n        height += position.yAdvance;\n      }\n\n      return height;\n    }\n\n    /**\n     * The bounding box containing all glyphs in the run.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      var bbox = new BBox();\n\n      var x = 0;\n      var y = 0;\n      for (var index = 0; index < this.glyphs.length; index++) {\n        var glyph = this.glyphs[index];\n        var p = this.positions[index];\n        var b = glyph.bbox;\n\n        bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n        bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n\n        x += p.xAdvance;\n        y += p.yAdvance;\n      }\n\n      return bbox;\n    }\n  }]);\n  return GlyphRun;\n}();\n\n/**\n * Represents positioning information for a glyph in a GlyphRun.\n */\nvar GlyphPosition = function GlyphPosition() {\n  var xAdvance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var yAdvance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var xOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var yOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  classCallCheck(this, GlyphPosition);\n\n  /**\n   * The amount to move the virtual pen in the X direction after rendering this glyph.\n   * @type {number}\n   */\n  this.xAdvance = xAdvance;\n\n  /**\n   * The amount to move the virtual pen in the Y direction after rendering this glyph.\n   * @type {number}\n   */\n  this.yAdvance = yAdvance;\n\n  /**\n   * The offset from the pen position in the X direction at which to render this glyph.\n   * @type {number}\n   */\n  this.xOffset = xOffset;\n\n  /**\n   * The offset from the pen position in the Y direction at which to render this glyph.\n   * @type {number}\n   */\n  this.yOffset = yOffset;\n};\n\n// see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\nvar features = {\n  allTypographicFeatures: {\n    code: 0,\n    exclusive: false,\n    allTypeFeatures: 0\n  },\n  ligatures: {\n    code: 1,\n    exclusive: false,\n    requiredLigatures: 0,\n    commonLigatures: 2,\n    rareLigatures: 4,\n    // logos: 6\n    rebusPictures: 8,\n    diphthongLigatures: 10,\n    squaredLigatures: 12,\n    abbrevSquaredLigatures: 14,\n    symbolLigatures: 16,\n    contextualLigatures: 18,\n    historicalLigatures: 20\n  },\n  cursiveConnection: {\n    code: 2,\n    exclusive: true,\n    unconnected: 0,\n    partiallyConnected: 1,\n    cursive: 2\n  },\n  letterCase: {\n    code: 3,\n    exclusive: true\n  },\n  // upperAndLowerCase: 0          # deprecated\n  // allCaps: 1                    # deprecated\n  // allLowerCase: 2               # deprecated\n  // smallCaps: 3                  # deprecated\n  // initialCaps: 4                # deprecated\n  // initialCapsAndSmallCaps: 5    # deprecated\n  verticalSubstitution: {\n    code: 4,\n    exclusive: false,\n    substituteVerticalForms: 0\n  },\n  linguisticRearrangement: {\n    code: 5,\n    exclusive: false,\n    linguisticRearrangement: 0\n  },\n  numberSpacing: {\n    code: 6,\n    exclusive: true,\n    monospacedNumbers: 0,\n    proportionalNumbers: 1,\n    thirdWidthNumbers: 2,\n    quarterWidthNumbers: 3\n  },\n  smartSwash: {\n    code: 8,\n    exclusive: false,\n    wordInitialSwashes: 0,\n    wordFinalSwashes: 2,\n    // lineInitialSwashes: 4\n    // lineFinalSwashes: 6\n    nonFinalSwashes: 8\n  },\n  diacritics: {\n    code: 9,\n    exclusive: true,\n    showDiacritics: 0,\n    hideDiacritics: 1,\n    decomposeDiacritics: 2\n  },\n  verticalPosition: {\n    code: 10,\n    exclusive: true,\n    normalPosition: 0,\n    superiors: 1,\n    inferiors: 2,\n    ordinals: 3,\n    scientificInferiors: 4\n  },\n  fractions: {\n    code: 11,\n    exclusive: true,\n    noFractions: 0,\n    verticalFractions: 1,\n    diagonalFractions: 2\n  },\n  overlappingCharacters: {\n    code: 13,\n    exclusive: false,\n    preventOverlap: 0\n  },\n  typographicExtras: {\n    code: 14,\n    exclusive: false,\n    // hyphensToEmDash: 0\n    // hyphenToEnDash: 2\n    slashedZero: 4\n  },\n  // formInterrobang: 6\n  // smartQuotes: 8\n  // periodsToEllipsis: 10\n  mathematicalExtras: {\n    code: 15,\n    exclusive: false,\n    // hyphenToMinus: 0\n    // asteristoMultiply: 2\n    // slashToDivide: 4\n    // inequalityLigatures: 6\n    // exponents: 8\n    mathematicalGreek: 10\n  },\n  ornamentSets: {\n    code: 16,\n    exclusive: true,\n    noOrnaments: 0,\n    dingbats: 1,\n    piCharacters: 2,\n    fleurons: 3,\n    decorativeBorders: 4,\n    internationalSymbols: 5,\n    mathSymbols: 6\n  },\n  characterAlternatives: {\n    code: 17,\n    exclusive: true,\n    noAlternates: 0\n  },\n  // user defined options\n  designComplexity: {\n    code: 18,\n    exclusive: true,\n    designLevel1: 0,\n    designLevel2: 1,\n    designLevel3: 2,\n    designLevel4: 3,\n    designLevel5: 4\n  },\n  styleOptions: {\n    code: 19,\n    exclusive: true,\n    noStyleOptions: 0,\n    displayText: 1,\n    engravedText: 2,\n    illuminatedCaps: 3,\n    titlingCaps: 4,\n    tallCaps: 5\n  },\n  characterShape: {\n    code: 20,\n    exclusive: true,\n    traditionalCharacters: 0,\n    simplifiedCharacters: 1,\n    JIS1978Characters: 2,\n    JIS1983Characters: 3,\n    JIS1990Characters: 4,\n    traditionalAltOne: 5,\n    traditionalAltTwo: 6,\n    traditionalAltThree: 7,\n    traditionalAltFour: 8,\n    traditionalAltFive: 9,\n    expertCharacters: 10,\n    JIS2004Characters: 11,\n    hojoCharacters: 12,\n    NLCCharacters: 13,\n    traditionalNamesCharacters: 14\n  },\n  numberCase: {\n    code: 21,\n    exclusive: true,\n    lowerCaseNumbers: 0,\n    upperCaseNumbers: 1\n  },\n  textSpacing: {\n    code: 22,\n    exclusive: true,\n    proportionalText: 0,\n    monospacedText: 1,\n    halfWidthText: 2,\n    thirdWidthText: 3,\n    quarterWidthText: 4,\n    altProportionalText: 5,\n    altHalfWidthText: 6\n  },\n  transliteration: {\n    code: 23,\n    exclusive: true,\n    noTransliteration: 0\n  },\n  // hanjaToHangul: 1\n  // hiraganaToKatakana: 2\n  // katakanaToHiragana: 3\n  // kanaToRomanization: 4\n  // romanizationToHiragana: 5\n  // romanizationToKatakana: 6\n  // hanjaToHangulAltOne: 7\n  // hanjaToHangulAltTwo: 8\n  // hanjaToHangulAltThree: 9\n  annotation: {\n    code: 24,\n    exclusive: true,\n    noAnnotation: 0,\n    boxAnnotation: 1,\n    roundedBoxAnnotation: 2,\n    circleAnnotation: 3,\n    invertedCircleAnnotation: 4,\n    parenthesisAnnotation: 5,\n    periodAnnotation: 6,\n    romanNumeralAnnotation: 7,\n    diamondAnnotation: 8,\n    invertedBoxAnnotation: 9,\n    invertedRoundedBoxAnnotation: 10\n  },\n  kanaSpacing: {\n    code: 25,\n    exclusive: true,\n    fullWidthKana: 0,\n    proportionalKana: 1\n  },\n  ideographicSpacing: {\n    code: 26,\n    exclusive: true,\n    fullWidthIdeographs: 0,\n    proportionalIdeographs: 1,\n    halfWidthIdeographs: 2\n  },\n  unicodeDecomposition: {\n    code: 27,\n    exclusive: false,\n    canonicalComposition: 0,\n    compatibilityComposition: 2,\n    transcodingComposition: 4\n  },\n  rubyKana: {\n    code: 28,\n    exclusive: false,\n    // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n    // rubyKana: 1     # deprecated - use rubyKanaOn instead\n    rubyKana: 2\n  },\n  CJKSymbolAlternatives: {\n    code: 29,\n    exclusive: true,\n    noCJKSymbolAlternatives: 0,\n    CJKSymbolAltOne: 1,\n    CJKSymbolAltTwo: 2,\n    CJKSymbolAltThree: 3,\n    CJKSymbolAltFour: 4,\n    CJKSymbolAltFive: 5\n  },\n  ideographicAlternatives: {\n    code: 30,\n    exclusive: true,\n    noIdeographicAlternatives: 0,\n    ideographicAltOne: 1,\n    ideographicAltTwo: 2,\n    ideographicAltThree: 3,\n    ideographicAltFour: 4,\n    ideographicAltFive: 5\n  },\n  CJKVerticalRomanPlacement: {\n    code: 31,\n    exclusive: true,\n    CJKVerticalRomanCentered: 0,\n    CJKVerticalRomanHBaseline: 1\n  },\n  italicCJKRoman: {\n    code: 32,\n    exclusive: false,\n    // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n    // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n    CJKItalicRoman: 2\n  },\n  caseSensitiveLayout: {\n    code: 33,\n    exclusive: false,\n    caseSensitiveLayout: 0,\n    caseSensitiveSpacing: 2\n  },\n  alternateKana: {\n    code: 34,\n    exclusive: false,\n    alternateHorizKana: 0,\n    alternateVertKana: 2\n  },\n  stylisticAlternatives: {\n    code: 35,\n    exclusive: false,\n    noStylisticAlternates: 0,\n    stylisticAltOne: 2,\n    stylisticAltTwo: 4,\n    stylisticAltThree: 6,\n    stylisticAltFour: 8,\n    stylisticAltFive: 10,\n    stylisticAltSix: 12,\n    stylisticAltSeven: 14,\n    stylisticAltEight: 16,\n    stylisticAltNine: 18,\n    stylisticAltTen: 20,\n    stylisticAltEleven: 22,\n    stylisticAltTwelve: 24,\n    stylisticAltThirteen: 26,\n    stylisticAltFourteen: 28,\n    stylisticAltFifteen: 30,\n    stylisticAltSixteen: 32,\n    stylisticAltSeventeen: 34,\n    stylisticAltEighteen: 36,\n    stylisticAltNineteen: 38,\n    stylisticAltTwenty: 40\n  },\n  contextualAlternates: {\n    code: 36,\n    exclusive: false,\n    contextualAlternates: 0,\n    swashAlternates: 2,\n    contextualSwashAlternates: 4\n  },\n  lowerCase: {\n    code: 37,\n    exclusive: true,\n    defaultLowerCase: 0,\n    lowerCaseSmallCaps: 1,\n    lowerCasePetiteCaps: 2\n  },\n  upperCase: {\n    code: 38,\n    exclusive: true,\n    defaultUpperCase: 0,\n    upperCaseSmallCaps: 1,\n    upperCasePetiteCaps: 2\n  },\n  languageTag: { // indices into ltag table\n    code: 39,\n    exclusive: true\n  },\n  CJKRomanSpacing: {\n    code: 103,\n    exclusive: true,\n    halfWidthCJKRoman: 0,\n    proportionalCJKRoman: 1,\n    defaultCJKRoman: 2,\n    fullWidthCJKRoman: 3\n  }\n};\n\nvar feature = function feature(name, selector) {\n  return [features[name].code, features[name][selector]];\n};\n\nvar OTMapping = {\n  rlig: feature('ligatures', 'requiredLigatures'),\n  clig: feature('ligatures', 'contextualLigatures'),\n  dlig: feature('ligatures', 'rareLigatures'),\n  hlig: feature('ligatures', 'historicalLigatures'),\n  liga: feature('ligatures', 'commonLigatures'),\n  hist: feature('ligatures', 'historicalLigatures'), // ??\n\n  smcp: feature('lowerCase', 'lowerCaseSmallCaps'),\n  pcap: feature('lowerCase', 'lowerCasePetiteCaps'),\n\n  frac: feature('fractions', 'diagonalFractions'),\n  dnom: feature('fractions', 'diagonalFractions'), // ??\n  numr: feature('fractions', 'diagonalFractions'), // ??\n  afrc: feature('fractions', 'verticalFractions'),\n  // aalt\n  // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n  // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n  // unic, vatu, vhal, vjmo, vpal, vrt2\n  // dist -> trak table?\n  // kern, vkrn -> kern table\n  // lfbd + opbd + rtbd -> opbd table?\n  // mark, mkmk -> acnt table?\n  // locl -> languageTag + ltag table\n\n  case: feature('caseSensitiveLayout', 'caseSensitiveLayout'), // also caseSensitiveSpacing\n  ccmp: feature('unicodeDecomposition', 'canonicalComposition'), // compatibilityComposition?\n  cpct: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'), // guess..., probably not given below\n  valt: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  swsh: feature('contextualAlternates', 'swashAlternates'),\n  cswh: feature('contextualAlternates', 'contextualSwashAlternates'),\n  curs: feature('cursiveConnection', 'cursive'), // ??\n  c2pc: feature('upperCase', 'upperCasePetiteCaps'),\n  c2sc: feature('upperCase', 'upperCaseSmallCaps'),\n\n  init: feature('smartSwash', 'wordInitialSwashes'), // ??\n  fin2: feature('smartSwash', 'wordFinalSwashes'), // ??\n  medi: feature('smartSwash', 'nonFinalSwashes'), // ??\n  med2: feature('smartSwash', 'nonFinalSwashes'), // ??\n  fin3: feature('smartSwash', 'wordFinalSwashes'), // ??\n  fina: feature('smartSwash', 'wordFinalSwashes'), // ??\n\n  pkna: feature('kanaSpacing', 'proportionalKana'),\n  half: feature('textSpacing', 'halfWidthText'), // also HalfWidthCJKRoman, HalfWidthIdeographs?\n  halt: feature('textSpacing', 'altHalfWidthText'),\n\n  hkna: feature('alternateKana', 'alternateHorizKana'),\n  vkna: feature('alternateKana', 'alternateVertKana'),\n  // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n\n  ital: feature('italicCJKRoman', 'CJKItalicRoman'),\n  lnum: feature('numberCase', 'upperCaseNumbers'),\n  onum: feature('numberCase', 'lowerCaseNumbers'),\n  mgrk: feature('mathematicalExtras', 'mathematicalGreek'),\n\n  // nalt: not enough info. what type of annotation?\n  // ornm: ditto, which ornament style?\n\n  calt: feature('contextualAlternates', 'contextualAlternates'), // or more?\n  vrt2: feature('verticalSubstitution', 'substituteVerticalForms'), // oh... below?\n  vert: feature('verticalSubstitution', 'substituteVerticalForms'),\n  tnum: feature('numberSpacing', 'monospacedNumbers'),\n  pnum: feature('numberSpacing', 'proportionalNumbers'),\n  sups: feature('verticalPosition', 'superiors'),\n  subs: feature('verticalPosition', 'inferiors'),\n  ordn: feature('verticalPosition', 'ordinals'),\n  pwid: feature('textSpacing', 'proportionalText'),\n  hwid: feature('textSpacing', 'halfWidthText'),\n  qwid: feature('textSpacing', 'quarterWidthText'), // also QuarterWidthNumbers?\n  twid: feature('textSpacing', 'thirdWidthText'), // also ThirdWidthNumbers?\n  fwid: feature('textSpacing', 'proportionalText'), //??\n  palt: feature('textSpacing', 'altProportionalText'),\n  trad: feature('characterShape', 'traditionalCharacters'),\n  smpl: feature('characterShape', 'simplifiedCharacters'),\n  jp78: feature('characterShape', 'JIS1978Characters'),\n  jp83: feature('characterShape', 'JIS1983Characters'),\n  jp90: feature('characterShape', 'JIS1990Characters'),\n  jp04: feature('characterShape', 'JIS2004Characters'),\n  expt: feature('characterShape', 'expertCharacters'),\n  hojo: feature('characterShape', 'hojoCharacters'),\n  nlck: feature('characterShape', 'NLCCharacters'),\n  tnam: feature('characterShape', 'traditionalNamesCharacters'),\n  ruby: feature('rubyKana', 'rubyKana'),\n  titl: feature('styleOptions', 'titlingCaps'),\n  zero: feature('typographicExtras', 'slashedZero'),\n\n  ss01: feature('stylisticAlternatives', 'stylisticAltOne'),\n  ss02: feature('stylisticAlternatives', 'stylisticAltTwo'),\n  ss03: feature('stylisticAlternatives', 'stylisticAltThree'),\n  ss04: feature('stylisticAlternatives', 'stylisticAltFour'),\n  ss05: feature('stylisticAlternatives', 'stylisticAltFive'),\n  ss06: feature('stylisticAlternatives', 'stylisticAltSix'),\n  ss07: feature('stylisticAlternatives', 'stylisticAltSeven'),\n  ss08: feature('stylisticAlternatives', 'stylisticAltEight'),\n  ss09: feature('stylisticAlternatives', 'stylisticAltNine'),\n  ss10: feature('stylisticAlternatives', 'stylisticAltTen'),\n  ss11: feature('stylisticAlternatives', 'stylisticAltEleven'),\n  ss12: feature('stylisticAlternatives', 'stylisticAltTwelve'),\n  ss13: feature('stylisticAlternatives', 'stylisticAltThirteen'),\n  ss14: feature('stylisticAlternatives', 'stylisticAltFourteen'),\n  ss15: feature('stylisticAlternatives', 'stylisticAltFifteen'),\n  ss16: feature('stylisticAlternatives', 'stylisticAltSixteen'),\n  ss17: feature('stylisticAlternatives', 'stylisticAltSeventeen'),\n  ss18: feature('stylisticAlternatives', 'stylisticAltEighteen'),\n  ss19: feature('stylisticAlternatives', 'stylisticAltNineteen'),\n  ss20: feature('stylisticAlternatives', 'stylisticAltTwenty')\n};\n\n// salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n\n// Add cv01-cv99 features\nfor (var i = 1; i <= 99; i++) {\n  OTMapping['cv' + ('00' + i).slice(-2)] = [features.characterAlternatives.code, i];\n}\n\n// create inverse mapping\nvar AATMapping = {};\nfor (var ot in OTMapping) {\n  var aat = OTMapping[ot];\n  if (AATMapping[aat[0]] == null) {\n    AATMapping[aat[0]] = {};\n  }\n\n  AATMapping[aat[0]][aat[1]] = ot;\n}\n\n// Maps an array of OpenType features to AAT features\n// in the form of {featureType:{featureSetting:true}}\nfunction mapOTToAAT(features) {\n  var res = {};\n  for (var k in features) {\n    var r$$1 = void 0;\n    if (r$$1 = OTMapping[k]) {\n      if (res[r$$1[0]] == null) {\n        res[r$$1[0]] = {};\n      }\n\n      res[r$$1[0]][r$$1[1]] = features[k];\n    }\n  }\n\n  return res;\n}\n\n// Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\nfunction mapFeatureStrings(f) {\n  var type = f[0],\n      setting = f[1];\n\n  if (isNaN(type)) {\n    var typeCode = features[type] && features[type].code;\n  } else {\n    var typeCode = type;\n  }\n\n  if (isNaN(setting)) {\n    var settingCode = features[type] && features[type][setting];\n  } else {\n    var settingCode = setting;\n  }\n\n  return [typeCode, settingCode];\n}\n\n// Maps AAT features to an array of OpenType features\n// Supports both arrays in the form of [[featureType, featureSetting]]\n// and objects in the form of {featureType:{featureSetting:true}}\n// featureTypes and featureSettings can be either strings or number codes\nfunction mapAATToOT(features) {\n  var res = {};\n  if (Array.isArray(features)) {\n    for (var k = 0; k < features.length; k++) {\n      var r$$1 = void 0;\n      var f = mapFeatureStrings(features[k]);\n      if (r$$1 = AATMapping[f[0]] && AATMapping[f[0]][f[1]]) {\n        res[r$$1] = true;\n      }\n    }\n  } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n    for (var type in features) {\n      var _feature = features[type];\n      for (var setting in _feature) {\n        var _r = void 0;\n        var _f = mapFeatureStrings([type, setting]);\n        if (_feature[setting] && (_r = AATMapping[_f[0]] && AATMapping[_f[0]][_f[1]])) {\n          res[_r] = true;\n        }\n      }\n    }\n  }\n\n  return Object.keys(res);\n}\n\nvar _class$3;\n\nfunction _applyDecoratedDescriptor$3(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nvar AATLookupTable = (_class$3 = function () {\n  function AATLookupTable(table) {\n    classCallCheck(this, AATLookupTable);\n\n    this.table = table;\n  }\n\n  AATLookupTable.prototype.lookup = function lookup(glyph) {\n    switch (this.table.version) {\n      case 0:\n        // simple array format\n        return this.table.values.getItem(glyph);\n\n      case 2: // segment format\n      case 4:\n        {\n          var min = 0;\n          var max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n            var seg = this.table.segments[mid];\n\n            // special end of search value\n            if (seg.firstGlyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.firstGlyph) {\n              max = mid - 1;\n            } else if (glyph > seg.lastGlyph) {\n              min = mid + 1;\n            } else {\n              if (this.table.version === 2) {\n                return seg.value;\n              } else {\n                return seg.values[glyph - seg.firstGlyph];\n              }\n            }\n          }\n\n          return null;\n        }\n\n      case 6:\n        {\n          // lookup single\n          var _min = 0;\n          var _max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (_min <= _max) {\n            var mid = _min + _max >> 1;\n            var seg = this.table.segments[mid];\n\n            // special end of search value\n            if (seg.glyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.glyph) {\n              _max = mid - 1;\n            } else if (glyph > seg.glyph) {\n              _min = mid + 1;\n            } else {\n              return seg.value;\n            }\n          }\n\n          return null;\n        }\n\n      case 8:\n        // lookup trimmed\n        return this.table.values[glyph - this.table.firstGlyph];\n\n      default:\n        throw new Error('Unknown lookup table format: ' + this.table.version);\n    }\n  };\n\n  AATLookupTable.prototype.glyphsForValue = function glyphsForValue(classValue) {\n    var res = [];\n\n    switch (this.table.version) {\n      case 2: // segment format\n      case 4:\n        {\n          for (var _iterator = this.table.segments, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref = _i.value;\n            }\n\n            var segment = _ref;\n\n            if (this.table.version === 2 && segment.value === classValue) {\n              res.push.apply(res, range(segment.firstGlyph, segment.lastGlyph + 1));\n            } else {\n              for (var index = 0; index < segment.values.length; index++) {\n                if (segment.values[index] === classValue) {\n                  res.push(segment.firstGlyph + index);\n                }\n              }\n            }\n          }\n\n          break;\n        }\n\n      case 6:\n        {\n          // lookup single\n          for (var _iterator2 = this.table.segments, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n            var _ref2;\n\n            if (_isArray2) {\n              if (_i2 >= _iterator2.length) break;\n              _ref2 = _iterator2[_i2++];\n            } else {\n              _i2 = _iterator2.next();\n              if (_i2.done) break;\n              _ref2 = _i2.value;\n            }\n\n            var _segment = _ref2;\n\n            if (_segment.value === classValue) {\n              res.push(_segment.glyph);\n            }\n          }\n\n          break;\n        }\n\n      case 8:\n        {\n          // lookup trimmed\n          for (var i = 0; i < this.table.values.length; i++) {\n            if (this.table.values[i] === classValue) {\n              res.push(this.table.firstGlyph + i);\n            }\n          }\n\n          break;\n        }\n\n      default:\n        throw new Error('Unknown lookup table format: ' + this.table.version);\n    }\n\n    return res;\n  };\n\n  return AATLookupTable;\n}(), _applyDecoratedDescriptor$3(_class$3.prototype, 'glyphsForValue', [cache], Object.getOwnPropertyDescriptor(_class$3.prototype, 'glyphsForValue'), _class$3.prototype), _class$3);\n\nvar START_OF_TEXT_STATE = 0;\nvar END_OF_TEXT_CLASS = 0;\nvar OUT_OF_BOUNDS_CLASS = 1;\nvar DELETED_GLYPH_CLASS = 2;\nvar DONT_ADVANCE = 0x4000;\n\nvar AATStateMachine = function () {\n  function AATStateMachine(stateTable) {\n    classCallCheck(this, AATStateMachine);\n\n    this.stateTable = stateTable;\n    this.lookupTable = new AATLookupTable(stateTable.classTable);\n  }\n\n  AATStateMachine.prototype.process = function process(glyphs, reverse, processEntry) {\n    var currentState = START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n    var index = reverse ? glyphs.length - 1 : 0;\n    var dir = reverse ? -1 : 1;\n\n    while (dir === 1 && index <= glyphs.length || dir === -1 && index >= -1) {\n      var glyph = null;\n      var classCode = OUT_OF_BOUNDS_CLASS;\n      var shouldAdvance = true;\n\n      if (index === glyphs.length || index === -1) {\n        classCode = END_OF_TEXT_CLASS;\n      } else {\n        glyph = glyphs[index];\n        if (glyph.id === 0xffff) {\n          // deleted glyph\n          classCode = DELETED_GLYPH_CLASS;\n        } else {\n          classCode = this.lookupTable.lookup(glyph.id);\n          if (classCode == null) {\n            classCode = OUT_OF_BOUNDS_CLASS;\n          }\n        }\n      }\n\n      var row = this.stateTable.stateArray.getItem(currentState);\n      var entryIndex = row[classCode];\n      var entry = this.stateTable.entryTable.getItem(entryIndex);\n\n      if (classCode !== END_OF_TEXT_CLASS && classCode !== DELETED_GLYPH_CLASS) {\n        processEntry(glyph, entry, index);\n        shouldAdvance = !(entry.flags & DONT_ADVANCE);\n      }\n\n      currentState = entry.newState;\n      if (shouldAdvance) {\n        index += dir;\n      }\n    }\n\n    return glyphs;\n  };\n\n  /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */\n\n\n  AATStateMachine.prototype.traverse = function traverse(opts) {\n    var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var visited = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Set();\n\n    if (visited.has(state)) {\n      return;\n    }\n\n    visited.add(state);\n\n    var _stateTable = this.stateTable,\n        nClasses = _stateTable.nClasses,\n        stateArray = _stateTable.stateArray,\n        entryTable = _stateTable.entryTable;\n\n    var row = stateArray.getItem(state);\n\n    // Skip predefined classes\n    for (var classCode = 4; classCode < nClasses; classCode++) {\n      var entryIndex = row[classCode];\n      var entry = entryTable.getItem(entryIndex);\n\n      // Try all glyphs in the class\n      for (var _iterator = this.lookupTable.glyphsForValue(classCode), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var glyph = _ref;\n\n        if (opts.enter) {\n          opts.enter(glyph, entry);\n        }\n\n        if (entry.newState !== 0) {\n          this.traverse(opts, entry.newState, visited);\n        }\n\n        if (opts.exit) {\n          opts.exit(glyph, entry);\n        }\n      }\n    }\n  };\n\n  return AATStateMachine;\n}();\n\nvar _class$2;\n\nfunction _applyDecoratedDescriptor$2(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n// indic replacement flags\nvar MARK_FIRST = 0x8000;\nvar MARK_LAST = 0x2000;\nvar VERB = 0x000f;\n\n// contextual substitution and glyph insertion flag\nvar SET_MARK = 0x8000;\n\n// ligature entry flags\nvar SET_COMPONENT = 0x8000;\nvar PERFORM_ACTION = 0x2000;\n\n// ligature action masks\nvar LAST_MASK = 0x80000000;\nvar STORE_MASK = 0x40000000;\nvar OFFSET_MASK = 0x3fffffff;\n\nvar REVERSE_DIRECTION = 0x400000;\nvar CURRENT_INSERT_BEFORE = 0x0800;\nvar MARKED_INSERT_BEFORE = 0x0400;\nvar CURRENT_INSERT_COUNT = 0x03e0;\nvar MARKED_INSERT_COUNT = 0x001f;\n\nvar AATMorxProcessor = (_class$2 = function () {\n  function AATMorxProcessor(font) {\n    classCallCheck(this, AATMorxProcessor);\n\n    this.processIndicRearragement = this.processIndicRearragement.bind(this);\n    this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n    this.processLigature = this.processLigature.bind(this);\n    this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n    this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n    this.font = font;\n    this.morx = font.morx;\n    this.inputCache = null;\n  }\n\n  // Processes an array of glyphs and applies the specified features\n  // Features should be in the form of {featureType:{featureSetting:true}}\n\n\n  AATMorxProcessor.prototype.process = function process(glyphs) {\n    var features = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    for (var _iterator = this.morx.chains, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var chain = _ref;\n\n      var flags = chain.defaultFlags;\n\n      // enable/disable the requested features\n      for (var _iterator2 = chain.features, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var feature = _ref2;\n\n        var f = void 0;\n        if ((f = features[feature.featureType]) && f[feature.featureSetting]) {\n          flags &= feature.disableFlags;\n          flags |= feature.enableFlags;\n        }\n      }\n\n      for (var _iterator3 = chain.subtables, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var subtable = _ref3;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.processSubtable(subtable, glyphs);\n        }\n      }\n    }\n\n    // remove deleted glyphs\n    var index = glyphs.length - 1;\n    while (index >= 0) {\n      if (glyphs[index].id === 0xffff) {\n        glyphs.splice(index, 1);\n      }\n\n      index--;\n    }\n\n    return glyphs;\n  };\n\n  AATMorxProcessor.prototype.processSubtable = function processSubtable(subtable, glyphs) {\n    this.subtable = subtable;\n    this.glyphs = glyphs;\n    if (this.subtable.type === 4) {\n      this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n      return;\n    }\n\n    this.ligatureStack = [];\n    this.markedGlyph = null;\n    this.firstGlyph = null;\n    this.lastGlyph = null;\n    this.markedIndex = null;\n\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n\n    var reverse = !!(this.subtable.coverage & REVERSE_DIRECTION);\n    return stateMachine.process(this.glyphs, reverse, process);\n  };\n\n  AATMorxProcessor.prototype.getStateMachine = function getStateMachine(subtable) {\n    return new AATStateMachine(subtable.table.stateTable);\n  };\n\n  AATMorxProcessor.prototype.getProcessor = function getProcessor() {\n    switch (this.subtable.type) {\n      case 0:\n        return this.processIndicRearragement;\n      case 1:\n        return this.processContextualSubstitution;\n      case 2:\n        return this.processLigature;\n      case 4:\n        return this.processNoncontextualSubstitutions;\n      case 5:\n        return this.processGlyphInsertion;\n      default:\n        throw new Error('Invalid morx subtable type: ' + this.subtable.type);\n    }\n  };\n\n  AATMorxProcessor.prototype.processIndicRearragement = function processIndicRearragement(glyph, entry, index) {\n    if (entry.flags & MARK_FIRST) {\n      this.firstGlyph = index;\n    }\n\n    if (entry.flags & MARK_LAST) {\n      this.lastGlyph = index;\n    }\n\n    reorderGlyphs(this.glyphs, entry.flags & VERB, this.firstGlyph, this.lastGlyph);\n  };\n\n  AATMorxProcessor.prototype.processContextualSubstitution = function processContextualSubstitution(glyph, entry, index) {\n    var subsitutions = this.subtable.table.substitutionTable.items;\n    if (entry.markIndex !== 0xffff) {\n      var lookup = subsitutions.getItem(entry.markIndex);\n      var lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[this.markedGlyph];\n      var gid = lookupTable.lookup(glyph.id);\n      if (gid) {\n        this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.currentIndex !== 0xffff) {\n      var _lookup = subsitutions.getItem(entry.currentIndex);\n      var _lookupTable = new AATLookupTable(_lookup);\n      glyph = this.glyphs[index];\n      var gid = _lookupTable.lookup(glyph.id);\n      if (gid) {\n        this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.flags & SET_MARK) {\n      this.markedGlyph = index;\n    }\n  };\n\n  AATMorxProcessor.prototype.processLigature = function processLigature(glyph, entry, index) {\n    if (entry.flags & SET_COMPONENT) {\n      this.ligatureStack.push(index);\n    }\n\n    if (entry.flags & PERFORM_ACTION) {\n      var _ligatureStack;\n\n      var actions = this.subtable.table.ligatureActions;\n      var components = this.subtable.table.components;\n      var ligatureList = this.subtable.table.ligatureList;\n\n      var actionIndex = entry.action;\n      var last = false;\n      var ligatureIndex = 0;\n      var codePoints = [];\n      var ligatureGlyphs = [];\n\n      while (!last) {\n        var _codePoints;\n\n        var componentGlyph = this.ligatureStack.pop();\n        (_codePoints = codePoints).unshift.apply(_codePoints, this.glyphs[componentGlyph].codePoints);\n\n        var action = actions.getItem(actionIndex++);\n        last = !!(action & LAST_MASK);\n        var store = !!(action & STORE_MASK);\n        var offset = (action & OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n        offset += this.glyphs[componentGlyph].id;\n\n        var component = components.getItem(offset);\n        ligatureIndex += component;\n\n        if (last || store) {\n          var ligatureEntry = ligatureList.getItem(ligatureIndex);\n          this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n          ligatureGlyphs.push(componentGlyph);\n          ligatureIndex = 0;\n          codePoints = [];\n        } else {\n          this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n        }\n      }\n\n      // Put ligature glyph indexes back on the stack\n      (_ligatureStack = this.ligatureStack).push.apply(_ligatureStack, ligatureGlyphs);\n    }\n  };\n\n  AATMorxProcessor.prototype.processNoncontextualSubstitutions = function processNoncontextualSubstitutions(subtable, glyphs, index) {\n    var lookupTable = new AATLookupTable(subtable.table.lookupTable);\n\n    for (index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n      if (glyph.id !== 0xffff) {\n        var gid = lookupTable.lookup(glyph.id);\n        if (gid) {\n          // 0 means do nothing\n          glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n      }\n    }\n  };\n\n  AATMorxProcessor.prototype._insertGlyphs = function _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n    var _glyphs;\n\n    var stringIndex = this.glyphs[glyphIndex].stringIndex;\n    var insertions = [];\n    while (count--) {\n      var gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n      insertions.push(this.font.getGlyph(gid));\n    }\n\n    if (!isBefore) {\n      glyphIndex++;\n    }\n\n    (_glyphs = this.glyphs).splice.apply(_glyphs, [glyphIndex, 0].concat(insertions));\n  };\n\n  AATMorxProcessor.prototype.processGlyphInsertion = function processGlyphInsertion(glyph, entry, index) {\n    if (entry.flags & SET_MARK) {\n      this.markedIndex = index;\n    }\n\n    if (entry.markedInsertIndex !== 0xffff) {\n      var count = (entry.flags & MARKED_INSERT_COUNT) >>> 5;\n      var isBefore = !!(entry.flags & MARKED_INSERT_BEFORE);\n      this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n    }\n\n    if (entry.currentInsertIndex !== 0xffff) {\n      var _count = (entry.flags & CURRENT_INSERT_COUNT) >>> 5;\n      var _isBefore = !!(entry.flags & CURRENT_INSERT_BEFORE);\n      this._insertGlyphs(index, entry.currentInsertIndex, _count, _isBefore);\n    }\n  };\n\n  AATMorxProcessor.prototype.getSupportedFeatures = function getSupportedFeatures() {\n    var features = [];\n    for (var _iterator4 = this.morx.chains, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var chain = _ref4;\n\n      for (var _iterator5 = chain.features, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n        var _ref5;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref5 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref5 = _i5.value;\n        }\n\n        var feature = _ref5;\n\n        features.push([feature.featureType, feature.featureSetting]);\n      }\n    }\n\n    return features;\n  };\n\n  AATMorxProcessor.prototype.generateInputs = function generateInputs(gid) {\n    if (!this.inputCache) {\n      this.generateInputCache();\n    }\n\n    return this.inputCache[gid] || [];\n  };\n\n  AATMorxProcessor.prototype.generateInputCache = function generateInputCache() {\n    this.inputCache = {};\n\n    for (var _iterator6 = this.morx.chains, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n      var _ref6;\n\n      if (_isArray6) {\n        if (_i6 >= _iterator6.length) break;\n        _ref6 = _iterator6[_i6++];\n      } else {\n        _i6 = _iterator6.next();\n        if (_i6.done) break;\n        _ref6 = _i6.value;\n      }\n\n      var chain = _ref6;\n\n      var flags = chain.defaultFlags;\n\n      for (var _iterator7 = chain.subtables, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();;) {\n        var _ref7;\n\n        if (_isArray7) {\n          if (_i7 >= _iterator7.length) break;\n          _ref7 = _iterator7[_i7++];\n        } else {\n          _i7 = _iterator7.next();\n          if (_i7.done) break;\n          _ref7 = _i7.value;\n        }\n\n        var subtable = _ref7;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.generateInputsForSubtable(subtable);\n        }\n      }\n    }\n  };\n\n  AATMorxProcessor.prototype.generateInputsForSubtable = function generateInputsForSubtable(subtable) {\n    var _this = this;\n\n    // Currently, only supporting ligature subtables.\n    if (subtable.type !== 2) {\n      return;\n    }\n\n    var reverse = !!(subtable.coverage & REVERSE_DIRECTION);\n    if (reverse) {\n      throw new Error('Reverse subtable, not supported.');\n    }\n\n    this.subtable = subtable;\n    this.ligatureStack = [];\n\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n\n    var input = [];\n    var stack = [];\n    this.glyphs = [];\n\n    stateMachine.traverse({\n      enter: function enter(glyph, entry) {\n        var glyphs = _this.glyphs;\n        stack.push({\n          glyphs: glyphs.slice(),\n          ligatureStack: _this.ligatureStack.slice()\n        });\n\n        // Add glyph to input and glyphs to process.\n        var g = _this.font.getGlyph(glyph);\n        input.push(g);\n        glyphs.push(input[input.length - 1]);\n\n        // Process ligature substitution\n        process(glyphs[glyphs.length - 1], entry, glyphs.length - 1);\n\n        // Add input to result if only one matching (non-deleted) glyph remains.\n        var count = 0;\n        var found = 0;\n        for (var i = 0; i < glyphs.length && count <= 1; i++) {\n          if (glyphs[i].id !== 0xffff) {\n            count++;\n            found = glyphs[i].id;\n          }\n        }\n\n        if (count === 1) {\n          var result = input.map(function (g) {\n            return g.id;\n          });\n          var _cache = _this.inputCache[found];\n          if (_cache) {\n            _cache.push(result);\n          } else {\n            _this.inputCache[found] = [result];\n          }\n        }\n      },\n\n      exit: function exit() {\n        \n        var _stack$pop = stack.pop();\n\n        _this.glyphs = _stack$pop.glyphs;\n        _this.ligatureStack = _stack$pop.ligatureStack;\n\n        input.pop();\n      }\n    });\n  };\n\n  return AATMorxProcessor;\n}(), _applyDecoratedDescriptor$2(_class$2.prototype, 'getStateMachine', [cache], Object.getOwnPropertyDescriptor(_class$2.prototype, 'getStateMachine'), _class$2.prototype), _class$2);\n\nfunction swap(glyphs, rangeA, rangeB) {\n  var reverseA = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var reverseB = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  var end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n  if (reverseB) {\n    end.reverse();\n  }\n\n  var start = glyphs.splice.apply(glyphs, [rangeA[0], rangeA[1]].concat(end));\n  if (reverseA) {\n    start.reverse();\n  }\n\n  glyphs.splice.apply(glyphs, [rangeB[0] - (rangeA[1] - 1), 0].concat(start));\n  return glyphs;\n}\n\nfunction reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n  switch (verb) {\n    case 0:\n      // no change\n      return glyphs;\n\n    case 1:\n      // Ax => xA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 0]);\n\n    case 2:\n      // xD => Dx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 1]);\n\n    case 3:\n      // AxD => DxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 1]);\n\n    case 4:\n      // ABx => xAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0]);\n\n    case 5:\n      // ABx => xBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0], true, false);\n\n    case 6:\n      // xCD => CDx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2]);\n\n    case 7:\n      // xCD => DCx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2], false, true);\n\n    case 8:\n      // AxCD => CDxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2]);\n\n    case 9:\n      // AxCD => DCxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2], false, true);\n\n    case 10:\n      // ABxD => DxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1]);\n\n    case 11:\n      // ABxD => DxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1], true, false);\n\n    case 12:\n      // ABxCD => CDxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2]);\n\n    case 13:\n      // ABxCD => CDxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, false);\n\n    case 14:\n      // ABxCD => DCxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], false, true);\n\n    case 15:\n      // ABxCD => DCxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, true);\n\n    default:\n      throw new Error('Unknown verb: ' + verb);\n  }\n}\n\nvar AATLayoutEngine = function () {\n  function AATLayoutEngine(font) {\n    classCallCheck(this, AATLayoutEngine);\n\n    this.font = font;\n    this.morxProcessor = new AATMorxProcessor(font);\n    this.fallbackPosition = false;\n  }\n\n  AATLayoutEngine.prototype.substitute = function substitute(glyphRun) {\n    // AAT expects the glyphs to be in visual order prior to morx processing,\n    // so reverse the glyphs if the script is right-to-left.\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n    }\n\n    this.morxProcessor.process(glyphRun.glyphs, mapOTToAAT(glyphRun.features));\n  };\n\n  AATLayoutEngine.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return mapAATToOT(this.morxProcessor.getSupportedFeatures());\n  };\n\n  AATLayoutEngine.prototype.stringsForGlyph = function stringsForGlyph(gid) {\n    var glyphStrings = this.morxProcessor.generateInputs(gid);\n    var result = new Set();\n\n    for (var _iterator = glyphStrings, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var glyphs = _ref;\n\n      this._addStrings(glyphs, 0, result, '');\n    }\n\n    return result;\n  };\n\n  AATLayoutEngine.prototype._addStrings = function _addStrings(glyphs, index, strings, string) {\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n\n    for (var _iterator2 = codePoints, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var codePoint = _ref2;\n\n      var s = string + String.fromCodePoint(codePoint);\n      if (index < glyphs.length - 1) {\n        this._addStrings(glyphs, index + 1, strings, s);\n      } else {\n        strings.add(s);\n      }\n    }\n  };\n\n  return AATLayoutEngine;\n}();\n\n/**\n * ShapingPlans are used by the OpenType shapers to store which\n * features should by applied, and in what order to apply them.\n * The features are applied in groups called stages. A feature\n * can be applied globally to all glyphs, or locally to only\n * specific glyphs.\n *\n * @private\n */\n\nvar ShapingPlan = function () {\n  function ShapingPlan(font, script, direction$$1) {\n    classCallCheck(this, ShapingPlan);\n\n    this.font = font;\n    this.script = script;\n    this.direction = direction$$1;\n    this.stages = [];\n    this.globalFeatures = {};\n    this.allFeatures = {};\n  }\n\n  /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */\n\n\n  ShapingPlan.prototype._addFeatures = function _addFeatures(features, global) {\n    var stageIndex = this.stages.length - 1;\n    var stage = this.stages[stageIndex];\n    for (var _iterator = features, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var feature = _ref;\n\n      if (this.allFeatures[feature] == null) {\n        stage.push(feature);\n        this.allFeatures[feature] = stageIndex;\n\n        if (global) {\n          this.globalFeatures[feature] = true;\n        }\n      }\n    }\n  };\n\n  /**\n   * Add features to the last stage\n   */\n\n\n  ShapingPlan.prototype.add = function add(arg) {\n    var global = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (this.stages.length === 0) {\n      this.stages.push([]);\n    }\n\n    if (typeof arg === 'string') {\n      arg = [arg];\n    }\n\n    if (Array.isArray(arg)) {\n      this._addFeatures(arg, global);\n    } else if ((typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object') {\n      this._addFeatures(arg.global || [], true);\n      this._addFeatures(arg.local || [], false);\n    } else {\n      throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n  };\n\n  /**\n   * Add a new stage\n   */\n\n\n  ShapingPlan.prototype.addStage = function addStage(arg, global) {\n    if (typeof arg === 'function') {\n      this.stages.push(arg, []);\n    } else {\n      this.stages.push([]);\n      this.add(arg, global);\n    }\n  };\n\n  ShapingPlan.prototype.setFeatureOverrides = function setFeatureOverrides(features) {\n    if (Array.isArray(features)) {\n      this.add(features);\n    } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n      for (var tag in features) {\n        if (features[tag]) {\n          this.add(tag);\n        } else if (this.allFeatures[tag] != null) {\n          var stage = this.stages[this.allFeatures[tag]];\n          stage.splice(stage.indexOf(tag), 1);\n          delete this.allFeatures[tag];\n          delete this.globalFeatures[tag];\n        }\n      }\n    }\n  };\n\n  /**\n   * Assigns the global features to the given glyphs\n   */\n\n\n  ShapingPlan.prototype.assignGlobalFeatures = function assignGlobalFeatures(glyphs) {\n    for (var _iterator2 = glyphs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var glyph = _ref2;\n\n      for (var feature in this.globalFeatures) {\n        glyph.features[feature] = true;\n      }\n    }\n  };\n\n  /**\n   * Executes the planned stages using the given OTProcessor\n   */\n\n\n  ShapingPlan.prototype.process = function process(processor, glyphs, positions) {\n    for (var _iterator3 = this.stages, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var stage = _ref3;\n\n      if (typeof stage === 'function') {\n        if (!positions) {\n          stage(this.font, glyphs, this);\n        }\n      } else if (stage.length > 0) {\n        processor.applyFeatures(stage, glyphs, positions);\n      }\n    }\n  };\n\n  return ShapingPlan;\n}();\n\nvar _class$4;\nvar _temp;\n\nvar VARIATION_FEATURES = ['rvrn'];\nvar COMMON_FEATURES = ['ccmp', 'locl', 'rlig', 'mark', 'mkmk'];\nvar FRACTIONAL_FEATURES = ['frac', 'numr', 'dnom'];\nvar HORIZONTAL_FEATURES = ['calt', 'clig', 'liga', 'rclt', 'curs', 'kern'];\nvar DIRECTIONAL_FEATURES = {\n  ltr: ['ltra', 'ltrm'],\n  rtl: ['rtla', 'rtlm']\n};\n\nvar DefaultShaper = (_temp = _class$4 = function () {\n  function DefaultShaper() {\n    classCallCheck(this, DefaultShaper);\n  }\n\n  DefaultShaper.plan = function plan(_plan, glyphs, features) {\n    // Plan the features we want to apply\n    this.planPreprocessing(_plan);\n    this.planFeatures(_plan);\n    this.planPostprocessing(_plan, features);\n\n    // Assign the global features to all the glyphs\n    _plan.assignGlobalFeatures(glyphs);\n\n    // Assign local features to glyphs\n    this.assignFeatures(_plan, glyphs);\n  };\n\n  DefaultShaper.planPreprocessing = function planPreprocessing(plan) {\n    plan.add({\n      global: [].concat(VARIATION_FEATURES, DIRECTIONAL_FEATURES[plan.direction]),\n      local: FRACTIONAL_FEATURES\n    });\n  };\n\n  DefaultShaper.planFeatures = function planFeatures(plan) {\n    // Do nothing by default. Let subclasses override this.\n  };\n\n  DefaultShaper.planPostprocessing = function planPostprocessing(plan, userFeatures) {\n    plan.add([].concat(COMMON_FEATURES, HORIZONTAL_FEATURES));\n    plan.setFeatureOverrides(userFeatures);\n  };\n\n  DefaultShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    // Enable contextual fractions\n    for (var i = 0; i < glyphs.length; i++) {\n      var glyph = glyphs[i];\n      if (glyph.codePoints[0] === 0x2044) {\n        // fraction slash\n        var start = i;\n        var end = i + 1;\n\n        // Apply numerator\n        while (start > 0 && _react_pdf_unicode_properties__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isDigit(glyphs[start - 1].codePoints[0])) {\n          glyphs[start - 1].features.numr = true;\n          glyphs[start - 1].features.frac = true;\n          start--;\n        }\n\n        // Apply denominator\n        while (end < glyphs.length && _react_pdf_unicode_properties__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isDigit(glyphs[end].codePoints[0])) {\n          glyphs[end].features.dnom = true;\n          glyphs[end].features.frac = true;\n          end++;\n        }\n\n        // Apply fraction slash\n        glyph.features.frac = true;\n        i = end - 1;\n      }\n    }\n  };\n\n  return DefaultShaper;\n}(), _class$4.zeroMarkWidths = 'AFTER_GPOS', _temp);\n\nvar type = \"Buffer\";\nvar data = [0, 1, 16, 0, 0, 0, 0, 0, 0, 0, 49, 160, 1, 149, 1, 106, 254, 237, 216, 43, 79, 3, 65, 20, 5, 224, 217, 7, 77, 41, 138, 127, 64, 37, 146, 4, 131, 37, 4, 143, 68, 33, 193, 224, 192, 129, 3, 137, 196, 32, 81, 4, 73, 80, 72, 28, 18, 137, 194, 224, 144, 224, 48, 156, 210, 153, 228, 102, 152, 217, 206, 238, 206, 62, 40, 231, 38, 95, 102, 186, 219, 121, 246, 238, 35, 29, 167, 74, 173, 194, 26, 108, 192, 88, 127, 254, 43, 229, 14, 236, 194, 30, 236, 195, 33, 28, 195, 41, 156, 195, 5, 92, 194, 21, 92, 139, 118, 183, 112, 167, 63, 79, 60, 136, 250, 163, 168, 211, 124, 123, 130, 35, 237, 25, 94, 224, 181, 7, 243, 106, 203, 155, 168, 191, 247, 96, 62, 68, 68, 68, 68, 68, 68, 68, 68, 77, 153, 252, 255, 243, 209, 131, 121, 16, 17, 17, 17, 17, 205, 179, 124, 113, 234, 108, 216, 140, 45, 244, 125, 2, 247, 240, 9, 235, 35, 165, 14, 70, 211, 115, 55, 40, 183, 149, 82, 155, 195, 230, 214, 247, 5, 89, 246, 251, 248, 18, 142, 45, 59, 142, 119, 101, 37, 77, 126, 48, 24, 255, 57, 18, 15, 121, 222, 85, 143, 21, 185, 238, 55, 179, 228, 142, 210, 230, 106, 83, 150, 108, 215, 167, 144, 115, 146, 107, 180, 247, 42, 100, 125, 49, 84, 217, 219, 54, 100, 86, 61, 100, 29, 174, 188, 50, 231, 149, 40, 125, 17, 227, 58, 144, 227, 133, 132, 92, 179, 60, 86, 55, 22, 28, 253, 15, 180, 162, 223, 63, 52, 39, 50, 209, 167, 221, 110, 16, 97, 254, 170, 196, 92, 92, 121, 82, 55, 247, 138, 246, 198, 117, 126, 214, 184, 161, 209, 245, 117, 87, 55, 247, 124, 237, 103, 221, 235, 203, 228, 158, 252, 174, 235, 217, 230, 155, 87, 217, 28, 50, 247, 100, 223, 111, 92, 37, 18, 171, 173, 221, 79, 172, 103, 113, 215, 57, 226, 123, 255, 48, 235, 111, 43, 143, 235, 230, 115, 209, 250, 154, 232, 219, 247, 190, 22, 59, 98, 237, 113, 90, 113, 158, 190, 107, 47, 177, 74, 83, 79, 244, 88, 33, 239, 48, 105, 65, 255, 174, 241, 204, 88, 161, 115, 45, 243, 124, 47, 234, 211, 126, 158, 184, 230, 103, 215, 237, 251, 101, 157, 240, 237, 99, 19, 121, 247, 13];\nvar trieData = {\n\ttype: type,\n\tdata: data\n};\n\nvar trie = new unicode_trie__WEBPACK_IMPORTED_MODULE_4___default.a(new Uint8Array(trieData.data));\nvar FEATURES = ['isol', 'fina', 'fin2', 'fin3', 'medi', 'med2', 'init'];\n\nvar ShapingClasses = {\n  Non_Joining: 0,\n  Left_Joining: 1,\n  Right_Joining: 2,\n  Dual_Joining: 3,\n  Join_Causing: 3,\n  ALAPH: 4,\n  'DALATH RISH': 5,\n  Transparent: 6\n};\n\nvar ISOL = 'isol';\nvar FINA = 'fina';\nvar FIN2 = 'fin2';\nvar FIN3 = 'fin3';\nvar MEDI = 'medi';\nvar MED2 = 'med2';\nvar INIT = 'init';\nvar NONE = null;\n\n// Each entry is [prevAction, curAction, nextState]\nvar STATE_TABLE = [\n//   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n// State 0: prev was U,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 6]],\n\n// State 1: prev was R or ISOL/ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN2, 5], [NONE, ISOL, 6]],\n\n// State 2: prev was D/L in ISOL form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [INIT, FINA, 1], [INIT, FINA, 3], [INIT, FINA, 4], [INIT, FINA, 6]],\n\n// State 3: prev was D in FINA form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MEDI, FINA, 1], [MEDI, FINA, 3], [MEDI, FINA, 4], [MEDI, FINA, 6]],\n\n// State 4: prev was FINA ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MED2, ISOL, 1], [MED2, ISOL, 2], [MED2, FIN2, 5], [MED2, ISOL, 6]],\n\n// State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [ISOL, ISOL, 1], [ISOL, ISOL, 2], [ISOL, FIN2, 5], [ISOL, ISOL, 6]],\n\n// State 6: prev was DALATH/RISH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN3, 5], [NONE, ISOL, 6]]];\n\n/**\n * This is a shaper for Arabic, and other cursive scripts.\n * It uses data from ArabicShaping.txt in the Unicode database,\n * compiled to a UnicodeTrie by generate-data.coffee.\n *\n * The shaping state machine was ported from Harfbuzz.\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-arabic.cc\n */\n\nvar ArabicShaper = function (_DefaultShaper) {\n  inherits(ArabicShaper, _DefaultShaper);\n\n  function ArabicShaper() {\n    classCallCheck(this, ArabicShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  ArabicShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ccmp', 'locl']);\n    for (var i = 0; i < FEATURES.length; i++) {\n      var feature = FEATURES[i];\n      plan.addStage(feature, false);\n    }\n\n    plan.addStage('mset');\n  };\n\n  ArabicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    _DefaultShaper.assignFeatures.call(this, plan, glyphs);\n\n    var prev = -1;\n    var state = 0;\n    var actions = [];\n\n    // Apply the state machine to map glyphs to features\n    for (var i = 0; i < glyphs.length; i++) {\n      var curAction = void 0,\n          prevAction = void 0;\n      var glyph = glyphs[i];\n      var type$$1 = getShapingClass(glyph.codePoints[0]);\n      if (type$$1 === ShapingClasses.Transparent) {\n        actions[i] = NONE;\n        continue;\n      }\n\n      var _STATE_TABLE$state$ty = STATE_TABLE[state][type$$1];\n      prevAction = _STATE_TABLE$state$ty[0];\n      curAction = _STATE_TABLE$state$ty[1];\n      state = _STATE_TABLE$state$ty[2];\n\n\n      if (prevAction !== NONE && prev !== -1) {\n        actions[prev] = prevAction;\n      }\n\n      actions[i] = curAction;\n      prev = i;\n    }\n\n    // Apply the chosen features to their respective glyphs\n    for (var index = 0; index < glyphs.length; index++) {\n      var feature = void 0;\n      var glyph = glyphs[index];\n      if (feature = actions[index]) {\n        glyph.features[feature] = true;\n      }\n    }\n  };\n\n  return ArabicShaper;\n}(DefaultShaper);\n\nfunction getShapingClass(codePoint) {\n  var res = trie.get(codePoint);\n  if (res) {\n    return res - 1;\n  }\n\n  var category = _react_pdf_unicode_properties__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getCategory(codePoint);\n  if (category === 'Mn' || category === 'Me' || category === 'Cf') {\n    return ShapingClasses.Transparent;\n  }\n\n  return ShapingClasses.Non_Joining;\n}\n\nvar GlyphIterator = function () {\n  function GlyphIterator(glyphs, options) {\n    classCallCheck(this, GlyphIterator);\n\n    this.glyphs = glyphs;\n    this.reset(options);\n  }\n\n  GlyphIterator.prototype.reset = function reset() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    this.options = options;\n    this.flags = options.flags || {};\n    this.markAttachmentType = options.markAttachmentType || 0;\n    this.index = index;\n  };\n\n  GlyphIterator.prototype.shouldIgnore = function shouldIgnore(glyph) {\n    return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;\n  };\n\n  GlyphIterator.prototype.move = function move(dir) {\n    this.index += dir;\n    while (0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index])) {\n      this.index += dir;\n    }\n\n    if (0 > this.index || this.index >= this.glyphs.length) {\n      return null;\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  GlyphIterator.prototype.next = function next() {\n    return this.move(+1);\n  };\n\n  GlyphIterator.prototype.prev = function prev() {\n    return this.move(-1);\n  };\n\n  GlyphIterator.prototype.peek = function peek() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    var idx = this.index;\n    var res = this.increment(count);\n    this.index = idx;\n    return res;\n  };\n\n  GlyphIterator.prototype.peekIndex = function peekIndex() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    var idx = this.index;\n    this.increment(count);\n    var res = this.index;\n    this.index = idx;\n    return res;\n  };\n\n  GlyphIterator.prototype.increment = function increment() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    var dir = count < 0 ? -1 : 1;\n    count = Math.abs(count);\n    while (count--) {\n      this.move(dir);\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  createClass(GlyphIterator, [{\n    key: \"cur\",\n    get: function get$$1() {\n      return this.glyphs[this.index] || null;\n    }\n  }]);\n  return GlyphIterator;\n}();\n\nvar DEFAULT_SCRIPTS = ['DFLT', 'dflt', 'latn'];\n\nvar OTProcessor = function () {\n  function OTProcessor(font, table) {\n    classCallCheck(this, OTProcessor);\n\n    this.font = font;\n    this.table = table;\n\n    this.script = null;\n    this.scriptTag = null;\n\n    this.language = null;\n    this.languageTag = null;\n\n    this.features = {};\n    this.lookups = {};\n\n    // Setup variation substitutions\n    this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1;\n\n    // initialize to default script + language\n    this.selectScript();\n\n    // current context (set by applyFeatures)\n    this.glyphs = [];\n    this.positions = []; // only used by GPOS\n    this.ligatureID = 1;\n    this.currentFeature = null;\n  }\n\n  OTProcessor.prototype.findScript = function findScript(script) {\n    if (this.table.scriptList == null) {\n      return null;\n    }\n\n    if (!Array.isArray(script)) {\n      script = [script];\n    }\n\n    for (var _iterator = script, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var s = _ref;\n\n      for (var _iterator2 = this.table.scriptList, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var entry = _ref2;\n\n        if (entry.tag === s) {\n          return entry;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  OTProcessor.prototype.selectScript = function selectScript(script, language, direction$$1) {\n    var changed = false;\n    var entry = void 0;\n    if (!this.script || script !== this.scriptTag) {\n      entry = this.findScript(script);\n      if (!entry) {\n        entry = this.findScript(DEFAULT_SCRIPTS);\n      }\n\n      if (!entry) {\n        return this.scriptTag;\n      }\n\n      this.scriptTag = entry.tag;\n      this.script = entry.script;\n      this.language = null;\n      this.languageTag = null;\n      changed = true;\n    }\n\n    if (!direction$$1 || direction$$1 !== this.direction) {\n      this.direction = direction$$1 || direction(script);\n    }\n\n    if (language && language.length < 4) {\n      language += ' '.repeat(4 - language.length);\n    }\n\n    if (!language || language !== this.languageTag) {\n      this.language = null;\n\n      for (var _iterator3 = this.script.langSysRecords, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var lang = _ref3;\n\n        if (lang.tag === language) {\n          this.language = lang.langSys;\n          this.languageTag = lang.tag;\n          break;\n        }\n      }\n\n      if (!this.language) {\n        this.language = this.script.defaultLangSys;\n        this.languageTag = null;\n      }\n\n      changed = true;\n    }\n\n    // Build a feature lookup table\n    if (changed) {\n      this.features = {};\n      if (this.language) {\n        for (var _iterator4 = this.language.featureIndexes, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n          var _ref4;\n\n          if (_isArray4) {\n            if (_i4 >= _iterator4.length) break;\n            _ref4 = _iterator4[_i4++];\n          } else {\n            _i4 = _iterator4.next();\n            if (_i4.done) break;\n            _ref4 = _i4.value;\n          }\n\n          var featureIndex = _ref4;\n\n          var record = this.table.featureList[featureIndex];\n          var substituteFeature = this.substituteFeatureForVariations(featureIndex);\n          this.features[record.tag] = substituteFeature || record.feature;\n        }\n      }\n    }\n\n    return this.scriptTag;\n  };\n\n  OTProcessor.prototype.lookupsForFeatures = function lookupsForFeatures() {\n    var userFeatures = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var exclude = arguments[1];\n\n    var lookups = [];\n    for (var _iterator5 = userFeatures, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray5) {\n        if (_i5 >= _iterator5.length) break;\n        _ref5 = _iterator5[_i5++];\n      } else {\n        _i5 = _iterator5.next();\n        if (_i5.done) break;\n        _ref5 = _i5.value;\n      }\n\n      var tag = _ref5;\n\n      var feature = this.features[tag];\n      if (!feature) {\n        continue;\n      }\n\n      for (var _iterator6 = feature.lookupListIndexes, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n        var _ref6;\n\n        if (_isArray6) {\n          if (_i6 >= _iterator6.length) break;\n          _ref6 = _iterator6[_i6++];\n        } else {\n          _i6 = _iterator6.next();\n          if (_i6.done) break;\n          _ref6 = _i6.value;\n        }\n\n        var lookupIndex = _ref6;\n\n        if (exclude && exclude.indexOf(lookupIndex) !== -1) {\n          continue;\n        }\n\n        lookups.push({\n          feature: tag,\n          index: lookupIndex,\n          lookup: this.table.lookupList.get(lookupIndex)\n        });\n      }\n    }\n\n    lookups.sort(function (a, b) {\n      return a.index - b.index;\n    });\n    return lookups;\n  };\n\n  OTProcessor.prototype.substituteFeatureForVariations = function substituteFeatureForVariations(featureIndex) {\n    if (this.variationsIndex === -1) {\n      return null;\n    }\n\n    var record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n    var substitutions = record.featureTableSubstitution.substitutions;\n    for (var _iterator7 = substitutions, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();;) {\n      var _ref7;\n\n      if (_isArray7) {\n        if (_i7 >= _iterator7.length) break;\n        _ref7 = _iterator7[_i7++];\n      } else {\n        _i7 = _iterator7.next();\n        if (_i7.done) break;\n        _ref7 = _i7.value;\n      }\n\n      var substitution = _ref7;\n\n      if (substitution.featureIndex === featureIndex) {\n        return substitution.alternateFeatureTable;\n      }\n    }\n\n    return null;\n  };\n\n  OTProcessor.prototype.findVariationsIndex = function findVariationsIndex(coords) {\n    var variations = this.table.featureVariations;\n    if (!variations) {\n      return -1;\n    }\n\n    var records = variations.featureVariationRecords;\n    for (var i = 0; i < records.length; i++) {\n      var conditions = records[i].conditionSet.conditionTable;\n      if (this.variationConditionsMatch(conditions, coords)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  OTProcessor.prototype.variationConditionsMatch = function variationConditionsMatch(conditions, coords) {\n    return conditions.every(function (condition) {\n      var coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n      return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n    });\n  };\n\n  OTProcessor.prototype.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    var lookups = this.lookupsForFeatures(userFeatures);\n    this.applyLookups(lookups, glyphs, advances);\n  };\n\n  OTProcessor.prototype.applyLookups = function applyLookups(lookups, glyphs, positions) {\n    this.glyphs = glyphs;\n    this.positions = positions;\n    this.glyphIterator = new GlyphIterator(glyphs);\n\n    for (var _iterator8 = lookups, _isArray8 = Array.isArray(_iterator8), _i8 = 0, _iterator8 = _isArray8 ? _iterator8 : _iterator8[Symbol.iterator]();;) {\n      var _ref8;\n\n      if (_isArray8) {\n        if (_i8 >= _iterator8.length) break;\n        _ref8 = _iterator8[_i8++];\n      } else {\n        _i8 = _iterator8.next();\n        if (_i8.done) break;\n        _ref8 = _i8.value;\n      }\n\n      var _ref9 = _ref8,\n          feature = _ref9.feature,\n          lookup = _ref9.lookup;\n\n      this.currentFeature = feature;\n      this.glyphIterator.reset(lookup.flags);\n\n      while (this.glyphIterator.index < glyphs.length) {\n        if (!(feature in this.glyphIterator.cur.features)) {\n          this.glyphIterator.next();\n          continue;\n        }\n\n        for (var _iterator9 = lookup.subTables, _isArray9 = Array.isArray(_iterator9), _i9 = 0, _iterator9 = _isArray9 ? _iterator9 : _iterator9[Symbol.iterator]();;) {\n          var _ref10;\n\n          if (_isArray9) {\n            if (_i9 >= _iterator9.length) break;\n            _ref10 = _iterator9[_i9++];\n          } else {\n            _i9 = _iterator9.next();\n            if (_i9.done) break;\n            _ref10 = _i9.value;\n          }\n\n          var table = _ref10;\n\n          var res = this.applyLookup(lookup.lookupType, table);\n          if (res) {\n            break;\n          }\n        }\n\n        this.glyphIterator.next();\n      }\n    }\n  };\n\n  OTProcessor.prototype.applyLookup = function applyLookup(lookup, table) {\n    throw new Error(\"applyLookup must be implemented by subclasses\");\n  };\n\n  OTProcessor.prototype.applyLookupList = function applyLookupList(lookupRecords) {\n    var options = this.glyphIterator.options;\n    var glyphIndex = this.glyphIterator.index;\n\n    for (var _iterator10 = lookupRecords, _isArray10 = Array.isArray(_iterator10), _i10 = 0, _iterator10 = _isArray10 ? _iterator10 : _iterator10[Symbol.iterator]();;) {\n      var _ref11;\n\n      if (_isArray10) {\n        if (_i10 >= _iterator10.length) break;\n        _ref11 = _iterator10[_i10++];\n      } else {\n        _i10 = _iterator10.next();\n        if (_i10.done) break;\n        _ref11 = _i10.value;\n      }\n\n      var lookupRecord = _ref11;\n\n      // Reset flags and find glyph index for this lookup record\n      this.glyphIterator.reset(options, glyphIndex);\n      this.glyphIterator.increment(lookupRecord.sequenceIndex);\n\n      // Get the lookup and setup flags for subtables\n      var lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n      this.glyphIterator.reset(lookup.flags, this.glyphIterator.index);\n\n      // Apply lookup subtables until one matches\n      for (var _iterator11 = lookup.subTables, _isArray11 = Array.isArray(_iterator11), _i11 = 0, _iterator11 = _isArray11 ? _iterator11 : _iterator11[Symbol.iterator]();;) {\n        var _ref12;\n\n        if (_isArray11) {\n          if (_i11 >= _iterator11.length) break;\n          _ref12 = _iterator11[_i11++];\n        } else {\n          _i11 = _iterator11.next();\n          if (_i11.done) break;\n          _ref12 = _i11.value;\n        }\n\n        var table = _ref12;\n\n        if (this.applyLookup(lookup.lookupType, table)) {\n          break;\n        }\n      }\n    }\n\n    this.glyphIterator.reset(options, glyphIndex);\n    return true;\n  };\n\n  OTProcessor.prototype.coverageIndex = function coverageIndex(coverage, glyph) {\n    if (glyph == null) {\n      glyph = this.glyphIterator.cur.id;\n    }\n\n    switch (coverage.version) {\n      case 1:\n        return coverage.glyphs.indexOf(glyph);\n\n      case 2:\n        for (var _iterator12 = coverage.rangeRecords, _isArray12 = Array.isArray(_iterator12), _i12 = 0, _iterator12 = _isArray12 ? _iterator12 : _iterator12[Symbol.iterator]();;) {\n          var _ref13;\n\n          if (_isArray12) {\n            if (_i12 >= _iterator12.length) break;\n            _ref13 = _iterator12[_i12++];\n          } else {\n            _i12 = _iterator12.next();\n            if (_i12.done) break;\n            _ref13 = _i12.value;\n          }\n\n          var range = _ref13;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.startCoverageIndex + glyph - range.start;\n          }\n        }\n\n        break;\n    }\n\n    return -1;\n  };\n\n  OTProcessor.prototype.match = function match(sequenceIndex, sequence, fn, matched) {\n    var pos = this.glyphIterator.index;\n    var glyph = this.glyphIterator.increment(sequenceIndex);\n    var idx = 0;\n\n    while (idx < sequence.length && glyph && fn(sequence[idx], glyph)) {\n      if (matched) {\n        matched.push(this.glyphIterator.index);\n      }\n\n      idx++;\n      glyph = this.glyphIterator.next();\n    }\n\n    this.glyphIterator.index = pos;\n    if (idx < sequence.length) {\n      return false;\n    }\n\n    return matched || true;\n  };\n\n  OTProcessor.prototype.sequenceMatches = function sequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      return component === glyph.id;\n    });\n  };\n\n  OTProcessor.prototype.sequenceMatchIndices = function sequenceMatchIndices(sequenceIndex, sequence) {\n    var _this = this;\n\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      // If the current feature doesn't apply to this glyph,\n      if (!(_this.currentFeature in glyph.features)) {\n        return false;\n      }\n\n      return component === glyph.id;\n    }, []);\n  };\n\n  OTProcessor.prototype.coverageSequenceMatches = function coverageSequenceMatches(sequenceIndex, sequence) {\n    var _this2 = this;\n\n    return this.match(sequenceIndex, sequence, function (coverage, glyph) {\n      return _this2.coverageIndex(coverage, glyph.id) >= 0;\n    });\n  };\n\n  OTProcessor.prototype.getClassID = function getClassID(glyph, classDef) {\n    switch (classDef.version) {\n      case 1:\n        // Class array\n        var i = glyph - classDef.startGlyph;\n        if (i >= 0 && i < classDef.classValueArray.length) {\n          return classDef.classValueArray[i];\n        }\n\n        break;\n\n      case 2:\n        for (var _iterator13 = classDef.classRangeRecord, _isArray13 = Array.isArray(_iterator13), _i13 = 0, _iterator13 = _isArray13 ? _iterator13 : _iterator13[Symbol.iterator]();;) {\n          var _ref14;\n\n          if (_isArray13) {\n            if (_i13 >= _iterator13.length) break;\n            _ref14 = _iterator13[_i13++];\n          } else {\n            _i13 = _iterator13.next();\n            if (_i13.done) break;\n            _ref14 = _i13.value;\n          }\n\n          var range = _ref14;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.class;\n          }\n        }\n\n        break;\n    }\n\n    return 0;\n  };\n\n  OTProcessor.prototype.classSequenceMatches = function classSequenceMatches(sequenceIndex, sequence, classDef) {\n    var _this3 = this;\n\n    return this.match(sequenceIndex, sequence, function (classID, glyph) {\n      return classID === _this3.getClassID(glyph.id, classDef);\n    });\n  };\n\n  OTProcessor.prototype.applyContext = function applyContext(table) {\n    switch (table.version) {\n      case 1:\n        var index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        var set$$1 = table.ruleSets[index];\n        for (var _iterator14 = set$$1, _isArray14 = Array.isArray(_iterator14), _i14 = 0, _iterator14 = _isArray14 ? _iterator14 : _iterator14[Symbol.iterator]();;) {\n          var _ref15;\n\n          if (_isArray14) {\n            if (_i14 >= _iterator14.length) break;\n            _ref15 = _iterator14[_i14++];\n          } else {\n            _i14 = _iterator14.next();\n            if (_i14.done) break;\n            _ref15 = _i14.value;\n          }\n\n          var rule = _ref15;\n\n          if (this.sequenceMatches(1, rule.input)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n        if (index === -1) {\n          return false;\n        }\n\n        set$$1 = table.classSet[index];\n        for (var _iterator15 = set$$1, _isArray15 = Array.isArray(_iterator15), _i15 = 0, _iterator15 = _isArray15 ? _iterator15 : _iterator15[Symbol.iterator]();;) {\n          var _ref16;\n\n          if (_isArray15) {\n            if (_i15 >= _iterator15.length) break;\n            _ref16 = _iterator15[_i15++];\n          } else {\n            _i15 = _iterator15.next();\n            if (_i15.done) break;\n            _ref16 = _i15.value;\n          }\n\n          var _rule = _ref16;\n\n          if (this.classSequenceMatches(1, _rule.classes, table.classDef)) {\n            return this.applyLookupList(_rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(0, table.coverages)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  OTProcessor.prototype.applyChainingContext = function applyChainingContext(table) {\n    switch (table.version) {\n      case 1:\n        var index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        var set$$1 = table.chainRuleSets[index];\n        for (var _iterator16 = set$$1, _isArray16 = Array.isArray(_iterator16), _i16 = 0, _iterator16 = _isArray16 ? _iterator16 : _iterator16[Symbol.iterator]();;) {\n          var _ref17;\n\n          if (_isArray16) {\n            if (_i16 >= _iterator16.length) break;\n            _ref17 = _iterator16[_i16++];\n          } else {\n            _i16 = _iterator16.next();\n            if (_i16.done) break;\n            _ref17 = _i16.value;\n          }\n\n          var rule = _ref17;\n\n          if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n        var rules = table.chainClassSet[index];\n        if (!rules) {\n          return false;\n        }\n\n        for (var _iterator17 = rules, _isArray17 = Array.isArray(_iterator17), _i17 = 0, _iterator17 = _isArray17 ? _iterator17 : _iterator17[Symbol.iterator]();;) {\n          var _ref18;\n\n          if (_isArray17) {\n            if (_i17 >= _iterator17.length) break;\n            _ref18 = _iterator17[_i17++];\n          } else {\n            _i17 = _iterator17.next();\n            if (_i17.done) break;\n            _ref18 = _i17.value;\n          }\n\n          var _rule2 = _ref18;\n\n          if (this.classSequenceMatches(-_rule2.backtrack.length, _rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, _rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + _rule2.input.length, _rule2.lookahead, table.lookaheadClassDef)) {\n            return this.applyLookupList(_rule2.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  return OTProcessor;\n}();\n\nvar GlyphInfo = function () {\n  function GlyphInfo(font, id) {\n    var codePoints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var features = arguments[3];\n    var stringIndex = arguments[4];\n    classCallCheck(this, GlyphInfo);\n\n    this._font = font;\n    this.codePoints = codePoints;\n    this.stringIndex = stringIndex;\n    this.id = id;\n\n    this.features = {};\n    if (Array.isArray(features)) {\n      for (var i = 0; i < features.length; i++) {\n        var feature = features[i];\n        this.features[feature] = true;\n      }\n    } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n      Object.assign(this.features, features);\n    }\n\n    this.ligatureID = null;\n    this.ligatureComponent = null;\n    this.isLigated = false;\n    this.cursiveAttachment = null;\n    this.markAttachment = null;\n    this.shaperInfo = null;\n    this.substituted = false;\n    this.isMultiplied = false;\n  }\n\n  GlyphInfo.prototype.copy = function copy() {\n    return new GlyphInfo(this._font, this.id, this.codePoints, this.features, this.stringIndex);\n  };\n\n  createClass(GlyphInfo, [{\n    key: 'id',\n    get: function get$$1() {\n      return this._id;\n    },\n    set: function set$$1(id) {\n      this._id = id;\n      this.substituted = true;\n\n      var GDEF = this._font.GDEF;\n      if (GDEF && GDEF.glyphClassDef) {\n        // TODO: clean this up\n        var classID = OTProcessor.prototype.getClassID(id, GDEF.glyphClassDef);\n        this.isBase = classID === 1;\n        this.isLigature = classID === 2;\n        this.isMark = classID === 3;\n        this.markAttachmentType = GDEF.markAttachClassDef ? OTProcessor.prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n      } else {\n        this.isMark = this.codePoints.length > 0 && this.codePoints.every(_react_pdf_unicode_properties__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isMark);\n        this.isBase = !this.isMark;\n        this.isLigature = this.codePoints.length > 1;\n        this.markAttachmentType = 0;\n      }\n    }\n  }, {\n    key: 'advanceWidth',\n    get: function get$$1() {\n      return this._font.getGlyph(this.id, this.codePoints).advanceWidth;\n    }\n  }]);\n  return GlyphInfo;\n}();\n\nvar _class$5;\nvar _temp$1;\n\n/**\n * This is a shaper for the Hangul script, used by the Korean language.\n * It does the following:\n *   - decompose if unsupported by the font:\n *     <LV>   -> <L,V>\n *     <LVT>  -> <L,V,T>\n *     <LV,T> -> <L,V,T>\n *\n *   - compose if supported by the font:\n *     <L,V>   -> <LV>\n *     <L,V,T> -> <LVT>\n *     <LV,T>  -> <LVT>\n *\n *   - reorder tone marks (S is any valid syllable):\n *     <S, M> -> <M, S>\n *\n *   - apply ljmo, vjmo, and tjmo OpenType features to decomposed Jamo sequences.\n *\n * This logic is based on the following documents:\n *   - http://www.microsoft.com/typography/OpenTypeDev/hangul/intro.htm\n *   - http://ktug.org/~nomos/harfbuzz-hangul/hangulshaper.pdf\n */\nvar HangulShaper = (_temp$1 = _class$5 = function (_DefaultShaper) {\n  inherits(HangulShaper, _DefaultShaper);\n\n  function HangulShaper() {\n    classCallCheck(this, HangulShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  HangulShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ljmo', 'vjmo', 'tjmo'], false);\n  };\n\n  HangulShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var state = 0;\n    var i = 0;\n    while (i < glyphs.length) {\n      var action = void 0;\n      var glyph = glyphs[i];\n      var code = glyph.codePoints[0];\n      var type = getType(code);var _STATE_TABLE$state$ty = STATE_TABLE$1[state][type];\n      action = _STATE_TABLE$state$ty[0];\n      state = _STATE_TABLE$state$ty[1];\n\n\n      switch (action) {\n        case DECOMPOSE:\n          // Decompose the composed syllable if it is not supported by the font.\n          if (!plan.font.hasGlyphForCodePoint(code)) {\n            i = decompose(glyphs, i, plan.font);\n          }\n          break;\n\n        case COMPOSE:\n          // Found a decomposed syllable. Try to compose if supported by the font.\n          i = compose(glyphs, i, plan.font);\n          break;\n\n        case TONE_MARK:\n          // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n          reorderToneMark(glyphs, i, plan.font);\n          break;\n\n        case INVALID:\n          // Tone mark has no valid syllable to attach to, so insert a dotted circle\n          i = insertDottedCircle(glyphs, i, plan.font);\n          break;\n      }\n\n      i++;\n    }\n  };\n\n  return HangulShaper;\n}(DefaultShaper), _class$5.zeroMarkWidths = 'NONE', _temp$1);\nvar HANGUL_BASE = 0xac00;\nvar HANGUL_END = 0xd7a4;\nvar HANGUL_COUNT = HANGUL_END - HANGUL_BASE + 1;\nvar L_BASE = 0x1100; // lead\nvar V_BASE = 0x1161; // vowel\nvar T_BASE = 0x11a7; // trail\nvar L_COUNT = 19;\nvar V_COUNT = 21;\nvar T_COUNT = 28;\nvar L_END = L_BASE + L_COUNT - 1;\nvar V_END = V_BASE + V_COUNT - 1;\nvar T_END = T_BASE + T_COUNT - 1;\nvar DOTTED_CIRCLE = 0x25cc;\n\nvar isL = function isL(code) {\n  return 0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\n};\nvar isV = function isV(code) {\n  return 0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\n};\nvar isT = function isT(code) {\n  return 0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\n};\nvar isTone = function isTone(code) {\n  return 0x302e <= code && code <= 0x302f;\n};\nvar isLVT = function isLVT(code) {\n  return HANGUL_BASE <= code && code <= HANGUL_END;\n};\nvar isLV = function isLV(code) {\n  return code - HANGUL_BASE < HANGUL_COUNT && (code - HANGUL_BASE) % T_COUNT === 0;\n};\nvar isCombiningL = function isCombiningL(code) {\n  return L_BASE <= code && code <= L_END;\n};\nvar isCombiningV = function isCombiningV(code) {\n  return V_BASE <= code && code <= V_END;\n};\nvar isCombiningT = function isCombiningT(code) {\n  return T_BASE + 1 && 1 <= code && code <= T_END;\n};\n\n// Character categories\nvar X = 0; // Other character\nvar L = 1; // Leading consonant\nvar V = 2; // Medial vowel\nvar T = 3; // Trailing consonant\nvar LV = 4; // Composed <LV> syllable\nvar LVT = 5; // Composed <LVT> syllable\nvar M = 6; // Tone mark\n\n// This function classifies a character using the above categories.\nfunction getType(code) {\n  if (isL(code)) {\n    return L;\n  }\n  if (isV(code)) {\n    return V;\n  }\n  if (isT(code)) {\n    return T;\n  }\n  if (isLV(code)) {\n    return LV;\n  }\n  if (isLVT(code)) {\n    return LVT;\n  }\n  if (isTone(code)) {\n    return M;\n  }\n  return X;\n}\n\n// State machine actions\nvar NO_ACTION = 0;\nvar DECOMPOSE = 1;\nvar COMPOSE = 2;\nvar TONE_MARK = 4;\nvar INVALID = 5;\n\n// Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\nvar STATE_TABLE$1 = [\n//       X                 L                 V                T                  LV                LVT               M\n// State 0: start state\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]],\n\n// State 1: <L>\n[[NO_ACTION, 0], [NO_ACTION, 1], [COMPOSE, 2], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]],\n\n// State 2: <L,V> or <LV>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [COMPOSE, 3], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]],\n\n// State 3: <L,V,T> or <LVT>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]]];\n\nfunction getGlyph(font, code, features) {\n  return new GlyphInfo(font, font.glyphForCodePoint(code).id, [code], features);\n}\n\nfunction decompose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyph.codePoints[0];\n\n  var s = code - HANGUL_BASE;\n  var t = T_BASE + s % T_COUNT;\n  s = s / T_COUNT | 0;\n  var l = L_BASE + s / V_COUNT | 0;\n  var v = V_BASE + s % V_COUNT;\n\n  // Don't decompose if all of the components are not available\n  if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== T_BASE && !font.hasGlyphForCodePoint(t)) {\n    return i;\n  }\n\n  // Replace the current glyph with decomposed L, V, and T glyphs,\n  // and apply the proper OpenType features to each component.\n  var ljmo = getGlyph(font, l, glyph.features);\n  ljmo.features.ljmo = true;\n\n  var vjmo = getGlyph(font, v, glyph.features);\n  vjmo.features.vjmo = true;\n\n  var insert = [ljmo, vjmo];\n\n  if (t > T_BASE) {\n    var tjmo = getGlyph(font, t, glyph.features);\n    tjmo.features.tjmo = true;\n    insert.push(tjmo);\n  }\n\n  glyphs.splice.apply(glyphs, [i, 1].concat(insert));\n  return i + insert.length - 1;\n}\n\nfunction compose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n  var type = getType(code);\n\n  var prev = glyphs[i - 1].codePoints[0];\n  var prevType = getType(prev);\n\n  // Figure out what type of syllable we're dealing with\n  var lv = void 0,\n      ljmo = void 0,\n      vjmo = void 0,\n      tjmo = void 0;\n  if (prevType === LV && type === T) {\n    // <LV,T>\n    lv = prev;\n    tjmo = glyph;\n  } else {\n    if (type === V) {\n      // <L,V>\n      ljmo = glyphs[i - 1];\n      vjmo = glyph;\n    } else {\n      // <L,V,T>\n      ljmo = glyphs[i - 2];\n      vjmo = glyphs[i - 1];\n      tjmo = glyph;\n    }\n\n    var l = ljmo.codePoints[0];\n    var v = vjmo.codePoints[0];\n\n    // Make sure L and V are combining characters\n    if (isCombiningL(l) && isCombiningV(v)) {\n      lv = HANGUL_BASE + ((l - L_BASE) * V_COUNT + (v - V_BASE)) * T_COUNT;\n    }\n  }\n\n  var t = tjmo && tjmo.codePoints[0] || T_BASE;\n  if (lv != null && (t === T_BASE || isCombiningT(t))) {\n    var s = lv + (t - T_BASE);\n\n    // Replace with a composed glyph if supported by the font,\n    // otherwise apply the proper OpenType features to each component.\n    if (font.hasGlyphForCodePoint(s)) {\n      var del = prevType === V ? 3 : 2;\n      glyphs.splice(i - del + 1, del, getGlyph(font, s, glyph.features));\n      return i - del + 1;\n    }\n  }\n\n  // Didn't compose (either a non-combining component or unsupported by font).\n  if (ljmo) {\n    ljmo.features.ljmo = true;\n  }\n  if (vjmo) {\n    vjmo.features.vjmo = true;\n  }\n  if (tjmo) {\n    tjmo.features.tjmo = true;\n  }\n\n  if (prevType === LV) {\n    // Sequence was originally <L,V>, which got combined earlier.\n    // Either the T was non-combining, or the LVT glyph wasn't supported.\n    // Decompose the glyph again and apply OT features.\n    decompose(glyphs, i - 1, font);\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction getLength(code) {\n  switch (getType(code)) {\n    case LV:\n    case LVT:\n      return 1;\n    case V:\n      return 2;\n    case T:\n      return 3;\n  }\n}\n\nfunction reorderToneMark(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n\n  // Move tone mark to the beginning of the previous syllable, unless it is zero width\n  if (font.glyphForCodePoint(code).advanceWidth === 0) {\n    return;\n  }\n\n  var prev = glyphs[i - 1].codePoints[0];\n  var len = getLength(prev);\n\n  glyphs.splice(i, 1);\n  return glyphs.splice(i - len, 0, glyph);\n}\n\nfunction insertDottedCircle(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n\n  if (font.hasGlyphForCodePoint(DOTTED_CIRCLE)) {\n    var dottedCircle = getGlyph(font, DOTTED_CIRCLE, glyph.features);\n\n    // If the tone mark is zero width, insert the dotted circle before, otherwise after\n    var idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n    glyphs.splice(idx, 0, dottedCircle);\n    i++;\n  }\n\n  return i;\n}\n\nvar stateTable = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 14, 15, 16, 17], [0, 0, 0, 18, 19, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 28, 29, 30, 31, 32, 33, 0, 34, 0, 0, 35, 36, 0, 0, 37, 0], [0, 0, 0, 38, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 39, 0, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 12, 43, 0, 0, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0], [0, 0, 0, 45, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 51, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 55, 56, 57, 58, 0, 59, 0, 0, 60, 61, 0, 0, 62, 0], [0, 0, 0, 4, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 63, 64, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 63, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 0, 2, 16, 0], [0, 0, 0, 18, 65, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 0, 0], [0, 0, 0, 69, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 73, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 75, 0, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 25, 79, 0, 0, 0, 0], [0, 0, 0, 18, 19, 20, 74, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 81, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 87, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 18, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 89, 90, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 89, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 0, 0], [0, 0, 0, 94, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 96, 0, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 35, 100, 0, 0, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 102, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 108, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 28, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 110, 111, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 110, 0, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 0, 0], [0, 0, 0, 0, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 0, 0, 115, 116, 117, 118, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 39, 0, 122, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 124, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0], [0, 39, 0, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 47, 47, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 128, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 129, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 135, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 136, 0, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 60, 140, 0, 0, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0], [0, 0, 0, 142, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 148, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 150, 151, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 150, 0, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 157, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 3, 4, 5, 159, 160, 8, 161, 0, 162, 0, 11, 12, 163, 0, 75, 16, 0], [0, 0, 0, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0], [0, 124, 64, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 124, 0, 0], [0, 0, 0, 0, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 167, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 172, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 75, 0, 176, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 178, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0], [0, 75, 0, 0, 0, 175, 179, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 180, 180, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 83, 83, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 182, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 183, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 191, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 0, 194, 0, 0, 0, 0], [0, 178, 90, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 178, 0, 0], [0, 0, 0, 0, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 198, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 96, 0, 202, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 204, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0], [0, 96, 0, 0, 0, 201, 205, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 206, 206, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 104, 104, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 208, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 209, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 217, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 0, 220, 0, 0, 0, 0], [0, 204, 111, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 204, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 223, 0, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 119, 225, 0, 0, 0, 0], [0, 0, 0, 115, 116, 117, 222, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 115, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 226, 64, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 226, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 39, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 44, 44, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 229, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 39, 0, 122, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 231, 231, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 131, 131, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 234, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 235, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 0, 0, 240, 241, 242, 243, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 136, 0, 247, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 249, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 249, 0, 0], [0, 136, 0, 0, 0, 246, 250, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 251, 251, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 144, 144, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 253, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 254, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 259, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 262, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 0, 265, 0, 0, 0, 0], [0, 249, 151, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 249, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 158, 225, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 222, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 155, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 43, 266, 266, 8, 161, 0, 24, 0, 0, 12, 267, 0, 0, 0, 0], [0, 75, 0, 176, 43, 268, 268, 269, 161, 0, 24, 0, 0, 0, 267, 0, 75, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 271, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 272, 0, 0, 0, 0, 0, 0, 0, 0], [0, 273, 274, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 273, 0, 0], [0, 0, 0, 40, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 121, 275, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 276, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 279, 0, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 173, 281, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 278, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 169, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 282, 90, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 282, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 80, 80, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 285, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 75, 0, 176, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 287, 287, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 288, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 185, 185, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 290, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 291, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 192, 281, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 278, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 189, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 76, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 175, 296, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 299, 0, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 199, 301, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 298, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 195, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 302, 111, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 302, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 96, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 101, 101, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 305, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 96, 0, 202, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 307, 307, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 308, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 211, 211, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 310, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 311, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 218, 301, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 298, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 215, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 97, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 201, 316, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 320, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 223, 0, 323, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 0, 0, 121, 324, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 325, 318, 326, 327, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 64, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 121, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0], [0, 0, 0, 0, 0, 329, 329, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 330, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 237, 237, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 332, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 333, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 337, 0, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 244, 339, 0, 0, 0, 0], [0, 0, 0, 240, 241, 242, 336, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 240, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 340, 151, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 340, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 136, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 141, 141, 57, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 343, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 136, 0, 247, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 345, 345, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 346, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 256, 256, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 348, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 349, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 263, 339, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 336, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 260, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 137, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 246, 354, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 355, 90, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 355, 0, 0], [0, 0, 0, 0, 0, 356, 356, 269, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 357, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 363, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 366, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 40, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 0, 281, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 372, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 279, 0, 375, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 0, 0, 175, 376, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 377, 370, 378, 379, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 90, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 175, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0], [0, 0, 0, 0, 0, 381, 381, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 293, 293, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 384, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 385, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 76, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 0, 301, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 390, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 299, 0, 393, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 0, 0, 201, 394, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 395, 388, 396, 397, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 111, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 201, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0], [0, 0, 0, 0, 0, 399, 399, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 313, 313, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 402, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 403, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 97, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 407, 0, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 321, 409, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 406, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 0, 0, 317, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 410, 64, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 410, 0, 0], [0, 223, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 323, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 328, 409, 0, 0, 0, 0], [0, 0, 0, 325, 318, 326, 406, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 325, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0], [0, 0, 0, 0, 0, 411, 411, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 412, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 413, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 0, 339, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 417, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 337, 0, 420, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 0, 0, 246, 421, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 422, 415, 423, 424, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 151, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 246, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0], [0, 0, 0, 0, 0, 426, 426, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 427, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 351, 351, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 429, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 430, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 137, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 434, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 180, 180, 269, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 359, 359, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 437, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 438, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 443, 274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 443, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 367, 225, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 445, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 364, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 448, 0, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 373, 450, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 447, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 0, 0, 369, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 451, 90, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 451, 0, 0], [0, 279, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 375, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 380, 450, 0, 0, 0, 0], [0, 0, 0, 377, 370, 378, 447, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 377, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0], [0, 0, 0, 0, 0, 452, 452, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 453, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 454, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 457, 0, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 391, 459, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 456, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 0, 0, 387, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 460, 111, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 460, 0, 0], [0, 299, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 393, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 398, 459, 0, 0, 0, 0], [0, 0, 0, 395, 388, 396, 456, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 395, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0], [0, 0, 0, 0, 0, 461, 461, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 462, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 463, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 0, 409, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 467, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 407, 0, 470, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 0, 0, 121, 471, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 472, 465, 473, 474, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 0, 0], [0, 0, 0, 0, 0, 0, 476, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 479, 0, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 418, 481, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 478, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 0, 0, 414, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 482, 151, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 482, 0, 0], [0, 337, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 420, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 425, 481, 0, 0, 0, 0], [0, 0, 0, 422, 415, 423, 478, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 422, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0], [0, 0, 0, 0, 0, 483, 483, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 484, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 485, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 435, 225, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 445, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 432, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 486, 486, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 487, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 440, 440, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 489, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 490, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 497, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 0, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 0, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 0, 450, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 502, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 448, 0, 505, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 0, 0, 175, 506, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 507, 500, 508, 509, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292, 0, 0], [0, 0, 0, 0, 0, 0, 511, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 0, 459, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 515, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 457, 0, 518, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 0, 0, 201, 519, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 520, 513, 521, 522, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 312, 0, 0], [0, 0, 0, 0, 0, 0, 524, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 527, 0, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 468, 529, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 526, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 0, 0, 464, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 530, 64, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 530, 0, 0], [0, 407, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 470, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 475, 529, 0, 0, 0, 0], [0, 0, 0, 472, 465, 473, 526, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 472, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0], [0, 0, 0, 0, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 0, 481, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 534, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 479, 0, 537, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 0, 0, 246, 538, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 539, 532, 540, 541, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 0, 0], [0, 0, 0, 0, 0, 0, 543, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 358, 0, 0], [0, 0, 0, 0, 0, 544, 544, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 545, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 492, 492, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 547, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 548, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 274, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 368, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 553, 0, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 503, 555, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 552, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 0, 0, 499, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 556, 90, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 556, 0, 0], [0, 448, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 505, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 510, 555, 0, 0, 0, 0], [0, 0, 0, 507, 500, 508, 552, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 507, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 559, 0, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 516, 561, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 558, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 0, 0, 512, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 562, 111, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 562, 0, 0], [0, 457, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 518, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 523, 561, 0, 0, 0, 0], [0, 0, 0, 520, 513, 521, 558, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 520, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0], [0, 0, 0, 0, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 0, 529, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 565, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 527, 0, 567, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 0, 0, 121, 568, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 569, 66, 570, 571, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 575, 0, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 535, 577, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 574, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 0, 0, 531, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 578, 151, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 578, 0, 0], [0, 479, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 537, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 542, 577, 0, 0, 0, 0], [0, 0, 0, 539, 532, 540, 574, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 539, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0], [0, 0, 0, 0, 0, 0, 0, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 439, 0, 0], [0, 0, 0, 0, 0, 579, 579, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 580, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 581, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 0, 555, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 584, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 553, 0, 586, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 0, 0, 175, 587, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 588, 91, 589, 590, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 0, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 0, 561, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 594, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 559, 0, 596, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 0, 0, 201, 597, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 598, 112, 599, 600, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 566, 165, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 67, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 0, 0, 563, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 527, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 567, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 572, 165, 0, 0, 0, 0], [0, 0, 0, 569, 66, 570, 67, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 569, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 0, 577, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 605, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 575, 0, 607, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 0, 0, 246, 608, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 609, 152, 610, 611, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 491, 0, 0], [0, 0, 0, 0, 0, 0, 613, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 585, 194, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 92, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 0, 0, 582, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 553, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 586, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 591, 194, 0, 0, 0, 0], [0, 0, 0, 588, 91, 589, 92, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 588, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 595, 220, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 113, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 0, 0, 592, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 559, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 596, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 601, 220, 0, 0, 0, 0], [0, 0, 0, 598, 112, 599, 113, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 598, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 606, 265, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 153, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 0, 0, 603, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 575, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 607, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 612, 265, 0, 0, 0, 0], [0, 0, 0, 609, 152, 610, 153, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 609, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 549, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0]];\nvar accepting = [false, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, false, true, true, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, false, true, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, false, false, true, false, true, true, false, true, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, true, true, false, false, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, false, false, true, true, false, false, true, true, true, false, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, false, false, false, true, true, false, true, true, true, true, true, true, false, true, true, false, true, false, true, true, true, true, false, false, false, false, false, false, false, true, true, false, false, true, true, false, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, true, false, true, true, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, false, true, true, false, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, true, false, true, true, true, false, true, true, true, true, true, false, true, true, true, true, false, true, true, true, true, true, false, true, true, false, true, true, true];\nvar tags = [[], [\"broken_cluster\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"symbol_cluster\"], [], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [], [\"broken_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [], [\"consonant_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [], [\"vowel_syllable\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [\"standalone_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"standalone_cluster\"]];\nvar indicMachine = {\n\tstateTable: stateTable,\n\taccepting: accepting,\n\ttags: tags\n};\n\nvar categories = [\"O\", \"IND\", \"S\", \"GB\", \"B\", \"FM\", \"CGJ\", \"VMAbv\", \"VMPst\", \"VAbv\", \"VPst\", \"CMBlw\", \"VPre\", \"VBlw\", \"H\", \"VMBlw\", \"CMAbv\", \"MBlw\", \"CS\", \"R\", \"SUB\", \"MPst\", \"MPre\", \"FAbv\", \"FPst\", \"FBlw\", \"SMAbv\", \"SMBlw\", \"VMPre\", \"ZWNJ\", \"ZWJ\", \"WJ\", \"VS\", \"N\", \"HN\", \"MAbv\"];\nvar decompositions$1 = { \"2507\": [2503, 2494], \"2508\": [2503, 2519], \"2888\": [2887, 2902], \"2891\": [2887, 2878], \"2892\": [2887, 2903], \"3018\": [3014, 3006], \"3019\": [3015, 3006], \"3020\": [3014, 3031], \"3144\": [3142, 3158], \"3264\": [3263, 3285], \"3271\": [3270, 3285], \"3272\": [3270, 3286], \"3274\": [3270, 3266], \"3275\": [3270, 3266, 3285], \"3402\": [3398, 3390], \"3403\": [3399, 3390], \"3404\": [3398, 3415], \"3546\": [3545, 3530], \"3548\": [3545, 3535], \"3549\": [3545, 3535, 3530], \"3550\": [3545, 3551], \"3635\": [3661, 3634], \"3763\": [3789, 3762], \"3955\": [3953, 3954], \"3957\": [3953, 3956], \"3958\": [4018, 3968], \"3959\": [4018, 3953, 3968], \"3960\": [4019, 3968], \"3961\": [4019, 3953, 3968], \"3969\": [3953, 3968], \"6971\": [6970, 6965], \"6973\": [6972, 6965], \"6976\": [6974, 6965], \"6977\": [6975, 6965], \"6979\": [6978, 6965], \"69934\": [69937, 69927], \"69935\": [69938, 69927], \"70475\": [70471, 70462], \"70476\": [70471, 70487], \"70843\": [70841, 70842], \"70844\": [70841, 70832], \"70846\": [70841, 70845], \"71098\": [71096, 71087], \"71099\": [71097, 71087] };\nvar stateTable$1 = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 3, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 2, 0, 24, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 27, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 39, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 49, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 53, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0]];\nvar accepting$1 = [false, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true];\nvar tags$1 = [[], [\"broken_cluster\"], [\"independent_cluster\"], [\"symbol_cluster\"], [\"standard_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"numeral_cluster\"], [\"broken_cluster\"], [\"independent_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"virama_terminated_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"numeral_cluster\"], [\"number_joiner_terminated_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"numeral_cluster\"]];\nvar useData = {\n\tcategories: categories,\n\tdecompositions: decompositions$1,\n\tstateTable: stateTable$1,\n\taccepting: accepting$1,\n\ttags: tags$1\n};\n\n// Cateories used in the OpenType spec:\n// https://www.microsoft.com/typography/otfntdev/devanot/shaping.aspx\nvar CATEGORIES = {\n  X: 1 << 0,\n  C: 1 << 1,\n  V: 1 << 2,\n  N: 1 << 3,\n  H: 1 << 4,\n  ZWNJ: 1 << 5,\n  ZWJ: 1 << 6,\n  M: 1 << 7,\n  SM: 1 << 8,\n  VD: 1 << 9,\n  A: 1 << 10,\n  Placeholder: 1 << 11,\n  Dotted_Circle: 1 << 12,\n  RS: 1 << 13, // Register Shifter, used in Khmer OT spec.\n  Coeng: 1 << 14, // Khmer-style Virama.\n  Repha: 1 << 15, // Atomically-encoded logical or visual repha.\n  Ra: 1 << 16,\n  CM: 1 << 17, // Consonant-Medial.\n  Symbol: 1 << 18 // Avagraha, etc that take marks (SM,A,VD).\n};\n\n// Visual positions in a syllable from left to right.\nvar POSITIONS = {\n  Start: 1 << 0,\n\n  Ra_To_Become_Reph: 1 << 1,\n  Pre_M: 1 << 2,\n  Pre_C: 1 << 3,\n\n  Base_C: 1 << 4,\n  After_Main: 1 << 5,\n\n  Above_C: 1 << 6,\n\n  Before_Sub: 1 << 7,\n  Below_C: 1 << 8,\n  After_Sub: 1 << 9,\n\n  Before_Post: 1 << 10,\n  Post_C: 1 << 11,\n  After_Post: 1 << 12,\n\n  Final_C: 1 << 13,\n  SMVD: 1 << 14,\n\n  End: 1 << 15\n};\n\nvar CONSONANT_FLAGS = CATEGORIES.C | CATEGORIES.Ra | CATEGORIES.CM | CATEGORIES.V | CATEGORIES.Placeholder | CATEGORIES.Dotted_Circle;\nvar JOINER_FLAGS = CATEGORIES.ZWJ | CATEGORIES.ZWNJ;\nvar HALANT_OR_COENG_FLAGS = CATEGORIES.H | CATEGORIES.Coeng;\n\nvar INDIC_CONFIGS = {\n  Default: {\n    hasOldSpec: false,\n    virama: 0,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Devanagari: {\n    hasOldSpec: true,\n    virama: 0x094D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Bengali: {\n    hasOldSpec: true,\n    virama: 0x09CD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Gurmukhi: {\n    hasOldSpec: true,\n    virama: 0x0A4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Gujarati: {\n    hasOldSpec: true,\n    virama: 0x0ACD,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Oriya: {\n    hasOldSpec: true,\n    virama: 0x0B4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Tamil: {\n    hasOldSpec: true,\n    virama: 0x0BCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Telugu: {\n    hasOldSpec: true,\n    virama: 0x0C4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Explicit',\n    blwfMode: 'Post_Only'\n  },\n\n  Kannada: {\n    hasOldSpec: true,\n    virama: 0x0CCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Post_Only'\n  },\n\n  Malayalam: {\n    hasOldSpec: true,\n    virama: 0x0D4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Log_Repha',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  // Handled by UniversalShaper\n  // Sinhala: {\n  //   hasOldSpec: false,\n  //   virama: 0x0DCA,\n  //   basePos: 'Last_Sinhala',\n  //   rephPos: POSITIONS.After_Main,\n  //   rephMode: 'Explicit',\n  //   blwfMode: 'Pre_And_Post'\n  // },\n\n  Khmer: {\n    hasOldSpec: false,\n    virama: 0x17D2,\n    basePos: 'First',\n    rephPos: POSITIONS.Ra_To_Become_Reph,\n    rephMode: 'Vis_Repha',\n    blwfMode: 'Pre_And_Post'\n  }\n};\n\n// Additional decompositions that aren't in Unicode\nvar INDIC_DECOMPOSITIONS = {\n  // Khmer\n  0x17BE: [0x17C1, 0x17BE],\n  0x17BF: [0x17C1, 0x17BF],\n  0x17C0: [0x17C1, 0x17C0],\n  0x17C4: [0x17C1, 0x17C4],\n  0x17C5: [0x17C1, 0x17C5]\n};\n\nvar type$1 = \"Buffer\";\nvar data$1 = [0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 194, 160, 1, 177, 13, 78, 242, 237, 157, 127, 172, 29, 69, 21, 199, 247, 245, 222, 119, 127, 188, 119, 251, 110, 95, 133, 68, 98, 251, 71, 67, 137, 49, 197, 152, 166, 16, 107, 138, 105, 21, 9, 34, 81, 219, 24, 132, 104, 177, 6, 67, 176, 36, 4, 106, 48, 109, 132, 82, 130, 63, 10, 216, 31, 198, 146, 148, 88, 19, 172, 37, 65, 44, 137, 40, 38, 160, 173, 41, 70, 146, 106, 172, 169, 70, 76, 99, 180, 182, 9, 105, 32, 169, 5, 98, 65, 41, 45, 224, 119, 238, 206, 188, 123, 238, 220, 153, 217, 249, 181, 187, 239, 209, 61, 201, 39, 187, 59, 59, 59, 115, 230, 156, 51, 179, 179, 179, 123, 223, 59, 94, 75, 146, 151, 192, 171, 224, 13, 48, 167, 158, 36, 239, 5, 243, 193, 37, 224, 21, 164, 253, 175, 22, 190, 189, 24, 101, 45, 2, 75, 192, 50, 135, 114, 175, 64, 222, 79, 128, 107, 192, 42, 112, 61, 88, 3, 110, 6, 183, 129, 175, 131, 141, 134, 242, 150, 226, 220, 10, 240, 77, 240, 93, 176, 25, 108, 7, 59, 193, 35, 224, 56, 242, 60, 134, 237, 207, 64, 194, 121, 154, 111, 15, 128, 131, 224, 79, 224, 111, 224, 40, 56, 1, 78, 130, 211, 224, 44, 168, 141, 38, 73, 27, 76, 130, 139, 192, 2, 240, 126, 240, 33, 240, 97, 176, 28, 92, 5, 62, 13, 174, 3, 55, 130, 155, 193, 109, 224, 78, 112, 55, 184, 15, 60, 8, 190, 15, 126, 0, 126, 4, 126, 2, 158, 228, 199, 207, 128, 103, 193, 239, 193, 159, 193, 17, 112, 12, 188, 8, 94, 1, 175, 129, 115, 163, 169, 206, 245, 70, 146, 116, 192, 5, 141, 244, 120, 30, 182, 11, 193, 165, 96, 49, 88, 10, 150, 131, 171, 249, 249, 207, 98, 123, 61, 88, 3, 110, 1, 183, 55, 82, 155, 172, 231, 91, 91, 54, 242, 252, 223, 198, 246, 46, 176, 149, 31, 63, 192, 183, 155, 80, 215, 14, 150, 94, 239, 95, 179, 203, 177, 14, 27, 118, 144, 50, 247, 96, 127, 47, 120, 10, 236, 3, 191, 3, 127, 4, 127, 5, 255, 0, 47, 128, 147, 36, 255, 155, 124, 123, 154, 167, 109, 99, 62, 198, 126, 173, 153, 36, 227, 224, 61, 205, 212, 94, 239, 195, 246, 226, 102, 154, 103, 17, 79, 91, 130, 237, 50, 112, 101, 51, 141, 39, 17, 75, 215, 226, 120, 37, 184, 1, 172, 1, 183, 128, 219, 249, 53, 235, 249, 118, 19, 182, 155, 121, 121, 226, 186, 173, 56, 222, 209, 52, 183, 117, 87, 198, 121, 106, 227, 31, 35, 239, 22, 110, 251, 245, 216, 254, 20, 199, 191, 0, 191, 38, 101, 252, 22, 251, 127, 0, 247, 224, 124, 7, 252, 69, 81, 254, 223, 45, 234, 180, 101, 173, 136, 5, 148, 121, 204, 177, 220, 151, 34, 234, 81, 20, 255, 134, 206, 255, 1, 111, 128, 164, 149, 36, 163, 173, 52, 125, 111, 61, 181, 185, 156, 127, 54, 63, 47, 250, 226, 5, 56, 158, 7, 22, 114, 104, 222, 69, 173, 52, 110, 150, 144, 244, 179, 6, 93, 88, 108, 47, 35, 121, 87, 241, 250, 175, 145, 244, 248, 56, 242, 92, 77, 242, 49, 93, 133, 223, 62, 211, 82, 235, 45, 48, 157, 171, 168, 168, 240, 99, 91, 213, 175, 42, 42, 42, 42, 42, 42, 42, 42, 42, 28, 217, 198, 215, 25, 202, 214, 67, 102, 39, 127, 214, 189, 174, 101, 127, 205, 91, 154, 244, 55, 53, 233, 95, 224, 207, 202, 95, 198, 246, 171, 224, 14, 176, 1, 220, 11, 238, 7, 91, 193, 67, 224, 135, 224, 81, 240, 4, 120, 170, 149, 174, 45, 237, 195, 246, 0, 56, 8, 14, 131, 35, 224, 40, 56, 1, 78, 181, 210, 245, 156, 215, 177, 125, 139, 61, 223, 183, 241, 12, 15, 46, 108, 167, 245, 206, 107, 247, 117, 88, 136, 253, 75, 219, 246, 109, 172, 168, 168, 168, 168, 8, 135, 173, 91, 94, 134, 177, 247, 76, 173, 191, 222, 94, 22, 101, 219, 162, 162, 162, 34, 14, 175, 145, 119, 82, 91, 121, 255, 94, 134, 113, 230, 74, 112, 173, 52, 215, 251, 156, 227, 220, 175, 195, 199, 138, 83, 188, 142, 183, 193, 23, 219, 253, 247, 169, 95, 193, 254, 173, 82, 153, 119, 180, 251, 239, 117, 40, 236, 189, 204, 6, 156, 187, 119, 26, 204, 63, 147, 57, 41, 43, 192, 157, 96, 127, 55, 155, 45, 200, 119, 72, 147, 247, 85, 164, 47, 156, 76, 146, 213, 224, 33, 240, 252, 228, 224, 249, 227, 56, 223, 153, 139, 185, 56, 88, 13, 238, 29, 75, 146, 103, 65, 50, 14, 95, 129, 187, 192, 10, 28, 239, 227, 219, 163, 124, 75, 153, 223, 25, 78, 147, 185, 17, 121, 54, 146, 124, 191, 193, 254, 57, 126, 124, 197, 236, 36, 185, 27, 236, 7, 15, 143, 196, 229, 28, 47, 243, 178, 9, 216, 115, 34, 221, 223, 52, 161, 214, 241, 128, 38, 189, 162, 162, 162, 162, 34, 127, 222, 41, 121, 12, 142, 125, 255, 113, 97, 121, 183, 252, 250, 203, 126, 254, 43, 155, 171, 192, 253, 152, 7, 126, 175, 61, 252, 60, 202, 190, 243, 121, 24, 233, 187, 200, 60, 113, 55, 246, 31, 111, 167, 243, 209, 45, 138, 242, 196, 247, 119, 236, 219, 177, 51, 252, 26, 246, 188, 205, 190, 169, 99, 229, 253, 156, 151, 245, 43, 69, 125, 12, 86, 230, 254, 246, 224, 243, 241, 205, 124, 251, 92, 123, 184, 62, 155, 57, 38, 251, 102, 138, 173, 119, 179, 57, 179, 124, 253, 33, 148, 121, 24, 28, 105, 247, 231, 198, 199, 120, 61, 47, 98, 251, 50, 248, 175, 164, 207, 219, 237, 254, 60, 188, 129, 62, 52, 27, 92, 56, 70, 230, 180, 60, 223, 124, 158, 118, 134, 127, 247, 181, 27, 233, 151, 32, 237, 131, 99, 195, 250, 95, 62, 214, 63, 62, 202, 203, 254, 232, 152, 157, 15, 5, 247, 248, 248, 31, 117, 124, 10, 172, 2, 159, 7, 95, 2, 55, 129, 29, 56, 183, 22, 219, 117, 96, 195, 88, 58, 79, 254, 14, 216, 198, 206, 129, 93, 96, 15, 216, 11, 158, 36, 122, 62, 51, 150, 206, 167, 15, 130, 195, 224, 8, 56, 10, 78, 128, 83, 22, 237, 121, 29, 121, 206, 128, 145, 113, 245, 249, 7, 224, 203, 54, 206, 77, 142, 247, 143, 47, 194, 254, 2, 126, 252, 32, 142, 63, 128, 253, 197, 252, 248, 35, 216, 126, 76, 83, 22, 181, 255, 82, 69, 108, 217, 194, 174, 223, 211, 40, 191, 47, 219, 232, 89, 36, 91, 13, 245, 127, 114, 92, 127, 221, 59, 138, 126, 58, 19, 219, 175, 226, 95, 205, 119, 81, 28, 120, 182, 37, 70, 221, 172, 191, 177, 241, 110, 37, 233, 219, 236, 158, 116, 3, 137, 171, 213, 216, 191, 9, 156, 203, 41, 158, 178, 218, 183, 174, 158, 234, 120, 171, 52, 254, 124, 205, 48, 30, 157, 15, 80, 63, 126, 3, 182, 216, 52, 158, 95, 159, 119, 141, 63, 241, 109, 229, 183, 52, 249, 46, 39, 247, 249, 117, 26, 63, 138, 243, 108, 222, 177, 221, 112, 126, 61, 223, 103, 191, 97, 217, 140, 178, 86, 242, 227, 237, 216, 223, 9, 30, 49, 140, 145, 50, 187, 45, 126, 75, 241, 114, 14, 223, 204, 63, 10, 29, 159, 152, 65, 241, 172, 107, 199, 47, 103, 72, 27, 88, 140, 236, 135, 174, 207, 129, 67, 224, 121, 240, 79, 174, 251, 11, 22, 109, 96, 109, 165, 191, 225, 96, 191, 17, 184, 15, 233, 39, 199, 211, 216, 103, 223, 95, 236, 37, 249, 214, 146, 107, 79, 35, 207, 217, 241, 52, 109, 164, 227, 222, 183, 92, 17, 191, 101, 88, 105, 81, 46, 123, 222, 104, 119, 6, 211, 232, 239, 31, 196, 111, 186, 68, 219, 39, 121, 94, 246, 108, 177, 143, 204, 253, 22, 75, 115, 212, 139, 120, 59, 31, 15, 152, 31, 78, 39, 98, 247, 255, 233, 194, 188, 214, 187, 187, 125, 148, 167, 13, 237, 220, 114, 158, 216, 64, 135, 203, 220, 42, 180, 46, 213, 250, 199, 76, 98, 129, 52, 94, 186, 216, 167, 232, 57, 117, 53, 22, 198, 133, 197, 238, 177, 218, 72, 194, 150, 64, 103, 26, 245, 241, 193, 125, 27, 202, 214, 121, 186, 114, 190, 75, 217, 246, 143, 22, 155, 77, 206, 76, 208, 117, 26, 35, 36, 235, 124, 86, 190, 46, 57, 159, 149, 207, 87, 207, 178, 109, 53, 211, 218, 225, 226, 179, 233, 96, 15, 149, 190, 101, 235, 23, 203, 7, 58, 41, 91, 23, 31, 157, 203, 210, 127, 186, 199, 68, 153, 54, 41, 35, 118, 108, 164, 108, 189, 203, 182, 81, 153, 177, 84, 134, 253, 169, 222, 121, 213, 239, 43, 101, 196, 196, 68, 107, 144, 250, 172, 8, 140, 68, 100, 142, 93, 190, 118, 51, 165, 133, 103, 233, 137, 185, 233, 254, 172, 102, 63, 221, 133, 86, 189, 127, 109, 207, 70, 99, 28, 110, 35, 154, 55, 83, 55, 110, 147, 54, 41, 143, 225, 250, 156, 236, 107, 107, 217, 199, 137, 169, 44, 142, 16, 221, 177, 171, 15, 123, 215, 26, 252, 43, 206, 83, 81, 149, 193, 68, 248, 183, 195, 253, 219, 81, 248, 79, 200, 44, 158, 71, 72, 135, 231, 103, 254, 149, 235, 83, 73, 167, 57, 156, 54, 212, 38, 201, 191, 83, 249, 44, 253, 43, 226, 59, 100, 108, 177, 245, 239, 80, 91, 10, 246, 175, 156, 87, 222, 103, 194, 252, 43, 108, 47, 252, 43, 144, 69, 78, 167, 254, 165, 146, 53, 38, 235, 218, 99, 188, 198, 210, 191, 83, 227, 42, 233, 143, 245, 201, 12, 133, 36, 113, 237, 191, 194, 167, 218, 227, 130, 252, 107, 219, 127, 101, 68, 63, 18, 125, 74, 248, 88, 229, 223, 144, 251, 45, 181, 137, 28, 75, 174, 227, 179, 177, 142, 140, 88, 106, 206, 144, 241, 217, 213, 191, 163, 22, 227, 243, 168, 69, 255, 85, 201, 168, 102, 76, 136, 61, 62, 119, 147, 126, 191, 13, 153, 235, 49, 223, 138, 252, 54, 227, 179, 169, 47, 235, 238, 149, 98, 95, 78, 83, 229, 147, 211, 180, 233, 150, 243, 47, 89, 104, 95, 86, 141, 223, 226, 222, 60, 75, 234, 219, 140, 134, 101, 255, 86, 249, 95, 39, 121, 188, 151, 80, 137, 60, 159, 238, 213, 29, 50, 86, 231, 208, 159, 93, 253, 201, 250, 115, 179, 57, 12, 237, 83, 52, 93, 62, 110, 100, 244, 103, 122, 157, 41, 166, 168, 93, 232, 53, 46, 254, 205, 18, 27, 159, 207, 36, 255, 234, 242, 10, 17, 227, 181, 141, 127, 233, 177, 216, 183, 241, 175, 60, 246, 170, 100, 74, 215, 8, 254, 237, 118, 83, 124, 196, 213, 23, 190, 253, 139, 250, 64, 220, 47, 117, 48, 201, 26, 47, 109, 218, 155, 53, 94, 210, 152, 12, 157, 15, 153, 198, 74, 113, 79, 53, 218, 196, 113, 190, 107, 59, 39, 142, 230, 103, 151, 62, 73, 98, 67, 228, 179, 209, 131, 138, 170, 143, 233, 214, 47, 196, 57, 177, 21, 107, 25, 170, 245, 16, 109, 44, 56, 142, 167, 116, 125, 195, 85, 98, 251, 194, 151, 174, 193, 166, 58, 59, 83, 97, 215, 211, 126, 58, 171, 57, 184, 142, 196, 182, 141, 218, 32, 44, 77, 172, 41, 249, 172, 11, 153, 236, 41, 246, 109, 210, 109, 125, 147, 229, 47, 249, 60, 45, 223, 164, 139, 171, 253, 19, 158, 151, 61, 75, 211, 231, 105, 149, 253, 133, 111, 152, 200, 246, 103, 63, 19, 18, 227, 76, 79, 23, 199, 184, 87, 197, 80, 158, 180, 56, 186, 243, 214, 235, 78, 14, 113, 70, 227, 183, 203, 109, 40, 215, 203, 76, 82, 203, 136, 13, 235, 113, 50, 194, 88, 76, 197, 103, 13, 152, 174, 245, 178, 251, 51, 139, 147, 134, 78, 247, 73, 123, 122, 237, 119, 200, 159, 7, 162, 63, 152, 160, 107, 213, 170, 123, 185, 79, 236, 170, 164, 236, 49, 191, 135, 229, 252, 65, 23, 43, 170, 251, 42, 139, 157, 222, 220, 154, 61, 247, 79, 12, 142, 85, 83, 176, 186, 61, 231, 85, 116, 109, 66, 213, 6, 89, 31, 99, 204, 142, 164, 121, 198, 107, 41, 34, 143, 184, 86, 164, 83, 104, 89, 153, 117, 217, 48, 57, 108, 75, 85, 189, 140, 22, 175, 191, 167, 135, 165, 253, 196, 181, 242, 123, 152, 172, 24, 87, 73, 87, 218, 15, 69, 85, 142, 77, 249, 73, 224, 245, 161, 245, 231, 221, 62, 159, 114, 139, 128, 74, 222, 117, 248, 158, 207, 171, 189, 178, 248, 172, 99, 244, 174, 147, 210, 108, 158, 73, 98, 213, 175, 130, 214, 111, 211, 238, 188, 234, 119, 149, 24, 246, 103, 226, 93, 127, 81, 247, 104, 155, 117, 149, 8, 107, 4, 194, 247, 166, 245, 24, 25, 250, 172, 49, 181, 38, 195, 239, 253, 189, 253, 217, 41, 34, 93, 85, 6, 155, 35, 116, 44, 238, 75, 98, 46, 58, 101, 255, 192, 117, 207, 208, 49, 160, 168, 241, 59, 70, 253, 177, 245, 103, 244, 236, 91, 84, 31, 80, 244, 99, 155, 103, 25, 121, 238, 79, 69, 164, 247, 222, 81, 27, 158, 25, 76, 107, 30, 42, 123, 90, 63, 99, 198, 180, 137, 199, 90, 160, 235, 253, 110, 200, 126, 30, 62, 163, 162, 123, 158, 160, 107, 71, 186, 103, 12, 149, 127, 101, 196, 188, 87, 171, 191, 195, 243, 135, 210, 207, 57, 198, 183, 170, 237, 81, 234, 215, 197, 133, 56, 239, 242, 28, 61, 225, 183, 190, 160, 91, 39, 84, 173, 17, 54, 106, 131, 215, 210, 216, 9, 29, 255, 67, 175, 167, 239, 194, 196, 61, 207, 251, 254, 155, 67, 12, 201, 182, 203, 242, 135, 156, 62, 94, 55, 151, 31, 210, 159, 92, 97, 247, 253, 86, 210, 95, 139, 82, 225, 122, 31, 180, 246, 91, 158, 247, 50, 197, 125, 70, 229, 11, 214, 215, 6, 214, 78, 70, 236, 237, 205, 230, 77, 202, 58, 53, 99, 131, 109, 220, 100, 221, 31, 101, 25, 154, 63, 104, 108, 97, 138, 73, 211, 152, 68, 215, 45, 91, 53, 115, 221, 46, 247, 233, 129, 24, 39, 250, 134, 206, 159, 178, 100, 234, 219, 219, 49, 62, 255, 29, 243, 96, 174, 132, 42, 77, 140, 99, 99, 131, 125, 91, 148, 97, 235, 207, 88, 184, 214, 23, 122, 158, 230, 51, 109, 77, 215, 132, 180, 51, 143, 178, 109, 235, 179, 173, 195, 75, 151, 81, 208, 232, 31, 199, 184, 23, 248, 232, 49, 213, 110, 139, 103, 76, 37, 205, 196, 249, 55, 173, 190, 190, 163, 18, 211, 231, 62, 18, 90, 87, 12, 253, 99, 180, 195, 86, 92, 117, 170, 119, 226, 182, 81, 27, 183, 57, 83, 84, 61, 42, 95, 250, 92, 155, 87, 172, 196, 142, 185, 60, 237, 230, 83, 135, 141, 174, 190, 82, 100, 204, 248, 232, 80, 196, 249, 162, 37, 111, 155, 103, 181, 189, 104, 253, 99, 148, 17, 59, 22, 243, 142, 233, 188, 218, 90, 100, 125, 182, 229, 229, 41, 54, 122, 210, 247, 32, 242, 247, 4, 242, 179, 42, 253, 93, 83, 158, 235, 127, 170, 119, 115, 58, 123, 133, 250, 62, 215, 117, 14, 151, 53, 73, 213, 121, 221, 154, 133, 106, 13, 97, 164, 255, 155, 19, 151, 248, 138, 246, 59, 224, 28, 215, 138, 92, 214, 89, 109, 126, 75, 68, 227, 38, 120, 61, 212, 103, 125, 194, 102, 205, 130, 147, 21, 207, 165, 188, 119, 177, 137, 103, 5, 173, 90, 159, 41, 251, 231, 60, 126, 152, 214, 209, 92, 223, 127, 119, 73, 127, 49, 174, 161, 234, 236, 18, 217, 230, 166, 53, 75, 186, 150, 56, 240, 126, 168, 238, 127, 63, 11, 233, 47, 38, 127, 139, 113, 222, 170, 221, 1, 241, 222, 235, 47, 101, 172, 119, 91, 198, 169, 188, 254, 171, 122, 255, 148, 37, 33, 223, 136, 38, 30, 254, 29, 154, 79, 4, 218, 70, 46, 67, 59, 111, 25, 73, 223, 115, 54, 20, 223, 39, 198, 246, 141, 238, 221, 172, 234, 61, 30, 211, 77, 108, 243, 22, 211, 124, 206, 166, 173, 170, 54, 169, 202, 20, 223, 180, 134, 232, 101, 51, 39, 182, 61, 239, 83, 119, 55, 194, 121, 215, 241, 50, 84, 95, 27, 188, 99, 157, 198, 137, 237, 248, 151, 49, 134, 100, 221, 127, 153, 190, 226, 155, 92, 33, 161, 243, 47, 23, 31, 196, 242, 109, 168, 207, 77, 250, 184, 182, 49, 182, 254, 166, 244, 68, 147, 183, 72, 29, 125, 109, 173, 146, 50, 234, 13, 109, 111, 17, 254, 14, 185, 222, 166, 189, 177, 219, 17, 98, 203, 44, 187, 230, 113, 62, 203, 62, 182, 118, 178, 21, 223, 120, 202, 58, 31, 18, 47, 161, 101, 219, 232, 239, 122, 189, 141, 221, 242, 138, 197, 24, 109, 241, 41, 67, 213, 230, 50, 165, 8, 155, 103, 197, 102, 30, 49, 145, 151, 132, 212, 19, 67, 47, 155, 254, 101, 202, 151, 135, 255, 116, 109, 44, 35, 126, 92, 252, 83, 68, 28, 21, 97, 243, 60, 234, 114, 209, 169, 140, 250, 203, 106, 127, 86, 157, 236, 185, 109, 84, 250, 150, 152, 109, 233, 223, 225, 162, 34, 242, 201, 127, 199, 110, 96, 13, 205, 112, 28, 27, 89, 26, 100, 13, 121, 168, 237, 19, 254, 207, 145, 58, 251, 197, 236, 195, 62, 117, 217, 214, 235, 91, 102, 140, 54, 186, 74, 104, 27, 125, 203, 142, 85, 71, 104, 253, 121, 248, 64, 64, 191, 207, 23, 127, 23, 105, 218, 189, 211, 179, 88, 11, 151, 105, 100, 188, 183, 144, 197, 250, 61, 65, 224, 120, 97, 146, 222, 119, 232, 62, 127, 107, 57, 178, 125, 179, 254, 46, 50, 123, 103, 74, 223, 201, 229, 53, 254, 217, 148, 97, 180, 87, 1, 241, 152, 21, 155, 38, 91, 138, 223, 6, 9, 223, 251, 252, 46, 196, 57, 198, 10, 236, 183, 114, 140, 216, 72, 148, 191, 53, 158, 163, 127, 93, 255, 102, 56, 123, 127, 106, 122, 47, 63, 133, 244, 183, 39, 166, 252, 229, 25, 23, 212, 230, 177, 198, 54, 159, 49, 46, 150, 175, 122, 101, 229, 112, 191, 96, 113, 198, 124, 36, 222, 207, 103, 141, 63, 38, 253, 133, 142, 42, 93, 125, 245, 247, 185, 222, 212, 215, 202, 238, 67, 46, 136, 223, 41, 101, 222, 143, 164, 119, 68, 3, 237, 13, 253, 94, 199, 243, 239, 181, 210, 124, 67, 182, 143, 236, 123, 122, 94, 151, 87, 72, 151, 252, 255, 3, 29, 66, 228, 191, 143, 79, 199, 180, 169, 242, 244, 166, 211, 250, 132, 246, 43, 97, 19, 185, 110, 211, 183, 79, 84, 178, 206, 103, 9, 213, 161, 140, 251, 140, 77, 124, 235, 206, 211, 184, 20, 115, 50, 249, 94, 147, 37, 161, 253, 35, 175, 182, 11, 145, 207, 171, 218, 28, 243, 25, 74, 70, 246, 185, 172, 95, 12, 255, 187, 66, 219, 175, 250, 6, 195, 69, 138, 244, 63, 253, 237, 105, 86, 204, 143, 215, 213, 107, 54, 177, 245, 15, 149, 162, 238, 133, 3, 117, 90, 124, 67, 145, 213, 175, 92, 237, 151, 53, 207, 180, 125, 134, 115, 125, 62, 148, 197, 247, 121, 209, 247, 121, 201, 183, 126, 157, 62, 62, 207, 200, 62, 245, 135, 232, 234, 98, 87, 185, 158, 16, 201, 91, 207, 34, 36, 166, 45, 99, 180, 53, 52, 62, 105, 186, 156, 199, 116, 141, 79, 27, 92, 174, 205, 210, 53, 164, 111, 248, 232, 31, 35, 94, 109, 245, 160, 182, 178, 105, 115, 72, 123, 66, 36, 15, 219, 134, 138, 169, 204, 24, 62, 116, 209, 33, 73, 134, 235, 119, 209, 67, 149, 87, 46, 199, 164, 131, 46, 77, 181, 85, 213, 105, 210, 223, 166, 60, 213, 245, 46, 177, 98, 123, 141, 174, 45, 121, 245, 153, 172, 152, 176, 169, 39, 207, 250, 93, 36, 70, 57, 161, 250, 231, 209, 254, 24, 182, 45, 194, 23, 121, 215, 27, 234, 223, 80, 125, 66, 109, 20, 106, 243, 60, 226, 168, 104, 41, 163, 78, 157, 252, 31];\nvar trieData$1 = {\n\ttype: type$1,\n\tdata: data$1\n};\n\nvar _class$6;\nvar _temp$2;\n\nvar decompositions = useData.decompositions;\n\nvar trie$1 = new unicode_trie__WEBPACK_IMPORTED_MODULE_4___default.a(new Uint8Array(trieData$1.data));\nvar stateMachine = new dfa__WEBPACK_IMPORTED_MODULE_5___default.a(indicMachine);\n\n/**\n * The IndicShaper supports indic scripts e.g. Devanagari, Kannada, etc.\n * Based on code from Harfbuzz: https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-indic.cc\n */\nvar IndicShaper = (_temp$2 = _class$6 = function (_DefaultShaper) {\n  inherits(IndicShaper, _DefaultShaper);\n\n  function IndicShaper() {\n    classCallCheck(this, IndicShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  IndicShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables);\n\n    plan.addStage(['locl', 'ccmp']);\n\n    plan.addStage(initialReordering);\n\n    plan.addStage('nukt');\n    plan.addStage('akhn');\n    plan.addStage('rphf', false);\n    plan.addStage('rkrf');\n    plan.addStage('pref', false);\n    plan.addStage('blwf', false);\n    plan.addStage('abvf', false);\n    plan.addStage('half', false);\n    plan.addStage('pstf', false);\n    plan.addStage('vatu');\n    plan.addStage('cjct');\n    plan.addStage('cfar', false);\n\n    plan.addStage(finalReordering);\n\n    plan.addStage({\n      local: ['init'],\n      global: ['pres', 'abvs', 'blws', 'psts', 'haln', 'dist', 'abvm', 'blwm', 'calt', 'clig']\n    });\n\n    // Setup the indic config for the selected script\n    plan.unicodeScript = fromOpenType(plan.script);\n    plan.indicConfig = INDIC_CONFIGS[plan.unicodeScript] || INDIC_CONFIGS.Default;\n    plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== '2';\n\n    // TODO: turn off kern (Khmer) and liga features.\n  };\n\n  IndicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n      var d = INDIC_DECOMPOSITIONS[codepoint] || decompositions[codepoint];\n      if (d) {\n        var decomposed = d.map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    };\n\n    // Decompose split matras\n    // TODO: do this in a more general unicode normalizer\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return IndicShaper;\n}(DefaultShaper), _class$6.zeroMarkWidths = 'NONE', _temp$2);\nfunction indicCategory(glyph) {\n  return trie$1.get(glyph.codePoints[0]) >> 8;\n}\n\nfunction indicPosition(glyph) {\n  return 1 << (trie$1.get(glyph.codePoints[0]) & 0xff);\n}\n\nvar IndicInfo = function IndicInfo(category, position, syllableType, syllable) {\n  classCallCheck(this, IndicInfo);\n\n  this.category = category;\n  this.position = position;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables(font, glyphs) {\n  var syllable = 0;\n  var last = 0;\n  for (var _iterator = stateMachine.match(glyphs.map(indicCategory)), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _ref2 = _ref,\n        start = _ref2[0],\n        end = _ref2[1],\n        tags$$1 = _ref2[2];\n\n    if (start > last) {\n      ++syllable;\n      for (var _i2 = last; _i2 < start; _i2++) {\n        glyphs[_i2].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n      }\n    }\n\n    ++syllable;\n\n    // Create shaper info\n    for (var _i3 = start; _i3 <= end; _i3++) {\n      glyphs[_i3].shaperInfo = new IndicInfo(1 << indicCategory(glyphs[_i3]), indicPosition(glyphs[_i3]), tags$$1[0], syllable);\n    }\n\n    last = end + 1;\n  }\n\n  if (last < glyphs.length) {\n    ++syllable;\n    for (var i = last; i < glyphs.length; i++) {\n      glyphs[i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n    }\n  }\n}\n\nfunction isConsonant(glyph) {\n  return glyph.shaperInfo.category & CONSONANT_FLAGS;\n}\n\nfunction isJoiner(glyph) {\n  return glyph.shaperInfo.category & JOINER_FLAGS;\n}\n\nfunction isHalantOrCoeng(glyph) {\n  return glyph.shaperInfo.category & HALANT_OR_COENG_FLAGS;\n}\n\nfunction wouldSubstitute(glyphs, feature) {\n  for (var _iterator2 = glyphs, _isArray2 = Array.isArray(_iterator2), _i4 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n    var _glyph$features;\n\n    var _ref3;\n\n    if (_isArray2) {\n      if (_i4 >= _iterator2.length) break;\n      _ref3 = _iterator2[_i4++];\n    } else {\n      _i4 = _iterator2.next();\n      if (_i4.done) break;\n      _ref3 = _i4.value;\n    }\n\n    var glyph = _ref3;\n\n    glyph.features = (_glyph$features = {}, _glyph$features[feature] = true, _glyph$features);\n  }\n\n  var GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n  GSUB.applyFeatures([feature], glyphs);\n\n  return glyphs.length === 1;\n}\n\nfunction consonantPosition(font, consonant, virama) {\n  var glyphs = [virama, consonant, virama];\n  if (wouldSubstitute(glyphs.slice(0, 2), 'blwf') || wouldSubstitute(glyphs.slice(1, 3), 'blwf')) {\n    return POSITIONS.Below_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pstf') || wouldSubstitute(glyphs.slice(1, 3), 'pstf')) {\n    return POSITIONS.Post_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pref') || wouldSubstitute(glyphs.slice(1, 3), 'pref')) {\n    return POSITIONS.Post_C;\n  }\n\n  return POSITIONS.Base_C;\n}\n\nfunction initialReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n  var virama = font.glyphForCodePoint(indicConfig.virama).id;\n  if (virama) {\n    var info = new GlyphInfo(font, virama, [indicConfig.virama]);\n    for (var i = 0; i < glyphs.length; i++) {\n      if (glyphs[i].shaperInfo.position === POSITIONS.Base_C) {\n        glyphs[i].shaperInfo.position = consonantPosition(font, glyphs[i].copy(), info);\n      }\n    }\n  }\n\n  for (var start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    var _glyphs$start$shaperI = glyphs[start].shaperInfo,\n        category = _glyphs$start$shaperI.category,\n        syllableType = _glyphs$start$shaperI.syllableType;\n\n\n    if (syllableType === 'symbol_cluster' || syllableType === 'non_indic_cluster') {\n      continue;\n    }\n\n    if (syllableType === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = new IndicInfo(1 << indicCategory(g), indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable);\n\n      // Insert after possible Repha.\n      var _i5 = start;\n      while (_i5 < end && glyphs[_i5].shaperInfo.category === CATEGORIES.Repha) {\n        _i5++;\n      }\n\n      glyphs.splice(_i5++, 0, g);\n      end++;\n    }\n\n    // 1. Find base consonant:\n    //\n    // The shaping engine finds the base consonant of the syllable, using the\n    // following algorithm: starting from the end of the syllable, move backwards\n    // until a consonant is found that does not have a below-base or post-base\n    // form (post-base forms have to follow below-base forms), or that is not a\n    // pre-base reordering Ra, or arrive at the first consonant. The consonant\n    // stopped at will be the base.\n\n    var base = end;\n    var limit = start;\n    var hasReph = false;\n\n    // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    if (indicConfig.rephPos !== POSITIONS.Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === 'Implicit' && !isJoiner(glyphs[start + 2]) || indicConfig.rephMode === 'Explicit' && glyphs[start + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n      // See if it matches the 'rphf' feature.\n      var _g = [glyphs[start].copy(), glyphs[start + 1].copy(), glyphs[start + 2].copy()];\n      if (wouldSubstitute(_g.slice(0, 2), 'rphf') || indicConfig.rephMode === 'Explicit' && wouldSubstitute(_g, 'rphf')) {\n        limit += 2;\n        while (limit < end && isJoiner(glyphs[limit])) {\n          limit++;\n        }\n        base = start;\n        hasReph = true;\n      }\n    } else if (indicConfig.rephMode === 'Log_Repha' && glyphs[start].shaperInfo.category === CATEGORIES.Repha) {\n      limit++;\n      while (limit < end && isJoiner(glyphs[limit])) {\n        limit++;\n      }\n      base = start;\n      hasReph = true;\n    }\n\n    switch (indicConfig.basePos) {\n      case 'Last':\n        {\n          // starting from the end of the syllable, move backwards\n          var _i6 = end;\n          var seenBelow = false;\n\n          do {\n            var _info = glyphs[--_i6].shaperInfo;\n\n            // until a consonant is found\n            if (isConsonant(glyphs[_i6])) {\n              // that does not have a below-base or post-base form\n              // (post-base forms have to follow below-base forms),\n              if (_info.position !== POSITIONS.Below_C && (_info.position !== POSITIONS.Post_C || seenBelow)) {\n                base = _i6;\n                break;\n              }\n\n              // or that is not a pre-base reordering Ra,\n              //\n              // IMPLEMENTATION NOTES:\n              //\n              // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n              // by the logic above already.\n              //\n\n              // or arrive at the first consonant. The consonant stopped at will\n              // be the base.\n              if (_info.position === POSITIONS.Below_C) {\n                seenBelow = true;\n              }\n\n              base = _i6;\n            } else if (start < _i6 && _info.category === CATEGORIES.ZWJ && glyphs[_i6 - 1].shaperInfo.category === CATEGORIES.H) {\n              // A ZWJ after a Halant stops the base search, and requests an explicit\n              // half form.\n              // A ZWJ before a Halant, requests a subjoined form instead, and hence\n              // search continues.  This is particularly important for Bengali\n              // sequence Ra,H,Ya that should form Ya-Phalaa by subjoining Ya.\n              break;\n            }\n          } while (_i6 > limit);\n          break;\n        }\n\n      case 'First':\n        {\n          // The first consonant is always the base.\n          base = start;\n\n          // Mark all subsequent consonants as below.\n          for (var _i7 = base + 1; _i7 < end; _i7++) {\n            if (isConsonant(glyphs[_i7])) {\n              glyphs[_i7].shaperInfo.position = POSITIONS.Below_C;\n            }\n          }\n        }\n    }\n\n    // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    //\n    //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n    if (hasReph && base === start && limit - base <= 2) {\n      hasReph = false;\n    }\n\n    // 2. Decompose and reorder Matras:\n    //\n    // Each matra and any syllable modifier sign in the cluster are moved to the\n    // appropriate position relative to the consonant(s) in the cluster. The\n    // shaping engine decomposes two- or three-part matras into their constituent\n    // parts before any repositioning. Matra characters are classified by which\n    // consonant in a conjunct they have affinity for and are reordered to the\n    // following positions:\n    //\n    //   o Before first half form in the syllable\n    //   o After subjoined consonants\n    //   o After post-form consonant\n    //   o After main consonant (for above marks)\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // The normalize() routine has already decomposed matras for us, so we don't\n    // need to worry about that.\n\n    // 3.  Reorder marks to canonical order:\n    //\n    // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n    // if necessary, so that the nukta is first.\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // We don't need to do this: the normalize() routine already did this for us.\n\n    // Reorder characters\n\n    for (var _i8 = start; _i8 < base; _i8++) {\n      var _info2 = glyphs[_i8].shaperInfo;\n      _info2.position = Math.min(POSITIONS.Pre_C, _info2.position);\n    }\n\n    if (base < end) {\n      glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n    }\n\n    // Mark final consonants.  A final consonant is one appearing after a matra,\n    // like in Khmer.\n    for (var _i9 = base + 1; _i9 < end; _i9++) {\n      if (glyphs[_i9].shaperInfo.category === CATEGORIES.M) {\n        for (var j = _i9 + 1; j < end; j++) {\n          if (isConsonant(glyphs[j])) {\n            glyphs[j].shaperInfo.position = POSITIONS.Final_C;\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    // Handle beginning Ra\n    if (hasReph) {\n      glyphs[start].shaperInfo.position = POSITIONS.Ra_To_Become_Reph;\n    }\n\n    // For old-style Indic script tags, move the first post-base Halant after\n    // last consonant.\n    //\n    // Reports suggest that in some scripts Uniscribe does this only if there\n    // is *not* a Halant after last consonant already (eg. Kannada), while it\n    // does it unconditionally in other scripts (eg. Malayalam).  We don't\n    // currently know about other scripts, so we single out Malayalam for now.\n    //\n    // Kannada test case:\n    // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n    // With some versions of Lohit Kannada.\n    // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n    //\n    // Malayalam test case:\n    // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n    // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n    if (plan.isOldSpec) {\n      var disallowDoubleHalants = plan.unicodeScript !== 'Malayalam';\n      for (var _i10 = base + 1; _i10 < end; _i10++) {\n        if (glyphs[_i10].shaperInfo.category === CATEGORIES.H) {\n          var _j = void 0;\n          for (_j = end - 1; _j > _i10; _j--) {\n            if (isConsonant(glyphs[_j]) || disallowDoubleHalants && glyphs[_j].shaperInfo.category === CATEGORIES.H) {\n              break;\n            }\n          }\n\n          if (glyphs[_j].shaperInfo.category !== CATEGORIES.H && _j > _i10) {\n            // Move Halant to after last consonant.\n            var t = glyphs[_i10];\n            glyphs.splice.apply(glyphs, [_i10, 0].concat(glyphs.splice(_i10 + 1, _j - _i10)));\n            glyphs[_j] = t;\n          }\n\n          break;\n        }\n      }\n    }\n\n    // Attach misc marks to previous char to move with them.\n    var lastPos = POSITIONS.Start;\n    for (var _i11 = start; _i11 < end; _i11++) {\n      var _info3 = glyphs[_i11].shaperInfo;\n      if (_info3.category & (JOINER_FLAGS | CATEGORIES.N | CATEGORIES.RS | CATEGORIES.CM | HALANT_OR_COENG_FLAGS & _info3.category)) {\n        _info3.position = lastPos;\n        if (_info3.category === CATEGORIES.H && _info3.position === POSITIONS.Pre_M) {\n          // Uniscribe doesn't move the Halant with Left Matra.\n          // TEST: U+092B,U+093F,U+094DE\n          // We follow.  This is important for the Sinhala\n          // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n          // where U+0DD9 is a left matra and U+0DCA is the virama.\n          // We don't want to move the virama with the left matra.\n          // TEST: U+0D9A,U+0DDA\n          for (var _j2 = _i11; _j2 > start; _j2--) {\n            if (glyphs[_j2 - 1].shaperInfo.position !== POSITIONS.Pre_M) {\n              _info3.position = glyphs[_j2 - 1].shaperInfo.position;\n              break;\n            }\n          }\n        }\n      } else if (_info3.position !== POSITIONS.SMVD) {\n        lastPos = _info3.position;\n      }\n    }\n\n    // For post-base consonants let them own anything before them\n    // since the last consonant or matra.\n    var last = base;\n    for (var _i12 = base + 1; _i12 < end; _i12++) {\n      if (isConsonant(glyphs[_i12])) {\n        for (var _j3 = last + 1; _j3 < _i12; _j3++) {\n          if (glyphs[_j3].shaperInfo.position < POSITIONS.SMVD) {\n            glyphs[_j3].shaperInfo.position = glyphs[_i12].shaperInfo.position;\n          }\n        }\n        last = _i12;\n      } else if (glyphs[_i12].shaperInfo.category === CATEGORIES.M) {\n        last = _i12;\n      }\n    }\n\n    var arr = glyphs.slice(start, end);\n    arr.sort(function (a, b) {\n      return a.shaperInfo.position - b.shaperInfo.position;\n    });\n    glyphs.splice.apply(glyphs, [start, arr.length].concat(arr));\n\n    // Find base again\n    for (var _i13 = start; _i13 < end; _i13++) {\n      if (glyphs[_i13].shaperInfo.position === POSITIONS.Base_C) {\n        base = _i13;\n        break;\n      }\n    }\n\n    // Setup features now\n\n    // Reph\n    for (var _i14 = start; _i14 < end && glyphs[_i14].shaperInfo.position === POSITIONS.Ra_To_Become_Reph; _i14++) {\n      glyphs[_i14].features.rphf = true;\n    }\n\n    // Pre-base\n    var blwf = !plan.isOldSpec && indicConfig.blwfMode === 'Pre_And_Post';\n    for (var _i15 = start; _i15 < base; _i15++) {\n      glyphs[_i15].features.half = true;\n      if (blwf) {\n        glyphs[_i15].features.blwf = true;\n      }\n    }\n\n    // Post-base\n    for (var _i16 = base + 1; _i16 < end; _i16++) {\n      glyphs[_i16].features.abvf = true;\n      glyphs[_i16].features.pstf = true;\n      glyphs[_i16].features.blwf = true;\n    }\n\n    if (plan.isOldSpec && plan.unicodeScript === 'Devanagari') {\n      // Old-spec eye-lash Ra needs special handling.  From the\n      // spec:\n      //\n      // \"The feature 'below-base form' is applied to consonants\n      // having below-base forms and following the base consonant.\n      // The exception is vattu, which may appear below half forms\n      // as well as below the base glyph. The feature 'below-base\n      // form' will be applied to all such occurrences of Ra as well.\"\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n      // with Sanskrit 2003 font.\n      //\n      // However, note that Ra,Halant,ZWJ is the correct way to\n      // request eyelash form of Ra, so we wouldbn't inhibit it\n      // in that sequence.\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n      for (var _i17 = start; _i17 + 1 < base; _i17++) {\n        if (glyphs[_i17].shaperInfo.category === CATEGORIES.Ra && glyphs[_i17 + 1].shaperInfo.category === CATEGORIES.H && (_i17 + 1 === base || glyphs[_i17 + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n          glyphs[_i17].features.blwf = true;\n          glyphs[_i17 + 1].features.blwf = true;\n        }\n      }\n    }\n\n    var prefLen = 2;\n    if (features.pref && base + prefLen < end) {\n      // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n      for (var _i18 = base + 1; _i18 + prefLen - 1 < end; _i18++) {\n        var _g2 = [glyphs[_i18].copy(), glyphs[_i18 + 1].copy()];\n        if (wouldSubstitute(_g2, 'pref')) {\n          for (var _j4 = 0; _j4 < prefLen; _j4++) {\n            glyphs[_i18++].features.pref = true;\n          }\n\n          // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n          // Read the feature spec.\n          // This allows distinguishing the following cases with MS Khmer fonts:\n          // U+1784,U+17D2,U+179A,U+17D2,U+1782\n          // U+1784,U+17D2,U+1782,U+17D2,U+179A\n          if (features.cfar) {\n            for (; _i18 < end; _i18++) {\n              glyphs[_i18].features.cfar = true;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    // Apply ZWJ/ZWNJ effects\n    for (var _i19 = start + 1; _i19 < end; _i19++) {\n      if (isJoiner(glyphs[_i19])) {\n        var nonJoiner = glyphs[_i19].shaperInfo.category === CATEGORIES.ZWNJ;\n        var _j5 = _i19;\n\n        do {\n          _j5--;\n\n          // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n          // being there, since we don't skip them for the CJCT\n          // feature (ie. F_MANUAL_ZWJ)\n\n          // A ZWNJ disables HALF.\n          if (nonJoiner) {\n            delete glyphs[_j5].features.half;\n          }\n        } while (_j5 > start && !isConsonant(glyphs[_j5]));\n      }\n    }\n  }\n}\n\nfunction finalReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  for (var start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    // 4. Final reordering:\n    //\n    // After the localized forms and basic shaping forms GSUB features have been\n    // applied (see below), the shaping engine performs some final glyph\n    // reordering before applying all the remaining font features to the entire\n    // cluster.\n\n    var tryPref = !!features.pref;\n\n    // Find base again\n    var base = start;\n    for (; base < end; base++) {\n      if (glyphs[base].shaperInfo.position >= POSITIONS.Base_C) {\n        if (tryPref && base + 1 < end) {\n          for (var i = base + 1; i < end; i++) {\n            if (glyphs[i].features.pref) {\n              if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                // Ok, this was a 'pref' candidate but didn't form any.\n                // Base is around here...\n                base = i;\n                while (base < end && isHalantOrCoeng(glyphs[base])) {\n                  base++;\n                }\n                glyphs[base].shaperInfo.position = POSITIONS.BASE_C;\n                tryPref = false;\n              }\n              break;\n            }\n          }\n        }\n\n        // For Malayalam, skip over unformed below- (but NOT post-) forms.\n        if (plan.unicodeScript === 'Malayalam') {\n          for (var _i20 = base + 1; _i20 < end; _i20++) {\n            while (_i20 < end && isJoiner(glyphs[_i20])) {\n              _i20++;\n            }\n\n            if (_i20 === end || !isHalantOrCoeng(glyphs[_i20])) {\n              break;\n            }\n\n            _i20++; // Skip halant.\n            while (_i20 < end && isJoiner(glyphs[_i20])) {\n              _i20++;\n            }\n\n            if (_i20 < end && isConsonant(glyphs[_i20]) && glyphs[_i20].shaperInfo.position === POSITIONS.Below_C) {\n              base = _i20;\n              glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n            }\n          }\n        }\n\n        if (start < base && glyphs[base].shaperInfo.position > POSITIONS.Base_C) {\n          base--;\n        }\n        break;\n      }\n    }\n\n    if (base === end && start < base && glyphs[base - 1].shaperInfo.category === CATEGORIES.ZWJ) {\n      base--;\n    }\n\n    if (base < end) {\n      while (start < base && glyphs[base].shaperInfo.category & (CATEGORIES.N | HALANT_OR_COENG_FLAGS)) {\n        base--;\n      }\n    }\n\n    // o Reorder matras:\n    //\n    // If a pre-base matra character had been reordered before applying basic\n    // features, the glyph can be moved closer to the main consonant based on\n    // whether half-forms had been formed. Actual position for the matra is\n    // defined as “after last standalone halant glyph, after initial matra\n    // position and before the main consonant”. If ZWJ or ZWNJ follow this\n    // halant, position is moved after it.\n    //\n\n    if (start + 1 < end && start < base) {\n      // Otherwise there can't be any pre-base matra characters.\n      // If we lost track of base, alas, position before last thingy.\n      var newPos = base === end ? base - 2 : base - 1;\n\n      // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n      // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n      // We want to position matra after them.\n      if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n        while (newPos > start && !(glyphs[newPos].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n          newPos--;\n        }\n\n        // If we found no Halant we are done.\n        // Otherwise only proceed if the Halant does\n        // not belong to the Matra itself!\n        if (isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n          // If ZWJ or ZWNJ follow this halant, position is moved after it.\n          if (newPos + 1 < end && isJoiner(glyphs[newPos + 1])) {\n            newPos++;\n          }\n        } else {\n          newPos = start; // No move.\n        }\n      }\n\n      if (start < newPos && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n        // Now go see if there's actually any matras...\n        for (var _i21 = newPos; _i21 > start; _i21--) {\n          if (glyphs[_i21 - 1].shaperInfo.position === POSITIONS.Pre_M) {\n            var oldPos = _i21 - 1;\n            if (oldPos < base && base <= newPos) {\n              // Shouldn't actually happen.\n              base--;\n            }\n\n            var tmp = glyphs[oldPos];\n            glyphs.splice.apply(glyphs, [oldPos, 0].concat(glyphs.splice(oldPos + 1, newPos - oldPos)));\n            glyphs[newPos] = tmp;\n\n            newPos--;\n          }\n        }\n      }\n    }\n\n    // o Reorder reph:\n    //\n    // Reph’s original position is always at the beginning of the syllable,\n    // (i.e. it is not reordered at the character reordering stage). However,\n    // it will be reordered according to the basic-forms shaping results.\n    // Possible positions for reph, depending on the script, are; after main,\n    // before post-base consonant forms, and after post-base consonant forms.\n\n    // Two cases:\n    //\n    // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n    //   we should only move it if the sequence ligated to the repha form.\n    //\n    // - If repha is encoded separately and in the logical position, we should only\n    //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n    //   to make it work without the reordering.\n    if (start + 1 < end && glyphs[start].shaperInfo.position === POSITIONS.Ra_To_Become_Reph && glyphs[start].shaperInfo.category === CATEGORIES.Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {\n      var newRephPos = void 0;\n      var rephPos = indicConfig.rephPos;\n      var found = false;\n\n      // 1. If reph should be positioned after post-base consonant forms,\n      //    proceed to step 5.\n      if (rephPos !== POSITIONS.After_Post) {\n        //  2. If the reph repositioning class is not after post-base: target\n        //     position is after the first explicit halant glyph between the\n        //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n        //     are following this halant, position is moved after it. If such\n        //     position is found, this is the target position. Otherwise,\n        //     proceed to the next step.\n        //\n        //     Note: in old-implementation fonts, where classifications were\n        //     fixed in shaping engine, there was no case where reph position\n        //     will be found on this step.\n        newRephPos = start + 1;\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n\n        // 3. If reph should be repositioned after the main consonant: find the\n        //    first consonant not ligated with main, or find the first\n        //    consonant that is not a potential pre-base reordering Ra.\n        if (!found && rephPos === POSITIONS.After_Main) {\n          newRephPos = base;\n          while (newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= POSITIONS.After_Main) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n\n        // 4. If reph should be positioned before post-base consonant, find\n        //    first post-base classified consonant not ligated with main. If no\n        //    consonant is found, the target position should be before the\n        //    first matra, syllable modifier sign or vedic sign.\n        //\n        // This is our take on what step 4 is trying to say (and failing, BADLY).\n        if (!found && rephPos === POSITIONS.After_Sub) {\n          newRephPos = base;\n          while (newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & (POSITIONS.Post_C | POSITIONS.After_Post | POSITIONS.SMVD))) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n      }\n\n      //  5. If no consonant is found in steps 3 or 4, move reph to a position\n      //     immediately before the first post-base matra, syllable modifier\n      //     sign or vedic sign that has a reordering class after the intended\n      //     reph position. For example, if the reordering position for reph\n      //     is post-main, it will skip above-base matras that also have a\n      //     post-main position.\n      if (!found) {\n        // Copied from step 2.\n        newRephPos = start + 1;\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n      }\n\n      // 6. Otherwise, reorder reph to the end of the syllable.\n      if (!found) {\n        newRephPos = end - 1;\n        while (newRephPos > start && glyphs[newRephPos].shaperInfo.position === POSITIONS.SMVD) {\n          newRephPos--;\n        }\n\n        // If the Reph is to be ending up after a Matra,Halant sequence,\n        // position it before that Halant so it can interact with the Matra.\n        // However, if it's a plain Consonant,Halant we shouldn't do that.\n        // Uniscribe doesn't do this.\n        // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n        if (isHalantOrCoeng(glyphs[newRephPos])) {\n          for (var _i22 = base + 1; _i22 < newRephPos; _i22++) {\n            if (glyphs[_i22].shaperInfo.category === CATEGORIES.M) {\n              newRephPos--;\n            }\n          }\n        }\n      }\n\n      var reph = glyphs[start];\n      glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, newRephPos - start)));\n      glyphs[newRephPos] = reph;\n\n      if (start < base && base <= newRephPos) {\n        base--;\n      }\n    }\n\n    // o Reorder pre-base reordering consonants:\n    //\n    // If a pre-base reordering consonant is found, reorder it according to\n    // the following rules:\n    if (tryPref && base + 1 < end) {\n      for (var _i23 = base + 1; _i23 < end; _i23++) {\n        if (glyphs[_i23].features.pref) {\n          // 1. Only reorder a glyph produced by substitution during application\n          //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n          //    the feature generally but block it in certain contexts.)\n\n          // Note: We just check that something got substituted.  We don't check that\n          // the <pref> feature actually did it...\n          //\n          // Reorder pref only if it ligated.\n          if (glyphs[_i23].isLigated && !glyphs[_i23].isMultiplied) {\n            // 2. Try to find a target position the same way as for pre-base matra.\n            //    If it is found, reorder pre-base consonant glyph.\n            //\n            // 3. If position is not found, reorder immediately before main\n            //    consonant.\n            var _newPos = base;\n\n            // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n            // We want to position matra after them.\n            if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n              while (_newPos > start && !(glyphs[_newPos - 1].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n                _newPos--;\n              }\n\n              // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n              // split matra, it should be reordered to *before* the left part of such matra.\n              if (_newPos > start && glyphs[_newPos - 1].shaperInfo.category === CATEGORIES.M) {\n                var _oldPos2 = _i23;\n                for (var j = base + 1; j < _oldPos2; j++) {\n                  if (glyphs[j].shaperInfo.category === CATEGORIES.M) {\n                    _newPos--;\n                    break;\n                  }\n                }\n              }\n            }\n\n            if (_newPos > start && isHalantOrCoeng(glyphs[_newPos - 1])) {\n              // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n              if (_newPos < end && isJoiner(glyphs[_newPos])) {\n                _newPos++;\n              }\n            }\n\n            var _oldPos = _i23;\n            var _tmp = glyphs[_oldPos];\n            glyphs.splice.apply(glyphs, [_newPos + 1, 0].concat(glyphs.splice(_newPos, _oldPos - _newPos)));\n            glyphs[_newPos] = _tmp;\n\n            if (_newPos <= base && base < _oldPos) {\n              base++;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    // Apply 'init' to the Left Matra if it's a word start.\n    if (glyphs[start].shaperInfo.position === POSITIONS.Pre_M && (!start || !/Cf|Mn/.test(_react_pdf_unicode_properties__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getCategory(glyphs[start - 1].codePoints[0])))) {\n      glyphs[start].features.init = true;\n    }\n  }\n}\n\nfunction nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {}\n  return start;\n}\n\nvar type$2 = \"Buffer\";\nvar data$2 = [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 169, 208, 1, 81, 12, 174, 243, 237, 156, 127, 168, 29, 71, 21, 199, 231, 221, 247, 222, 253, 245, 110, 94, 242, 108, 126, 244, 217, 24, 155, 182, 20, 35, 98, 173, 138, 105, 21, 12, 109, 197, 90, 5, 83, 21, 141, 69, 169, 173, 149, 38, 42, 216, 7, 66, 26, 80, 82, 193, 104, 161, 137, 86, 37, 226, 175, 170, 49, 40, 36, 129, 162, 45, 20, 76, 171, 96, 219, 32, 54, 234, 31, 166, 138, 86, 13, 180, 193, 254, 209, 98, 181, 85, 12, 175, 180, 20, 191, 227, 206, 225, 158, 119, 50, 51, 59, 179, 187, 179, 123, 159, 185, 7, 62, 204, 238, 236, 236, 204, 153, 51, 115, 118, 103, 102, 127, 60, 223, 82, 106, 98, 82, 169, 30, 152, 3, 27, 193, 38, 112, 41, 184, 220, 196, 205, 87, 16, 190, 21, 188, 29, 188, 27, 124, 192, 147, 238, 122, 112, 179, 37, 126, 7, 88, 0, 59, 193, 110, 240, 69, 240, 101, 176, 31, 220, 101, 248, 33, 75, 127, 8, 252, 4, 252, 20, 252, 194, 146, 223, 207, 192, 49, 240, 60, 234, 255, 107, 163, 219, 156, 65, 199, 81, 248, 40, 194, 63, 128, 147, 224, 73, 240, 12, 248, 55, 120, 1, 76, 78, 41, 53, 3, 230, 192, 60, 216, 8, 54, 129, 75, 192, 102, 176, 101, 42, 75, 127, 53, 194, 173, 96, 27, 248, 8, 216, 14, 110, 1, 59, 193, 110, 176, 7, 236, 3, 251, 193, 93, 224, 32, 56, 2, 238, 53, 251, 247, 131, 135, 192, 113, 112, 2, 60, 6, 158, 0, 79, 129, 231, 192, 105, 240, 210, 84, 166, 115, 123, 90, 169, 89, 176, 118, 58, 219, 223, 128, 240, 98, 240, 90, 240, 6, 240, 22, 112, 37, 120, 167, 57, 254, 94, 132, 31, 4, 55, 128, 29, 96, 97, 58, 171, 183, 102, 23, 219, 174, 130, 207, 33, 191, 61, 21, 231, 201, 217, 43, 242, 254, 42, 246, 191, 5, 126, 0, 14, 131, 123, 166, 179, 250, 30, 5, 15, 130, 71, 192, 239, 114, 244, 121, 12, 199, 159, 0, 79, 129, 127, 152, 243, 79, 131, 23, 193, 84, 91, 169, 65, 59, 139, 91, 141, 112, 61, 184, 8, 188, 166, 61, 236, 75, 111, 196, 246, 102, 176, 5, 92, 13, 182, 130, 109, 230, 156, 235, 77, 120, 51, 194, 79, 129, 237, 172, 15, 238, 196, 254, 238, 118, 58, 91, 17, 95, 64, 25, 95, 2, 95, 7, 223, 5, 63, 2, 119, 179, 114, 239, 195, 246, 207, 193, 49, 19, 119, 28, 225, 9, 240, 71, 112, 50, 64, 191, 39, 145, 230, 153, 118, 102, 171, 103, 193, 34, 56, 4, 84, 71, 169, 110, 39, 139, 95, 129, 112, 208, 201, 210, 175, 52, 113, 154, 181, 108, 155, 179, 1, 241, 23, 131, 87, 139, 227, 175, 119, 164, 39, 46, 235, 100, 101, 79, 49, 189, 125, 233, 121, 186, 162, 232, 60, 222, 132, 114, 183, 128, 171, 192, 53, 96, 43, 216, 6, 62, 220, 241, 159, 123, 147, 56, 62, 152, 60, 51, 205, 39, 145, 230, 211, 224, 51, 157, 172, 223, 124, 158, 217, 224, 164, 167, 94, 119, 32, 221, 87, 192, 55, 193, 1, 135, 30, 54, 255, 63, 212, 25, 214, 235, 199, 157, 172, 175, 220, 135, 240, 1, 83, 174, 222, 126, 216, 108, 223, 157, 99, 219, 42, 236, 59, 102, 204, 217, 200, 216, 127, 198, 140, 25, 51, 102, 204, 152, 49, 99, 198, 196, 50, 103, 153, 79, 54, 205, 225, 246, 112, 77, 96, 123, 128, 126, 191, 98, 115, 215, 223, 136, 121, 236, 39, 60, 231, 83, 221, 127, 143, 115, 254, 218, 201, 214, 97, 254, 134, 240, 239, 224, 159, 224, 52, 120, 201, 196, 183, 187, 208, 167, 155, 165, 95, 131, 112, 30, 108, 4, 155, 186, 217, 241, 75, 17, 94, 14, 174, 48, 251, 215, 32, 124, 15, 184, 174, 235, 46, 95, 167, 187, 209, 115, 124, 204, 152, 49, 99, 198, 164, 101, 110, 178, 89, 154, 174, 255, 152, 49, 99, 210, 144, 218, 191, 119, 96, 252, 184, 208, 205, 158, 11, 221, 138, 240, 54, 203, 120, 242, 246, 110, 246, 108, 95, 111, 223, 41, 142, 127, 99, 4, 198, 159, 31, 27, 100, 236, 1, 199, 192, 219, 2, 88, 4, 151, 173, 88, 26, 183, 139, 237, 31, 192, 246, 159, 192, 185, 179, 74, 93, 11, 22, 102, 77, 60, 194, 199, 103, 135, 233, 158, 197, 246, 1, 216, 224, 113, 112, 126, 79, 169, 15, 129, 239, 128, 27, 176, 255, 189, 118, 22, 254, 210, 236, 115, 218, 253, 51, 227, 36, 87, 34, 205, 71, 89, 186, 131, 216, 62, 101, 246, 47, 152, 193, 49, 112, 112, 166, 249, 251, 79, 211, 228, 249, 203, 247, 181, 237, 76, 63, 61, 130, 240, 30, 112, 180, 155, 205, 19, 31, 236, 198, 223, 79, 247, 154, 52, 131, 156, 244, 182, 252, 30, 41, 80, 158, 43, 95, 121, 254, 111, 145, 247, 163, 221, 165, 233, 72, 223, 189, 158, 242, 254, 130, 115, 78, 129, 167, 187, 195, 186, 233, 116, 207, 97, 255, 63, 38, 191, 23, 88, 190, 147, 61, 119, 253, 108, 249, 199, 182, 101, 108, 251, 207, 64, 159, 21, 96, 13, 88, 15, 46, 2, 175, 2, 15, 152, 252, 94, 135, 237, 205, 96, 11, 184, 202, 28, 127, 23, 120, 159, 241, 215, 155, 192, 142, 222, 48, 191, 5, 108, 239, 2, 159, 5, 123, 192, 62, 240, 53, 240, 109, 112, 176, 151, 175, 143, 126, 159, 230, 8, 210, 221, 235, 72, 171, 231, 237, 247, 227, 216, 67, 189, 225, 254, 113, 108, 159, 96, 251, 127, 238, 101, 239, 150, 232, 253, 83, 216, 126, 218, 83, 110, 81, 91, 219, 242, 104, 218, 151, 99, 124, 189, 46, 92, 229, 255, 171, 23, 231, 167, 203, 217, 86, 77, 151, 191, 216, 91, 154, 239, 139, 198, 246, 45, 220, 15, 251, 253, 102, 108, 62, 138, 109, 62, 74, 253, 109, 208, 175, 215, 38, 190, 119, 132, 238, 48, 239, 19, 173, 238, 103, 225, 121, 8, 47, 4, 155, 204, 254, 37, 253, 97, 218, 205, 125, 127, 254, 189, 142, 255, 62, 220, 20, 121, 239, 73, 133, 188, 71, 245, 102, 211, 102, 87, 32, 124, 71, 205, 237, 87, 117, 255, 91, 110, 126, 233, 211, 61, 164, 14, 186, 13, 175, 101, 253, 88, 191, 187, 247, 126, 236, 95, 215, 207, 250, 255, 97, 246, 126, 163, 78, 183, 200, 222, 49, 189, 17, 251, 31, 55, 113, 183, 228, 244, 127, 27, 139, 145, 125, 141, 222, 49, 60, 29, 144, 86, 191, 11, 120, 107, 127, 105, 28, 127, 47, 241, 97, 51, 166, 166, 186, 223, 102, 194, 219, 17, 238, 235, 12, 245, 191, 83, 212, 107, 191, 217, 63, 106, 25, 147, 47, 71, 22, 91, 19, 255, 99, 20, 100, 130, 209, 18, 251, 60, 13, 133, 147, 236, 248, 84, 32, 50, 63, 229, 136, 75, 45, 163, 97, 241, 177, 144, 80, 95, 106, 89, 160, 182, 106, 89, 206, 107, 137, 112, 218, 64, 18, 210, 183, 82, 247, 133, 201, 196, 249, 87, 45, 237, 166, 21, 40, 33, 33, 109, 121, 54, 249, 190, 205, 103, 206, 38, 153, 112, 48, 10, 34, 245, 224, 215, 188, 229, 46, 182, 49, 131, 220, 94, 46, 82, 180, 207, 216, 198, 82, 69, 218, 87, 218, 111, 57, 217, 176, 46, 191, 11, 205, 59, 198, 246, 85, 251, 33, 111, 123, 215, 117, 41, 143, 255, 119, 113, 205, 59, 202, 74, 81, 123, 147, 14, 29, 6, 166, 158, 193, 243, 157, 170, 233, 1, 76, 129, 213, 140, 217, 215, 219, 3, 19, 174, 16, 244, 4, 125, 193, 44, 59, 151, 234, 184, 146, 217, 172, 199, 242, 10, 213, 143, 210, 23, 153, 23, 170, 18, 118, 33, 253, 187, 134, 144, 188, 148, 72, 39, 247, 139, 232, 16, 114, 156, 139, 75, 167, 144, 246, 37, 25, 24, 228, 190, 110, 223, 16, 31, 234, 91, 226, 92, 117, 146, 101, 199, 218, 40, 239, 254, 231, 59, 206, 253, 207, 87, 182, 175, 46, 69, 116, 142, 109, 223, 188, 109, 45, 51, 38, 180, 181, 175, 20, 242, 95, 185, 63, 107, 73, 235, 147, 144, 254, 152, 119, 142, 11, 221, 46, 171, 84, 54, 215, 165, 249, 238, 92, 164, 126, 161, 237, 235, 107, 147, 24, 157, 171, 106, 223, 162, 254, 75, 109, 202, 175, 209, 74, 45, 189, 62, 87, 37, 101, 253, 151, 198, 174, 121, 101, 228, 149, 223, 132, 253, 233, 222, 87, 228, 250, 153, 39, 210, 55, 101, 125, 165, 158, 69, 237, 223, 18, 245, 43, 42, 218, 191, 242, 238, 181, 182, 122, 184, 108, 110, 75, 171, 44, 233, 93, 233, 92, 229, 216, 226, 67, 251, 16, 23, 242, 37, 62, 254, 225, 50, 80, 75, 219, 159, 239, 135, 250, 159, 237, 254, 233, 146, 34, 245, 176, 173, 137, 230, 173, 21, 240, 177, 80, 204, 120, 40, 198, 31, 203, 250, 115, 172, 29, 244, 190, 111, 60, 171, 212, 153, 215, 82, 190, 159, 215, 158, 52, 222, 181, 217, 65, 74, 89, 127, 46, 35, 212, 230, 69, 198, 187, 77, 181, 175, 43, 45, 137, 188, 94, 167, 104, 95, 155, 255, 75, 145, 186, 150, 105, 223, 151, 25, 138, 72, 89, 191, 41, 226, 99, 100, 127, 9, 183, 65, 222, 245, 242, 156, 128, 186, 133, 180, 65, 29, 254, 37, 215, 26, 108, 235, 14, 49, 254, 85, 68, 183, 20, 109, 25, 147, 46, 68, 15, 46, 54, 31, 227, 125, 133, 124, 145, 218, 108, 5, 75, 51, 112, 224, 235, 15, 177, 54, 37, 61, 138, 172, 29, 213, 233, 115, 33, 109, 211, 99, 113, 114, 45, 199, 54, 142, 37, 105, 41, 127, 222, 250, 252, 142, 96, 149, 9, 245, 177, 178, 207, 243, 165, 61, 21, 11, 243, 226, 93, 18, 219, 207, 229, 113, 101, 9, 109, 186, 196, 218, 95, 153, 253, 57, 71, 190, 46, 63, 146, 246, 87, 44, 204, 171, 155, 45, 79, 91, 188, 124, 134, 94, 148, 22, 11, 229, 152, 211, 53, 38, 173, 218, 39, 116, 158, 211, 34, 92, 165, 220, 18, 234, 99, 169, 253, 152, 11, 95, 147, 117, 173, 209, 74, 104, 140, 199, 247, 59, 106, 184, 198, 234, 171, 239, 234, 8, 84, 100, 250, 20, 104, 201, 155, 235, 76, 123, 142, 241, 243, 93, 253, 216, 230, 19, 54, 73, 221, 55, 98, 176, 221, 91, 53, 3, 101, 239, 47, 122, 13, 95, 247, 153, 89, 19, 183, 6, 172, 85, 217, 53, 106, 46, 178, 108, 105, 67, 122, 79, 39, 79, 87, 215, 115, 131, 57, 181, 84, 143, 190, 26, 142, 177, 100, 30, 93, 11, 60, 47, 89, 247, 34, 182, 157, 83, 195, 177, 9, 229, 99, 43, 183, 107, 236, 58, 101, 209, 195, 7, 157, 75, 237, 215, 196, 243, 125, 91, 31, 111, 250, 89, 99, 158, 159, 87, 97, 167, 84, 245, 72, 97, 163, 162, 247, 23, 25, 39, 199, 38, 41, 203, 183, 193, 203, 143, 177, 81, 213, 229, 199, 74, 21, 246, 87, 53, 151, 159, 167, 155, 22, 126, 223, 176, 205, 29, 92, 115, 50, 130, 198, 31, 125, 53, 28, 123, 232, 123, 240, 58, 149, 141, 191, 166, 25, 180, 6, 163, 183, 165, 143, 200, 251, 48, 181, 85, 108, 253, 83, 137, 239, 26, 88, 199, 117, 81, 223, 87, 171, 238, 3, 49, 54, 229, 125, 67, 142, 55, 8, 57, 86, 227, 114, 174, 97, 37, 219, 150, 204, 155, 124, 166, 45, 231, 203, 107, 125, 236, 251, 3, 85, 251, 77, 217, 190, 87, 180, 220, 162, 231, 75, 248, 186, 85, 25, 253, 164, 132, 222, 183, 83, 147, 178, 15, 144, 31, 208, 218, 20, 191, 78, 165, 236, 151, 52, 70, 215, 190, 178, 142, 49, 47, 208, 50, 203, 116, 115, 249, 43, 159, 99, 146, 95, 219, 174, 241, 114, 110, 201, 225, 215, 119, 146, 233, 136, 58, 185, 164, 236, 249, 121, 227, 214, 212, 99, 90, 110, 35, 221, 70, 117, 191, 19, 166, 239, 189, 182, 57, 161, 92, 87, 112, 181, 245, 108, 78, 254, 82, 66, 245, 202, 91, 71, 10, 225, 229, 224, 60, 19, 186, 136, 157, 59, 52, 213, 78, 28, 126, 255, 180, 93, 99, 200, 151, 103, 89, 186, 212, 253, 70, 174, 221, 83, 72, 215, 158, 144, 103, 102, 90, 100, 91, 187, 234, 46, 175, 65, 124, 189, 96, 157, 135, 245, 6, 125, 237, 161, 119, 167, 92, 101, 199, 92, 159, 185, 132, 92, 119, 66, 165, 236, 220, 154, 95, 95, 116, 250, 149, 14, 40, 141, 45, 190, 235, 57, 143, 191, 231, 73, 98, 139, 163, 113, 68, 71, 196, 119, 44, 113, 49, 242, 10, 176, 129, 237, 79, 58, 8, 181, 151, 92, 159, 138, 181, 119, 204, 122, 72, 72, 124, 108, 222, 242, 222, 21, 115, 158, 150, 87, 6, 212, 49, 70, 108, 99, 244, 208, 243, 228, 120, 161, 14, 105, 114, 44, 170, 28, 219, 174, 227, 161, 245, 9, 57, 47, 79, 39, 91, 104, 43, 39, 70, 175, 178, 245, 168, 114, 253, 51, 70, 31, 223, 24, 33, 180, 77, 93, 249, 132, 30, 47, 210, 183, 108, 229, 87, 93, 142, 111, 236, 20, 34, 177, 249, 165, 210, 183, 108, 154, 148, 246, 108, 162, 92, 87, 91, 142, 130, 14, 117, 233, 209, 132, 52, 173, 219, 40, 244, 229, 24, 61, 38, 19, 235, 236, 179, 187, 28, 115, 150, 181, 95, 21, 246, 175, 67, 242, 202, 170, 195, 254, 117, 181, 115, 19, 253, 42, 69, 191, 41, 42, 41, 250, 87, 213, 58, 22, 121, 246, 226, 154, 135, 185, 242, 204, 91, 47, 116, 157, 95, 180, 14, 69, 230, 114, 182, 244, 82, 175, 186, 165, 78, 255, 169, 203, 63, 235, 180, 135, 77, 228, 218, 104, 25, 61, 138, 156, 151, 66, 242, 234, 91, 85, 59, 184, 242, 169, 187, 31, 196, 74, 83, 253, 186, 108, 157, 71, 193, 247, 82, 60, 199, 161, 124, 99, 211, 242, 117, 98, 190, 110, 108, 123, 15, 173, 99, 137, 171, 18, 190, 134, 78, 107, 248, 69, 109, 31, 122, 94, 213, 117, 136, 93, 175, 181, 189, 15, 88, 39, 250, 25, 173, 237, 91, 25, 23, 161, 223, 18, 150, 121, 126, 193, 197, 246, 44, 183, 8, 121, 122, 186, 198, 38, 46, 125, 109, 239, 56, 243, 103, 18, 177, 245, 15, 65, 62, 23, 149, 207, 74, 249, 115, 38, 106, 215, 24, 209, 250, 54, 249, 44, 88, 66, 207, 248, 92, 239, 12, 211, 115, 96, 253, 60, 110, 141, 129, 254, 21, 17, 11, 73, 209, 254, 234, 107, 111, 122, 239, 34, 181, 189, 66, 203, 176, 189, 95, 193, 159, 177, 83, 156, 124, 223, 58, 68, 120, 57, 235, 2, 116, 161, 190, 106, 59, 63, 196, 254, 178, 29, 171, 182, 33, 23, 126, 63, 209, 199, 232, 121, 98, 149, 126, 210, 99, 33, 181, 131, 108, 55, 215, 121, 116, 127, 166, 176, 78, 41, 98, 127, 221, 215, 120, 223, 235, 43, 251, 125, 147, 190, 1, 8, 17, 158, 191, 237, 155, 121, 254, 94, 224, 132, 201, 187, 238, 239, 158, 203, 136, 28, 207, 156, 95, 146, 208, 57, 188, 79, 66, 230, 252, 182, 99, 121, 105, 93, 229, 248, 210, 209, 220, 44, 197, 248, 218, 166, 71, 75, 249, 109, 102, 91, 151, 137, 41, 67, 198, 41, 101, 183, 117, 93, 34, 251, 159, 109, 205, 35, 239, 156, 50, 229, 165, 154, 59, 21, 145, 81, 153, 159, 151, 153, 195, 74, 29, 203, 206, 133, 155, 92, 147, 160, 242, 235, 166, 42, 73, 221, 167, 83, 231, 31, 98, 15, 125, 239, 148, 223, 124, 251, 190, 53, 161, 116, 244, 46, 88, 200, 120, 173, 170, 177, 88, 200, 125, 95, 207, 81, 102, 212, 153, 239, 242, 105, 201, 123, 55, 53, 100, 28, 17, 51, 119, 9, 145, 212, 254, 89, 149, 158, 203, 89, 7, 95, 153, 124, 206, 64, 255, 85, 73, 217, 95, 109, 243, 4, 215, 55, 84, 190, 127, 110, 230, 205, 171, 165, 108, 44, 73, 29, 227, 240, 11, 84, 243, 255, 66, 181, 253, 87, 79, 190, 211, 172, 109, 175, 175, 47, 182, 113, 51, 95, 227, 106, 66, 127, 87, 223, 242, 125, 219, 77, 199, 232, 187, 110, 21, 81, 70, 89, 127, 174, 178, 190, 178, 77, 234, 46, 223, 247, 79, 70, 159, 31, 235, 115, 207, 81, 195, 127, 28, 217, 252, 121, 70, 13, 219, 138, 215, 47, 198, 47, 109, 115, 188, 170, 109, 64, 101, 133, 74, 149, 101, 22, 109, 51, 249, 156, 67, 254, 247, 64, 183, 209, 42, 67, 222, 245, 54, 68, 71, 91, 186, 178, 182, 136, 57, 223, 231, 31, 85, 247, 133, 24, 180, 173, 125, 215, 95, 98, 70, 185, 199, 167, 101, 251, 40, 191, 255, 140, 250, 255, 158, 125, 105, 73, 248, 255, 239, 228, 218, 155, 252, 6, 167, 204, 255, 74, 149, 10, 123, 190, 33, 253, 142, 36, 244, 89, 81, 204, 179, 36, 95, 249, 69, 9, 185, 198, 211, 61, 150, 127, 139, 68, 223, 188, 83, 223, 162, 49, 4, 181, 85, 232, 61, 171, 108, 255, 78, 85, 119, 18, 219, 119, 254, 178, 206, 33, 115, 168, 162, 72, 157, 203, 254, 87, 220, 102, 3, 249, 47, 26, 215, 61, 158, 210, 241, 250, 247, 148, 253, 190, 17, 42, 117, 182, 63, 255, 71, 84, 222, 53, 153, 218, 182, 42, 253, 203, 194, 69, 63, 43, 211, 207, 205, 46, 84, 249, 255, 60, 146, 117, 43, 171, 191, 92, 155, 46, 43, 169, 230, 208, 41, 231, 227, 77, 205, 243, 201, 230, 190, 181, 193, 170, 218, 165, 168, 200, 181, 244, 208, 53, 226, 186, 215, 79, 235, 88, 67, 15, 201, 191, 174, 58, 143, 226, 122, 180, 77, 108, 101, 52, 213, 159, 171, 170, 119, 136, 61, 99, 108, 79, 219, 117, 172, 63, 142, 98, 191, 43, 155, 71, 138, 190, 159, 194, 135, 83, 248, 97, 234, 114, 203, 232, 86, 84, 63, 223, 249, 85, 151, 95, 149, 254, 77, 151, 95, 101, 159, 138, 45, 191, 73, 249, 47];\nvar trieData$2 = {\n\ttype: type$2,\n\tdata: data$2\n};\n\nvar _class$7;\nvar _temp$3;\n\nvar categories$1 = useData.categories;\nvar decompositions$2 = useData.decompositions;\n\nvar trie$2 = new unicode_trie__WEBPACK_IMPORTED_MODULE_4___default.a(new Uint8Array(trieData$2.data));\nvar stateMachine$1 = new dfa__WEBPACK_IMPORTED_MODULE_5___default.a(useData);\n\n/**\n * This shaper is an implementation of the Universal Shaping Engine, which\n * uses Unicode data to shape a number of scripts without a dedicated shaping engine.\n * See https://www.microsoft.com/typography/OpenTypeDev/USE/intro.htm.\n */\nvar UniversalShaper = (_temp$3 = _class$7 = function (_DefaultShaper) {\n  inherits(UniversalShaper, _DefaultShaper);\n\n  function UniversalShaper() {\n    classCallCheck(this, UniversalShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  UniversalShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables$1);\n\n    // Default glyph pre-processing group\n    plan.addStage(['locl', 'ccmp', 'nukt', 'akhn']);\n\n    // Reordering group\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['rphf'], false);\n    plan.addStage(recordRphf);\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['pref']);\n    plan.addStage(recordPref);\n\n    // Orthographic unit shaping group\n    plan.addStage(['rkrf', 'abvf', 'blwf', 'half', 'pstf', 'vatu', 'cjct']);\n    plan.addStage(reorder);\n\n    // Topographical features\n    // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n    // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n\n    // Standard topographic presentation and positional feature application\n    plan.addStage(['abvs', 'blws', 'pres', 'psts', 'dist', 'abvm', 'blwm']);\n  };\n\n  UniversalShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n      if (decompositions$2[codepoint]) {\n        var decomposed = decompositions$2[codepoint].map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    };\n\n    // Decompose split vowels\n    // TODO: do this in a more general unicode normalizer\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return UniversalShaper;\n}(DefaultShaper), _class$7.zeroMarkWidths = 'BEFORE_GPOS', _temp$3);\nfunction useCategory(glyph) {\n  return trie$2.get(glyph.codePoints[0]);\n}\n\nvar USEInfo = function USEInfo(category, syllableType, syllable) {\n  classCallCheck(this, USEInfo);\n\n  this.category = category;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables$1(font, glyphs) {\n  var syllable = 0;\n  for (var _iterator = stateMachine$1.match(glyphs.map(useCategory)), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _ref2 = _ref,\n        start = _ref2[0],\n        end = _ref2[1],\n        tags = _ref2[2];\n\n    ++syllable;\n\n    // Create shaper info\n    for (var i = start; i <= end; i++) {\n      glyphs[i].shaperInfo = new USEInfo(categories$1[useCategory(glyphs[i])], tags[0], syllable);\n    }\n\n    // Assign rphf feature\n    var limit = glyphs[start].shaperInfo.category === 'R' ? 1 : Math.min(3, end - start);\n    for (var _i2 = start; _i2 < start + limit; _i2++) {\n      glyphs[_i2].features.rphf = true;\n    }\n  }\n}\n\nfunction clearSubstitutionFlags(font, glyphs) {\n  for (var _iterator2 = glyphs, _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n    var _ref3;\n\n    if (_isArray2) {\n      if (_i3 >= _iterator2.length) break;\n      _ref3 = _iterator2[_i3++];\n    } else {\n      _i3 = _iterator2.next();\n      if (_i3.done) break;\n      _ref3 = _i3.value;\n    }\n\n    var glyph = _ref3;\n\n    glyph.substituted = false;\n  }\n}\n\nfunction recordRphf(font, glyphs) {\n  for (var _iterator3 = glyphs, _isArray3 = Array.isArray(_iterator3), _i4 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n    var _ref4;\n\n    if (_isArray3) {\n      if (_i4 >= _iterator3.length) break;\n      _ref4 = _iterator3[_i4++];\n    } else {\n      _i4 = _iterator3.next();\n      if (_i4.done) break;\n      _ref4 = _i4.value;\n    }\n\n    var glyph = _ref4;\n\n    if (glyph.substituted && glyph.features.rphf) {\n      // Mark a substituted repha.\n      glyph.shaperInfo.category = 'R';\n    }\n  }\n}\n\nfunction recordPref(font, glyphs) {\n  for (var _iterator4 = glyphs, _isArray4 = Array.isArray(_iterator4), _i5 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n    var _ref5;\n\n    if (_isArray4) {\n      if (_i5 >= _iterator4.length) break;\n      _ref5 = _iterator4[_i5++];\n    } else {\n      _i5 = _iterator4.next();\n      if (_i5.done) break;\n      _ref5 = _i5.value;\n    }\n\n    var glyph = _ref5;\n\n    if (glyph.substituted) {\n      // Mark a substituted pref as VPre, as they behave the same way.\n      glyph.shaperInfo.category = 'VPre';\n    }\n  }\n}\n\nfunction reorder(font, glyphs) {\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n\n  for (var start = 0, end = nextSyllable$1(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable$1(glyphs, start)) {\n    var i = void 0,\n        j = void 0;\n    var info = glyphs[start].shaperInfo;\n    var type = info.syllableType;\n\n    // Only a few syllable types need reordering.\n    if (type !== 'virama_terminated_cluster' && type !== 'standard_cluster' && type !== 'broken_cluster') {\n      continue;\n    }\n\n    // Insert a dotted circle glyph in broken clusters.\n    if (type === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = info;\n\n      // Insert after possible Repha.\n      for (i = start; i < end && glyphs[i].shaperInfo.category === 'R'; i++) {}\n      glyphs.splice(++i, 0, g);\n      end++;\n    }\n\n    // Move things forward.\n    if (info.category === 'R' && end - start > 1) {\n      // Got a repha. Reorder it to after first base, before first halant.\n      for (i = start + 1; i < end; i++) {\n        info = glyphs[i].shaperInfo;\n        if (isBase(info) || isHalant(glyphs[i])) {\n          // If we hit a halant, move before it; otherwise it's a base: move to it's\n          // place, and shift things in between backward.\n          if (isHalant(glyphs[i])) {\n            i--;\n          }\n\n          glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, i - start), [glyphs[i]]));\n          break;\n        }\n      }\n    }\n\n    // Move things back.\n    for (i = start, j = end; i < end; i++) {\n      info = glyphs[i].shaperInfo;\n      if (isBase(info) || isHalant(glyphs[i])) {\n        // If we hit a halant, move after it; otherwise it's a base: move to it's\n        // place, and shift things in between backward.\n        j = isHalant(glyphs[i]) ? i + 1 : i;\n      } else if ((info.category === 'VPre' || info.category === 'VMPre') && j < i) {\n        glyphs.splice.apply(glyphs, [j, 1, glyphs[i]].concat(glyphs.splice(j, i - j)));\n      }\n    }\n  }\n}\n\nfunction nextSyllable$1(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {}\n  return start;\n}\n\nfunction isHalant(glyph) {\n  return glyph.shaperInfo.category === 'H' && !glyph.isLigated;\n}\n\nfunction isBase(info) {\n  return info.category === 'B' || info.category === 'GB';\n}\n\nvar SHAPERS = {\n  arab: ArabicShaper, // Arabic\n  mong: ArabicShaper, // Mongolian\n  syrc: ArabicShaper, // Syriac\n  'nko ': ArabicShaper, // N'Ko\n  phag: ArabicShaper, // Phags Pa\n  mand: ArabicShaper, // Mandaic\n  mani: ArabicShaper, // Manichaean\n  phlp: ArabicShaper, // Psalter Pahlavi\n\n  hang: HangulShaper, // Hangul\n\n  bng2: IndicShaper, // Bengali\n  beng: IndicShaper, // Bengali\n  dev2: IndicShaper, // Devanagari\n  deva: IndicShaper, // Devanagari\n  gjr2: IndicShaper, // Gujarati\n  gujr: IndicShaper, // Gujarati\n  guru: IndicShaper, // Gurmukhi\n  gur2: IndicShaper, // Gurmukhi\n  knda: IndicShaper, // Kannada\n  knd2: IndicShaper, // Kannada\n  mlm2: IndicShaper, // Malayalam\n  mlym: IndicShaper, // Malayalam\n  ory2: IndicShaper, // Oriya\n  orya: IndicShaper, // Oriya\n  taml: IndicShaper, // Tamil\n  tml2: IndicShaper, // Tamil\n  telu: IndicShaper, // Telugu\n  tel2: IndicShaper, // Telugu\n  khmr: IndicShaper, // Khmer\n\n  bali: UniversalShaper, // Balinese\n  batk: UniversalShaper, // Batak\n  brah: UniversalShaper, // Brahmi\n  bugi: UniversalShaper, // Buginese\n  buhd: UniversalShaper, // Buhid\n  cakm: UniversalShaper, // Chakma\n  cham: UniversalShaper, // Cham\n  dupl: UniversalShaper, // Duployan\n  egyp: UniversalShaper, // Egyptian Hieroglyphs\n  gran: UniversalShaper, // Grantha\n  hano: UniversalShaper, // Hanunoo\n  java: UniversalShaper, // Javanese\n  kthi: UniversalShaper, // Kaithi\n  kali: UniversalShaper, // Kayah Li\n  khar: UniversalShaper, // Kharoshthi\n  khoj: UniversalShaper, // Khojki\n  sind: UniversalShaper, // Khudawadi\n  lepc: UniversalShaper, // Lepcha\n  limb: UniversalShaper, // Limbu\n  mahj: UniversalShaper, // Mahajani\n  // mand: UniversalShaper, // Mandaic\n  // mani: UniversalShaper, // Manichaean\n  mtei: UniversalShaper, // Meitei Mayek\n  modi: UniversalShaper, // Modi\n  // mong: UniversalShaper, // Mongolian\n  // 'nko ': UniversalShaper, // N’Ko\n  hmng: UniversalShaper, // Pahawh Hmong\n  // phag: UniversalShaper, // Phags-pa\n  // phlp: UniversalShaper, // Psalter Pahlavi\n  rjng: UniversalShaper, // Rejang\n  saur: UniversalShaper, // Saurashtra\n  shrd: UniversalShaper, // Sharada\n  sidd: UniversalShaper, // Siddham\n  sinh: UniversalShaper, // Sinhala\n  sund: UniversalShaper, // Sundanese\n  sylo: UniversalShaper, // Syloti Nagri\n  tglg: UniversalShaper, // Tagalog\n  tagb: UniversalShaper, // Tagbanwa\n  tale: UniversalShaper, // Tai Le\n  lana: UniversalShaper, // Tai Tham\n  tavt: UniversalShaper, // Tai Viet\n  takr: UniversalShaper, // Takri\n  tibt: UniversalShaper, // Tibetan\n  tfng: UniversalShaper, // Tifinagh\n  tirh: UniversalShaper, // Tirhuta\n\n  latn: DefaultShaper, // Latin\n  DFLT: DefaultShaper // Default\n};\n\nfunction choose(script) {\n  if (!Array.isArray(script)) {\n    script = [script];\n  }\n\n  for (var _iterator = script, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var s = _ref;\n\n    var shaper = SHAPERS[s];\n    if (shaper) {\n      return shaper;\n    }\n  }\n\n  return DefaultShaper;\n}\n\nvar GSUBProcessor = function (_OTProcessor) {\n  inherits(GSUBProcessor, _OTProcessor);\n\n  function GSUBProcessor() {\n    classCallCheck(this, GSUBProcessor);\n    return possibleConstructorReturn(this, _OTProcessor.apply(this, arguments));\n  }\n\n  GSUBProcessor.prototype.applyLookup = function applyLookup(lookupType, table) {\n    var _this2 = this;\n\n    switch (lookupType) {\n      case 1:\n        {\n          // Single Substitution\n          var index = this.coverageIndex(table.coverage);\n          if (index === -1) {\n            return false;\n          }\n\n          var glyph = this.glyphIterator.cur;\n          switch (table.version) {\n            case 1:\n              glyph.id = glyph.id + table.deltaGlyphID & 0xffff;\n              break;\n\n            case 2:\n              glyph.id = table.substitute.get(index);\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          // Multiple Substitution\n          var _index = this.coverageIndex(table.coverage);\n          if (_index !== -1) {\n            var _glyphs;\n\n            var sequence = table.sequences.get(_index);\n            this.glyphIterator.cur.id = sequence[0];\n            this.glyphIterator.cur.ligatureComponent = 0;\n\n            var features = this.glyphIterator.cur.features;\n            var curGlyph = this.glyphIterator.cur;\n            var replacement = sequence.slice(1).map(function (gid, i) {\n              var glyph = new GlyphInfo(_this2.font, gid, undefined, features);\n              glyph.shaperInfo = curGlyph.shaperInfo;\n              glyph.isLigated = curGlyph.isLigated;\n              glyph.ligatureComponent = i + 1;\n              glyph.substituted = true;\n              glyph.isMultiplied = true;\n              return glyph;\n            });\n\n            (_glyphs = this.glyphs).splice.apply(_glyphs, [this.glyphIterator.index + 1, 0].concat(replacement));\n            return true;\n          }\n\n          return false;\n        }\n\n      case 3:\n        {\n          // Alternate Substitution\n          var _index2 = this.coverageIndex(table.coverage);\n          if (_index2 !== -1) {\n            var USER_INDEX = 0; // TODO\n            this.glyphIterator.cur.id = table.alternateSet.get(_index2)[USER_INDEX];\n            return true;\n          }\n\n          return false;\n        }\n\n      case 4:\n        {\n          // Ligature Substitution\n          var _index3 = this.coverageIndex(table.coverage);\n          if (_index3 === -1) {\n            return false;\n          }\n\n          for (var _iterator = table.ligatureSets.get(_index3), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref = _i.value;\n            }\n\n            var ligature = _ref;\n\n            var matched = this.sequenceMatchIndices(1, ligature.components);\n            if (!matched) {\n              continue;\n            }\n\n            var _curGlyph = this.glyphIterator.cur;\n\n            // Concatenate all of the characters the new ligature will represent\n            var characters = _curGlyph.codePoints.slice();\n            for (var _iterator2 = matched, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n              var _ref2;\n\n              if (_isArray2) {\n                if (_i2 >= _iterator2.length) break;\n                _ref2 = _iterator2[_i2++];\n              } else {\n                _i2 = _iterator2.next();\n                if (_i2.done) break;\n                _ref2 = _i2.value;\n              }\n\n              var _index4 = _ref2;\n\n              characters.push.apply(characters, this.glyphs[_index4].codePoints);\n            }\n\n            // Create the replacement ligature glyph\n            var ligatureGlyph = new GlyphInfo(this.font, ligature.glyph, characters, _curGlyph.features, _curGlyph.stringIndex);\n            ligatureGlyph.shaperInfo = _curGlyph.shaperInfo;\n            ligatureGlyph.isLigated = true;\n            ligatureGlyph.substituted = true;\n\n            // From Harfbuzz:\n            // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n            //   the ligature to keep its old ligature id.  This will allow it to attach to\n            //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n            //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n            //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n            //   later, we don't want them to lose their ligature id/component, otherwise\n            //   GPOS will fail to correctly position the mark ligature on top of the\n            //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n            //\n            // - If a ligature is formed of components that some of which are also ligatures\n            //   themselves, and those ligature components had marks attached to *their*\n            //   components, we have to attach the marks to the new ligature component\n            //   positions!  Now *that*'s tricky!  And these marks may be following the\n            //   last component of the whole sequence, so we should loop forward looking\n            //   for them and update them.\n            //\n            //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n            //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n            //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n            //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n            //   the new ligature with a component value of 2.\n            //\n            //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n            var isMarkLigature = _curGlyph.isMark;\n            for (var i = 0; i < matched.length && isMarkLigature; i++) {\n              isMarkLigature = this.glyphs[matched[i]].isMark;\n            }\n\n            ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n\n            var lastLigID = _curGlyph.ligatureID;\n            var lastNumComps = _curGlyph.codePoints.length;\n            var curComps = lastNumComps;\n            var idx = this.glyphIterator.index + 1;\n\n            // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n            // This allows GPOS to attach marks to the correct ligature components.\n            for (var _iterator3 = matched, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n              var _ref3;\n\n              if (_isArray3) {\n                if (_i3 >= _iterator3.length) break;\n                _ref3 = _iterator3[_i3++];\n              } else {\n                _i3 = _iterator3.next();\n                if (_i3.done) break;\n                _ref3 = _i3.value;\n              }\n\n              var matchIndex = _ref3;\n\n              // Don't assign new ligature components for mark ligatures (see above)\n              if (isMarkLigature) {\n                idx = matchIndex;\n              } else {\n                while (idx < matchIndex) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                  this.glyphs[idx].ligatureComponent = ligatureComponent;\n                  idx++;\n                }\n              }\n\n              lastLigID = this.glyphs[idx].ligatureID;\n              lastNumComps = this.glyphs[idx].codePoints.length;\n              curComps += lastNumComps;\n              idx++; // skip base glyph\n            }\n\n            // Adjust ligature components for any marks following\n            if (lastLigID && !isMarkLigature) {\n              for (var _i4 = idx; _i4 < this.glyphs.length; _i4++) {\n                if (this.glyphs[_i4].ligatureID === lastLigID) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[_i4].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[_i4].ligatureComponent = ligatureComponent;\n                } else {\n                  break;\n                }\n              }\n            }\n\n            // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n            for (var _i5 = matched.length - 1; _i5 >= 0; _i5--) {\n              this.glyphs.splice(matched[_i5], 1);\n            }\n\n            this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n            return true;\n          }\n\n          return false;\n        }\n\n      case 5:\n        // Contextual Substitution\n        return this.applyContext(table);\n\n      case 6:\n        // Chaining Contextual Substitution\n        return this.applyChainingContext(table);\n\n      case 7:\n        // Extension Substitution\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error('GSUB lookupType ' + lookupType + ' is not supported');\n    }\n  };\n\n  return GSUBProcessor;\n}(OTProcessor);\n\nvar GPOSProcessor = function (_OTProcessor) {\n  inherits(GPOSProcessor, _OTProcessor);\n\n  function GPOSProcessor() {\n    classCallCheck(this, GPOSProcessor);\n    return possibleConstructorReturn(this, _OTProcessor.apply(this, arguments));\n  }\n\n  GPOSProcessor.prototype.applyPositionValue = function applyPositionValue(sequenceIndex, value) {\n    var position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n    if (value.xAdvance != null) {\n      position.xAdvance += value.xAdvance;\n    }\n\n    if (value.yAdvance != null) {\n      position.yAdvance += value.yAdvance;\n    }\n\n    if (value.xPlacement != null) {\n      position.xOffset += value.xPlacement;\n    }\n\n    if (value.yPlacement != null) {\n      position.yOffset += value.yPlacement;\n    }\n\n    // Adjustments for font variations\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n    if (variationProcessor && variationStore) {\n      if (value.xPlaDevice) {\n        position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n      }\n\n      if (value.yPlaDevice) {\n        position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n      }\n\n      if (value.xAdvDevice) {\n        position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n      }\n\n      if (value.yAdvDevice) {\n        position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n      }\n    }\n\n    // TODO: device tables\n  };\n\n  GPOSProcessor.prototype.applyLookup = function applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1:\n        {\n          // Single positioning value\n          var index = this.coverageIndex(table.coverage);\n          if (index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              this.applyPositionValue(0, table.value);\n              break;\n\n            case 2:\n              this.applyPositionValue(0, table.values.get(index));\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          // Pair Adjustment Positioning\n          var nextGlyph = this.glyphIterator.peek();\n          if (!nextGlyph) {\n            return false;\n          }\n\n          var _index = this.coverageIndex(table.coverage);\n          if (_index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              // Adjustments for glyph pairs\n              var set$$1 = table.pairSets.get(_index);\n\n              for (var _iterator = set$$1, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n                var _ref;\n\n                if (_isArray) {\n                  if (_i >= _iterator.length) break;\n                  _ref = _iterator[_i++];\n                } else {\n                  _i = _iterator.next();\n                  if (_i.done) break;\n                  _ref = _i.value;\n                }\n\n                var _pair = _ref;\n\n                if (_pair.secondGlyph === nextGlyph.id) {\n                  this.applyPositionValue(0, _pair.value1);\n                  this.applyPositionValue(1, _pair.value2);\n                  return true;\n                }\n              }\n\n              return false;\n\n            case 2:\n              // Class pair adjustment\n              var class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n              var class2 = this.getClassID(nextGlyph.id, table.classDef2);\n              if (class1 === -1 || class2 === -1) {\n                return false;\n              }\n\n              var pair = table.classRecords.get(class1).get(class2);\n              this.applyPositionValue(0, pair.value1);\n              this.applyPositionValue(1, pair.value2);\n              return true;\n          }\n        }\n\n      case 3:\n        {\n          // Cursive Attachment Positioning\n          var nextIndex = this.glyphIterator.peekIndex();\n          var _nextGlyph = this.glyphs[nextIndex];\n          if (!_nextGlyph) {\n            return false;\n          }\n\n          var curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n          if (!curRecord || !curRecord.exitAnchor) {\n            return false;\n          }\n\n          var nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, _nextGlyph.id)];\n          if (!nextRecord || !nextRecord.entryAnchor) {\n            return false;\n          }\n\n          var entry = this.getAnchor(nextRecord.entryAnchor);\n          var exit = this.getAnchor(curRecord.exitAnchor);\n\n          var cur = this.positions[this.glyphIterator.index];\n          var next = this.positions[nextIndex];\n\n          switch (this.direction) {\n            case 'ltr':\n              cur.xAdvance = exit.x + cur.xOffset;\n\n              var d = entry.x + next.xOffset;\n              next.xAdvance -= d;\n              next.xOffset -= d;\n              break;\n\n            case 'rtl':\n              d = exit.x + cur.xOffset;\n              cur.xAdvance -= d;\n              cur.xOffset -= d;\n              next.xAdvance = entry.x + next.xOffset;\n              break;\n          }\n\n          if (this.glyphIterator.flags.rightToLeft) {\n            this.glyphIterator.cur.cursiveAttachment = nextIndex;\n            cur.yOffset = entry.y - exit.y;\n          } else {\n            _nextGlyph.cursiveAttachment = this.glyphIterator.index;\n            cur.yOffset = exit.y - entry.y;\n          }\n\n          return true;\n        }\n\n      case 4:\n        {\n          // Mark to base positioning\n          var markIndex = this.coverageIndex(table.markCoverage);\n          if (markIndex === -1) {\n            return false;\n          }\n\n          // search backward for a base glyph\n          var baseGlyphIndex = this.glyphIterator.index;\n          while (--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0)) {}\n\n          if (baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n          if (baseIndex === -1) {\n            return false;\n          }\n\n          var markRecord = table.markArray[markIndex];\n          var baseAnchor = table.baseArray[baseIndex][markRecord.class];\n          this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n          return true;\n        }\n\n      case 5:\n        {\n          // Mark to ligature positioning\n          var _markIndex = this.coverageIndex(table.markCoverage);\n          if (_markIndex === -1) {\n            return false;\n          }\n\n          // search backward for a base glyph\n          var _baseGlyphIndex = this.glyphIterator.index;\n          while (--_baseGlyphIndex >= 0 && this.glyphs[_baseGlyphIndex].isMark) {}\n\n          if (_baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[_baseGlyphIndex].id);\n          if (ligIndex === -1) {\n            return false;\n          }\n\n          var ligAttach = table.ligatureArray[ligIndex];\n          var markGlyph = this.glyphIterator.cur;\n          var ligGlyph = this.glyphs[_baseGlyphIndex];\n          var compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;\n\n          var _markRecord = table.markArray[_markIndex];\n          var _baseAnchor = ligAttach[compIndex][_markRecord.class];\n          this.applyAnchor(_markRecord, _baseAnchor, _baseGlyphIndex);\n          return true;\n        }\n\n      case 6:\n        {\n          // Mark to mark positioning\n          var mark1Index = this.coverageIndex(table.mark1Coverage);\n          if (mark1Index === -1) {\n            return false;\n          }\n\n          // get the previous mark to attach to\n          var prevIndex = this.glyphIterator.peekIndex(-1);\n          var prev = this.glyphs[prevIndex];\n          if (!prev || !prev.isMark) {\n            return false;\n          }\n\n          var _cur = this.glyphIterator.cur;\n\n          // The following logic was borrowed from Harfbuzz\n          var good = false;\n          if (_cur.ligatureID === prev.ligatureID) {\n            if (!_cur.ligatureID) {\n              // Marks belonging to the same base\n              good = true;\n            } else if (_cur.ligatureComponent === prev.ligatureComponent) {\n              // Marks belonging to the same ligature component\n              good = true;\n            }\n          } else {\n            // If ligature ids don't match, it may be the case that one of the marks\n            // itself is a ligature, in which case match.\n            if (_cur.ligatureID && !_cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) {\n              good = true;\n            }\n          }\n\n          if (!good) {\n            return false;\n          }\n\n          var mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n          if (mark2Index === -1) {\n            return false;\n          }\n\n          var _markRecord2 = table.mark1Array[mark1Index];\n          var _baseAnchor2 = table.mark2Array[mark2Index][_markRecord2.class];\n          this.applyAnchor(_markRecord2, _baseAnchor2, prevIndex);\n          return true;\n        }\n\n      case 7:\n        // Contextual positioning\n        return this.applyContext(table);\n\n      case 8:\n        // Chaining contextual positioning\n        return this.applyChainingContext(table);\n\n      case 9:\n        // Extension positioning\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error('Unsupported GPOS table: ' + lookupType);\n    }\n  };\n\n  GPOSProcessor.prototype.applyAnchor = function applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n    var baseCoords = this.getAnchor(baseAnchor);\n    var markCoords = this.getAnchor(markRecord.markAnchor);\n\n    var basePos = this.positions[baseGlyphIndex];\n    var markPos = this.positions[this.glyphIterator.index];\n\n    markPos.xOffset = baseCoords.x - markCoords.x;\n    markPos.yOffset = baseCoords.y - markCoords.y;\n    this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n  };\n\n  GPOSProcessor.prototype.getAnchor = function getAnchor(anchor) {\n    // TODO: contour point, device tables\n    var x = anchor.xCoordinate;\n    var y = anchor.yCoordinate;\n\n    // Adjustments for font variations\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n    if (variationProcessor && variationStore) {\n      if (anchor.xDeviceTable) {\n        x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n      }\n\n      if (anchor.yDeviceTable) {\n        y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n      }\n    }\n\n    return { x: x, y: y };\n  };\n\n  GPOSProcessor.prototype.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    _OTProcessor.prototype.applyFeatures.call(this, userFeatures, glyphs, advances);\n\n    for (var i = 0; i < this.glyphs.length; i++) {\n      this.fixCursiveAttachment(i);\n    }\n\n    this.fixMarkAttachment();\n  };\n\n  GPOSProcessor.prototype.fixCursiveAttachment = function fixCursiveAttachment(i) {\n    var glyph = this.glyphs[i];\n    if (glyph.cursiveAttachment != null) {\n      var j = glyph.cursiveAttachment;\n\n      glyph.cursiveAttachment = null;\n      this.fixCursiveAttachment(j);\n\n      this.positions[i].yOffset += this.positions[j].yOffset;\n    }\n  };\n\n  GPOSProcessor.prototype.fixMarkAttachment = function fixMarkAttachment() {\n    for (var i = 0; i < this.glyphs.length; i++) {\n      var glyph = this.glyphs[i];\n      if (glyph.markAttachment != null) {\n        var j = glyph.markAttachment;\n\n        this.positions[i].xOffset += this.positions[j].xOffset;\n        this.positions[i].yOffset += this.positions[j].yOffset;\n\n        if (this.direction === 'ltr') {\n          for (var k = j; k < i; k++) {\n            this.positions[i].xOffset -= this.positions[k].xAdvance;\n            this.positions[i].yOffset -= this.positions[k].yAdvance;\n          }\n        } else {\n          for (var _k = j + 1; _k < i + 1; _k++) {\n            this.positions[i].xOffset += this.positions[_k].xAdvance;\n            this.positions[i].yOffset += this.positions[_k].yAdvance;\n          }\n        }\n      }\n    }\n  };\n\n  return GPOSProcessor;\n}(OTProcessor);\n\nvar OTLayoutEngine = function () {\n  function OTLayoutEngine(font) {\n    classCallCheck(this, OTLayoutEngine);\n\n    this.font = font;\n    this.plan = null;\n    this.GSUBProcessor = null;\n    this.GPOSProcessor = null;\n    this.fallbackPosition = true;\n\n    if (font.GSUB) {\n      this.GSUBProcessor = new GSUBProcessor(font, font.GSUB);\n    }\n\n    if (font.GPOS) {\n      this.GPOSProcessor = new GPOSProcessor(font, font.GPOS);\n    }\n  }\n\n  OTLayoutEngine.prototype.setup = function setup(glyphRun) {\n    // Select a script based on what is available in GSUB/GPOS.\n    var script = null;\n    if (this.GPOSProcessor) {\n      script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    if (this.GSUBProcessor) {\n      script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    // Choose a shaper based on the script, and setup a shaping plan.\n    // This determines which features to apply to which glyphs.\n    this.shaper = choose(script);\n    this.plan = new ShapingPlan(this.font, script, glyphRun.direction);\n    this.shaper.plan(this.plan, glyphRun.glyphs, glyphRun.features);\n\n    // Assign chosen features to output glyph run\n    for (var key in this.plan.allFeatures) {\n      glyphRun.features[key] = true;\n    }\n  };\n\n  OTLayoutEngine.prototype.substitute = function substitute(glyphRun) {\n    if (this.GSUBProcessor) {\n      this.plan.process(this.GSUBProcessor, glyphRun.glyphs);\n    }\n  };\n\n  OTLayoutEngine.prototype.position = function position(glyphRun) {\n    if (this.shaper.zeroMarkWidths === 'BEFORE_GPOS') {\n      this.zeroMarkAdvances(glyphRun);\n    }\n\n    if (this.GPOSProcessor) {\n      this.plan.process(this.GPOSProcessor, glyphRun.glyphs, glyphRun.positions);\n    }\n\n    if (this.shaper.zeroMarkWidths === 'AFTER_GPOS') {\n      this.zeroMarkAdvances(glyphRun);\n    }\n\n    // Reverse the glyphs and positions if the script is right-to-left\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n      glyphRun.positions.reverse();\n    }\n\n    return this.GPOSProcessor && this.GPOSProcessor.features;\n  };\n\n  OTLayoutEngine.prototype.zeroMarkAdvances = function zeroMarkAdvances(glyphRun) {\n    for (var i = 0; i < glyphRun.glyphs; i++) {\n      if (glyphRun.glyphs[i].isMark) {\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  OTLayoutEngine.prototype.cleanup = function cleanup() {\n    this.glyphInfos = null;\n    this.plan = null;\n    this.shaper = null;\n  };\n\n  OTLayoutEngine.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.GSUBProcessor) {\n      this.GSUBProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GSUBProcessor.features));\n    }\n\n    if (this.GPOSProcessor) {\n      this.GPOSProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GPOSProcessor.features));\n    }\n\n    return features;\n  };\n\n  return OTLayoutEngine;\n}();\n\nvar LayoutEngine = function () {\n  function LayoutEngine(font) {\n    classCallCheck(this, LayoutEngine);\n\n    this.font = font;\n    this.unicodeLayoutEngine = null;\n    this.kernProcessor = null;\n\n    // Choose an advanced layout engine. We try the AAT morx table first since more\n    // scripts are currently supported because the shaping logic is built into the font.\n    if (this.font.morx) {\n      this.engine = new AATLayoutEngine(this.font);\n    } else if (this.font.GSUB || this.font.GPOS) {\n      this.engine = new OTLayoutEngine(this.font);\n    }\n  }\n\n  LayoutEngine.prototype.layout = function layout(string, features, script, language, direction$$1) {\n    var _this = this;\n\n    // Make the features parameter optional\n    if (typeof features === 'string') {\n      direction$$1 = language;\n      language = script;\n      script = features;\n      features = [];\n    }\n\n    // Attempt to detect the script from the string if not provided.\n    if (script == null) {\n      script = forString(string);\n    }\n\n    var glyphs = this.glyphsForString(string);\n\n    var glyphRun = new GlyphRun(glyphs, features, script, language, direction$$1);\n\n    // Return early if there are no glyphs\n    if (glyphs.length === 0) {\n      glyphRun.positions = [];\n      return glyphRun;\n    }\n\n    // Setup the advanced layout engine\n    if (this.engine && this.engine.setup) {\n      this.engine.setup(glyphRun);\n    }\n\n    // Substitute and position the glyphs\n    this.substitute(glyphRun);\n    this.position(glyphRun);\n\n    this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions);\n\n    // Let the layout engine clean up any state it might have\n    if (this.engine && this.engine.cleanup) {\n      this.engine.cleanup();\n    }\n\n    // Map glyph infos back to normal Glyph objects\n    glyphRun.stringIndices = glyphRun.glyphs.map(function (glyphInfo) {\n      return glyphInfo.stringIndex;\n    });\n    glyphRun.glyphs = glyphRun.glyphs.map(function (glyphInfo) {\n      return _this.font.getGlyph(glyphInfo.id, glyphInfo.codePoints);\n    });\n    return glyphRun;\n  };\n\n  LayoutEngine.prototype.glyphsForString = function glyphsForString(string) {\n    var glyphs = [];\n    var len = string.length;\n    var idx = 0;\n    var last = -1;\n    var state = -1;\n\n    while (idx <= len) {\n      var code = 0;\n      var nextState = 0;\n      var stringIndex = idx - 1;\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          var next = string.charCodeAt(idx);\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        }\n        // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n        nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n      } else {\n        idx++;\n      }\n      if (state === 0 && nextState === 1) {\n        // Variation selector following normal codepoint.\n        glyphs.push(new GlyphInfo(this.font, this.font._cmapProcessor.lookup(last, code), [last, code], null, stringIndex));\n      } else if (state === 0 && nextState === 0) {\n        // Normal codepoint following normal codepoint.\n        glyphs.push(new GlyphInfo(this.font, this.font._cmapProcessor.lookup(last), [last], null, stringIndex));\n      }\n      last = code;\n      state = nextState;\n    }\n\n    return glyphs;\n  };\n\n  LayoutEngine.prototype.substitute = function substitute(glyphRun) {\n    // Call the advanced layout engine to make substitutions\n    if (this.engine && this.engine.substitute) {\n      this.engine.substitute(glyphRun);\n    }\n  };\n\n  LayoutEngine.prototype.position = function position(glyphRun) {\n    // Get initial glyph positions\n    glyphRun.positions = glyphRun.glyphs.map(function (glyph) {\n      return new GlyphPosition(glyph.advanceWidth);\n    });\n    var positioned = null;\n\n    // Call the advanced layout engine. Returns the features applied.\n    if (this.engine && this.engine.position) {\n      positioned = this.engine.position(glyphRun);\n    }\n\n    // if there is no GPOS table, use unicode properties to position marks.\n    if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n      if (!this.unicodeLayoutEngine) {\n        this.unicodeLayoutEngine = new UnicodeLayoutEngine(this.font);\n      }\n\n      this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n    }\n\n    // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n    if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n      if (!this.kernProcessor) {\n        this.kernProcessor = new KernProcessor(this.font);\n      }\n\n      this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n      glyphRun.features.kern = true;\n    }\n  };\n\n  LayoutEngine.prototype.hideDefaultIgnorables = function hideDefaultIgnorables(glyphs, positions) {\n    var space = this.font.glyphForCodePoint(0x20);\n    for (var i = 0; i < glyphs.length; i++) {\n      if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n        glyphs[i] = space;\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  LayoutEngine.prototype.isDefaultIgnorable = function isDefaultIgnorable(ch) {\n    // From DerivedCoreProperties.txt in the Unicode database,\n    // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n    // Harfbuzz and Uniscribe do.\n    var plane = ch >> 16;\n    if (plane === 0) {\n      // BMP\n      switch (ch >> 8) {\n        case 0x00:\n          return ch === 0x00ad;\n        case 0x03:\n          return ch === 0x034f;\n        case 0x06:\n          return ch === 0x061c;\n        case 0x17:\n          return 0x17b4 <= ch && ch <= 0x17b5;\n        case 0x18:\n          return 0x180b <= ch && ch <= 0x180e;\n        case 0x20:\n          return 0x200b <= ch && ch <= 0x200f || 0x202a <= ch && ch <= 0x202e || 0x2060 <= ch && ch <= 0x206f;\n        case 0xfe:\n          return 0xfe00 <= ch && ch <= 0xfe0f || ch === 0xfeff;\n        case 0xff:\n          return 0xfff0 <= ch && ch <= 0xfff8;\n        default:\n          return false;\n      }\n    } else {\n      // Other planes\n      switch (plane) {\n        case 0x01:\n          return 0x1bca0 <= ch && ch <= 0x1bca3 || 0x1d173 <= ch && ch <= 0x1d17a;\n        case 0x0e:\n          return 0xe0000 <= ch && ch <= 0xe0fff;\n        default:\n          return false;\n      }\n    }\n  };\n\n  LayoutEngine.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.engine) {\n      features.push.apply(features, this.engine.getAvailableFeatures(script, language));\n    }\n\n    if (this.font.kern && features.indexOf('kern') === -1) {\n      features.push('kern');\n    }\n\n    return features;\n  };\n\n  LayoutEngine.prototype.stringsForGlyph = function stringsForGlyph(gid) {\n    var result = new Set();\n\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n    for (var _iterator = codePoints, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var codePoint = _ref;\n\n      result.add(String.fromCodePoint(codePoint));\n    }\n\n    if (this.engine && this.engine.stringsForGlyph) {\n      for (var _iterator2 = this.engine.stringsForGlyph(gid), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var string = _ref2;\n\n        result.add(string);\n      }\n    }\n\n    return Array.from(result);\n  };\n\n  return LayoutEngine;\n}();\n\nvar SVG_COMMANDS = {\n  moveTo: 'M',\n  lineTo: 'L',\n  quadraticCurveTo: 'Q',\n  bezierCurveTo: 'C',\n  closePath: 'Z'\n};\n\n/**\n * Path objects are returned by glyphs and represent the actual\n * vector outlines for each glyph in the font. Paths can be converted\n * to SVG path data strings, or to functions that can be applied to\n * render the path to a graphics context.\n */\n\nvar Path = function () {\n  function Path() {\n    classCallCheck(this, Path);\n\n    this.commands = [];\n    this._bbox = null;\n    this._cbox = null;\n  }\n\n  /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */\n\n\n  Path.prototype.toFunction = function toFunction() {\n    var cmds = this.commands.map(function (c) {\n      return '  ctx.' + c.command + '(' + c.args.join(', ') + ');';\n    });\n    return new Function('ctx', cmds.join('\\n'));\n  };\n\n  /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */\n\n\n  Path.prototype.toSVG = function toSVG() {\n    var cmds = this.commands.map(function (c) {\n      var args = c.args.map(function (arg) {\n        return Math.round(arg * 100) / 100;\n      });\n      return '' + SVG_COMMANDS[c.command] + args.join(' ');\n    });\n\n    return cmds.join('');\n  };\n\n  /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */\n\n\n  /**\n   * Applies a mapping function to each point in the path.\n   * @param {function} fn\n   * @return {Path}\n   */\n  Path.prototype.mapPoints = function mapPoints(fn) {\n    var path = new Path();\n\n    for (var _iterator = this.commands, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var c = _ref;\n\n      var args = [];\n      for (var _i2 = 0; _i2 < c.args.length; _i2 += 2) {\n        var _fn = fn(c.args[_i2], c.args[_i2 + 1]),\n            x = _fn[0],\n            y = _fn[1];\n\n        args.push(x, y);\n      }\n\n      path[c.command].apply(path, args);\n    }\n\n    return path;\n  };\n\n  /**\n   * Transforms the path by the given matrix.\n   */\n\n\n  Path.prototype.transform = function transform(m0, m1, m2, m3, m4, m5) {\n    return this.mapPoints(function (x, y) {\n      x = m0 * x + m2 * y + m4;\n      y = m1 * x + m3 * y + m5;\n      return [x, y];\n    });\n  };\n\n  /**\n   * Translates the path by the given offset.\n   */\n\n\n  Path.prototype.translate = function translate(x, y) {\n    return this.transform(1, 0, 0, 1, x, y);\n  };\n\n  /**\n   * Rotates the path by the given angle (in radians).\n   */\n\n\n  Path.prototype.rotate = function rotate(angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return this.transform(cos, sin, -sin, cos, 0, 0);\n  };\n\n  /**\n   * Scales the path.\n   */\n\n\n  Path.prototype.scale = function scale(scaleX) {\n    var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n\n    return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n  };\n\n  createClass(Path, [{\n    key: 'cbox',\n    get: function get$$1() {\n      if (!this._cbox) {\n        var cbox = new BBox();\n        for (var _iterator2 = this.commands, _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n          var _ref2;\n\n          if (_isArray2) {\n            if (_i3 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i3++];\n          } else {\n            _i3 = _iterator2.next();\n            if (_i3.done) break;\n            _ref2 = _i3.value;\n          }\n\n          var command = _ref2;\n\n          for (var _i4 = 0; _i4 < command.args.length; _i4 += 2) {\n            cbox.addPoint(command.args[_i4], command.args[_i4 + 1]);\n          }\n        }\n\n        this._cbox = Object.freeze(cbox);\n      }\n\n      return this._cbox;\n    }\n\n    /**\n     * Gets the exact bounding box of the path by evaluating curve segments.\n     * Slower to compute than the control box, but more accurate.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      if (this._bbox) {\n        return this._bbox;\n      }\n\n      var bbox = new BBox();\n      var cx = 0,\n          cy = 0;\n\n      var f = function f(t) {\n        return Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n      };\n\n      for (var _iterator3 = this.commands, _isArray3 = Array.isArray(_iterator3), _i5 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i5 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i5++];\n        } else {\n          _i5 = _iterator3.next();\n          if (_i5.done) break;\n          _ref3 = _i5.value;\n        }\n\n        var c = _ref3;\n\n        switch (c.command) {\n          case 'moveTo':\n          case 'lineTo':\n            var _c$args = c.args,\n                x = _c$args[0],\n                y = _c$args[1];\n\n            bbox.addPoint(x, y);\n            cx = x;\n            cy = y;\n            break;\n\n          case 'quadraticCurveTo':\n          case 'bezierCurveTo':\n            if (c.command === 'quadraticCurveTo') {\n              // http://fontforge.org/bezier.html\n              var _c$args2 = c.args,\n                  qp1x = _c$args2[0],\n                  qp1y = _c$args2[1],\n                  p3x = _c$args2[2],\n                  p3y = _c$args2[3];\n\n              var cp1x = cx + 2 / 3 * (qp1x - cx); // CP1 = QP0 + 2/3 * (QP1-QP0)\n              var cp1y = cy + 2 / 3 * (qp1y - cy);\n              var cp2x = p3x + 2 / 3 * (qp1x - p3x); // CP2 = QP2 + 2/3 * (QP1-QP2)\n              var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n            } else {\n              var _c$args3 = c.args,\n                  cp1x = _c$args3[0],\n                  cp1y = _c$args3[1],\n                  cp2x = _c$args3[2],\n                  cp2y = _c$args3[3],\n                  p3x = _c$args3[4],\n                  p3y = _c$args3[5];\n            }\n\n            // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n            bbox.addPoint(p3x, p3y);\n\n            var p0 = [cx, cy];\n            var p1 = [cp1x, cp1y];\n            var p2 = [cp2x, cp2y];\n            var p3 = [p3x, p3y];\n\n            for (var i = 0; i <= 1; i++) {\n              var b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n              var a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n              c = 3 * p1[i] - 3 * p0[i];\n\n              if (a === 0) {\n                if (b === 0) {\n                  continue;\n                }\n\n                var t = -c / b;\n                if (0 < t && t < 1) {\n                  if (i === 0) {\n                    bbox.addPoint(f(t), bbox.maxY);\n                  } else if (i === 1) {\n                    bbox.addPoint(bbox.maxX, f(t));\n                  }\n                }\n\n                continue;\n              }\n\n              var b2ac = Math.pow(b, 2) - 4 * c * a;\n              if (b2ac < 0) {\n                continue;\n              }\n\n              var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n              if (0 < t1 && t1 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t1), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t1));\n                }\n              }\n\n              var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n              if (0 < t2 && t2 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t2), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t2));\n                }\n              }\n            }\n\n            cx = p3x;\n            cy = p3y;\n            break;\n        }\n      }\n\n      return this._bbox = Object.freeze(bbox);\n    }\n  }]);\n  return Path;\n}();\n\nvar _arr = ['moveTo', 'lineTo', 'quadraticCurveTo', 'bezierCurveTo', 'closePath'];\n\nvar _loop = function _loop() {\n  var command = _arr[_i6];\n  Path.prototype[command] = function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this._bbox = this._cbox = null;\n    this.commands.push({\n      command: command,\n      args: args\n    });\n\n    return this;\n  };\n};\n\nfor (var _i6 = 0; _i6 < _arr.length; _i6++) {\n  _loop();\n}\n\nvar StandardNames = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\nvar _class$8;\n\nfunction _applyDecoratedDescriptor$4(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n/**\n * Glyph objects represent a glyph in the font. They have various properties for accessing metrics and\n * the actual vector path the glyph represents, and methods for rendering the glyph to a graphics context.\n *\n * You do not create glyph objects directly. They are created by various methods on the font object.\n * There are several subclasses of the base Glyph class internally that may be returned depending\n * on the font format, but they all inherit from this class.\n */\nvar Glyph = (_class$8 = function () {\n  function Glyph(id, codePoints, font) {\n    classCallCheck(this, Glyph);\n\n    /**\n     * The glyph id in the font\n     * @type {number}\n     */\n    this.id = id;\n\n    /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */\n    this.codePoints = codePoints;\n    this._font = font;\n\n    // TODO: get this info from GDEF if available\n    this.isMark = this.codePoints.length > 0 && this.codePoints.every(_react_pdf_unicode_properties__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isMark);\n    this.isLigature = this.codePoints.length > 1;\n  }\n\n  Glyph.prototype._getPath = function _getPath() {\n    return new Path();\n  };\n\n  Glyph.prototype._getCBox = function _getCBox() {\n    return this.path.cbox;\n  };\n\n  Glyph.prototype._getBBox = function _getBBox() {\n    return this.path.bbox;\n  };\n\n  Glyph.prototype._getTableMetrics = function _getTableMetrics(table) {\n    if (this.id < table.metrics.length) {\n      return table.metrics.get(this.id);\n    }\n\n    var metric = table.metrics.get(table.metrics.length - 1);\n    var res = {\n      advance: metric ? metric.advance : 0,\n      bearing: table.bearings.get(this.id - table.metrics.length) || 0\n    };\n\n    return res;\n  };\n\n  Glyph.prototype._getMetrics = function _getMetrics(cbox) {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var _getTableMetrics2 = this._getTableMetrics(this._font.hmtx),\n        advanceWidth = _getTableMetrics2.advance,\n        leftBearing = _getTableMetrics2.bearing;\n\n    // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n\n\n    if (this._font.vmtx) {\n      var _getTableMetrics3 = this._getTableMetrics(this._font.vmtx),\n          advanceHeight = _getTableMetrics3.advance,\n          topBearing = _getTableMetrics3.bearing;\n    } else {\n      var os2 = void 0;\n      if (typeof cbox === 'undefined' || cbox === null) {\n        cbox = this.cbox;\n      }\n\n      if ((os2 = this._font['OS/2']) && os2.version > 0) {\n        var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n        var topBearing = os2.typoAscender - cbox.maxY;\n      } else {\n        var hhea = this._font.hhea;\n\n        var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n        var topBearing = hhea.ascent - cbox.maxY;\n      }\n    }\n\n    if (this._font._variationProcessor && this._font.HVAR) {\n      advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n    }\n\n    return this._metrics = { advanceWidth: advanceWidth, advanceHeight: advanceHeight, leftBearing: leftBearing, topBearing: topBearing };\n  };\n\n  /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */\n\n\n  /**\n   * Returns a path scaled to the given font size.\n   * @param {number} size\n   * @return {Path}\n   */\n  Glyph.prototype.getScaledPath = function getScaledPath(size) {\n    var scale = 1 / this._font.unitsPerEm * size;\n    return this.path.scale(scale);\n  };\n\n  /**\n   * The glyph's advance width.\n   * @type {number}\n   */\n\n\n  Glyph.prototype._getName = function _getName() {\n    var post = this._font.post;\n\n    if (!post) {\n      return null;\n    }\n\n    switch (post.version) {\n      case 1:\n        return StandardNames[this.id];\n\n      case 2:\n        var id = post.glyphNameIndex[this.id];\n        if (id < StandardNames.length) {\n          return StandardNames[id];\n        }\n\n        return post.names[id - StandardNames.length];\n\n      case 2.5:\n        return StandardNames[this.id + post.offsets[this.id]];\n\n      case 4:\n        return String.fromCharCode(post.map[this.id]);\n    }\n  };\n\n  /**\n   * The glyph's name\n   * @type {string}\n   */\n\n\n  /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */\n  Glyph.prototype.render = function render(ctx, size) {\n    ctx.save();\n\n    var scale = 1 / this._font.head.unitsPerEm * size;\n    ctx.scale(scale, scale);\n\n    var fn = this.path.toFunction();\n    fn(ctx);\n    ctx.fill();\n\n    ctx.restore();\n  };\n\n  createClass(Glyph, [{\n    key: 'cbox',\n    get: function get$$1() {\n      return this._getCBox();\n    }\n\n    /**\n     * The glyph’s bounding box, i.e. the rectangle that encloses the\n     * glyph outline as tightly as possible.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      return this._getBBox();\n    }\n\n    /**\n     * A vector Path object representing the glyph outline.\n     * @type {Path}\n     */\n\n  }, {\n    key: 'path',\n    get: function get$$1() {\n      // Cache the path so we only decode it once\n      // Decoding is actually performed by subclasses\n      return this._getPath();\n    }\n  }, {\n    key: 'advanceWidth',\n    get: function get$$1() {\n      return this._getMetrics().advanceWidth;\n    }\n\n    /**\n     * The glyph's advance height.\n     * @type {number}\n     */\n\n  }, {\n    key: 'advanceHeight',\n    get: function get$$1() {\n      return this._getMetrics().advanceHeight;\n    }\n  }, {\n    key: 'ligatureCaretPositions',\n    get: function get$$1() {}\n  }, {\n    key: 'name',\n    get: function get$$1() {\n      return this._getName();\n    }\n  }]);\n  return Glyph;\n}(), _applyDecoratedDescriptor$4(_class$8.prototype, 'cbox', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'cbox'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'bbox', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'bbox'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'path', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'path'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'advanceWidth', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'advanceWidth'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'advanceHeight', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'advanceHeight'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'name', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'name'), _class$8.prototype), _class$8);\n\n// The header for both simple and composite glyphs\nvar GlyfHeader = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  numberOfContours: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // if negative, this is a composite glyph\n  xMin: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  yMin: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  xMax: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  yMax: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16\n});\n\n// Flags for simple glyphs\nvar ON_CURVE = 1 << 0;\nvar X_SHORT_VECTOR = 1 << 1;\nvar Y_SHORT_VECTOR = 1 << 2;\nvar REPEAT = 1 << 3;\nvar SAME_X = 1 << 4;\nvar SAME_Y = 1 << 5;\n\n// Flags for composite glyphs\nvar ARG_1_AND_2_ARE_WORDS = 1 << 0;\nvar WE_HAVE_A_SCALE = 1 << 3;\nvar MORE_COMPONENTS = 1 << 5;\nvar WE_HAVE_AN_X_AND_Y_SCALE = 1 << 6;\nvar WE_HAVE_A_TWO_BY_TWO = 1 << 7;\nvar WE_HAVE_INSTRUCTIONS = 1 << 8;\n// Represents a point in a simple glyph\nvar Point = function () {\n  function Point(onCurve, endContour) {\n    var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    classCallCheck(this, Point);\n\n    this.onCurve = onCurve;\n    this.endContour = endContour;\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype.copy = function copy() {\n    return new Point(this.onCurve, this.endContour, this.x, this.y);\n  };\n\n  return Point;\n}();\n\n// Represents a component in a composite glyph\n\nvar Component = function Component(glyphID, dx, dy) {\n  classCallCheck(this, Component);\n\n  this.glyphID = glyphID;\n  this.dx = dx;\n  this.dy = dy;\n  this.pos = 0;\n  this.scaleX = this.scaleY = 1;\n  this.scale01 = this.scale10 = 0;\n};\n\n/**\n * Represents a TrueType glyph.\n */\n\n\nvar TTFGlyph = function (_Glyph) {\n  inherits(TTFGlyph, _Glyph);\n\n  function TTFGlyph() {\n    classCallCheck(this, TTFGlyph);\n    return possibleConstructorReturn(this, _Glyph.apply(this, arguments));\n  }\n\n  // Parses just the glyph header and returns the bounding box\n  TTFGlyph.prototype._getCBox = function _getCBox(internal) {\n    // We need to decode the glyph if variation processing is requested,\n    // so it's easier just to recompute the path's cbox after decoding.\n    if (this._font._variationProcessor && !internal) {\n      return this.path.cbox;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n    stream.pos += this._font.loca.offsets[this.id];\n    var glyph = GlyfHeader.decode(stream);\n\n    var cbox = new BBox(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n    return Object.freeze(cbox);\n  };\n\n  // Parses a single glyph coordinate\n\n\n  TTFGlyph.prototype._parseGlyphCoord = function _parseGlyphCoord(stream, prev, short, same) {\n    if (short) {\n      var val = stream.readUInt8();\n      if (!same) {\n        val = -val;\n      }\n\n      val += prev;\n    } else {\n      if (same) {\n        var val = prev;\n      } else {\n        var val = prev + stream.readInt16BE();\n      }\n    }\n\n    return val;\n  };\n\n  // Decodes the glyph data into points for simple glyphs,\n  // or components for composite glyphs\n\n\n  TTFGlyph.prototype._decode = function _decode() {\n    var glyfPos = this._font.loca.offsets[this.id];\n    var nextPos = this._font.loca.offsets[this.id + 1];\n\n    // Nothing to do if there is no data for this glyph\n    if (glyfPos === nextPos) {\n      return null;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n    stream.pos += glyfPos;\n    var startPos = stream.pos;\n\n    var glyph = GlyfHeader.decode(stream);\n\n    if (glyph.numberOfContours > 0) {\n      this._decodeSimple(glyph, stream);\n    } else if (glyph.numberOfContours < 0) {\n      this._decodeComposite(glyph, stream, startPos);\n    }\n\n    return glyph;\n  };\n\n  TTFGlyph.prototype._decodeSimple = function _decodeSimple(glyph, stream) {\n    // this is a simple glyph\n    glyph.points = [];\n\n    var endPtsOfContours = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, glyph.numberOfContours).decode(stream);\n    glyph.instructions = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16).decode(stream);\n\n    var flags = [];\n    var numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\n    while (flags.length < numCoords) {\n      var flag = stream.readUInt8();\n      flags.push(flag);\n\n      // check for repeat flag\n      if (flag & REPEAT) {\n        var count = stream.readUInt8();\n        for (var j = 0; j < count; j++) {\n          flags.push(flag);\n        }\n      }\n    }\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      var point = new Point(!!(flag & ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n      glyph.points.push(point);\n    }\n\n    var px = 0;\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & X_SHORT_VECTOR, flag & SAME_X);\n    }\n\n    var py = 0;\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & Y_SHORT_VECTOR, flag & SAME_Y);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = glyph.points.slice();\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n      glyph.phantomPoints = points.slice(-4);\n    }\n\n    return;\n  };\n\n  TTFGlyph.prototype._decodeComposite = function _decodeComposite(glyph, stream) {\n    var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    // this is a composite glyph\n    glyph.components = [];\n    var haveInstructions = false;\n    var flags = MORE_COMPONENTS;\n\n    while (flags & MORE_COMPONENTS) {\n      flags = stream.readUInt16BE();\n      var gPos = stream.pos - offset;\n      var glyphID = stream.readUInt16BE();\n      if (!haveInstructions) {\n        haveInstructions = (flags & WE_HAVE_INSTRUCTIONS) !== 0;\n      }\n\n      if (flags & ARG_1_AND_2_ARE_WORDS) {\n        var dx = stream.readInt16BE();\n        var dy = stream.readInt16BE();\n      } else {\n        var dx = stream.readInt8();\n        var dy = stream.readInt8();\n      }\n\n      var component = new Component(glyphID, dx, dy);\n      component.pos = gPos;\n\n      if (flags & WE_HAVE_A_SCALE) {\n        // fixed number with 14 bits of fraction\n        component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_A_TWO_BY_TWO) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      }\n\n      glyph.components.push(component);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = [];\n      for (var j = 0; j < glyph.components.length; j++) {\n        var component = glyph.components[j];\n        points.push(new Point(true, true, component.dx, component.dy));\n      }\n\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n      glyph.phantomPoints = points.splice(-4, 4);\n\n      for (var i = 0; i < points.length; i++) {\n        var point = points[i];\n        glyph.components[i].dx = point.x;\n        glyph.components[i].dy = point.y;\n      }\n    }\n\n    return haveInstructions;\n  };\n\n  TTFGlyph.prototype._getPhantomPoints = function _getPhantomPoints(glyph) {\n    var cbox = this._getCBox(true);\n    if (this._metrics == null) {\n      this._metrics = Glyph.prototype._getMetrics.call(this, cbox);\n    }\n\n    var _metrics = this._metrics,\n        advanceWidth = _metrics.advanceWidth,\n        advanceHeight = _metrics.advanceHeight,\n        leftBearing = _metrics.leftBearing,\n        topBearing = _metrics.topBearing;\n\n\n    return [new Point(false, true, glyph.xMin - leftBearing, 0), new Point(false, true, glyph.xMin - leftBearing + advanceWidth, 0), new Point(false, true, 0, glyph.yMax + topBearing), new Point(false, true, 0, glyph.yMax + topBearing + advanceHeight)];\n  };\n\n  // Decodes font data, resolves composite glyphs, and returns an array of contours\n\n\n  TTFGlyph.prototype._getContours = function _getContours() {\n    var glyph = this._decode();\n    if (!glyph) {\n      return [];\n    }\n\n    var points = [];\n\n    if (glyph.numberOfContours < 0) {\n      // resolve composite glyphs\n      for (var _iterator = glyph.components, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var component = _ref;\n\n        var _contours = this._font.getGlyph(component.glyphID)._getContours();\n        for (var i = 0; i < _contours.length; i++) {\n          var contour = _contours[i];\n          for (var j = 0; j < contour.length; j++) {\n            var _point = contour[j];\n            var x = _point.x * component.scaleX + _point.y * component.scale01 + component.dx;\n            var y = _point.y * component.scaleY + _point.x * component.scale10 + component.dy;\n            points.push(new Point(_point.onCurve, _point.endContour, x, y));\n          }\n        }\n      }\n    } else {\n      points = glyph.points || [];\n    }\n\n    // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n    if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n      this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n      this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n      this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;\n      this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;\n    }\n\n    var contours = [];\n    var cur = [];\n    for (var k = 0; k < points.length; k++) {\n      var point = points[k];\n      cur.push(point);\n      if (point.endContour) {\n        contours.push(cur);\n        cur = [];\n      }\n    }\n\n    return contours;\n  };\n\n  TTFGlyph.prototype._getMetrics = function _getMetrics() {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var cbox = this._getCBox(true);\n    _Glyph.prototype._getMetrics.call(this, cbox);\n\n    if (this._font._variationProcessor && !this._font.HVAR) {\n      // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n      this.path;\n    }\n\n    return this._metrics;\n  };\n\n  // Converts contours to a Path object that can be rendered\n\n\n  TTFGlyph.prototype._getPath = function _getPath() {\n    var contours = this._getContours();\n    var path = new Path();\n\n    for (var i = 0; i < contours.length; i++) {\n      var contour = contours[i];\n      var firstPt = contour[0];\n      var lastPt = contour[contour.length - 1];\n      var start = 0;\n\n      if (firstPt.onCurve) {\n        // The first point will be consumed by the moveTo command, so skip in the loop\n        var curvePt = null;\n        start = 1;\n      } else {\n        if (lastPt.onCurve) {\n          // Start at the last point if the first point is off curve and the last point is on curve\n          firstPt = lastPt;\n        } else {\n          // Start at the middle if both the first and last points are off curve\n          firstPt = new Point(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n        }\n\n        var curvePt = firstPt;\n      }\n\n      path.moveTo(firstPt.x, firstPt.y);\n\n      for (var j = start; j < contour.length; j++) {\n        var pt = contour[j];\n        var prevPt = j === 0 ? firstPt : contour[j - 1];\n\n        if (prevPt.onCurve && pt.onCurve) {\n          path.lineTo(pt.x, pt.y);\n        } else if (prevPt.onCurve && !pt.onCurve) {\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && !pt.onCurve) {\n          var midX = (prevPt.x + pt.x) / 2;\n          var midY = (prevPt.y + pt.y) / 2;\n          path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && pt.onCurve) {\n          path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n          var curvePt = null;\n        } else {\n          throw new Error(\"Unknown TTF path state\");\n        }\n      }\n\n      // Connect the first and last points\n      if (curvePt) {\n        path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n      }\n\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return TTFGlyph;\n}(Glyph);\n\n/**\n * Represents an OpenType PostScript glyph, in the Compact Font Format.\n */\n\nvar CFFGlyph = function (_Glyph) {\n  inherits(CFFGlyph, _Glyph);\n\n  function CFFGlyph() {\n    classCallCheck(this, CFFGlyph);\n    return possibleConstructorReturn(this, _Glyph.apply(this, arguments));\n  }\n\n  CFFGlyph.prototype._getName = function _getName() {\n    if (this._font.CFF2) {\n      return _Glyph.prototype._getName.call(this);\n    }\n\n    return this._font['CFF '].getGlyphName(this.id);\n  };\n\n  CFFGlyph.prototype.bias = function bias(s) {\n    if (s.length < 1240) {\n      return 107;\n    } else if (s.length < 33900) {\n      return 1131;\n    } else {\n      return 32768;\n    }\n  };\n\n  CFFGlyph.prototype._getPath = function _getPath() {\n    var stream = this._font.stream;\n    var pos = stream.pos;\n\n\n    var cff = this._font.CFF2 || this._font['CFF '];\n    var str = cff.topDict.CharStrings[this.id];\n    var end = str.offset + str.length;\n    stream.pos = str.offset;\n\n    var path = new Path();\n    var stack = [];\n    var trans = [];\n\n    var width = null;\n    var nStems = 0;\n    var x = 0,\n        y = 0;\n    var usedGsubrs = void 0;\n    var usedSubrs = void 0;\n    var open = false;\n\n    this._usedGsubrs = usedGsubrs = {};\n    this._usedSubrs = usedSubrs = {};\n\n    var gsubrs = cff.globalSubrIndex || [];\n    var gsubrsBias = this.bias(gsubrs);\n\n    var privateDict = cff.privateDictForGlyph(this.id);\n    var subrs = privateDict.Subrs || [];\n    var subrsBias = this.bias(subrs);\n\n    var vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n    var vsindex = privateDict.vsindex;\n    var variationProcessor = this._font._variationProcessor;\n\n    function checkWidth() {\n      if (width == null) {\n        width = stack.shift() + privateDict.nominalWidthX;\n      }\n    }\n\n    function parseStems() {\n      if (stack.length % 2 !== 0) {\n        checkWidth();\n      }\n\n      nStems += stack.length >> 1;\n      return stack.length = 0;\n    }\n\n    function moveTo(x, y) {\n      if (open) {\n        path.closePath();\n      }\n\n      path.moveTo(x, y);\n      open = true;\n    }\n\n    var parse = function parse() {\n      while (stream.pos < end) {\n        var op = stream.readUInt8();\n        if (op < 32) {\n          switch (op) {\n            case 1: // hstem\n            case 3: // vstem\n            case 18: // hstemhm\n            case 23:\n              // vstemhm\n              parseStems();\n              break;\n\n            case 4:\n              // vmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 5:\n              // rlineto\n              while (stack.length >= 2) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n              break;\n\n            case 6: // hlineto\n            case 7:\n              // vlineto\n              var phase = op === 6;\n              while (stack.length >= 1) {\n                if (phase) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n\n                path.lineTo(x, y);\n                phase = !phase;\n              }\n              break;\n\n            case 8:\n              // rrcurveto\n              while (stack.length > 0) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 10:\n              // callsubr\n              var index = stack.pop() + subrsBias;\n              var subr = subrs[index];\n              if (subr) {\n                usedSubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n              break;\n\n            case 11:\n              // return\n              if (cff.version >= 2) {\n                break;\n              }\n              return;\n\n            case 14:\n              // endchar\n              if (cff.version >= 2) {\n                break;\n              }\n\n              if (stack.length > 0) {\n                checkWidth();\n              }\n\n              if (open) {\n                path.closePath();\n                open = false;\n              }\n              break;\n\n            case 15:\n              {\n                // vsindex\n                if (cff.version < 2) {\n                  throw new Error('vsindex operator not supported in CFF v1');\n                }\n\n                vsindex = stack.pop();\n                break;\n              }\n\n            case 16:\n              {\n                // blend\n                if (cff.version < 2) {\n                  throw new Error('blend operator not supported in CFF v1');\n                }\n\n                if (!variationProcessor) {\n                  throw new Error('blend operator in non-variation font');\n                }\n\n                var blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n                var numBlends = stack.pop();\n                var numOperands = numBlends * blendVector.length;\n                var delta = stack.length - numOperands;\n                var base = delta - numBlends;\n\n                for (var i = 0; i < numBlends; i++) {\n                  var sum = stack[base + i];\n                  for (var j = 0; j < blendVector.length; j++) {\n                    sum += blendVector[j] * stack[delta++];\n                  }\n\n                  stack[base + i] = sum;\n                }\n\n                while (numOperands--) {\n                  stack.pop();\n                }\n\n                break;\n              }\n\n            case 19: // hintmask\n            case 20:\n              // cntrmask\n              parseStems();\n              stream.pos += nStems + 7 >> 3;\n              break;\n\n            case 21:\n              // rmoveto\n              if (stack.length > 2) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 22:\n              // hmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 24:\n              // rcurveline\n              while (stack.length >= 8) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              path.lineTo(x, y);\n              break;\n\n            case 25:\n              // rlinecurve\n              while (stack.length >= 8) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              var c1x = x + stack.shift();\n              var c1y = y + stack.shift();\n              var c2x = c1x + stack.shift();\n              var c2y = c1y + stack.shift();\n              x = c2x + stack.shift();\n              y = c2y + stack.shift();\n              path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              break;\n\n            case 26:\n              // vvcurveto\n              if (stack.length % 2) {\n                x += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x;\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x;\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 27:\n              // hhcurveto\n              if (stack.length % 2) {\n                y += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x + stack.shift();\n                c1y = y;\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y;\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 28:\n              // shortint\n              stack.push(stream.readInt16BE());\n              break;\n\n            case 29:\n              // callgsubr\n              index = stack.pop() + gsubrsBias;\n              subr = gsubrs[index];\n              if (subr) {\n                usedGsubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n              break;\n\n            case 30: // vhcurveto\n            case 31:\n              // hvcurveto\n              phase = op === 31;\n              while (stack.length >= 4) {\n                if (phase) {\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  y = c2y + stack.shift();\n                  x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                } else {\n                  c1x = x;\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  x = c2x + stack.shift();\n                  y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                }\n\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n                phase = !phase;\n              }\n              break;\n\n            case 12:\n              op = stream.readUInt8();\n              switch (op) {\n                case 3:\n                  // and\n                  var a = stack.pop();\n                  var b = stack.pop();\n                  stack.push(a && b ? 1 : 0);\n                  break;\n\n                case 4:\n                  // or\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a || b ? 1 : 0);\n                  break;\n\n                case 5:\n                  // not\n                  a = stack.pop();\n                  stack.push(a ? 0 : 1);\n                  break;\n\n                case 9:\n                  // abs\n                  a = stack.pop();\n                  stack.push(Math.abs(a));\n                  break;\n\n                case 10:\n                  // add\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a + b);\n                  break;\n\n                case 11:\n                  // sub\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a - b);\n                  break;\n\n                case 12:\n                  // div\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a / b);\n                  break;\n\n                case 14:\n                  // neg\n                  a = stack.pop();\n                  stack.push(-a);\n                  break;\n\n                case 15:\n                  // eq\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a === b ? 1 : 0);\n                  break;\n\n                case 18:\n                  // drop\n                  stack.pop();\n                  break;\n\n                case 20:\n                  // put\n                  var val = stack.pop();\n                  var idx = stack.pop();\n                  trans[idx] = val;\n                  break;\n\n                case 21:\n                  // get\n                  idx = stack.pop();\n                  stack.push(trans[idx] || 0);\n                  break;\n\n                case 22:\n                  // ifelse\n                  var s1 = stack.pop();\n                  var s2 = stack.pop();\n                  var v1 = stack.pop();\n                  var v2 = stack.pop();\n                  stack.push(v1 <= v2 ? s1 : s2);\n                  break;\n\n                case 23:\n                  // random\n                  stack.push(Math.random());\n                  break;\n\n                case 24:\n                  // mul\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a * b);\n                  break;\n\n                case 26:\n                  // sqrt\n                  a = stack.pop();\n                  stack.push(Math.sqrt(a));\n                  break;\n\n                case 27:\n                  // dup\n                  a = stack.pop();\n                  stack.push(a, a);\n                  break;\n\n                case 28:\n                  // exch\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(b, a);\n                  break;\n\n                case 29:\n                  // index\n                  idx = stack.pop();\n                  if (idx < 0) {\n                    idx = 0;\n                  } else if (idx > stack.length - 1) {\n                    idx = stack.length - 1;\n                  }\n\n                  stack.push(stack[idx]);\n                  break;\n\n                case 30:\n                  // roll\n                  var n = stack.pop();\n                  var _j = stack.pop();\n\n                  if (_j >= 0) {\n                    while (_j > 0) {\n                      var t = stack[n - 1];\n                      for (var _i = n - 2; _i >= 0; _i--) {\n                        stack[_i + 1] = stack[_i];\n                      }\n\n                      stack[0] = t;\n                      _j--;\n                    }\n                  } else {\n                    while (_j < 0) {\n                      var t = stack[0];\n                      for (var _i2 = 0; _i2 <= n; _i2++) {\n                        stack[_i2] = stack[_i2 + 1];\n                      }\n\n                      stack[n - 1] = t;\n                      _j++;\n                    }\n                  }\n                  break;\n\n                case 34:\n                  // hflex\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  var c3x = c2x + stack.shift();\n                  var c3y = c2y;\n                  var c4x = c3x + stack.shift();\n                  var c4y = c3y;\n                  var c5x = c4x + stack.shift();\n                  var c5y = c4y;\n                  var c6x = c5x + stack.shift();\n                  var c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 35:\n                  // flex\n                  var pts = [];\n\n                  for (var _i3 = 0; _i3 <= 5; _i3++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  stack.shift(); // fd\n                  break;\n\n                case 36:\n                  // hflex1\n                  c1x = x + stack.shift();\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  c3x = c2x + stack.shift();\n                  c3y = c2y;\n                  c4x = c3x + stack.shift();\n                  c4y = c3y;\n                  c5x = c4x + stack.shift();\n                  c5y = c4y + stack.shift();\n                  c6x = c5x + stack.shift();\n                  c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 37:\n                  // flex1\n                  var startx = x;\n                  var starty = y;\n\n                  pts = [];\n                  for (var _i4 = 0; _i4 <= 4; _i4++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  if (Math.abs(x - startx) > Math.abs(y - starty)) {\n                    // horizontal\n                    x += stack.shift();\n                    y = starty;\n                  } else {\n                    x = startx;\n                    y += stack.shift();\n                  }\n\n                  pts.push(x, y);\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  break;\n\n                default:\n                  throw new Error('Unknown op: 12 ' + op);\n              }\n              break;\n\n            default:\n              throw new Error('Unknown op: ' + op);\n          }\n        } else if (op < 247) {\n          stack.push(op - 139);\n        } else if (op < 251) {\n          var b1 = stream.readUInt8();\n          stack.push((op - 247) * 256 + b1 + 108);\n        } else if (op < 255) {\n          var b1 = stream.readUInt8();\n          stack.push(-(op - 251) * 256 - b1 - 108);\n        } else {\n          stack.push(stream.readInt32BE() / 65536);\n        }\n      }\n    };\n\n    parse();\n\n    if (open) {\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return CFFGlyph;\n}(Glyph);\n\nvar SBIXImage = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  originX: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  originY: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  type: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(4),\n  data: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Buffer(function (t) {\n    return t.parent.buflen - t._currentOffset;\n  })\n});\n\n/**\n * Represents a color (e.g. emoji) glyph in Apple's SBIX format.\n */\n\nvar SBIXGlyph = function (_TTFGlyph) {\n  inherits(SBIXGlyph, _TTFGlyph);\n\n  function SBIXGlyph() {\n    classCallCheck(this, SBIXGlyph);\n    return possibleConstructorReturn(this, _TTFGlyph.apply(this, arguments));\n  }\n\n  /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */\n  SBIXGlyph.prototype.getImageForSize = function getImageForSize(size) {\n    for (var i = 0; i < this._font.sbix.imageTables.length; i++) {\n      var table = this._font.sbix.imageTables[i];\n      if (table.ppem >= size) {\n        break;\n      }\n    }\n\n    var offsets = table.imageOffsets;\n    var start = offsets[this.id];\n    var end = offsets[this.id + 1];\n\n    if (start === end) {\n      return null;\n    }\n\n    this._font.stream.pos = start;\n    return SBIXImage.decode(this._font.stream, { buflen: end - start });\n  };\n\n  SBIXGlyph.prototype.render = function render(ctx, size) {\n    var img = this.getImageForSize(size);\n    if (img != null) {\n      var scale = size / this._font.unitsPerEm;\n      ctx.image(img.data, { height: size, x: img.originX, y: (this.bbox.minY - img.originY) * scale });\n    }\n\n    if (this._font.sbix.flags.renderOutlines) {\n      _TTFGlyph.prototype.render.call(this, ctx, size);\n    }\n  };\n\n  return SBIXGlyph;\n}(TTFGlyph);\n\nvar COLRLayer = function COLRLayer(glyph, color) {\n  classCallCheck(this, COLRLayer);\n\n  this.glyph = glyph;\n  this.color = color;\n};\n\n/**\n * Represents a color (e.g. emoji) glyph in Microsoft's COLR format.\n * Each glyph in this format contain a list of colored layers, each\n * of which  is another vector glyph.\n */\n\n\nvar COLRGlyph = function (_Glyph) {\n  inherits(COLRGlyph, _Glyph);\n\n  function COLRGlyph() {\n    classCallCheck(this, COLRGlyph);\n    return possibleConstructorReturn(this, _Glyph.apply(this, arguments));\n  }\n\n  COLRGlyph.prototype._getBBox = function _getBBox() {\n    var bbox = new BBox();\n    for (var i = 0; i < this.layers.length; i++) {\n      var layer = this.layers[i];\n      var b = layer.glyph.bbox;\n      bbox.addPoint(b.minX, b.minY);\n      bbox.addPoint(b.maxX, b.maxY);\n    }\n\n    return bbox;\n  };\n\n  /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */\n\n\n  COLRGlyph.prototype.render = function render(ctx, size) {\n    for (var _iterator = this.layers, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _ref2 = _ref,\n          glyph = _ref2.glyph,\n          color = _ref2.color;\n\n      ctx.fillColor([color.red, color.green, color.blue], color.alpha / 255 * 100);\n      glyph.render(ctx, size);\n    }\n\n    return;\n  };\n\n  createClass(COLRGlyph, [{\n    key: 'layers',\n    get: function get$$1() {\n      var cpal = this._font.CPAL;\n      var colr = this._font.COLR;\n      var low = 0;\n      var high = colr.baseGlyphRecord.length - 1;\n\n      while (low <= high) {\n        var mid = low + high >> 1;\n        var rec = colr.baseGlyphRecord[mid];\n\n        if (this.id < rec.gid) {\n          high = mid - 1;\n        } else if (this.id > rec.gid) {\n          low = mid + 1;\n        } else {\n          var baseLayer = rec;\n          break;\n        }\n      }\n\n      // if base glyph not found in COLR table,\n      // default to normal glyph from glyf or CFF\n      if (baseLayer == null) {\n        var g = this._font._getBaseGlyph(this.id);\n        var color = {\n          red: 0,\n          green: 0,\n          blue: 0,\n          alpha: 255\n        };\n\n        return [new COLRLayer(g, color)];\n      }\n\n      // otherwise, return an array of all the layers\n      var layers = [];\n      for (var i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++) {\n        var rec = colr.layerRecords[i];\n        var color = cpal.colorRecords[rec.paletteIndex];\n        var g = this._font._getBaseGlyph(rec.gid);\n        layers.push(new COLRLayer(g, color));\n      }\n\n      return layers;\n    }\n  }]);\n  return COLRGlyph;\n}(Glyph);\n\nvar TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nvar TUPLE_COUNT_MASK = 0x0fff;\nvar EMBEDDED_TUPLE_COORD = 0x8000;\nvar INTERMEDIATE_TUPLE = 0x4000;\nvar PRIVATE_POINT_NUMBERS = 0x2000;\nvar TUPLE_INDEX_MASK = 0x0fff;\nvar POINTS_ARE_WORDS = 0x80;\nvar POINT_RUN_COUNT_MASK = 0x7f;\nvar DELTAS_ARE_ZERO = 0x80;\nvar DELTAS_ARE_WORDS = 0x40;\nvar DELTA_RUN_COUNT_MASK = 0x3f;\n\n/**\n * This class is transforms TrueType glyphs according to the data from\n * the Apple Advanced Typography variation tables (fvar, gvar, and avar).\n * These tables allow infinite adjustments to glyph weight, width, slant,\n * and optical size without the designer needing to specify every exact style.\n *\n * Apple's documentation for these tables is not great, so thanks to the\n * Freetype project for figuring much of this out.\n *\n * @private\n */\n\nvar GlyphVariationProcessor = function () {\n  function GlyphVariationProcessor(font, coords) {\n    classCallCheck(this, GlyphVariationProcessor);\n\n    this.font = font;\n    this.normalizedCoords = this.normalizeCoords(coords);\n    this.blendVectors = new Map();\n  }\n\n  GlyphVariationProcessor.prototype.normalizeCoords = function normalizeCoords(coords) {\n    // the default mapping is linear along each axis, in two segments:\n    // from the minValue to defaultValue, and from defaultValue to maxValue.\n    var normalized = [];\n    for (var i = 0; i < this.font.fvar.axis.length; i++) {\n      var axis = this.font.fvar.axis[i];\n      if (coords[i] < axis.defaultValue) {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));\n      } else {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n      }\n    }\n\n    // if there is an avar table, the normalized value is calculated\n    // by interpolating between the two nearest mapped values.\n    if (this.font.avar) {\n      for (var i = 0; i < this.font.avar.segment.length; i++) {\n        var segment = this.font.avar.segment[i];\n        for (var j = 0; j < segment.correspondence.length; j++) {\n          var pair = segment.correspondence[j];\n          if (j >= 1 && normalized[i] < pair.fromCoord) {\n            var prev = segment.correspondence[j - 1];\n            normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) / (pair.fromCoord - prev.fromCoord + Number.EPSILON) + prev.toCoord;\n\n            break;\n          }\n        }\n      }\n    }\n\n    return normalized;\n  };\n\n  GlyphVariationProcessor.prototype.transformPoints = function transformPoints(gid, glyphPoints) {\n    if (!this.font.fvar || !this.font.gvar) {\n      return;\n    }\n\n    var gvar = this.font.gvar;\n\n    if (gid >= gvar.glyphCount) {\n      return;\n    }\n\n    var offset = gvar.offsets[gid];\n    if (offset === gvar.offsets[gid + 1]) {\n      return;\n    }\n\n    // Read the gvar data for this glyph\n    var stream = this.font.stream;\n\n    stream.pos = offset;\n    if (stream.pos >= stream.length) {\n      return;\n    }\n\n    var tupleCount = stream.readUInt16BE();\n    var offsetToData = offset + stream.readUInt16BE();\n\n    if (tupleCount & TUPLES_SHARE_POINT_NUMBERS) {\n      var here = stream.pos;\n      stream.pos = offsetToData;\n      var sharedPoints = this.decodePoints();\n      offsetToData = stream.pos;\n      stream.pos = here;\n    }\n\n    var origPoints = glyphPoints.map(function (pt) {\n      return pt.copy();\n    });\n\n    tupleCount &= TUPLE_COUNT_MASK;\n    for (var i = 0; i < tupleCount; i++) {\n      var tupleDataSize = stream.readUInt16BE();\n      var tupleIndex = stream.readUInt16BE();\n\n      if (tupleIndex & EMBEDDED_TUPLE_COORD) {\n        var tupleCoords = [];\n        for (var a = 0; a < gvar.axisCount; a++) {\n          tupleCoords.push(stream.readInt16BE() / 16384);\n        }\n      } else {\n        if ((tupleIndex & TUPLE_INDEX_MASK) >= gvar.globalCoordCount) {\n          throw new Error('Invalid gvar table');\n        }\n\n        var tupleCoords = gvar.globalCoords[tupleIndex & TUPLE_INDEX_MASK];\n      }\n\n      if (tupleIndex & INTERMEDIATE_TUPLE) {\n        var startCoords = [];\n        for (var _a = 0; _a < gvar.axisCount; _a++) {\n          startCoords.push(stream.readInt16BE() / 16384);\n        }\n\n        var endCoords = [];\n        for (var _a2 = 0; _a2 < gvar.axisCount; _a2++) {\n          endCoords.push(stream.readInt16BE() / 16384);\n        }\n      }\n\n      // Get the factor at which to apply this tuple\n      var factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n      if (factor === 0) {\n        offsetToData += tupleDataSize;\n        continue;\n      }\n\n      var here = stream.pos;\n      stream.pos = offsetToData;\n\n      if (tupleIndex & PRIVATE_POINT_NUMBERS) {\n        var points = this.decodePoints();\n      } else {\n        var points = sharedPoints;\n      }\n\n      // points.length = 0 means there are deltas for all points\n      var nPoints = points.length === 0 ? glyphPoints.length : points.length;\n      var xDeltas = this.decodeDeltas(nPoints);\n      var yDeltas = this.decodeDeltas(nPoints);\n\n      if (points.length === 0) {\n        // all points\n        for (var _i = 0; _i < glyphPoints.length; _i++) {\n          var point = glyphPoints[_i];\n          point.x += Math.round(xDeltas[_i] * factor);\n          point.y += Math.round(yDeltas[_i] * factor);\n        }\n      } else {\n        var outPoints = origPoints.map(function (pt) {\n          return pt.copy();\n        });\n        var hasDelta = glyphPoints.map(function () {\n          return false;\n        });\n\n        for (var _i2 = 0; _i2 < points.length; _i2++) {\n          var idx = points[_i2];\n          if (idx < glyphPoints.length) {\n            var _point = outPoints[idx];\n            hasDelta[idx] = true;\n\n            _point.x += Math.round(xDeltas[_i2] * factor);\n            _point.y += Math.round(yDeltas[_i2] * factor);\n          }\n        }\n\n        this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n\n        for (var _i3 = 0; _i3 < glyphPoints.length; _i3++) {\n          var deltaX = outPoints[_i3].x - origPoints[_i3].x;\n          var deltaY = outPoints[_i3].y - origPoints[_i3].y;\n\n          glyphPoints[_i3].x += deltaX;\n          glyphPoints[_i3].y += deltaY;\n        }\n      }\n\n      offsetToData += tupleDataSize;\n      stream.pos = here;\n    }\n  };\n\n  GlyphVariationProcessor.prototype.decodePoints = function decodePoints() {\n    var stream = this.font.stream;\n    var count = stream.readUInt8();\n\n    if (count & POINTS_ARE_WORDS) {\n      count = (count & POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n    }\n\n    var points = new Uint16Array(count);\n    var i = 0;\n    var point = 0;\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & POINT_RUN_COUNT_MASK) + 1;\n      var fn = run & POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n\n      for (var j = 0; j < runCount && i < count; j++) {\n        point += fn.call(stream);\n        points[i++] = point;\n      }\n    }\n\n    return points;\n  };\n\n  GlyphVariationProcessor.prototype.decodeDeltas = function decodeDeltas(count) {\n    var stream = this.font.stream;\n    var i = 0;\n    var deltas = new Int16Array(count);\n\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & DELTA_RUN_COUNT_MASK) + 1;\n\n      if (run & DELTAS_ARE_ZERO) {\n        i += runCount;\n      } else {\n        var fn = run & DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n        for (var j = 0; j < runCount && i < count; j++) {\n          deltas[i++] = fn.call(stream);\n        }\n      }\n    }\n\n    return deltas;\n  };\n\n  GlyphVariationProcessor.prototype.tupleFactor = function tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n    var normalized = this.normalizedCoords;\n    var gvar = this.font.gvar;\n\n    var factor = 1;\n\n    for (var i = 0; i < gvar.axisCount; i++) {\n      if (tupleCoords[i] === 0) {\n        continue;\n      }\n\n      if (normalized[i] === 0) {\n        return 0;\n      }\n\n      if ((tupleIndex & INTERMEDIATE_TUPLE) === 0) {\n        if (normalized[i] < Math.min(0, tupleCoords[i]) || normalized[i] > Math.max(0, tupleCoords[i])) {\n          return 0;\n        }\n\n        factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n      } else {\n        if (normalized[i] < startCoords[i] || normalized[i] > endCoords[i]) {\n          return 0;\n        } else if (normalized[i] < tupleCoords[i]) {\n          factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);\n        } else {\n          factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n        }\n      }\n    }\n\n    return factor;\n  };\n\n  // Interpolates points without delta values.\n  // Needed for the Ø and Q glyphs in Skia.\n  // Algorithm from Freetype.\n\n\n  GlyphVariationProcessor.prototype.interpolateMissingDeltas = function interpolateMissingDeltas(points, inPoints, hasDelta) {\n    if (points.length === 0) {\n      return;\n    }\n\n    var point = 0;\n    while (point < points.length) {\n      var firstPoint = point;\n\n      // find the end point of the contour\n      var endPoint = point;\n      var pt = points[endPoint];\n      while (!pt.endContour) {\n        pt = points[++endPoint];\n      }\n\n      // find the first point that has a delta\n      while (point <= endPoint && !hasDelta[point]) {\n        point++;\n      }\n\n      if (point > endPoint) {\n        continue;\n      }\n\n      var firstDelta = point;\n      var curDelta = point;\n      point++;\n\n      while (point <= endPoint) {\n        // find the next point with a delta, and interpolate intermediate points\n        if (hasDelta[point]) {\n          this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n          curDelta = point;\n        }\n\n        point++;\n      }\n\n      // shift contour if we only have a single delta\n      if (curDelta === firstDelta) {\n        this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n      } else {\n        // otherwise, handle the remaining points at the end and beginning of the contour\n        this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n\n        if (firstDelta > 0) {\n          this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n        }\n      }\n\n      point = endPoint + 1;\n    }\n  };\n\n  GlyphVariationProcessor.prototype.deltaInterpolate = function deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n    if (p1 > p2) {\n      return;\n    }\n\n    var iterable = ['x', 'y'];\n    for (var i = 0; i < iterable.length; i++) {\n      var k = iterable[i];\n      if (inPoints[ref1][k] > inPoints[ref2][k]) {\n        var p = ref1;\n        ref1 = ref2;\n        ref2 = p;\n      }\n\n      var in1 = inPoints[ref1][k];\n      var in2 = inPoints[ref2][k];\n      var out1 = outPoints[ref1][k];\n      var out2 = outPoints[ref2][k];\n\n      // If the reference points have the same coordinate but different\n      // delta, inferred delta is zero.  Otherwise interpolate.\n      if (in1 !== in2 || out1 === out2) {\n        var scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n\n        for (var _p = p1; _p <= p2; _p++) {\n          var out = inPoints[_p][k];\n\n          if (out <= in1) {\n            out += out1 - in1;\n          } else if (out >= in2) {\n            out += out2 - in2;\n          } else {\n            out = out1 + (out - in1) * scale;\n          }\n\n          outPoints[_p][k] = out;\n        }\n      }\n    }\n  };\n\n  GlyphVariationProcessor.prototype.deltaShift = function deltaShift(p1, p2, ref, inPoints, outPoints) {\n    var deltaX = outPoints[ref].x - inPoints[ref].x;\n    var deltaY = outPoints[ref].y - inPoints[ref].y;\n\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n\n    for (var p = p1; p <= p2; p++) {\n      if (p !== ref) {\n        outPoints[p].x += deltaX;\n        outPoints[p].y += deltaY;\n      }\n    }\n  };\n\n  GlyphVariationProcessor.prototype.getAdvanceAdjustment = function getAdvanceAdjustment(gid, table) {\n    var outerIndex = void 0,\n        innerIndex = void 0;\n\n    if (table.advanceWidthMapping) {\n      var idx = gid;\n      if (idx >= table.advanceWidthMapping.mapCount) {\n        idx = table.advanceWidthMapping.mapCount - 1;\n      }\n\n      var entryFormat = table.advanceWidthMapping.entryFormat;\n      var _table$advanceWidthMa = table.advanceWidthMapping.mapData[idx];\n      outerIndex = _table$advanceWidthMa.outerIndex;\n      innerIndex = _table$advanceWidthMa.innerIndex;\n    } else {\n      outerIndex = 0;\n      innerIndex = gid;\n    }\n\n    return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n  };\n\n  // See pseudo code from `Font Variations Overview'\n  // in the OpenType specification.\n\n\n  GlyphVariationProcessor.prototype.getDelta = function getDelta(itemStore, outerIndex, innerIndex) {\n    if (outerIndex >= itemStore.itemVariationData.length) {\n      return 0;\n    }\n\n    var varData = itemStore.itemVariationData[outerIndex];\n    if (innerIndex >= varData.deltaSets.length) {\n      return 0;\n    }\n\n    var deltaSet = varData.deltaSets[innerIndex];\n    var blendVector = this.getBlendVector(itemStore, outerIndex);\n    var netAdjustment = 0;\n\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      netAdjustment += deltaSet.deltas[master] * blendVector[master];\n    }\n\n    return netAdjustment;\n  };\n\n  GlyphVariationProcessor.prototype.getBlendVector = function getBlendVector(itemStore, outerIndex) {\n    var varData = itemStore.itemVariationData[outerIndex];\n    if (this.blendVectors.has(varData)) {\n      return this.blendVectors.get(varData);\n    }\n\n    var normalizedCoords = this.normalizedCoords;\n    var blendVector = [];\n\n    // outer loop steps through master designs to be blended\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      var scalar = 1;\n      var regionIndex = varData.regionIndexes[master];\n      var axes = itemStore.variationRegionList.variationRegions[regionIndex];\n\n      // inner loop steps through axes in this region\n      for (var j = 0; j < axes.length; j++) {\n        var axis = axes[j];\n        var axisScalar = void 0;\n\n        // compute the scalar contribution of this axis\n        // ignore invalid ranges\n        if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) {\n          axisScalar = 1;\n        } else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) {\n          axisScalar = 1;\n\n          // peak of 0 means ignore this axis\n        } else if (axis.peakCoord === 0) {\n          axisScalar = 1;\n\n          // ignore this region if coords are out of range\n        } else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) {\n          axisScalar = 0;\n\n          // calculate a proportional factor\n        } else {\n          if (normalizedCoords[j] === axis.peakCoord) {\n            axisScalar = 1;\n          } else if (normalizedCoords[j] < axis.peakCoord) {\n            axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) / (axis.peakCoord - axis.startCoord + Number.EPSILON);\n          } else {\n            axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) / (axis.endCoord - axis.peakCoord + Number.EPSILON);\n          }\n        }\n\n        // take product of all the axis scalars\n        scalar *= axisScalar;\n      }\n\n      blendVector[master] = scalar;\n    }\n\n    this.blendVectors.set(varData, blendVector);\n    return blendVector;\n  };\n\n  return GlyphVariationProcessor;\n}();\n\nvar Subset = function () {\n  function Subset(font) {\n    classCallCheck(this, Subset);\n\n    this.font = font;\n    this.glyphs = [];\n    this.mapping = {};\n\n    // always include the missing glyph\n    this.includeGlyph(0);\n  }\n\n  Subset.prototype.includeGlyph = function includeGlyph(glyph) {\n    if ((typeof glyph === 'undefined' ? 'undefined' : _typeof(glyph)) === 'object') {\n      glyph = glyph.id;\n    }\n\n    if (this.mapping[glyph] == null) {\n      this.glyphs.push(glyph);\n      this.mapping[glyph] = this.glyphs.length - 1;\n    }\n\n    return this.mapping[glyph];\n  };\n\n  Subset.prototype.encodeStream = function encodeStream() {\n    var _this = this;\n\n    var s = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.EncodeStream();\n\n    process.nextTick(function () {\n      _this.encode(s);\n      return s.end();\n    });\n\n    return s;\n  };\n\n  return Subset;\n}();\n\n// Flags for simple glyphs\nvar ON_CURVE$1 = 1 << 0;\nvar X_SHORT_VECTOR$1 = 1 << 1;\nvar Y_SHORT_VECTOR$1 = 1 << 2;\nvar REPEAT$1 = 1 << 3;\nvar SAME_X$1 = 1 << 4;\nvar SAME_Y$1 = 1 << 5;\n\nvar Point$1 = function () {\n  function Point() {\n    classCallCheck(this, Point);\n  }\n\n  Point.size = function size(val) {\n    return val >= 0 && val <= 255 ? 1 : 2;\n  };\n\n  Point.encode = function encode(stream, value) {\n    if (value >= 0 && value <= 255) {\n      stream.writeUInt8(value);\n    } else {\n      stream.writeInt16BE(value);\n    }\n  };\n\n  return Point;\n}();\n\nvar Glyf = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  numberOfContours: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16, // if negative, this is a composite glyph\n  xMin: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  yMin: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  xMax: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  yMax: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  endPtsOfContours: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'numberOfContours'),\n  instructions: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16),\n  flags: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, 0),\n  xPoints: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(Point$1, 0),\n  yPoints: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(Point$1, 0)\n});\n\n/**\n * Encodes TrueType glyph outlines\n */\n\nvar TTFGlyphEncoder = function () {\n  function TTFGlyphEncoder() {\n    classCallCheck(this, TTFGlyphEncoder);\n  }\n\n  TTFGlyphEncoder.prototype.encodeSimple = function encodeSimple(path) {\n    var instructions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    var endPtsOfContours = [];\n    var xPoints = [];\n    var yPoints = [];\n    var flags = [];\n    var same = 0;\n    var lastX = 0,\n        lastY = 0,\n        lastFlag = 0;\n    var pointCount = 0;\n\n    for (var i = 0; i < path.commands.length; i++) {\n      var c = path.commands[i];\n\n      for (var j = 0; j < c.args.length; j += 2) {\n        var x = c.args[j];\n        var y = c.args[j + 1];\n        var flag = 0;\n\n        // If the ending point of a quadratic curve is the midpoint\n        // between the control point and the control point of the next\n        // quadratic curve, we can omit the ending point.\n        if (c.command === 'quadraticCurveTo' && j === 2) {\n          var next = path.commands[i + 1];\n          if (next && next.command === 'quadraticCurveTo') {\n            var midX = (lastX + next.args[0]) / 2;\n            var midY = (lastY + next.args[1]) / 2;\n\n            if (x === midX && y === midY) {\n              continue;\n            }\n          }\n        }\n\n        // All points except control points are on curve.\n        if (!(c.command === 'quadraticCurveTo' && j === 0)) {\n          flag |= ON_CURVE$1;\n        }\n\n        flag = this._encodePoint(x, lastX, xPoints, flag, X_SHORT_VECTOR$1, SAME_X$1);\n        flag = this._encodePoint(y, lastY, yPoints, flag, Y_SHORT_VECTOR$1, SAME_Y$1);\n\n        if (flag === lastFlag && same < 255) {\n          flags[flags.length - 1] |= REPEAT$1;\n          same++;\n        } else {\n          if (same > 0) {\n            flags.push(same);\n            same = 0;\n          }\n\n          flags.push(flag);\n          lastFlag = flag;\n        }\n\n        lastX = x;\n        lastY = y;\n        pointCount++;\n      }\n\n      if (c.command === 'closePath') {\n        endPtsOfContours.push(pointCount - 1);\n      }\n    }\n\n    // Close the path if the last command didn't already\n    if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== 'closePath') {\n      endPtsOfContours.push(pointCount - 1);\n    }\n\n    var bbox = path.bbox;\n    var glyf = {\n      numberOfContours: endPtsOfContours.length,\n      xMin: bbox.minX,\n      yMin: bbox.minY,\n      xMax: bbox.maxX,\n      yMax: bbox.maxY,\n      endPtsOfContours: endPtsOfContours,\n      instructions: instructions,\n      flags: flags,\n      xPoints: xPoints,\n      yPoints: yPoints\n    };\n\n    var size = Glyf.size(glyf);\n    var tail = 4 - size % 4;\n\n    var stream = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.EncodeStream(size + tail);\n    Glyf.encode(stream, glyf);\n\n    // Align to 4-byte length\n    if (tail !== 0) {\n      stream.fill(0, tail);\n    }\n\n    return stream.buffer;\n  };\n\n  TTFGlyphEncoder.prototype._encodePoint = function _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n    var diff = value - last;\n\n    if (value === last) {\n      flag |= sameFlag;\n    } else {\n      if (-255 <= diff && diff <= 255) {\n        flag |= shortFlag;\n        if (diff < 0) {\n          diff = -diff;\n        } else {\n          flag |= sameFlag;\n        }\n      }\n\n      points.push(diff);\n    }\n\n    return flag;\n  };\n\n  return TTFGlyphEncoder;\n}();\n\nvar TTFSubset = function (_Subset) {\n  inherits(TTFSubset, _Subset);\n\n  function TTFSubset(font) {\n    classCallCheck(this, TTFSubset);\n\n    var _this = possibleConstructorReturn(this, _Subset.call(this, font));\n\n    _this.glyphEncoder = new TTFGlyphEncoder();\n    return _this;\n  }\n\n  TTFSubset.prototype._addGlyph = function _addGlyph(gid) {\n    var glyph = this.font.getGlyph(gid);\n    var glyf = glyph._decode();\n\n    // get the offset to the glyph from the loca table\n    var curOffset = this.font.loca.offsets[gid];\n    var nextOffset = this.font.loca.offsets[gid + 1];\n\n    var stream = this.font._getTableStream('glyf');\n    stream.pos += curOffset;\n\n    var buffer = stream.readBuffer(nextOffset - curOffset);\n\n    // if it is a compound glyph, include its components\n    if (glyf && glyf.numberOfContours < 0) {\n      buffer = Buffer.from(buffer);\n      for (var _iterator = glyf.components, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var component = _ref;\n\n        gid = this.includeGlyph(component.glyphID);\n        buffer.writeUInt16BE(gid, component.pos);\n      }\n    } else if (glyf && this.font._variationProcessor) {\n      // If this is a TrueType variation glyph, re-encode the path\n      buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n    }\n\n    this.glyf.push(buffer);\n    this.loca.offsets.push(this.offset);\n\n    this.hmtx.metrics.push({\n      advance: glyph.advanceWidth,\n      bearing: glyph._getMetrics().leftBearing\n    });\n\n    this.offset += buffer.length;\n    return this.glyf.length - 1;\n  };\n\n  TTFSubset.prototype.encode = function encode(stream) {\n    // tables required by PDF spec:\n    //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n    //\n    // additional tables required for standalone fonts:\n    //   name, cmap, OS/2, post\n\n    this.glyf = [];\n    this.offset = 0;\n    this.loca = {\n      offsets: []\n    };\n\n    this.hmtx = {\n      metrics: [],\n      bearings: []\n    };\n\n    // include all the glyphs\n    // not using a for loop because we need to support adding more\n    // glyphs to the array as we go, and CoffeeScript caches the length.\n    var i = 0;\n    while (i < this.glyphs.length) {\n      this._addGlyph(this.glyphs[i++]);\n    }\n\n    var maxp = clone__WEBPACK_IMPORTED_MODULE_6___default()(this.font.maxp);\n    maxp.numGlyphs = this.glyf.length;\n\n    this.loca.offsets.push(this.offset);\n    tables.loca.preEncode.call(this.loca);\n\n    var head = clone__WEBPACK_IMPORTED_MODULE_6___default()(this.font.head);\n    head.indexToLocFormat = this.loca.version;\n\n    var hhea = clone__WEBPACK_IMPORTED_MODULE_6___default()(this.font.hhea);\n    hhea.numberOfMetrics = this.hmtx.metrics.length;\n\n    // map = []\n    // for index in [0...256]\n    //     if index < @numGlyphs\n    //         map[index] = index\n    //     else\n    //         map[index] = 0\n    //\n    // cmapTable =\n    //     version: 0\n    //     length: 262\n    //     language: 0\n    //     codeMap: map\n    //\n    // cmap =\n    //     version: 0\n    //     numSubtables: 1\n    //     tables: [\n    //         platformID: 1\n    //         encodingID: 0\n    //         table: cmapTable\n    //     ]\n\n    // TODO: subset prep, cvt, fpgm?\n    Directory.encode(stream, {\n      tables: {\n        head: head,\n        hhea: hhea,\n        loca: this.loca,\n        maxp: maxp,\n        'cvt ': this.font['cvt '],\n        prep: this.font.prep,\n        glyf: this.glyf,\n        hmtx: this.hmtx,\n        fpgm: this.font.fpgm\n\n        // name: clone @font.name\n        // 'OS/2': clone @font['OS/2']\n        // post: clone @font.post\n        // cmap: cmap\n      }\n    });\n  };\n\n  return TTFSubset;\n}(Subset);\n\nvar CFFSubset = function (_Subset) {\n  inherits(CFFSubset, _Subset);\n\n  function CFFSubset(font) {\n    classCallCheck(this, CFFSubset);\n\n    var _this = possibleConstructorReturn(this, _Subset.call(this, font));\n\n    _this.cff = _this.font['CFF '];\n    if (!_this.cff) {\n      throw new Error('Not a CFF Font');\n    }\n    return _this;\n  }\n\n  CFFSubset.prototype.subsetCharstrings = function subsetCharstrings() {\n    this.charstrings = [];\n    var gsubrs = {};\n\n    for (var _iterator = this.glyphs, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var gid = _ref;\n\n      this.charstrings.push(this.cff.getCharString(gid));\n\n      var glyph = this.font.getGlyph(gid);\n      var path = glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedGsubrs) {\n        gsubrs[subr] = true;\n      }\n    }\n\n    this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n  };\n\n  CFFSubset.prototype.subsetSubrs = function subsetSubrs(subrs, used) {\n    var res = [];\n    for (var i = 0; i < subrs.length; i++) {\n      var subr = subrs[i];\n      if (used[i]) {\n        this.cff.stream.pos = subr.offset;\n        res.push(this.cff.stream.readBuffer(subr.length));\n      } else {\n        res.push(Buffer.from([11])); // return\n      }\n    }\n\n    return res;\n  };\n\n  CFFSubset.prototype.subsetFontdict = function subsetFontdict(topDict) {\n    topDict.FDArray = [];\n    topDict.FDSelect = {\n      version: 0,\n      fds: []\n    };\n\n    var used_fds = {};\n    var used_subrs = [];\n    for (var _iterator2 = this.glyphs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var gid = _ref2;\n\n      var fd = this.cff.fdForGlyph(gid);\n      if (fd == null) {\n        continue;\n      }\n\n      if (!used_fds[fd]) {\n        topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n        used_subrs.push({});\n      }\n\n      used_fds[fd] = true;\n      topDict.FDSelect.fds.push(topDict.FDArray.length - 1);\n\n      var glyph = this.font.getGlyph(gid);\n      var path = glyph.path; // this causes the glyph to be parsed\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[used_subrs.length - 1][subr] = true;\n      }\n    }\n\n    for (var i = 0; i < topDict.FDArray.length; i++) {\n      var dict = topDict.FDArray[i];\n      delete dict.FontName;\n      if (dict.Private && dict.Private.Subrs) {\n        dict.Private = Object.assign({}, dict.Private);\n        dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n      }\n    }\n\n    return;\n  };\n\n  CFFSubset.prototype.createCIDFontdict = function createCIDFontdict(topDict) {\n    var used_subrs = {};\n    for (var _iterator3 = this.glyphs, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var gid = _ref3;\n\n      var glyph = this.font.getGlyph(gid);\n      var path = glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[subr] = true;\n      }\n    }\n\n    var privateDict = Object.assign({}, this.cff.topDict.Private);\n    if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) {\n      privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n    }\n\n    topDict.FDArray = [{ Private: privateDict }];\n    return topDict.FDSelect = {\n      version: 3,\n      nRanges: 1,\n      ranges: [{ first: 0, fd: 0 }],\n      sentinel: this.charstrings.length\n    };\n  };\n\n  CFFSubset.prototype.addString = function addString(string) {\n    if (!string) {\n      return null;\n    }\n\n    if (!this.strings) {\n      this.strings = [];\n    }\n\n    this.strings.push(string);\n    return standardStrings.length + this.strings.length - 1;\n  };\n\n  CFFSubset.prototype.encode = function encode(stream) {\n    this.subsetCharstrings();\n\n    var charset = {\n      version: this.charstrings.length > 255 ? 2 : 1,\n      ranges: [{ first: 1, nLeft: this.charstrings.length - 2 }]\n    };\n\n    var topDict = Object.assign({}, this.cff.topDict);\n    topDict.Private = null;\n    topDict.charset = charset;\n    topDict.Encoding = null;\n    topDict.CharStrings = this.charstrings;\n\n    var _arr = ['version', 'Notice', 'Copyright', 'FullName', 'FamilyName', 'Weight', 'PostScript', 'BaseFontName', 'FontName'];\n    for (var _i4 = 0; _i4 < _arr.length; _i4++) {\n      var key = _arr[_i4];\n      topDict[key] = this.addString(this.cff.string(topDict[key]));\n    }\n\n    topDict.ROS = [this.addString('Adobe'), this.addString('Identity'), 0];\n    topDict.CIDCount = this.charstrings.length;\n\n    if (this.cff.isCIDFont) {\n      this.subsetFontdict(topDict);\n    } else {\n      this.createCIDFontdict(topDict);\n    }\n\n    var top = {\n      version: 1,\n      hdrSize: this.cff.hdrSize,\n      offSize: this.cff.length,\n      header: this.cff.header,\n      nameIndex: [this.cff.postscriptName],\n      topDictIndex: [topDict],\n      stringIndex: this.strings,\n      globalSubrIndex: this.gsubrs\n    };\n\n    CFFTop.encode(stream, top);\n  };\n\n  return CFFSubset;\n}(Subset);\n\nvar _class;\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n/**\n * This is the base class for all SFNT-based font formats in fontkit.\n * It supports TrueType, and PostScript glyphs, and several color glyph formats.\n */\nvar TTFFont = (_class = function () {\n  TTFFont.probe = function probe(buffer) {\n    var format = buffer.toString('ascii', 0, 4);\n    return format === 'true' || format === 'OTTO' || format === String.fromCharCode(0, 1, 0, 0);\n  };\n\n  function TTFFont(stream) {\n    var variationCoords = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    classCallCheck(this, TTFFont);\n\n    this.stream = stream;\n    this.variationCoords = variationCoords;\n\n    this._directoryPos = this.stream.pos;\n    this._tables = {};\n    this._glyphs = {};\n    this._decodeDirectory();\n\n    // define properties for each table to lazily parse\n    for (var tag in this.directory.tables) {\n      var table = this.directory.tables[tag];\n      if (tables[tag] && table.length > 0) {\n        Object.defineProperty(this, tag, {\n          get: this._getTable.bind(this, table)\n        });\n      }\n    }\n  }\n\n  TTFFont.prototype._getTable = function _getTable(table) {\n    if (!(table.tag in this._tables)) {\n      try {\n        this._tables[table.tag] = this._decodeTable(table);\n      } catch (e) {\n        if (fontkit$1.logErrors) {\n          console.error('Error decoding table ' + table.tag);\n          console.error(e.stack);\n        }\n      }\n    }\n\n    return this._tables[table.tag];\n  };\n\n  TTFFont.prototype._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n    if (table) {\n      this.stream.pos = table.offset;\n      return this.stream;\n    }\n\n    return null;\n  };\n\n  TTFFont.prototype._decodeDirectory = function _decodeDirectory() {\n    return this.directory = Directory.decode(this.stream, { _startOffset: 0 });\n  };\n\n  TTFFont.prototype._decodeTable = function _decodeTable(table) {\n    var pos = this.stream.pos;\n\n    var stream = this._getTableStream(table.tag);\n    var result = tables[table.tag].decode(stream, this, table.length);\n\n    this.stream.pos = pos;\n    return result;\n  };\n\n  /**\n   * The unique PostScript name for this font\n   * @type {string}\n   */\n\n\n  /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */\n  TTFFont.prototype.getName = function getName(key) {\n    var lang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en';\n\n    var record = this.name.records[key];\n    if (record) {\n      return record[lang];\n    }\n\n    return null;\n  };\n\n  /**\n   * The font's full name, e.g. \"Helvetica Bold\"\n   * @type {string}\n   */\n\n\n  /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */\n  TTFFont.prototype.hasGlyphForCodePoint = function hasGlyphForCodePoint(codePoint) {\n    return !!this._cmapProcessor.lookup(codePoint);\n  };\n\n  /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */\n\n\n  TTFFont.prototype.glyphForCodePoint = function glyphForCodePoint(codePoint) {\n    return this.getGlyph(this._cmapProcessor.lookup(codePoint), [codePoint]);\n  };\n\n  /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */\n\n\n  TTFFont.prototype.glyphsForString = function glyphsForString(string) {\n    var glyphs = [];\n    var len = string.length;\n    var idx = 0;\n    var last = -1;\n    var state = -1;\n    while (idx <= len) {\n      var code = 0;\n      var nextState = 0;\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          var next = string.charCodeAt(idx);\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        }\n        // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n        nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n      } else {\n        idx++;\n      }\n      if (state === 0 && nextState === 1) {\n        // Variation selector following normal codepoint.\n        glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [last, code]));\n      } else if (state === 0 && nextState === 0) {\n        // Normal codepoint following normal codepoint.\n        glyphs.push(this.glyphForCodePoint(last));\n      }\n      last = code;\n      state = nextState;\n    }\n    return glyphs;\n  };\n\n  /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @param {string} [direction]\n   * @return {GlyphRun}\n   */\n  TTFFont.prototype.layout = function layout(string, userFeatures, script, language, direction) {\n    return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n  };\n\n  /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */\n\n\n  TTFFont.prototype.stringsForGlyph = function stringsForGlyph(gid) {\n    return this._layoutEngine.stringsForGlyph(gid);\n  };\n\n  /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */\n\n\n  TTFFont.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return this._layoutEngine.getAvailableFeatures(script, language);\n  };\n\n  TTFFont.prototype._getBaseGlyph = function _getBaseGlyph(glyph) {\n    var characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf) {\n        this._glyphs[glyph] = new TTFGlyph(glyph, characters, this);\n      } else if (this.directory.tables['CFF '] || this.directory.tables.CFF2) {\n        this._glyphs[glyph] = new CFFGlyph(glyph, characters, this);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  };\n\n  /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */\n\n\n  TTFFont.prototype.getGlyph = function getGlyph(glyph) {\n    var characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.sbix) {\n        this._glyphs[glyph] = new SBIXGlyph(glyph, characters, this);\n      } else if (this.directory.tables.COLR && this.directory.tables.CPAL) {\n        this._glyphs[glyph] = new COLRGlyph(glyph, characters, this);\n      } else {\n        this._getBaseGlyph(glyph, characters);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  };\n\n  /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */\n\n\n  TTFFont.prototype.createSubset = function createSubset() {\n    if (this.directory.tables['CFF ']) {\n      return new CFFSubset(this);\n    }\n\n    return new TTFSubset(this);\n  };\n\n  /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */\n\n\n  /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */\n  TTFFont.prototype.getVariation = function getVariation(settings) {\n    if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) {\n      throw new Error('Variations require a font with the fvar, gvar and glyf, or CFF2 tables.');\n    }\n\n    if (typeof settings === 'string') {\n      settings = this.namedVariations[settings];\n    }\n\n    if ((typeof settings === 'undefined' ? 'undefined' : _typeof(settings)) !== 'object') {\n      throw new Error('Variation settings must be either a variation name or settings object.');\n    }\n\n    // normalize the coordinates\n    var coords = this.fvar.axis.map(function (axis, i) {\n      var axisTag = axis.axisTag.trim();\n      if (axisTag in settings) {\n        return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n      } else {\n        return axis.defaultValue;\n      }\n    });\n\n    var stream = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.DecodeStream(this.stream.buffer);\n    stream.pos = this._directoryPos;\n\n    var font = new TTFFont(stream, coords);\n    font._tables = this._tables;\n\n    return font;\n  };\n\n  // Standardized format plugin API\n  TTFFont.prototype.getFont = function getFont(name) {\n    return this.getVariation(name);\n  };\n\n  createClass(TTFFont, [{\n    key: 'postscriptName',\n    get: function get$$1() {\n      var name = this.name.records.postscriptName;\n      if (name) {\n        var lang = Object.keys(name)[0];\n        return name[lang];\n      }\n\n      return null;\n    }\n  }, {\n    key: 'fullName',\n    get: function get$$1() {\n      return this.getName('fullName');\n    }\n\n    /**\n     * The font's family name, e.g. \"Helvetica\"\n     * @type {string}\n     */\n\n  }, {\n    key: 'familyName',\n    get: function get$$1() {\n      return this.getName('fontFamily');\n    }\n\n    /**\n     * The font's sub-family, e.g. \"Bold\".\n     * @type {string}\n     */\n\n  }, {\n    key: 'subfamilyName',\n    get: function get$$1() {\n      return this.getName('fontSubfamily');\n    }\n\n    /**\n     * The font's copyright information\n     * @type {string}\n     */\n\n  }, {\n    key: 'copyright',\n    get: function get$$1() {\n      return this.getName('copyright');\n    }\n\n    /**\n     * The font's version number\n     * @type {string}\n     */\n\n  }, {\n    key: 'version',\n    get: function get$$1() {\n      return this.getName('version');\n    }\n\n    /**\n     * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n     * @type {number}\n     */\n\n  }, {\n    key: 'ascent',\n    get: function get$$1() {\n      return this.hhea.ascent;\n    }\n\n    /**\n     * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n     * @type {number}\n     */\n\n  }, {\n    key: 'descent',\n    get: function get$$1() {\n      return this.hhea.descent;\n    }\n\n    /**\n     * The amount of space that should be included between lines\n     * @type {number}\n     */\n\n  }, {\n    key: 'lineGap',\n    get: function get$$1() {\n      return this.hhea.lineGap;\n    }\n\n    /**\n     * The offset from the normal underline position that should be used\n     * @type {number}\n     */\n\n  }, {\n    key: 'underlinePosition',\n    get: function get$$1() {\n      return this.post.underlinePosition;\n    }\n\n    /**\n     * The weight of the underline that should be used\n     * @type {number}\n     */\n\n  }, {\n    key: 'underlineThickness',\n    get: function get$$1() {\n      return this.post.underlineThickness;\n    }\n\n    /**\n     * If this is an italic font, the angle the cursor should be drawn at to match the font design\n     * @type {number}\n     */\n\n  }, {\n    key: 'italicAngle',\n    get: function get$$1() {\n      return this.post.italicAngle;\n    }\n\n    /**\n     * The height of capital letters above the baseline.\n     * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n     * @type {number}\n     */\n\n  }, {\n    key: 'capHeight',\n    get: function get$$1() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.capHeight : this.ascent;\n    }\n\n    /**\n     * The height of lower case letters in the font.\n     * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n     * @type {number}\n     */\n\n  }, {\n    key: 'xHeight',\n    get: function get$$1() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.xHeight : 0;\n    }\n\n    /**\n     * The number of glyphs in the font.\n     * @type {number}\n     */\n\n  }, {\n    key: 'numGlyphs',\n    get: function get$$1() {\n      return this.maxp.numGlyphs;\n    }\n\n    /**\n     * The size of the font’s internal coordinate grid\n     * @type {number}\n     */\n\n  }, {\n    key: 'unitsPerEm',\n    get: function get$$1() {\n      return this.head.unitsPerEm;\n    }\n\n    /**\n     * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      return Object.freeze(new BBox(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n    }\n  }, {\n    key: '_cmapProcessor',\n    get: function get$$1() {\n      return new CmapProcessor(this.cmap);\n    }\n\n    /**\n     * An array of all of the unicode code points supported by the font.\n     * @type {number[]}\n     */\n\n  }, {\n    key: 'characterSet',\n    get: function get$$1() {\n      return this._cmapProcessor.getCharacterSet();\n    }\n  }, {\n    key: '_layoutEngine',\n    get: function get$$1() {\n      return new LayoutEngine(this);\n    }\n  }, {\n    key: 'availableFeatures',\n    get: function get$$1() {\n      return this._layoutEngine.getAvailableFeatures();\n    }\n  }, {\n    key: 'variationAxes',\n    get: function get$$1() {\n      var res = {};\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator = this.fvar.axis, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var axis = _ref;\n\n        res[axis.axisTag.trim()] = {\n          name: axis.name.en,\n          min: axis.minValue,\n          default: axis.defaultValue,\n          max: axis.maxValue\n        };\n      }\n\n      return res;\n    }\n\n    /**\n     * Returns an object describing the named variation instances\n     * that the font designer has specified. Keys are variation names\n     * and values are the variation settings for this instance.\n     *\n     * @type {object}\n     */\n\n  }, {\n    key: 'namedVariations',\n    get: function get$$1() {\n      var res = {};\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator2 = this.fvar.instance, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var instance = _ref2;\n\n        var settings = {};\n        for (var i = 0; i < this.fvar.axis.length; i++) {\n          var axis = this.fvar.axis[i];\n          settings[axis.axisTag.trim()] = instance.coord[i];\n        }\n\n        res[instance.name.en] = settings;\n      }\n\n      return res;\n    }\n  }, {\n    key: '_variationProcessor',\n    get: function get$$1() {\n      if (!this.fvar) {\n        return null;\n      }\n\n      var variationCoords = this.variationCoords;\n\n      // Ignore if no variation coords and not CFF2\n      if (!variationCoords && !this.CFF2) {\n        return null;\n      }\n\n      if (!variationCoords) {\n        variationCoords = this.fvar.axis.map(function (axis) {\n          return axis.defaultValue;\n        });\n      }\n\n      return new GlyphVariationProcessor(this, variationCoords);\n    }\n  }]);\n  return TTFFont;\n}(), _applyDecoratedDescriptor(_class.prototype, 'bbox', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'bbox'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_cmapProcessor', [cache], Object.getOwnPropertyDescriptor(_class.prototype, '_cmapProcessor'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'characterSet', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'characterSet'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_layoutEngine', [cache], Object.getOwnPropertyDescriptor(_class.prototype, '_layoutEngine'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'variationAxes', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'variationAxes'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'namedVariations', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'namedVariations'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_variationProcessor', [cache], Object.getOwnPropertyDescriptor(_class.prototype, '_variationProcessor'), _class.prototype), _class);\n\nvar WOFFDirectoryEntry = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  tag: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(4),\n  offset: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, 'void', { type: 'global' }),\n  compLength: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  origChecksum: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32\n});\n\nvar WOFFDirectory = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  tag: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(4), // should be 'wOFF'\n  flavor: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  numTables: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  reserved: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16),\n  totalSfntSize: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  majorVersion: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  minorVersion: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  metaOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  metaLength: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  metaOrigLength: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  privOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  privLength: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  tables: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(WOFFDirectoryEntry, 'numTables')\n});\n\nWOFFDirectory.process = function () {\n  var tables$$1 = {};\n  for (var _iterator = this.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var table = _ref;\n\n    tables$$1[table.tag] = table;\n  }\n\n  this.tables = tables$$1;\n};\n\nvar WOFFFont = function (_TTFFont) {\n  inherits(WOFFFont, _TTFFont);\n\n  function WOFFFont() {\n    classCallCheck(this, WOFFFont);\n    return possibleConstructorReturn(this, _TTFFont.apply(this, arguments));\n  }\n\n  WOFFFont.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'wOFF';\n  };\n\n  WOFFFont.prototype._decodeDirectory = function _decodeDirectory() {\n    this.directory = WOFFDirectory.decode(this.stream, { _startOffset: 0 });\n  };\n\n  WOFFFont.prototype._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n    if (table) {\n      this.stream.pos = table.offset;\n\n      if (table.compLength < table.length) {\n        this.stream.pos += 2; // skip deflate header\n        var outBuffer = Buffer.alloc(table.length);\n        var buf = tiny_inflate__WEBPACK_IMPORTED_MODULE_7___default()(this.stream.readBuffer(table.compLength - 2), outBuffer);\n        return new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.DecodeStream(buf);\n      } else {\n        return this.stream;\n      }\n    }\n\n    return null;\n  };\n\n  return WOFFFont;\n}(TTFFont);\n\nvar TTCHeader = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, {\n  0x00010000: {\n    numFonts: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    offsets: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, 'numFonts')\n  },\n  0x00020000: {\n    numFonts: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    offsets: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, 'numFonts'),\n    dsigTag: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    dsigLength: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n    dsigOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32\n  }\n});\n\nvar TrueTypeCollection = function () {\n  TrueTypeCollection.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'ttcf';\n  };\n\n  function TrueTypeCollection(stream) {\n    classCallCheck(this, TrueTypeCollection);\n\n    this.stream = stream;\n    if (stream.readString(4) !== 'ttcf') {\n      throw new Error('Not a TrueType collection');\n    }\n\n    this.header = TTCHeader.decode(stream);\n  }\n\n  TrueTypeCollection.prototype.getFont = function getFont(name) {\n    for (var _iterator = this.header.offsets, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var offset = _ref;\n\n      var stream = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      var font = new TTFFont(stream);\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  createClass(TrueTypeCollection, [{\n    key: 'fonts',\n    get: function get$$1() {\n      var fonts = [];\n      for (var _iterator2 = this.header.offsets, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var offset = _ref2;\n\n        var stream = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.DecodeStream(this.stream.buffer);\n        stream.pos = offset;\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n  return TrueTypeCollection;\n}();\n\nvar DFontName = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8);\nvar DFontData = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  len: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  buf: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Buffer('len')\n});\n\nvar Ref = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  id: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  nameOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.int16,\n  attr: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8,\n  dataOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint24,\n  handle: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32\n});\n\nvar Type = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  name: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.String(4),\n  maxTypeIndex: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  refList: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(Ref, function (t) {\n    return t.maxTypeIndex + 1;\n  }), { type: 'parent' })\n});\n\nvar TypeList = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  length: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16,\n  types: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Array(Type, function (t) {\n    return t.length + 1;\n  })\n});\n\nvar DFontMap = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  reserved: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint8, 24),\n  typeList: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, TypeList),\n  nameListOffset: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint16, 'void')\n});\n\nvar DFontHeader = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Struct({\n  dataOffset: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  map: new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32, DFontMap),\n  dataLength: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32,\n  mapLength: restructure__WEBPACK_IMPORTED_MODULE_0___default.a.uint32\n});\n\nvar DFont = function () {\n  DFont.probe = function probe(buffer) {\n    var stream = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.DecodeStream(buffer);\n\n    try {\n      var header = DFontHeader.decode(stream);\n    } catch (e) {\n      return false;\n    }\n\n    for (var _iterator = header.map.typeList.types, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var type = _ref;\n\n      if (type.name === 'sfnt') {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  function DFont(stream) {\n    classCallCheck(this, DFont);\n\n    this.stream = stream;\n    this.header = DFontHeader.decode(this.stream);\n\n    for (var _iterator2 = this.header.map.typeList.types, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var type = _ref2;\n\n      for (var _iterator3 = type.refList, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var ref = _ref3;\n\n        if (ref.nameOffset >= 0) {\n          this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n          ref.name = DFontName.decode(this.stream);\n        } else {\n          ref.name = null;\n        }\n      }\n\n      if (type.name === 'sfnt') {\n        this.sfnt = type;\n      }\n    }\n  }\n\n  DFont.prototype.getFont = function getFont(name) {\n    if (!this.sfnt) {\n      return null;\n    }\n\n    for (var _iterator4 = this.sfnt.refList, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var ref = _ref4;\n\n      var pos = this.header.dataOffset + ref.dataOffset + 4;\n      var stream = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.DecodeStream(this.stream.buffer.slice(pos));\n      var font = new TTFFont(stream);\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  createClass(DFont, [{\n    key: 'fonts',\n    get: function get$$1() {\n      var fonts = [];\n      for (var _iterator5 = this.sfnt.refList, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n        var _ref5;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref5 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref5 = _i5.value;\n        }\n\n        var ref = _ref5;\n\n        var pos = this.header.dataOffset + ref.dataOffset + 4;\n        var stream = new restructure__WEBPACK_IMPORTED_MODULE_0___default.a.DecodeStream(this.stream.buffer.slice(pos));\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n  return DFont;\n}();\n\n// Register font formats\nfontkit$1.registerFormat(TTFFont);\nfontkit$1.registerFormat(WOFFFont);\nfontkit$1.registerFormat(TrueTypeCollection);\nfontkit$1.registerFormat(DFont);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (fontkit$1);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"HDXh\").Buffer, __webpack_require__(\"8oxB\")))\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@react-pdf/fontkit/dist/fontkit.browser.es.js"],"names":[],"mappings":"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AAe,kDAAC;AAChB,sBAAsB,kDAAC;AACvB,wBAAwB,kDAAC;AACzB,YAAY,kDAAC;AACb,qBAAqB,kDAAC;AACtB,cAAc,kDAAC;AACf,mBAAmB,kDAAC;AACpB,sBAAsB,kDAAC;AACvB,oBAAoB,kDAAC;AACrB,yBAAyB,kDAAC;AAC1B,wBAAwB,kDAAC;AACzB,qBAAqB,kDAAC,uCAAuC;AAC7D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,qBAAqB,kDAAC;AACtB,cAAc,kDAAC;AACf,cAAc,kDAAC;AACf,cAAc,kDAAC;AACf,UAAU,kDAAC;AACX,UAAU,kDAAC;AACX,cAAc,kDAAC,SAAS,kDAAC,aAAa,kDAAC;AACvC;AACA,GAAG,IAAI,sEAAsE;AAC7E,CAAC;;AAED,wBAAwB,kDAA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ACA,eAAe,kDAAC;AAChB,oBAAoB,kDAAC,OAAO,kDAAC;AAC7B,CAAC;;AAED,eAAe,kDAAC;AAChB;AACA,iBAAiB,kDAAC,OAAO,kDAAC;AAC1B,GAAG;AACH;AACA,iBAAiB,kDAAC,OAAO,kDAAC;AAC1B;AACA,CAAC;;AAED;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;;AAEA;AACA,eAAe,kDAAC;AAChB,2BAA2B,kDAAC,OAAO,kDAAC;AACpC,CAAC;;AAED;AACA,eAAe,kDAAC,WAAW,kDAAC;;AAE5B;AACA;AACA,CAAC;AACD;AACA;;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;AAUD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;AAYA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,kDAAC;AACpB,KAAK;AACL,mBAAmB,kDAAC;AACpB,KAAK;AACL,mBAAmB,kDAAC;AACpB,KAAK;AACL,mBAAmB,kDAAC;AACpB,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,WAAW;AAC9B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,kDAAC;;AAEjC;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kDAAC;AACpB,KAAK;AACL,mBAAmB,kDAAC;AACpB,KAAK;AACL,mBAAmB,kDAAC;AACpB,KAAK;AACL,mBAAmB,kDAAC;AACpB,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,kDAAC;;AAEjC;AACA;AACA;AACA,4IAA4I;AAC5I;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kDAAC;AACpB,KAAK;AACL,mBAAmB,kDAAC;AACpB,KAAK;AACL,mBAAmB,kDAAC;AACpB,KAAK;AACL,mBAAmB,kDAAC;AACpB,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sJAAsJ;AACtJ;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,oJAAoJ;AACpJ;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,qBAAqB,gBAAgB;AACrC;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA,4IAA4I;AAC5I;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,gBAAgB;AAC/B,qBAAqB;AACrB,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,wEAAkB;AAC/C;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,yBAAyB,iDAAO;AAChC;AACA;;AAEA;AACA,2JAA2J;AAC3J;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,yJAAyJ;AACzJ;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yBAAyB,iDAAO;AAChC;AACA;;AAEA;AACA,2JAA2J;AAC3J;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,sJAAsJ;AACtJ;;AAEA;AACA;AACA;AA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AC;AACpB,SAAS,kDAAC;AACV,MAAM,kDAAC;AACP,CAAC;;AAED,mBAAmB,kDAAC,iBAAiB,kDAAC;AACtC;AACA,aAAa,kDAAC,OAAO,kDAAC;AACtB;AACA,KAAK;AACL,GAAG;;AAEH;AACA,aAAa,kDAAC;AACd,gBAAgB,kDAAC;AACjB,cAAc,kDAAC;AACf,GAAG;;AAEH;AACA,aAAa,kDAAC;AACd,gBAAgB,kDAAC;AACjB,cAAc,kDAAC;AACf;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAyB,kDAAC;AAC1B,UAAU,kDAAC;AACX;AACA,CAAC;;AAED;;AAEA,iBAAiB,kDAAC,iBAAiB,kDAAC;AACpC;AACA,aAAa,kDAAC;AACd,aAAa,kDAAC;AACd,gCAAgC,kDAAC;AACjC;AACA,kCAAkC,kDAAC;AACnC;AACA,GAAG;;AAEH;AACA,aAAa,kDAAC;AACd,YAAY,kDAAC;AACb;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;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U,kDAAC;AACX,CAAC;;AAED,eAAe,kDAAC;AAChB,WAAW,kDAAC;AACZ,UAAU,kDAAC;AACX;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,kDAAC;AACtB,WAAW,kDAAC;AACZ,YAAY,kDAAC;AACb,cAAc,kDAAC,SAAS,kDAAC,kBAAkB,iBAAiB;AAC5D,UAAU,kDAAC;AACX,CAAC;;AAED,oBAAoB,kDAAC;AACrB,WAAW,kDAAC;AACZ,aAAa,kDAAC;AACd,eAAe,kDAAC;AAChB,iBAAiB,kDAAC;AAClB,cAAc,kDAAC;AACf,cAAc,kDAAC;AACf,CAAC;;AAED;AACA;AACA,kJAAkJ;AAClJ;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAC;AACrB;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,mBAAO,CAAC,MAAY;AAClC,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2JAA2J;AAC3J;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sJAAsJ;AACtJ;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mKAAmK;AACnK;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,qBAAqB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4KAA4K;AAC5K;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;;AAEA,+BAA+B,UAAU;AACzC;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,4KAA4K;AAC5K;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,4KAA4K;AAC5K;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,gCAAgC;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yJAAyJ;AACzJ;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,qEAAO;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4IAA4I;AAC5I;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,qEAAO;AACzB;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,mJAAmJ;AACnJ;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA,iKAAiK;AACjK;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA,iKAAiK;AACjK;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,4BAA4B;AACrD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,gBAAgB;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kKAAkK;AAClK;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb,iCAAiC,+BAA+B;AAChE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,0KAA0K;AAC1K;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,8BAA8B;AACvD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2BAA2B,sBAAsB;AACjD;AACA;;AAEA;AACA,qLAAqL;AACrL;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,aAAa;;;AAGrD;AACA;;AAEA,yJAAyJ;AACzJ;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,iKAAiK;AACjK;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kKAAkK;AAClK;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sDAAsD;AACtD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iKAAiK;AACjK;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA,iKAAiK;AACjK;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iKAAiK;AACjK;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,kKAAkK;AAClK;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,iCAAiC;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qJAAqJ;AACrJ;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,2JAA2J;AAC3J;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,iJAAiJ;AACjJ;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,uJAAuJ;AACvJ;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,4JAA4J;AAC5J;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,qEAAO;AACnC;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,qEAAO;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mDAAW;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,qEAAO;AACxB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+IAA+I;AAC/I;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA,wKAAwK;AACxK;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,6KAA6K;AAC7K;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iLAAiL;AACjL;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6JAA6J;AAC7J;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,4KAA4K;AAC5K;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8JAA8J;AAC9J;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wJAAwJ;AACxJ;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qKAAqK;AACrK;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sKAAsK;AACtK;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2KAA2K;AAC3K;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kLAAkL;AAClL;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sLAAsL;AACtL;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mKAAmK;AACnK;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mKAAmK;AACnK;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mKAAmK;AACnK;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kKAAkK;AAClK;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,0EAA0E,qEAAO;AACjF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,WAAW;AACX,YAAY;AACZ,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,iBAAiB,mDAAW;AAC5B,uBAAuB,0CAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oLAAoL;AACpL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;;AAEA;;AAEA;AACA,yBAAyB,YAAY;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qJAAqJ;AACrJ;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,0CAA0C;AAC1C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;;AAEA,oDAAoD,uBAAuB;AAC3E;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,yBAAyB,YAAY;AACrC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,WAAW;AACvC;AACA,6BAA6B,SAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA,4BAA4B,WAAW;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,YAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,aAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,0BAA0B,YAAY;AACtC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0BAA0B,gFAAgF;AAC1G;AACA;;AAEA;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,0BAA0B;AACzD;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oDAAoD,uBAAuB;AAC3E;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,UAAU,YAAY;AACtB;AACA;AACA,gCAAgC,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,YAAY;AAC/C;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC,cAAc;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,qEAAO;AACjG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,mDAAW;AAC5B,yBAAyB,0CAAY;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oLAAoL;AACpL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,UAAU;AACjC;AACA;;AAEA;AACA;AACA,yBAAyB,qBAAqB;AAC9C;AACA;AACA;AACA;;AAEA;AACA,qJAAqJ;AACrJ;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,qJAAqJ;AACrJ;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qJAAqJ;AACrJ;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sDAAsD,uBAAuB;AAC7E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,kDAAkD;AACvE;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,SAAS;AACrC;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6IAA6I;AAC7I;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8KAA8K;AAC9K;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,gKAAgK;AAChK;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sCAAsC;AACjE;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gKAAgK;AAChK;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,UAAU;AACxD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yJAAyJ;AACzJ;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;;AAEA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA,SAAS;AACT,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mJAAmJ;AACnJ;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,mLAAmL;AACnL;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;AACA,iEAAiE;AACjE,KAAK;AACL;AACA;;AAEA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA,aAAa,SAAS;AACtB,cAAc;AACd;AACA;AACA;;AAEA,sJAAsJ;AACtJ;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kKAAkK;AAClK;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA,2BAA2B,2BAA2B;AACtD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gKAAgK;AAChK;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kDAAkD;AAClD;AACA,oDAAoD;AACpD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,QAAQ;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA,mEAAmE,aAAa;AAChF;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,sEAAsE,qEAAO;AAC7E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA,aAAa,yBAAyB;AACtC,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA,qBAAqB,kDAAC;AACtB,oBAAoB,kDAAC;AACrB,QAAQ,kDAAC;AACT,QAAQ,kDAAC;AACT,QAAQ,kDAAC;AACT,QAAQ,kDAAC;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,kDAAC,OAAO,kDAAC;AACxC,6BAA6B,kDAAC,OAAO,kDAAC,QAAQ,kDAAC;;AAE/C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,2JAA2J;AAC3J;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,sBAAsB;AAC7C;AACA,yBAAyB,oBAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,yBAAyB,oBAAoB;AAC7C;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,eAAe;AAC9C;AACA,iCAAiC,wBAAwB;AACziBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED,oBAAoB,kDAAC;AACrB,WAAW,kDAAC;AACZ,WAAW,kDAAC;AACZ,YAAY,kDAAC;AACb,YAAY,kDAAC;AACb;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gDAAgD,sBAAsB;AACtE;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,0EAA0E;AACrG;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA,oJAAoJ;AACpJ;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6CAA6C,qDAAqD;AAClG;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mCAAmC;AACxD;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,mBAAmB,gBAAgB;AACnC;AACA;;AAEA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;;AAEA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET,yBAAyB,qBAAqB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,yBAAyB,0BAA0B;AACnD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,mBAAmB,oBAAoB;AACvC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yBAAyB,UAAU;AACnC;;AAEA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,mCAAmC;AAC3D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,mCAAmC;AAC3D;AACA;AACA;;AAEA;AACA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,SAAS;AACT;;AAEA;AACA,SAAS;AACT;;AAEA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gBAAgB,kDAAC;;AAEjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,CAAC;;AAED,eAAe,kDAAC;AAChB,oBAAoB,kDAAC;AACrB,QAAQ,kDAAC;AACT,QAAQ,kDAAC;AACT,QAAQ,kDAAC;AACT,QAAQ,kDAAC;AACT,wBAAwB,kDAAC,OAAO,kDAAC;AACjC,oBAAoB,kDAAC,OAAO,kDAAC,QAAQ,kDAAC;AACtC,aAAa,kDAAC,OAAO,kDAAC;AACtB,eAAe,kDAAC;AAChB,eAAe,kDAAC;AAChB,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,0BAA0B;AAC7C;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,kDAAC;AACtB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,0JAA0J;AAC1J;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,4CAAS;AACxB;;AAEA;AACA;;AAEA,eAAe,4CAAS;AACxB;;AAEA,eAAe,4CAAS;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oJAAoJ;AACpJ;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA,OAAO;AACP,oCAAoC;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4JAA4J;AAC5J;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C;AAC7C,0BAA0B;AAC1B;;AAEA;AACA;;AAEA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;;AAEA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4JAA4J;AAC5J;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;;AAEA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,+CAA+C;AAC/D;;AAEA,kCAAkC;AAClC;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2DAA2D,kBAAkB;AAC7E;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,cAAc;AACd;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL,qBAAqB,kDAAC;AACtB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,yJAAyJ;AACzJ;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,qKAAqK;AACrK;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,6BAA6B,kDAAC;AAC9B,WAAW,kDAAC;AACZ,cAAc,kDAAC,SAAS,kDAAC,kBAAkB,iBAAiB;AAC5D,cAAc,kDAAC;AACf,UAAU,kDAAC;AACX,gBAAgB,kDAAC;AACjB,CAAC;;AAED,wBAAwB,kDAAC;AACzB,WAAW,kDAAC;AACZ,UAAU,kDAAC;AACX,UAAU,kDAAC;AACX,aAAa,kDAAC;AACd,gBAAgB,kDAAC,UAAU,kDAAC;AAC5B,iBAAiB,kDAAC;AAClB,gBAAgB,kDAAC;AACjB,gBAAgB,kDAAC;AACjB,cAAc,kDAAC;AACf,cAAc,kDAAC;AACf,kBAAkB,kDAAC;AACnB,cAAc,kDAAC;AACf,cAAc,kDAAC;AACf,cAAc,kDAAC;AACf,CAAC;;AAED;AACA;AACA,kJAAkJ;AAClJ;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wDAAwD,kBAAkB;AAC1E;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA,kBAAkB,mDAAO;AACzB,mBAAmB,kDAAC;AACpB,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED,oBAAoB,kDAAC,iBAAiB,kDAAC;AACvC;AACA,cAAc,kDAAC;AACf,iBAAiB,kDAAC,OAAO,kDAAC;AAC1B,GAAG;AACH;AACA,cAAc,kDAAC;AACf,iBAAiB,kDAAC,OAAO,kDAAC;AAC1B,aAAa,kDAAC;AACd,gBAAgB,kDAAC;AACjB,gBAAgB,kDAAC;AACjB;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4JAA4J;AAC5J;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,kDAAC;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sKAAsK;AACtK;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,yBAAyB,kDAAC;AAC1B;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,oBAAoB,kDAAC,QAAQ,kDAAC;AAC9B,oBAAoB,kDAAC;AACrB,OAAO,kDAAC;AACR,WAAW,kDAAC;AACZ,CAAC;;AAED,cAAc,kDAAC;AACf,MAAM,kDAAC;AACP,cAAc,kDAAC;AACf,QAAQ,kDAAC;AACT,cAAc,kDAAC;AACf,UAAU,kDAAC;AACX,CAAC;;AAED,eAAe,kDAAC;AAChB,YAAY,kDAAC;AACb,gBAAgB,kDAAC;AACjB,eAAe,kDAAC,SAAS,kDAAC,aAAa,kDAAC;AACxC;AACA,GAAG,IAAI,iBAAiB;AACxB,CAAC;;AAED,mBAAmB,kDAAC;AACpB,UAAU,kDAAC;AACX,aAAa,kDAAC;AACd;AACA,GAAG;AACH,CAAC;;AAED,mBAAmB,kDAAC;AACpB,gBAAgB,kDAAC,UAAU,kDAAC;AAC5B,gBAAgB,kDAAC,SAAS,kDAAC;AAC3B,sBAAsB,kDAAC,SAAS,kDAAC;AACjC,CAAC;;AAED,sBAAsB,kDAAC;AACvB,cAAc,kDAAC;AACf,WAAW,kDAAC,SAAS,kDAAC;AACtB,cAAc,kDAAC;AACf,aAAa,kDAAC;AACd,CAAC;;AAED;AACA;AACA,qBAAqB,kDAAC;;AAEtB;AACA;AACA,KAAK;AACL;AACA;;AAEA,kKAAkK;AAClK;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,+KAA+K;AAC/K;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA,+JAA+J;AAC/J;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kKAAkK;AAClK;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,kDAAC;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,oKAAoK;AACpK;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yBAAyB,kDAAC;AAC1B;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC","file":"x","sourcesContent":["import r from 'restructure';\nimport { PropertyDescriptor, resolveLength } from 'restructure/src/utils';\nimport isEqual from 'deep-equal';\nimport unicode from '@react-pdf/unicode-properties';\nimport UnicodeTrie from 'unicode-trie';\nimport StateMachine from 'dfa';\nimport cloneDeep from 'clone';\nimport inflate from 'tiny-inflate';\n\nvar fs = {}\n\nvar fontkit$1 = {};\nfontkit$1.logErrors = false;\n\nvar formats = [];\nfontkit$1.registerFormat = function (format) {\n  formats.push(format);\n};\n\nfontkit$1.openSync = function (filename, postscriptName) {\n  {\n    throw new Error('fontkit.openSync unavailable for browser build');\n  }\n  var buffer = fs.readFileSync(filename);\n  return fontkit$1.create(buffer, postscriptName);\n};\n\nfontkit$1.open = function (filename, postscriptName, callback) {\n  {\n    throw new Error('fontkit.open unavailable for browser build');\n  }\n\n  if (typeof postscriptName === 'function') {\n    callback = postscriptName;\n    postscriptName = null;\n  }\n\n  fs.readFile(filename, function (err, buffer) {\n    if (err) {\n      return callback(err);\n    }\n\n    try {\n      var font = fontkit$1.create(buffer, postscriptName);\n    } catch (e) {\n      return callback(e);\n    }\n\n    return callback(null, font);\n  });\n\n  return;\n};\n\nfontkit$1.create = function (buffer, postscriptName) {\n  for (var i = 0; i < formats.length; i++) {\n    var format = formats[i];\n    if (format.probe(buffer)) {\n      var font = new format(new r.DecodeStream(buffer));\n      if (postscriptName) {\n        return font.getFont(postscriptName);\n      }\n\n      return font;\n    }\n  }\n\n  throw new Error('Unknown font format');\n};\n\n/**\n * This decorator caches the results of a getter or method such that\n * the results are lazily computed once, and then cached.\n * @private\n */\nfunction cache(target, key, descriptor) {\n  if (descriptor.get) {\n    var get = descriptor.get;\n    descriptor.get = function () {\n      var value = get.call(this);\n      Object.defineProperty(this, key, { value: value });\n      return value;\n    };\n  } else if (typeof descriptor.value === 'function') {\n    var fn = descriptor.value;\n\n    return {\n      get: function get() {\n        var cache = new Map();\n        function memoized() {\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var key = args.length > 0 ? args[0] : 'value';\n          if (cache.has(key)) {\n            return cache.get(key);\n          }\n\n          var result = fn.apply(this, args);\n          cache.set(key, result);\n          return result;\n        }\n\n        Object.defineProperty(this, key, { value: memoized });\n        return memoized;\n      }\n    };\n  }\n}\n\nvar SubHeader = new r.Struct({\n  firstCode: r.uint16,\n  entryCount: r.uint16,\n  idDelta: r.int16,\n  idRangeOffset: r.uint16\n});\n\nvar CmapGroup = new r.Struct({\n  startCharCode: r.uint32,\n  endCharCode: r.uint32,\n  glyphID: r.uint32\n});\n\nvar UnicodeValueRange = new r.Struct({\n  startUnicodeValue: r.uint24,\n  additionalCount: r.uint8\n});\n\nvar UVSMapping = new r.Struct({\n  unicodeValue: r.uint24,\n  glyphID: r.uint16\n});\n\nvar DefaultUVS = new r.Array(UnicodeValueRange, r.uint32);\nvar NonDefaultUVS = new r.Array(UVSMapping, r.uint32);\n\nvar VarSelectorRecord = new r.Struct({\n  varSelector: r.uint24,\n  defaultUVS: new r.Pointer(r.uint32, DefaultUVS, { type: 'parent' }),\n  nonDefaultUVS: new r.Pointer(r.uint32, NonDefaultUVS, { type: 'parent' })\n});\n\nvar CmapSubtable = new r.VersionedStruct(r.uint16, {\n  0: { // Byte encoding\n    length: r.uint16, // Total table length in bytes (set to 262 for format 0)\n    language: r.uint16, // Language code for this encoding subtable, or zero if language-independent\n    codeMap: new r.LazyArray(r.uint8, 256)\n  },\n\n  2: { // High-byte mapping (CJK)\n    length: r.uint16,\n    language: r.uint16,\n    subHeaderKeys: new r.Array(r.uint16, 256),\n    subHeaderCount: function subHeaderCount(t) {\n      return Math.max.apply(Math, t.subHeaderKeys);\n    },\n    subHeaders: new r.LazyArray(SubHeader, 'subHeaderCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, 'subHeaderCount')\n  },\n\n  4: { // Segment mapping to delta values\n    length: r.uint16, // Total table length in bytes\n    language: r.uint16, // Language code\n    segCountX2: r.uint16,\n    segCount: function segCount(t) {\n      return t.segCountX2 >> 1;\n    },\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    endCode: new r.LazyArray(r.uint16, 'segCount'),\n    reservedPad: new r.Reserved(r.uint16), // This value should be zero\n    startCode: new r.LazyArray(r.uint16, 'segCount'),\n    idDelta: new r.LazyArray(r.int16, 'segCount'),\n    idRangeOffset: new r.LazyArray(r.uint16, 'segCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, function (t) {\n      return (t.length - t._currentOffset) / 2;\n    })\n  },\n\n  6: { // Trimmed table\n    length: r.uint16,\n    language: r.uint16,\n    firstCode: r.uint16,\n    entryCount: r.uint16,\n    glyphIndices: new r.LazyArray(r.uint16, 'entryCount')\n  },\n\n  8: { // mixed 16-bit and 32-bit coverage\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint16,\n    is32: new r.LazyArray(r.uint8, 8192),\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  10: { // Trimmed Array\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    firstCode: r.uint32,\n    entryCount: r.uint32,\n    glyphIndices: new r.LazyArray(r.uint16, 'numChars')\n  },\n\n  12: { // Segmented coverage\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  13: { // Many-to-one range mappings (same as 12 except for group.startGlyphID)\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  14: { // Unicode Variation Sequences\n    length: r.uint32,\n    numRecords: r.uint32,\n    varSelectors: new r.LazyArray(VarSelectorRecord, 'numRecords')\n  }\n});\n\nvar CmapEntry = new r.Struct({\n  platformID: r.uint16, // Platform identifier\n  encodingID: r.uint16, // Platform-specific encoding identifier\n  table: new r.Pointer(r.uint32, CmapSubtable, { type: 'parent', lazy: true })\n});\n\n// character to glyph mapping\nvar cmap = new r.Struct({\n  version: r.uint16,\n  numSubtables: r.uint16,\n  tables: new r.Array(CmapEntry, 'numSubtables')\n});\n\n// font header\nvar head = new r.Struct({\n  version: r.int32, // 0x00010000 (version 1.0)\n  revision: r.int32, // set by font manufacturer\n  checkSumAdjustment: r.uint32,\n  magicNumber: r.uint32, // set to 0x5F0F3CF5\n  flags: r.uint16,\n  unitsPerEm: r.uint16, // range from 64 to 16384\n  created: new r.Array(r.int32, 2),\n  modified: new r.Array(r.int32, 2),\n  xMin: r.int16, // for all glyph bounding boxes\n  yMin: r.int16, // for all glyph bounding boxes\n  xMax: r.int16, // for all glyph bounding boxes\n  yMax: r.int16, // for all glyph bounding boxes\n  macStyle: new r.Bitfield(r.uint16, ['bold', 'italic', 'underline', 'outline', 'shadow', 'condensed', 'extended']),\n  lowestRecPPEM: r.uint16, // smallest readable size in pixels\n  fontDirectionHint: r.int16,\n  indexToLocFormat: r.int16, // 0 for short offsets, 1 for long\n  glyphDataFormat: r.int16 // 0 for current format\n});\n\n// horizontal header\nvar hhea = new r.Struct({\n  version: r.int32,\n  ascent: r.int16, // Distance from baseline of highest ascender\n  descent: r.int16, // Distance from baseline of lowest descender\n  lineGap: r.int16, // Typographic line gap\n  advanceWidthMax: r.uint16, // Maximum advance width value in 'hmtx' table\n  minLeftSideBearing: r.int16, // Maximum advance width value in 'hmtx' table\n  minRightSideBearing: r.int16, // Minimum right sidebearing value\n  xMaxExtent: r.int16,\n  caretSlopeRise: r.int16, // Used to calculate the slope of the cursor (rise/run); 1 for vertical\n  caretSlopeRun: r.int16, // 0 for vertical\n  caretOffset: r.int16, // Set to 0 for non-slanted fonts\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16, // 0 for current format\n  numberOfMetrics: r.uint16 // Number of advance widths in 'hmtx' table\n});\n\nvar HmtxEntry = new r.Struct({\n  advance: r.uint16,\n  bearing: r.int16\n});\n\nvar hmtx = new r.Struct({\n  metrics: new r.LazyArray(HmtxEntry, function (t) {\n    return t.parent.hhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics;\n  })\n});\n\n// maxiumum profile\nvar maxp = new r.Struct({\n  version: r.int32,\n  numGlyphs: r.uint16, // The number of glyphs in the font\n  maxPoints: r.uint16, // Maximum points in a non-composite glyph\n  maxContours: r.uint16, // Maximum contours in a non-composite glyph\n  maxComponentPoints: r.uint16, // Maximum points in a composite glyph\n  maxComponentContours: r.uint16, // Maximum contours in a composite glyph\n  maxZones: r.uint16, // 1 if instructions do not use the twilight zone, 2 otherwise\n  maxTwilightPoints: r.uint16, // Maximum points used in Z0\n  maxStorage: r.uint16, // Number of Storage Area locations\n  maxFunctionDefs: r.uint16, // Number of FDEFs\n  maxInstructionDefs: r.uint16, // Number of IDEFs\n  maxStackElements: r.uint16, // Maximum stack depth\n  maxSizeOfInstructions: r.uint16, // Maximum byte count for glyph instructions\n  maxComponentElements: r.uint16, // Maximum number of components referenced at “top level” for any composite glyph\n  maxComponentDepth: r.uint16 // Maximum levels of recursion; 1 for simple components\n});\n\n/**\n * Gets an encoding name from platform, encoding, and language ids.\n * Returned encoding names can be used in iconv-lite to decode text.\n */\nfunction getEncoding(platformID, encodingID) {\n  var languageID = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (platformID === 1 && MAC_LANGUAGE_ENCODINGS[languageID]) {\n    return MAC_LANGUAGE_ENCODINGS[languageID];\n  }\n\n  return ENCODINGS[platformID][encodingID];\n}\n\n// Map of platform ids to encoding ids.\nvar ENCODINGS = [\n// unicode\n['utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be'],\n\n// macintosh\n// Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n// 0\tRoman                 17\tMalayalam\n// 1\tJapanese\t            18\tSinhalese\n// 2\tTraditional Chinese\t  19\tBurmese\n// 3\tKorean\t              20\tKhmer\n// 4\tArabic\t              21\tThai\n// 5\tHebrew\t              22\tLaotian\n// 6\tGreek\t                23\tGeorgian\n// 7\tRussian\t              24\tArmenian\n// 8\tRSymbol\t              25\tSimplified Chinese\n// 9\tDevanagari\t          26\tTibetan\n// 10\tGurmukhi\t            27\tMongolian\n// 11\tGujarati\t            28\tGeez\n// 12\tOriya\t                29\tSlavic\n// 13\tBengali\t              30\tVietnamese\n// 14\tTamil\t                31\tSindhi\n// 15\tTelugu\t              32\t(Uninterpreted)\n// 16\tKannada\n['macroman', 'shift-jis', 'big5', 'euc-kr', 'iso-8859-6', 'iso-8859-8', 'macgreek', 'maccyrillic', 'symbol', 'Devanagari', 'Gurmukhi', 'Gujarati', 'Oriya', 'Bengali', 'Tamil', 'Telugu', 'Kannada', 'Malayalam', 'Sinhalese', 'Burmese', 'Khmer', 'macthai', 'Laotian', 'Georgian', 'Armenian', 'gb-2312-80', 'Tibetan', 'Mongolian', 'Geez', 'maccenteuro', 'Vietnamese', 'Sindhi'],\n\n// ISO (deprecated)\n['ascii'],\n\n// windows\n// Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n['symbol', 'utf16be', 'shift-jis', 'gb18030', 'big5', 'wansung', 'johab', null, null, null, 'utf16be']];\n\n// Overrides for Mac scripts by language id.\n// See http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nvar MAC_LANGUAGE_ENCODINGS = {\n  15: 'maciceland',\n  17: 'macturkish',\n  18: 'maccroatian',\n  24: 'maccenteuro',\n  25: 'maccenteuro',\n  26: 'maccenteuro',\n  27: 'maccenteuro',\n  28: 'maccenteuro',\n  30: 'maciceland',\n  37: 'macromania',\n  38: 'maccenteuro',\n  39: 'maccenteuro',\n  40: 'maccenteuro',\n  143: 'macinuit', // Unsupported by iconv-lite\n  146: 'macgaelic' // Unsupported by iconv-lite\n};\n\n// Map of platform ids to BCP-47 language codes.\nvar LANGUAGES = [\n// unicode\n[], { // macintosh\n  0: 'en', 30: 'fo', 60: 'ks', 90: 'rw',\n  1: 'fr', 31: 'fa', 61: 'ku', 91: 'rn',\n  2: 'de', 32: 'ru', 62: 'sd', 92: 'ny',\n  3: 'it', 33: 'zh', 63: 'bo', 93: 'mg',\n  4: 'nl', 34: 'nl-BE', 64: 'ne', 94: 'eo',\n  5: 'sv', 35: 'ga', 65: 'sa', 128: 'cy',\n  6: 'es', 36: 'sq', 66: 'mr', 129: 'eu',\n  7: 'da', 37: 'ro', 67: 'bn', 130: 'ca',\n  8: 'pt', 38: 'cz', 68: 'as', 131: 'la',\n  9: 'no', 39: 'sk', 69: 'gu', 132: 'qu',\n  10: 'he', 40: 'si', 70: 'pa', 133: 'gn',\n  11: 'ja', 41: 'yi', 71: 'or', 134: 'ay',\n  12: 'ar', 42: 'sr', 72: 'ml', 135: 'tt',\n  13: 'fi', 43: 'mk', 73: 'kn', 136: 'ug',\n  14: 'el', 44: 'bg', 74: 'ta', 137: 'dz',\n  15: 'is', 45: 'uk', 75: 'te', 138: 'jv',\n  16: 'mt', 46: 'be', 76: 'si', 139: 'su',\n  17: 'tr', 47: 'uz', 77: 'my', 140: 'gl',\n  18: 'hr', 48: 'kk', 78: 'km', 141: 'af',\n  19: 'zh-Hant', 49: 'az-Cyrl', 79: 'lo', 142: 'br',\n  20: 'ur', 50: 'az-Arab', 80: 'vi', 143: 'iu',\n  21: 'hi', 51: 'hy', 81: 'id', 144: 'gd',\n  22: 'th', 52: 'ka', 82: 'tl', 145: 'gv',\n  23: 'ko', 53: 'mo', 83: 'ms', 146: 'ga',\n  24: 'lt', 54: 'ky', 84: 'ms-Arab', 147: 'to',\n  25: 'pl', 55: 'tg', 85: 'am', 148: 'el-polyton',\n  26: 'hu', 56: 'tk', 86: 'ti', 149: 'kl',\n  27: 'es', 57: 'mn-CN', 87: 'om', 150: 'az',\n  28: 'lv', 58: 'mn', 88: 'so', 151: 'nn',\n  29: 'se', 59: 'ps', 89: 'sw'\n},\n\n// ISO (deprecated)\n[], { // windows                                        \n  0x0436: 'af', 0x4009: 'en-IN', 0x0487: 'rw', 0x0432: 'tn',\n  0x041C: 'sq', 0x1809: 'en-IE', 0x0441: 'sw', 0x045B: 'si',\n  0x0484: 'gsw', 0x2009: 'en-JM', 0x0457: 'kok', 0x041B: 'sk',\n  0x045E: 'am', 0x4409: 'en-MY', 0x0412: 'ko', 0x0424: 'sl',\n  0x1401: 'ar-DZ', 0x1409: 'en-NZ', 0x0440: 'ky', 0x2C0A: 'es-AR',\n  0x3C01: 'ar-BH', 0x3409: 'en-PH', 0x0454: 'lo', 0x400A: 'es-BO',\n  0x0C01: 'ar', 0x4809: 'en-SG', 0x0426: 'lv', 0x340A: 'es-CL',\n  0x0801: 'ar-IQ', 0x1C09: 'en-ZA', 0x0427: 'lt', 0x240A: 'es-CO',\n  0x2C01: 'ar-JO', 0x2C09: 'en-TT', 0x082E: 'dsb', 0x140A: 'es-CR',\n  0x3401: 'ar-KW', 0x0809: 'en-GB', 0x046E: 'lb', 0x1C0A: 'es-DO',\n  0x3001: 'ar-LB', 0x0409: 'en', 0x042F: 'mk', 0x300A: 'es-EC',\n  0x1001: 'ar-LY', 0x3009: 'en-ZW', 0x083E: 'ms-BN', 0x440A: 'es-SV',\n  0x1801: 'ary', 0x0425: 'et', 0x043E: 'ms', 0x100A: 'es-GT',\n  0x2001: 'ar-OM', 0x0438: 'fo', 0x044C: 'ml', 0x480A: 'es-HN',\n  0x4001: 'ar-QA', 0x0464: 'fil', 0x043A: 'mt', 0x080A: 'es-MX',\n  0x0401: 'ar-SA', 0x040B: 'fi', 0x0481: 'mi', 0x4C0A: 'es-NI',\n  0x2801: 'ar-SY', 0x080C: 'fr-BE', 0x047A: 'arn', 0x180A: 'es-PA',\n  0x1C01: 'aeb', 0x0C0C: 'fr-CA', 0x044E: 'mr', 0x3C0A: 'es-PY',\n  0x3801: 'ar-AE', 0x040C: 'fr', 0x047C: 'moh', 0x280A: 'es-PE',\n  0x2401: 'ar-YE', 0x140C: 'fr-LU', 0x0450: 'mn', 0x500A: 'es-PR',\n  0x042B: 'hy', 0x180C: 'fr-MC', 0x0850: 'mn-CN', 0x0C0A: 'es',\n  0x044D: 'as', 0x100C: 'fr-CH', 0x0461: 'ne', 0x040A: 'es',\n  0x082C: 'az-Cyrl', 0x0462: 'fy', 0x0414: 'nb', 0x540A: 'es-US',\n  0x042C: 'az', 0x0456: 'gl', 0x0814: 'nn', 0x380A: 'es-UY',\n  0x046D: 'ba', 0x0437: 'ka', 0x0482: 'oc', 0x200A: 'es-VE',\n  0x042D: 'eu', 0x0C07: 'de-AT', 0x0448: 'or', 0x081D: 'sv-FI',\n  0x0423: 'be', 0x0407: 'de', 0x0463: 'ps', 0x041D: 'sv',\n  0x0845: 'bn', 0x1407: 'de-LI', 0x0415: 'pl', 0x045A: 'syr',\n  0x0445: 'bn-IN', 0x1007: 'de-LU', 0x0416: 'pt', 0x0428: 'tg',\n  0x201A: 'bs-Cyrl', 0x0807: 'de-CH', 0x0816: 'pt-PT', 0x085F: 'tzm',\n  0x141A: 'bs', 0x0408: 'el', 0x0446: 'pa', 0x0449: 'ta',\n  0x047E: 'br', 0x046F: 'kl', 0x046B: 'qu-BO', 0x0444: 'tt',\n  0x0402: 'bg', 0x0447: 'gu', 0x086B: 'qu-EC', 0x044A: 'te',\n  0x0403: 'ca', 0x0468: 'ha', 0x0C6B: 'qu', 0x041E: 'th',\n  0x0C04: 'zh-HK', 0x040D: 'he', 0x0418: 'ro', 0x0451: 'bo',\n  0x1404: 'zh-MO', 0x0439: 'hi', 0x0417: 'rm', 0x041F: 'tr',\n  0x0804: 'zh', 0x040E: 'hu', 0x0419: 'ru', 0x0442: 'tk',\n  0x1004: 'zh-SG', 0x040F: 'is', 0x243B: 'smn', 0x0480: 'ug',\n  0x0404: 'zh-TW', 0x0470: 'ig', 0x103B: 'smj-NO', 0x0422: 'uk',\n  0x0483: 'co', 0x0421: 'id', 0x143B: 'smj', 0x042E: 'hsb',\n  0x041A: 'hr', 0x045D: 'iu', 0x0C3B: 'se-FI', 0x0420: 'ur',\n  0x101A: 'hr-BA', 0x085D: 'iu-Latn', 0x043B: 'se', 0x0843: 'uz-Cyrl',\n  0x0405: 'cs', 0x083C: 'ga', 0x083B: 'se-SE', 0x0443: 'uz',\n  0x0406: 'da', 0x0434: 'xh', 0x203B: 'sms', 0x042A: 'vi',\n  0x048C: 'prs', 0x0435: 'zu', 0x183B: 'sma-NO', 0x0452: 'cy',\n  0x0465: 'dv', 0x0410: 'it', 0x1C3B: 'sms', 0x0488: 'wo',\n  0x0813: 'nl-BE', 0x0810: 'it-CH', 0x044F: 'sa', 0x0485: 'sah',\n  0x0413: 'nl', 0x0411: 'ja', 0x1C1A: 'sr-Cyrl-BA', 0x0478: 'ii',\n  0x0C09: 'en-AU', 0x044B: 'kn', 0x0C1A: 'sr', 0x046A: 'yo',\n  0x2809: 'en-BZ', 0x043F: 'kk', 0x181A: 'sr-Latn-BA',\n  0x1009: 'en-CA', 0x0453: 'km', 0x081A: 'sr-Latn',\n  0x2409: 'en-029', 0x0486: 'quc', 0x046C: 'nso'\n}];\n\nvar NameRecord = new r.Struct({\n  platformID: r.uint16,\n  encodingID: r.uint16,\n  languageID: r.uint16,\n  nameID: r.uint16,\n  length: r.uint16,\n  string: new r.Pointer(r.uint16, new r.String('length', function (t) {\n    return getEncoding(t.platformID, t.encodingID, t.languageID);\n  }), { type: 'parent', relativeTo: 'parent.stringOffset', allowNull: false })\n});\n\nvar LangTagRecord = new r.Struct({\n  length: r.uint16,\n  tag: new r.Pointer(r.uint16, new r.String('length', 'utf16be'), { type: 'parent', relativeTo: 'stringOffset' })\n});\n\nvar NameTable = new r.VersionedStruct(r.uint16, {\n  0: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count')\n  },\n  1: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count'),\n    langTagCount: r.uint16,\n    langTags: new r.Array(LangTagRecord, 'langTagCount')\n  }\n});\n\nvar NAMES = ['copyright', 'fontFamily', 'fontSubfamily', 'uniqueSubfamily', 'fullName', 'version', 'postscriptName', // Note: A font may have only one PostScript name and that name must be ASCII.\n'trademark', 'manufacturer', 'designer', 'description', 'vendorURL', 'designerURL', 'license', 'licenseURL', null, // reserved\n'preferredFamily', 'preferredSubfamily', 'compatibleFull', 'sampleText', 'postscriptCIDFontName', 'wwsFamilyName', 'wwsSubfamilyName'];\n\nNameTable.process = function (stream) {\n  var records = {};\n  for (var _iterator = this.records, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var record = _ref;\n\n    // find out what language this is for\n    var language = LANGUAGES[record.platformID][record.languageID];\n\n    if (language == null && this.langTags != null && record.languageID >= 0x8000) {\n      language = this.langTags[record.languageID - 0x8000].tag;\n    }\n\n    if (language == null) {\n      language = record.platformID + '-' + record.languageID;\n    }\n\n    // if the nameID is >= 256, it is a font feature record (AAT)\n    var key = record.nameID >= 256 ? 'fontFeatures' : NAMES[record.nameID] || record.nameID;\n    if (records[key] == null) {\n      records[key] = {};\n    }\n\n    var obj = records[key];\n    if (record.nameID >= 256) {\n      obj = obj[record.nameID] || (obj[record.nameID] = {});\n    }\n\n    if (typeof record.string === 'string' || typeof obj[language] !== 'string') {\n      obj[language] = record.string;\n    }\n  }\n\n  this.records = records;\n};\n\nNameTable.preEncode = function () {\n  if (Array.isArray(this.records)) return;\n  this.version = 0;\n\n  var records = [];\n  for (var key in this.records) {\n    var val = this.records[key];\n    if (key === 'fontFeatures') continue;\n\n    records.push({\n      platformID: 3,\n      encodingID: 1,\n      languageID: 0x409,\n      nameID: NAMES.indexOf(key),\n      length: Buffer.byteLength(val.en, 'utf16le'),\n      string: val.en\n    });\n\n    if (key === 'postscriptName') {\n      records.push({\n        platformID: 1,\n        encodingID: 0,\n        languageID: 0,\n        nameID: NAMES.indexOf(key),\n        length: val.en.length,\n        string: val.en\n      });\n    }\n  }\n\n  this.records = records;\n  this.count = records.length;\n  this.stringOffset = NameTable.size(this, null, false);\n};\n\nvar OS2 = new r.VersionedStruct(r.uint16, {\n  header: {\n    xAvgCharWidth: r.int16, // average weighted advance width of lower case letters and space\n    usWeightClass: r.uint16, // visual weight of stroke in glyphs\n    usWidthClass: r.uint16, // relative change from the normal aspect ratio (width to height ratio)\n    fsType: new r.Bitfield(r.uint16, [// Indicates font embedding licensing rights\n    null, 'noEmbedding', 'viewOnly', 'editable', null, null, null, null, 'noSubsetting', 'bitmapOnly']),\n    ySubscriptXSize: r.int16, // recommended horizontal size in pixels for subscripts\n    ySubscriptYSize: r.int16, // recommended vertical size in pixels for subscripts\n    ySubscriptXOffset: r.int16, // recommended horizontal offset for subscripts\n    ySubscriptYOffset: r.int16, // recommended vertical offset form the baseline for subscripts\n    ySuperscriptXSize: r.int16, // recommended horizontal size in pixels for superscripts\n    ySuperscriptYSize: r.int16, // recommended vertical size in pixels for superscripts\n    ySuperscriptXOffset: r.int16, // recommended horizontal offset for superscripts\n    ySuperscriptYOffset: r.int16, // recommended vertical offset from the baseline for superscripts\n    yStrikeoutSize: r.int16, // width of the strikeout stroke\n    yStrikeoutPosition: r.int16, // position of the strikeout stroke relative to the baseline\n    sFamilyClass: r.int16, // classification of font-family design\n    panose: new r.Array(r.uint8, 10), // describe the visual characteristics of a given typeface\n    ulCharRange: new r.Array(r.uint32, 4),\n    vendorID: new r.String(4), // four character identifier for the font vendor\n    fsSelection: new r.Bitfield(r.uint16, [// bit field containing information about the font\n    'italic', 'underscore', 'negative', 'outlined', 'strikeout', 'bold', 'regular', 'useTypoMetrics', 'wws', 'oblique']),\n    usFirstCharIndex: r.uint16, // The minimum Unicode index in this font\n    usLastCharIndex: r.uint16 // The maximum Unicode index in this font\n  },\n\n  // The Apple version of this table ends here, but the Microsoft one continues on...\n  0: {},\n\n  1: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2)\n  },\n\n  2: {\n    // these should be common with version 1 somehow\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16\n  },\n\n  5: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16,\n\n    usLowerOpticalPointSize: r.uint16,\n    usUpperOpticalPointSize: r.uint16\n  }\n});\n\nvar versions = OS2.versions;\nversions[3] = versions[4] = versions[2];\n\n// PostScript information\nvar post = new r.VersionedStruct(r.fixed32, {\n  header: { // these fields exist at the top of all versions\n    italicAngle: r.fixed32, // Italic angle in counter-clockwise degrees from the vertical.\n    underlinePosition: r.int16, // Suggested distance of the top of the underline from the baseline\n    underlineThickness: r.int16, // Suggested values for the underline thickness\n    isFixedPitch: r.uint32, // Whether the font is monospaced\n    minMemType42: r.uint32, // Minimum memory usage when a TrueType font is downloaded as a Type 42 font\n    maxMemType42: r.uint32, // Maximum memory usage when a TrueType font is downloaded as a Type 42 font\n    minMemType1: r.uint32, // Minimum memory usage when a TrueType font is downloaded as a Type 1 font\n    maxMemType1: r.uint32 // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n  },\n\n  1: {}, // version 1 has no additional fields\n\n  2: {\n    numberOfGlyphs: r.uint16,\n    glyphNameIndex: new r.Array(r.uint16, 'numberOfGlyphs'),\n    names: new r.Array(new r.String(r.uint8))\n  },\n\n  2.5: {\n    numberOfGlyphs: r.uint16,\n    offsets: new r.Array(r.uint8, 'numberOfGlyphs')\n  },\n\n  3: {}, // version 3 has no additional fields\n\n  4: {\n    map: new r.Array(r.uint32, function (t) {\n      return t.parent.maxp.numGlyphs;\n    })\n  }\n});\n\n// An array of predefined values accessible by instructions\nvar cvt = new r.Struct({\n  controlValues: new r.Array(r.int16)\n});\n\n// A list of instructions that are executed once when a font is first used.\n// These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\nvar fpgm = new r.Struct({\n  instructions: new r.Array(r.uint8)\n});\n\nvar loca = new r.VersionedStruct('head.indexToLocFormat', {\n  0: {\n    offsets: new r.Array(r.uint16)\n  },\n  1: {\n    offsets: new r.Array(r.uint32)\n  }\n});\n\nloca.process = function () {\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] <<= 1;\n    }\n  }\n};\n\nloca.preEncode = function () {\n  if (this.version != null) return;\n\n  // assume this.offsets is a sorted array\n  this.version = this.offsets[this.offsets.length - 1] > 0xffff ? 1 : 0;\n\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] >>>= 1;\n    }\n  }\n};\n\n// Set of instructions executed whenever the point size or font transformation change\nvar prep = new r.Struct({\n  controlValueProgram: new r.Array(r.uint8)\n});\n\n// only used for encoding\nvar glyf = new r.Array(new r.Buffer());\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar CFFIndex = function () {\n  function CFFIndex(type) {\n    classCallCheck(this, CFFIndex);\n\n    this.type = type;\n  }\n\n  CFFIndex.prototype.getCFFVersion = function getCFFVersion(ctx) {\n    while (ctx && !ctx.hdrSize) {\n      ctx = ctx.parent;\n    }\n\n    return ctx ? ctx.version : -1;\n  };\n\n  CFFIndex.prototype.decode = function decode(stream, parent) {\n    var version = this.getCFFVersion(parent);\n    var count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();\n\n    if (count === 0) {\n      return [];\n    }\n\n    var offSize = stream.readUInt8();\n    var offsetType = void 0;\n    if (offSize === 1) {\n      offsetType = r.uint8;\n    } else if (offSize === 2) {\n      offsetType = r.uint16;\n    } else if (offSize === 3) {\n      offsetType = r.uint24;\n    } else if (offSize === 4) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset size in CFFIndex: \" + offSize + \" \" + stream.pos);\n    }\n\n    var ret = [];\n    var startPos = stream.pos + (count + 1) * offSize - 1;\n\n    var start = offsetType.decode(stream);\n    for (var i = 0; i < count; i++) {\n      var end = offsetType.decode(stream);\n\n      if (this.type != null) {\n        var pos = stream.pos;\n        stream.pos = startPos + start;\n\n        parent.length = end - start;\n        ret.push(this.type.decode(stream, parent));\n        stream.pos = pos;\n      } else {\n        ret.push({\n          offset: startPos + start,\n          length: end - start\n        });\n      }\n\n      start = end;\n    }\n\n    stream.pos = startPos + start;\n    return ret;\n  };\n\n  CFFIndex.prototype.size = function size(arr, parent) {\n    var size = 2;\n    if (arr.length === 0) {\n      return size;\n    }\n\n    var type = this.type || new r.Buffer();\n\n    // find maximum offset to detminine offset type\n    var offset = 1;\n    for (var i = 0; i < arr.length; i++) {\n      var item = arr[i];\n      offset += type.size(item, parent);\n    }\n\n    var offsetType = void 0;\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    size += 1 + offsetType.size() * (arr.length + 1);\n    size += offset - 1;\n\n    return size;\n  };\n\n  CFFIndex.prototype.encode = function encode(stream, arr, parent) {\n    stream.writeUInt16BE(arr.length);\n    if (arr.length === 0) {\n      return;\n    }\n\n    var type = this.type || new r.Buffer();\n\n    // find maximum offset to detminine offset type\n    var sizes = [];\n    var offset = 1;\n    for (var _iterator = arr, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var item = _ref;\n\n      var s = type.size(item, parent);\n      sizes.push(s);\n      offset += s;\n    }\n\n    var offsetType = void 0;\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    // write offset size\n    stream.writeUInt8(offsetType.size());\n\n    // write elements\n    offset = 1;\n    offsetType.encode(stream, offset);\n\n    for (var _iterator2 = sizes, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var size = _ref2;\n\n      offset += size;\n      offsetType.encode(stream, offset);\n    }\n\n    for (var _iterator3 = arr, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var _item = _ref3;\n\n      type.encode(stream, _item, parent);\n    }\n\n    return;\n  };\n\n  return CFFIndex;\n}();\n\nvar FLOAT_EOF = 0xf;\nvar FLOAT_LOOKUP = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n\nvar FLOAT_ENCODE_LOOKUP = {\n  '.': 10,\n  'E': 11,\n  'E-': 12,\n  '-': 14\n};\n\nvar CFFOperand = function () {\n  function CFFOperand() {\n    classCallCheck(this, CFFOperand);\n  }\n\n  CFFOperand.decode = function decode(stream, value) {\n    if (32 <= value && value <= 246) {\n      return value - 139;\n    }\n\n    if (247 <= value && value <= 250) {\n      return (value - 247) * 256 + stream.readUInt8() + 108;\n    }\n\n    if (251 <= value && value <= 254) {\n      return -(value - 251) * 256 - stream.readUInt8() - 108;\n    }\n\n    if (value === 28) {\n      return stream.readInt16BE();\n    }\n\n    if (value === 29) {\n      return stream.readInt32BE();\n    }\n\n    if (value === 30) {\n      var str = '';\n      while (true) {\n        var b = stream.readUInt8();\n\n        var n1 = b >> 4;\n        if (n1 === FLOAT_EOF) {\n          break;\n        }\n        str += FLOAT_LOOKUP[n1];\n\n        var n2 = b & 15;\n        if (n2 === FLOAT_EOF) {\n          break;\n        }\n        str += FLOAT_LOOKUP[n2];\n      }\n\n      return parseFloat(str);\n    }\n\n    return null;\n  };\n\n  CFFOperand.size = function size(value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, set to 32768\n    if (value.forceLarge) {\n      value = 32768;\n    }\n\n    if ((value | 0) !== value) {\n      // floating point\n      var str = '' + value;\n      return 1 + Math.ceil((str.length + 1) / 2);\n    } else if (-107 <= value && value <= 107) {\n      return 1;\n    } else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) {\n      return 2;\n    } else if (-32768 <= value && value <= 32767) {\n      return 3;\n    } else {\n      return 5;\n    }\n  };\n\n  CFFOperand.encode = function encode(stream, value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, save the old value and set to 32768\n    var val = Number(value);\n\n    if (value.forceLarge) {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    } else if ((val | 0) !== val) {\n      // floating point\n      stream.writeUInt8(30);\n\n      var str = '' + val;\n      for (var i = 0; i < str.length; i += 2) {\n        var c1 = str[i];\n        var n1 = FLOAT_ENCODE_LOOKUP[c1] || +c1;\n\n        if (i === str.length - 1) {\n          var n2 = FLOAT_EOF;\n        } else {\n          var c2 = str[i + 1];\n          var n2 = FLOAT_ENCODE_LOOKUP[c2] || +c2;\n        }\n\n        stream.writeUInt8(n1 << 4 | n2 & 15);\n      }\n\n      if (n2 !== FLOAT_EOF) {\n        return stream.writeUInt8(FLOAT_EOF << 4);\n      }\n    } else if (-107 <= val && val <= 107) {\n      return stream.writeUInt8(val + 139);\n    } else if (108 <= val && val <= 1131) {\n      val -= 108;\n      stream.writeUInt8((val >> 8) + 247);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-1131 <= val && val <= -108) {\n      val = -val - 108;\n      stream.writeUInt8((val >> 8) + 251);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-32768 <= val && val <= 32767) {\n      stream.writeUInt8(28);\n      return stream.writeInt16BE(val);\n    } else {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    }\n  };\n\n  return CFFOperand;\n}();\n\nvar CFFDict = function () {\n  function CFFDict() {\n    var ops = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, CFFDict);\n\n    this.ops = ops;\n    this.fields = {};\n    for (var _iterator = ops, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var field = _ref;\n\n      var key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n      this.fields[key] = field;\n    }\n  }\n\n  CFFDict.prototype.decodeOperands = function decodeOperands(type, stream, ret, operands) {\n    var _this = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this.decodeOperands(type[i], stream, ret, [op]);\n      });\n    } else if (type.decode != null) {\n      return type.decode(stream, ret, operands);\n    } else {\n      switch (type) {\n        case 'number':\n        case 'offset':\n        case 'sid':\n          return operands[0];\n        case 'boolean':\n          return !!operands[0];\n        default:\n          return operands;\n      }\n    }\n  };\n\n  CFFDict.prototype.encodeOperands = function encodeOperands(type, stream, ctx, operands) {\n    var _this2 = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this2.encodeOperands(type[i], stream, ctx, op)[0];\n      });\n    } else if (type.encode != null) {\n      return type.encode(stream, operands, ctx);\n    } else if (typeof operands === 'number') {\n      return [operands];\n    } else if (typeof operands === 'boolean') {\n      return [+operands];\n    } else if (Array.isArray(operands)) {\n      return operands;\n    } else {\n      return [operands];\n    }\n  };\n\n  CFFDict.prototype.decode = function decode(stream, parent) {\n    var end = stream.pos + parent.length;\n    var ret = {};\n    var operands = [];\n\n    // define hidden properties\n    Object.defineProperties(ret, {\n      parent: { value: parent },\n      _startOffset: { value: stream.pos }\n    });\n\n    // fill in defaults\n    for (var key in this.fields) {\n      var field = this.fields[key];\n      ret[field[1]] = field[3];\n    }\n\n    while (stream.pos < end) {\n      var b = stream.readUInt8();\n      if (b < 28) {\n        if (b === 12) {\n          b = b << 8 | stream.readUInt8();\n        }\n\n        var _field = this.fields[b];\n        if (!_field) {\n          throw new Error('Unknown operator ' + b);\n        }\n\n        var val = this.decodeOperands(_field[2], stream, ret, operands);\n        if (val != null) {\n          if (val instanceof PropertyDescriptor) {\n            Object.defineProperty(ret, _field[1], val);\n          } else {\n            ret[_field[1]] = val;\n          }\n        }\n\n        operands = [];\n      } else {\n        operands.push(CFFOperand.decode(stream, b));\n      }\n    }\n\n    return ret;\n  };\n\n  CFFDict.prototype.size = function size(dict, parent) {\n    var includePointers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    var ctx = {\n      parent: parent,\n      val: dict,\n      pointerSize: 0,\n      startOffset: parent.startOffset || 0\n    };\n\n    var len = 0;\n\n    for (var k in this.fields) {\n      var field = this.fields[k];\n      var val = dict[field[1]];\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], null, ctx, val);\n      for (var _iterator2 = operands, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var op = _ref2;\n\n        len += CFFOperand.size(op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      len += key.length;\n    }\n\n    if (includePointers) {\n      len += ctx.pointerSize;\n    }\n\n    return len;\n  };\n\n  CFFDict.prototype.encode = function encode(stream, dict, parent) {\n    var ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent: parent,\n      val: dict,\n      pointerSize: 0\n    };\n\n    ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n\n    for (var _iterator3 = this.ops, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var field = _ref3;\n\n      var val = dict[field[1]];\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], stream, ctx, val);\n      for (var _iterator4 = operands, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n        var _ref4;\n\n        if (_isArray4) {\n          if (_i4 >= _iterator4.length) break;\n          _ref4 = _iterator4[_i4++];\n        } else {\n          _i4 = _iterator4.next();\n          if (_i4.done) break;\n          _ref4 = _i4.value;\n        }\n\n        var op = _ref4;\n\n        CFFOperand.encode(stream, op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      for (var _iterator5 = key, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n        var _ref5;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref5 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref5 = _i5.value;\n        }\n\n        var _op = _ref5;\n\n        stream.writeUInt8(_op);\n      }\n    }\n\n    var i = 0;\n    while (i < ctx.pointers.length) {\n      var ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n\n    return;\n  };\n\n  return CFFDict;\n}();\n\nvar CFFPointer = function (_r$Pointer) {\n  inherits(CFFPointer, _r$Pointer);\n\n  function CFFPointer(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, CFFPointer);\n\n    if (options.type == null) {\n      options.type = 'global';\n    }\n\n    return possibleConstructorReturn(this, _r$Pointer.call(this, null, type, options));\n  }\n\n  CFFPointer.prototype.decode = function decode(stream, parent, operands) {\n    this.offsetType = {\n      decode: function decode() {\n        return operands[0];\n      }\n    };\n\n    return _r$Pointer.prototype.decode.call(this, stream, parent, operands);\n  };\n\n  CFFPointer.prototype.encode = function encode(stream, value, ctx) {\n    if (!stream) {\n      // compute the size (so ctx.pointerSize is correct)\n      this.offsetType = {\n        size: function size() {\n          return 0;\n        }\n      };\n\n      this.size(value, ctx);\n      return [new Ptr(0)];\n    }\n\n    var ptr = null;\n    this.offsetType = {\n      encode: function encode(stream, val) {\n        return ptr = val;\n      }\n    };\n\n    _r$Pointer.prototype.encode.call(this, stream, value, ctx);\n    return [new Ptr(ptr)];\n  };\n\n  return CFFPointer;\n}(r.Pointer);\n\nvar Ptr = function () {\n  function Ptr(val) {\n    classCallCheck(this, Ptr);\n\n    this.val = val;\n    this.forceLarge = true;\n  }\n\n  Ptr.prototype.valueOf = function valueOf() {\n    return this.val;\n  };\n\n  return Ptr;\n}();\n\nvar CFFBlendOp = function () {\n  function CFFBlendOp() {\n    classCallCheck(this, CFFBlendOp);\n  }\n\n  CFFBlendOp.decode = function decode(stream, parent, operands) {\n    var numBlends = operands.pop();\n\n    // TODO: actually blend. For now just consume the deltas\n    // since we don't use any of the values anyway.\n    while (operands.length > numBlends) {\n      operands.pop();\n    }\n  };\n\n  return CFFBlendOp;\n}();\n\nvar CFFPrivateDict = new CFFDict([\n// key       name                    type                                          default\n[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'number', 0.039625], [[12, 10], 'BlueShift', 'number', 7], [[12, 11], 'BlueFuzz', 'number', 1], [10, 'StdHW', 'number', null], [11, 'StdVW', 'number', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'boolean', false], [[12, 17], 'LanguageGroup', 'number', 0], [[12, 18], 'ExpansionFactor', 'number', 0.06], [[12, 19], 'initialRandomSeed', 'number', 0], [20, 'defaultWidthX', 'number', 0], [21, 'nominalWidthX', 'number', 0], [22, 'vsindex', 'number', 0], [23, 'blend', CFFBlendOp, null], [19, 'Subrs', new CFFPointer(new CFFIndex(), { type: 'local' }), null]]);\n\n// Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\nvar standardStrings = [\".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\", \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\", \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\", \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\", \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\", \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\", \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\", \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\", \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\", \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\", \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\", \"ydieresis\", \"zcaron\", \"exclamsmall\", \"Hungarumlautsmall\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\", \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\", \"001.000\", \"001.001\", \"001.002\", \"001.003\", \"Black\", \"Bold\", \"Book\", \"Light\", \"Medium\", \"Regular\", \"Roman\", \"Semibold\"];\n\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\n\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\n\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\n\n//########################\n// Scripts and Languages #\n//########################\n\nvar LangSysTable = new r.Struct({\n  reserved: new r.Reserved(r.uint16),\n  reqFeatureIndex: r.uint16,\n  featureCount: r.uint16,\n  featureIndexes: new r.Array(r.uint16, 'featureCount')\n});\n\nvar LangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  langSys: new r.Pointer(r.uint16, LangSysTable, { type: 'parent' })\n});\n\nvar Script = new r.Struct({\n  defaultLangSys: new r.Pointer(r.uint16, LangSysTable),\n  count: r.uint16,\n  langSysRecords: new r.Array(LangSysRecord, 'count')\n});\n\nvar ScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, Script, { type: 'parent' })\n});\n\nvar ScriptList = new r.Array(ScriptRecord, r.uint16);\n\n//#######################\n// Features and Lookups #\n//#######################\n\nvar Feature = new r.Struct({\n  featureParams: r.uint16, // pointer\n  lookupCount: r.uint16,\n  lookupListIndexes: new r.Array(r.uint16, 'lookupCount')\n});\n\nvar FeatureRecord = new r.Struct({\n  tag: new r.String(4),\n  feature: new r.Pointer(r.uint16, Feature, { type: 'parent' })\n});\n\nvar FeatureList = new r.Array(FeatureRecord, r.uint16);\n\nvar LookupFlags = new r.Struct({\n  markAttachmentType: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['rightToLeft', 'ignoreBaseGlyphs', 'ignoreLigatures', 'ignoreMarks', 'useMarkFilteringSet'])\n});\n\nfunction LookupList(SubTable) {\n  var Lookup = new r.Struct({\n    lookupType: r.uint16,\n    flags: LookupFlags,\n    subTableCount: r.uint16,\n    subTables: new r.Array(new r.Pointer(r.uint16, SubTable), 'subTableCount'),\n    markFilteringSet: new r.Optional(r.uint16, function (t) {\n      return t.flags.flags.useMarkFilteringSet;\n    })\n  });\n\n  return new r.LazyArray(new r.Pointer(r.uint16, Lookup), r.uint16);\n}\n\n//#################\n// Coverage Table #\n//#################\n\nvar RangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  startCoverageIndex: r.uint16\n});\n\nvar Coverage = new r.VersionedStruct(r.uint16, {\n  1: {\n    glyphCount: r.uint16,\n    glyphs: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    rangeCount: r.uint16,\n    rangeRecords: new r.Array(RangeRecord, 'rangeCount')\n  }\n});\n\n//#########################\n// Class Definition Table #\n//#########################\n\nvar ClassRangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  class: r.uint16\n});\n\nvar ClassDef = new r.VersionedStruct(r.uint16, {\n  1: { // Class array\n    startGlyph: r.uint16,\n    glyphCount: r.uint16,\n    classValueArray: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: { // Class ranges\n    classRangeCount: r.uint16,\n    classRangeRecord: new r.Array(ClassRangeRecord, 'classRangeCount')\n  }\n});\n\n//###############\n// Device Table #\n//###############\n\nvar Device = new r.Struct({\n  a: r.uint16, // startSize for hinting Device, outerIndex for VariationIndex\n  b: r.uint16, // endSize for Device, innerIndex for VariationIndex\n  deltaFormat: r.uint16\n});\n\n//#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\n\nvar LookupRecord = new r.Struct({\n  sequenceIndex: r.uint16,\n  lookupListIndex: r.uint16\n});\n\nvar Rule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\n\nvar RuleSet = new r.Array(new r.Pointer(r.uint16, Rule), r.uint16);\n\nvar ClassRule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  classes: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\n\nvar ClassSet = new r.Array(new r.Pointer(r.uint16, ClassRule), r.uint16);\n\nvar Context = new r.VersionedStruct(r.uint16, {\n  1: { // Simple context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    ruleSetCount: r.uint16,\n    ruleSets: new r.Array(new r.Pointer(r.uint16, RuleSet), 'ruleSetCount')\n  },\n  2: { // Class-based context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    classDef: new r.Pointer(r.uint16, ClassDef),\n    classSetCnt: r.uint16,\n    classSet: new r.Array(new r.Pointer(r.uint16, ClassSet), 'classSetCnt')\n  },\n  3: {\n    glyphCount: r.uint16,\n    lookupCount: r.uint16,\n    coverages: new r.Array(new r.Pointer(r.uint16, Coverage), 'glyphCount'),\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n\n//######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\n\nvar ChainRule = new r.Struct({\n  backtrackGlyphCount: r.uint16,\n  backtrack: new r.Array(r.uint16, 'backtrackGlyphCount'),\n  inputGlyphCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.inputGlyphCount - 1;\n  }),\n  lookaheadGlyphCount: r.uint16,\n  lookahead: new r.Array(r.uint16, 'lookaheadGlyphCount'),\n  lookupCount: r.uint16,\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\n\nvar ChainRuleSet = new r.Array(new r.Pointer(r.uint16, ChainRule), r.uint16);\n\nvar ChainingContext = new r.VersionedStruct(r.uint16, {\n  1: { // Simple context glyph substitution\n    coverage: new r.Pointer(r.uint16, Coverage),\n    chainCount: r.uint16,\n    chainRuleSets: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n\n  2: { // Class-based chaining context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackClassDef: new r.Pointer(r.uint16, ClassDef),\n    inputClassDef: new r.Pointer(r.uint16, ClassDef),\n    lookaheadClassDef: new r.Pointer(r.uint16, ClassDef),\n    chainCount: r.uint16,\n    chainClassSet: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n\n  3: { // Coverage-based chaining context\n    backtrackGlyphCount: r.uint16,\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    inputGlyphCount: r.uint16,\n    inputCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'inputGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    lookupCount: r.uint16,\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n\nvar _;\n\n/*******************\n * Variation Store *\n *******************/\n\nvar F2DOT14 = new r.Fixed(16, 'BE', 14);\nvar RegionAxisCoordinates = new r.Struct({\n  startCoord: F2DOT14,\n  peakCoord: F2DOT14,\n  endCoord: F2DOT14\n});\n\nvar VariationRegionList = new r.Struct({\n  axisCount: r.uint16,\n  regionCount: r.uint16,\n  variationRegions: new r.Array(new r.Array(RegionAxisCoordinates, 'axisCount'), 'regionCount')\n});\n\nvar DeltaSet = new r.Struct({\n  shortDeltas: new r.Array(r.int16, function (t) {\n    return t.parent.shortDeltaCount;\n  }),\n  regionDeltas: new r.Array(r.int8, function (t) {\n    return t.parent.regionIndexCount - t.parent.shortDeltaCount;\n  }),\n  deltas: function deltas(t) {\n    return t.shortDeltas.concat(t.regionDeltas);\n  }\n});\n\nvar ItemVariationData = new r.Struct({\n  itemCount: r.uint16,\n  shortDeltaCount: r.uint16,\n  regionIndexCount: r.uint16,\n  regionIndexes: new r.Array(r.uint16, 'regionIndexCount'),\n  deltaSets: new r.Array(DeltaSet, 'itemCount')\n});\n\nvar ItemVariationStore = new r.Struct({\n  format: r.uint16,\n  variationRegionList: new r.Pointer(r.uint32, VariationRegionList),\n  variationDataCount: r.uint16,\n  itemVariationData: new r.Array(new r.Pointer(r.uint32, ItemVariationData), 'variationDataCount')\n});\n\n/**********************\n * Feature Variations *\n **********************/\n\nvar ConditionTable = new r.VersionedStruct(r.uint16, {\n  1: (_ = {\n    axisIndex: r.uint16\n  }, _['axisIndex'] = r.uint16, _.filterRangeMinValue = F2DOT14, _.filterRangeMaxValue = F2DOT14, _)\n});\n\nvar ConditionSet = new r.Struct({\n  conditionCount: r.uint16,\n  conditionTable: new r.Array(new r.Pointer(r.uint32, ConditionTable), 'conditionCount')\n});\n\nvar FeatureTableSubstitutionRecord = new r.Struct({\n  featureIndex: r.uint16,\n  alternateFeatureTable: new r.Pointer(r.uint32, Feature, { type: 'parent' })\n});\n\nvar FeatureTableSubstitution = new r.Struct({\n  version: r.fixed32,\n  substitutionCount: r.uint16,\n  substitutions: new r.Array(FeatureTableSubstitutionRecord, 'substitutionCount')\n});\n\nvar FeatureVariationRecord = new r.Struct({\n  conditionSet: new r.Pointer(r.uint32, ConditionSet, { type: 'parent' }),\n  featureTableSubstitution: new r.Pointer(r.uint32, FeatureTableSubstitution, { type: 'parent' })\n});\n\nvar FeatureVariations = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  featureVariationRecordCount: r.uint32,\n  featureVariationRecords: new r.Array(FeatureVariationRecord, 'featureVariationRecordCount')\n});\n\n// Checks if an operand is an index of a predefined value,\n// otherwise delegates to the provided type.\n\nvar PredefinedOp = function () {\n  function PredefinedOp(predefinedOps, type) {\n    classCallCheck(this, PredefinedOp);\n\n    this.predefinedOps = predefinedOps;\n    this.type = type;\n  }\n\n  PredefinedOp.prototype.decode = function decode(stream, parent, operands) {\n    if (this.predefinedOps[operands[0]]) {\n      return this.predefinedOps[operands[0]];\n    }\n\n    return this.type.decode(stream, parent, operands);\n  };\n\n  PredefinedOp.prototype.size = function size(value, ctx) {\n    return this.type.size(value, ctx);\n  };\n\n  PredefinedOp.prototype.encode = function encode(stream, value, ctx) {\n    var index = this.predefinedOps.indexOf(value);\n    if (index !== -1) {\n      return index;\n    }\n\n    return this.type.encode(stream, value, ctx);\n  };\n\n  return PredefinedOp;\n}();\n\nvar CFFEncodingVersion = function (_r$Number) {\n  inherits(CFFEncodingVersion, _r$Number);\n\n  function CFFEncodingVersion() {\n    classCallCheck(this, CFFEncodingVersion);\n    return possibleConstructorReturn(this, _r$Number.call(this, 'UInt8'));\n  }\n\n  CFFEncodingVersion.prototype.decode = function decode(stream) {\n    return r.uint8.decode(stream) & 0x7f;\n  };\n\n  return CFFEncodingVersion;\n}(r.Number);\n\nvar Range1 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint8\n});\n\nvar Range2 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint16\n});\n\nvar CFFCustomEncoding = new r.VersionedStruct(new CFFEncodingVersion(), {\n  0: {\n    nCodes: r.uint8,\n    codes: new r.Array(r.uint8, 'nCodes')\n  },\n\n  1: {\n    nRanges: r.uint8,\n    ranges: new r.Array(Range1, 'nRanges')\n\n    // TODO: supplement?\n  } });\n\nvar CFFEncoding = new PredefinedOp([StandardEncoding, ExpertEncoding], new CFFPointer(CFFCustomEncoding, { lazy: true }));\n\n// Decodes an array of ranges until the total\n// length is equal to the provided length.\n\nvar RangeArray = function (_r$Array) {\n  inherits(RangeArray, _r$Array);\n\n  function RangeArray() {\n    classCallCheck(this, RangeArray);\n    return possibleConstructorReturn(this, _r$Array.apply(this, arguments));\n  }\n\n  RangeArray.prototype.decode = function decode(stream, parent) {\n    var length = resolveLength(this.length, stream, parent);\n    var count = 0;\n    var res = [];\n    while (count < length) {\n      var range = this.type.decode(stream, parent);\n      range.offset = count;\n      count += range.nLeft + 1;\n      res.push(range);\n    }\n\n    return res;\n  };\n\n  return RangeArray;\n}(r.Array);\n\nvar CFFCustomCharset = new r.VersionedStruct(r.uint8, {\n  0: {\n    glyphs: new r.Array(r.uint16, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n\n  1: {\n    ranges: new RangeArray(Range1, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n\n  2: {\n    ranges: new RangeArray(Range2, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  }\n});\n\nvar CFFCharset = new PredefinedOp([ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset], new CFFPointer(CFFCustomCharset, { lazy: true }));\n\nvar FDRange3 = new r.Struct({\n  first: r.uint16,\n  fd: r.uint8\n});\n\nvar FDRange4 = new r.Struct({\n  first: r.uint32,\n  fd: r.uint16\n});\n\nvar FDSelect = new r.VersionedStruct(r.uint8, {\n  0: {\n    fds: new r.Array(r.uint8, function (t) {\n      return t.parent.CharStrings.length;\n    })\n  },\n\n  3: {\n    nRanges: r.uint16,\n    ranges: new r.Array(FDRange3, 'nRanges'),\n    sentinel: r.uint16\n  },\n\n  4: {\n    nRanges: r.uint32,\n    ranges: new r.Array(FDRange4, 'nRanges'),\n    sentinel: r.uint32\n  }\n});\n\nvar ptr = new CFFPointer(CFFPrivateDict);\n\nvar CFFPrivateOp = function () {\n  function CFFPrivateOp() {\n    classCallCheck(this, CFFPrivateOp);\n  }\n\n  CFFPrivateOp.prototype.decode = function decode(stream, parent, operands) {\n    parent.length = operands[0];\n    return ptr.decode(stream, parent, [operands[1]]);\n  };\n\n  CFFPrivateOp.prototype.size = function size(dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.size(dict, ctx)[0]];\n  };\n\n  CFFPrivateOp.prototype.encode = function encode(stream, dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.encode(stream, dict, ctx)[0]];\n  };\n\n  return CFFPrivateOp;\n}();\n\nvar FontDict = new CFFDict([\n// key       name                   type(s)                                 default\n[18, 'Private', new CFFPrivateOp(), null], [[12, 38], 'FontName', 'sid', null]]);\n\nvar CFFTopDict = new CFFDict([\n// key       name                   type(s)                                 default\n[[12, 30], 'ROS', ['sid', 'sid', 'number'], null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'boolean', false], [[12, 2], 'ItalicAngle', 'number', 0], [[12, 3], 'UnderlinePosition', 'number', -100], [[12, 4], 'UnderlineThickness', 'number', 50], [[12, 5], 'PaintType', 'number', 0], [[12, 6], 'CharstringType', 'number', 2], [[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'number', null], [5, 'FontBBox', 'array', [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'number', 0], [14, 'XUID', 'array', null], [15, 'charset', CFFCharset, ISOAdobeCharset], [16, 'Encoding', CFFEncoding, StandardEncoding], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [18, 'Private', new CFFPrivateOp(), null], [[12, 20], 'SyntheticBase', 'number', null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null],\n\n// CID font specific\n[[12, 31], 'CIDFontVersion', 'number', 0], [[12, 32], 'CIDFontRevision', 'number', 0], [[12, 33], 'CIDFontType', 'number', 0], [[12, 34], 'CIDCount', 'number', 8720], [[12, 35], 'UIDBase', 'number', null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [[12, 38], 'FontName', 'sid', null]]);\n\nvar VariationStore = new r.Struct({\n  length: r.uint16,\n  itemVariationStore: ItemVariationStore\n});\n\nvar CFF2TopDict = new CFFDict([[[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [24, 'vstore', new CFFPointer(VariationStore), null], [25, 'maxstack', 'number', 193]]);\n\nvar CFFTop = new r.VersionedStruct(r.fixed16, {\n  1: {\n    hdrSize: r.uint8,\n    offSize: r.uint8,\n    nameIndex: new CFFIndex(new r.String('length')),\n    topDictIndex: new CFFIndex(CFFTopDict),\n    stringIndex: new CFFIndex(new r.String('length')),\n    globalSubrIndex: new CFFIndex()\n  },\n\n  2: {\n    hdrSize: r.uint8,\n    length: r.uint16,\n    topDict: CFF2TopDict,\n    globalSubrIndex: new CFFIndex()\n  }\n});\n\nvar CFFFont = function () {\n  function CFFFont(stream) {\n    classCallCheck(this, CFFFont);\n\n    this.stream = stream;\n    this.decode();\n  }\n\n  CFFFont.decode = function decode(stream) {\n    return new CFFFont(stream);\n  };\n\n  CFFFont.prototype.decode = function decode() {\n    var start = this.stream.pos;\n    var top = CFFTop.decode(this.stream);\n    for (var key in top) {\n      var val = top[key];\n      this[key] = val;\n    }\n\n    if (this.version < 2) {\n      if (this.topDictIndex.length !== 1) {\n        throw new Error(\"Only a single font is allowed in CFF\");\n      }\n\n      this.topDict = this.topDictIndex[0];\n    }\n\n    this.isCIDFont = this.topDict.ROS != null;\n    return this;\n  };\n\n  CFFFont.prototype.string = function string(sid) {\n    if (this.version >= 2) {\n      return null;\n    }\n\n    if (sid < standardStrings.length) {\n      return standardStrings[sid];\n    }\n\n    return this.stringIndex[sid - standardStrings.length];\n  };\n\n  CFFFont.prototype.getCharString = function getCharString(glyph) {\n    this.stream.pos = this.topDict.CharStrings[glyph].offset;\n    return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n  };\n\n  CFFFont.prototype.getGlyphName = function getGlyphName(gid) {\n    // CFF2 glyph names are in the post table.\n    if (this.version >= 2) {\n      return null;\n    }\n\n    // CID-keyed fonts don't have glyph names\n    if (this.isCIDFont) {\n      return null;\n    }\n\n    var charset = this.topDict.charset;\n\n    if (Array.isArray(charset)) {\n      return charset[gid];\n    }\n\n    if (gid === 0) {\n      return '.notdef';\n    }\n\n    gid -= 1;\n\n    switch (charset.version) {\n      case 0:\n        return this.string(charset.glyphs[gid]);\n\n      case 1:\n      case 2:\n        for (var i = 0; i < charset.ranges.length; i++) {\n          var range = charset.ranges[i];\n          if (range.offset <= gid && gid <= range.offset + range.nLeft) {\n            return this.string(range.first + (gid - range.offset));\n          }\n        }\n        break;\n    }\n\n    return null;\n  };\n\n  CFFFont.prototype.fdForGlyph = function fdForGlyph(gid) {\n    if (!this.topDict.FDSelect) {\n      return null;\n    }\n\n    switch (this.topDict.FDSelect.version) {\n      case 0:\n        return this.topDict.FDSelect.fds[gid];\n\n      case 3:\n      case 4:\n        var ranges = this.topDict.FDSelect.ranges;\n\n        var low = 0;\n        var high = ranges.length - 1;\n\n        while (low <= high) {\n          var mid = low + high >> 1;\n\n          if (gid < ranges[mid].first) {\n            high = mid - 1;\n          } else if (mid < high && gid > ranges[mid + 1].first) {\n            low = mid + 1;\n          } else {\n            return ranges[mid].fd;\n          }\n        }\n      default:\n        throw new Error('Unknown FDSelect version: ' + this.topDict.FDSelect.version);\n    }\n  };\n\n  CFFFont.prototype.privateDictForGlyph = function privateDictForGlyph(gid) {\n    if (this.topDict.FDSelect) {\n      var fd = this.fdForGlyph(gid);\n      if (this.topDict.FDArray[fd]) {\n        return this.topDict.FDArray[fd].Private;\n      }\n\n      return null;\n    }\n\n    if (this.version < 2) {\n      return this.topDict.Private;\n    }\n\n    return this.topDict.FDArray[0].Private;\n  };\n\n  createClass(CFFFont, [{\n    key: 'postscriptName',\n    get: function get$$1() {\n      if (this.version < 2) {\n        return this.nameIndex[0];\n      }\n\n      return null;\n    }\n  }, {\n    key: 'fullName',\n    get: function get$$1() {\n      return this.string(this.topDict.FullName);\n    }\n  }, {\n    key: 'familyName',\n    get: function get$$1() {\n      return this.string(this.topDict.FamilyName);\n    }\n  }]);\n  return CFFFont;\n}();\n\nvar VerticalOrigin = new r.Struct({\n  glyphIndex: r.uint16,\n  vertOriginY: r.int16\n});\n\nvar VORG = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  defaultVertOriginY: r.int16,\n  numVertOriginYMetrics: r.uint16,\n  metrics: new r.Array(VerticalOrigin, 'numVertOriginYMetrics')\n});\n\nvar BigMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  horiBearingX: r.int8,\n  horiBearingY: r.int8,\n  horiAdvance: r.uint8,\n  vertBearingX: r.int8,\n  vertBearingY: r.int8,\n  vertAdvance: r.uint8\n});\n\nvar SmallMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  bearingX: r.int8,\n  bearingY: r.int8,\n  advance: r.uint8\n});\n\nvar EBDTComponent = new r.Struct({\n  glyph: r.uint16,\n  xOffset: r.int8,\n  yOffset: r.int8\n});\n\nvar ByteAligned = function ByteAligned() {\n  classCallCheck(this, ByteAligned);\n};\n\nvar BitAligned = function BitAligned() {\n  classCallCheck(this, BitAligned);\n};\n\nvar glyph = new r.VersionedStruct('version', {\n  1: {\n    metrics: SmallMetrics,\n    data: ByteAligned\n  },\n\n  2: {\n    metrics: SmallMetrics,\n    data: BitAligned\n  },\n\n  // format 3 is deprecated\n  // format 4 is not supported by Microsoft\n\n  5: {\n    data: BitAligned\n  },\n\n  6: {\n    metrics: BigMetrics,\n    data: ByteAligned\n  },\n\n  7: {\n    metrics: BigMetrics,\n    data: BitAligned\n  },\n\n  8: {\n    metrics: SmallMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n\n  9: {\n    metrics: BigMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n\n  17: {\n    metrics: SmallMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n\n  18: {\n    metrics: BigMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n\n  19: {\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  }\n});\n\nvar SBitLineMetrics = new r.Struct({\n  ascender: r.int8,\n  descender: r.int8,\n  widthMax: r.uint8,\n  caretSlopeNumerator: r.int8,\n  caretSlopeDenominator: r.int8,\n  caretOffset: r.int8,\n  minOriginSB: r.int8,\n  minAdvanceSB: r.int8,\n  maxBeforeBL: r.int8,\n  minAfterBL: r.int8,\n  pad: new r.Reserved(r.int8, 2)\n});\n\nvar CodeOffsetPair = new r.Struct({\n  glyphCode: r.uint16,\n  offset: r.uint16\n});\n\nvar IndexSubtable = new r.VersionedStruct(r.uint16, {\n  header: {\n    imageFormat: r.uint16,\n    imageDataOffset: r.uint32\n  },\n\n  1: {\n    offsetArray: new r.Array(r.uint32, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n\n  2: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics\n  },\n\n  3: {\n    offsetArray: new r.Array(r.uint16, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n\n  4: {\n    numGlyphs: r.uint32,\n    glyphArray: new r.Array(CodeOffsetPair, function (t) {\n      return t.numGlyphs + 1;\n    })\n  },\n\n  5: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics,\n    numGlyphs: r.uint32,\n    glyphCodeArray: new r.Array(r.uint16, 'numGlyphs')\n  }\n});\n\nvar IndexSubtableArray = new r.Struct({\n  firstGlyphIndex: r.uint16,\n  lastGlyphIndex: r.uint16,\n  subtable: new r.Pointer(r.uint32, IndexSubtable)\n});\n\nvar BitmapSizeTable = new r.Struct({\n  indexSubTableArray: new r.Pointer(r.uint32, new r.Array(IndexSubtableArray, 1), { type: 'parent' }),\n  indexTablesSize: r.uint32,\n  numberOfIndexSubTables: r.uint32,\n  colorRef: r.uint32,\n  hori: SBitLineMetrics,\n  vert: SBitLineMetrics,\n  startGlyphIndex: r.uint16,\n  endGlyphIndex: r.uint16,\n  ppemX: r.uint8,\n  ppemY: r.uint8,\n  bitDepth: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['horizontal', 'vertical'])\n});\n\nvar EBLC = new r.Struct({\n  version: r.uint32, // 0x00020000\n  numSizes: r.uint32,\n  sizes: new r.Array(BitmapSizeTable, 'numSizes')\n});\n\nvar ImageTable = new r.Struct({\n  ppem: r.uint16,\n  resolution: r.uint16,\n  imageOffsets: new r.Array(new r.Pointer(r.uint32, 'void'), function (t) {\n    return t.parent.parent.maxp.numGlyphs + 1;\n  })\n});\n\n// This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\nvar sbix = new r.Struct({\n  version: r.uint16,\n  flags: new r.Bitfield(r.uint16, ['renderOutlines']),\n  numImgTables: r.uint32,\n  imageTables: new r.Array(new r.Pointer(r.uint32, ImageTable), 'numImgTables')\n});\n\nvar LayerRecord = new r.Struct({\n  gid: r.uint16, // Glyph ID of layer glyph (must be in z-order from bottom to top).\n  paletteIndex: r.uint16 // Index value to use in the appropriate palette. This value must\n}); // be less than numPaletteEntries in the CPAL table, except for\n// the special case noted below. Each palette entry is 16 bits.\n// A palette index of 0xFFFF is a special case indicating that\n// the text foreground color should be used.\n\nvar BaseGlyphRecord = new r.Struct({\n  gid: r.uint16, // Glyph ID of reference glyph. This glyph is for reference only\n  // and is not rendered for color.\n  firstLayerIndex: r.uint16, // Index (from beginning of the Layer Records) to the layer record.\n  // There will be numLayers consecutive entries for this base glyph.\n  numLayers: r.uint16\n});\n\nvar COLR = new r.Struct({\n  version: r.uint16,\n  numBaseGlyphRecords: r.uint16,\n  baseGlyphRecord: new r.Pointer(r.uint32, new r.Array(BaseGlyphRecord, 'numBaseGlyphRecords')),\n  layerRecords: new r.Pointer(r.uint32, new r.Array(LayerRecord, 'numLayerRecords'), { lazy: true }),\n  numLayerRecords: r.uint16\n});\n\nvar ColorRecord = new r.Struct({\n  blue: r.uint8,\n  green: r.uint8,\n  red: r.uint8,\n  alpha: r.uint8\n});\n\nvar CPAL = new r.VersionedStruct(r.uint16, {\n  header: {\n    numPaletteEntries: r.uint16,\n    numPalettes: r.uint16,\n    numColorRecords: r.uint16,\n    colorRecords: new r.Pointer(r.uint32, new r.Array(ColorRecord, 'numColorRecords')),\n    colorRecordIndices: new r.Array(r.uint16, 'numPalettes')\n  },\n  0: {},\n  1: {\n    offsetPaletteTypeArray: new r.Pointer(r.uint32, new r.Array(r.uint32, 'numPalettes')),\n    offsetPaletteLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPalettes')),\n    offsetPaletteEntryLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPaletteEntries'))\n  }\n});\n\nvar BaseCoord = new r.VersionedStruct(r.uint16, {\n  1: { // Design units only\n    coordinate: r.int16 // X or Y value, in design units\n  },\n\n  2: { // Design units plus contour point\n    coordinate: r.int16, // X or Y value, in design units\n    referenceGlyph: r.uint16, // GlyphID of control glyph\n    baseCoordPoint: r.uint16 // Index of contour point on the referenceGlyph\n  },\n\n  3: { // Design units plus Device table\n    coordinate: r.int16, // X or Y value, in design units\n    deviceTable: new r.Pointer(r.uint16, Device) // Device table for X or Y value\n  }\n});\n\nvar BaseValues = new r.Struct({\n  defaultIndex: r.uint16, // Index of default baseline for this script-same index in the BaseTagList\n  baseCoordCount: r.uint16,\n  baseCoords: new r.Array(new r.Pointer(r.uint16, BaseCoord), 'baseCoordCount')\n});\n\nvar FeatMinMaxRecord = new r.Struct({\n  tag: new r.String(4), // 4-byte feature identification tag-must match FeatureTag in FeatureList\n  minCoord: new r.Pointer(r.uint16, BaseCoord, { type: 'parent' }), // May be NULL\n  maxCoord: new r.Pointer(r.uint16, BaseCoord, { type: 'parent' }) // May be NULL\n});\n\nvar MinMax = new r.Struct({\n  minCoord: new r.Pointer(r.uint16, BaseCoord), // May be NULL\n  maxCoord: new r.Pointer(r.uint16, BaseCoord), // May be NULL\n  featMinMaxCount: r.uint16, // May be 0\n  featMinMaxRecords: new r.Array(FeatMinMaxRecord, 'featMinMaxCount') // In alphabetical order\n});\n\nvar BaseLangSysRecord = new r.Struct({\n  tag: new r.String(4), // 4-byte language system identification tag\n  minMax: new r.Pointer(r.uint16, MinMax, { type: 'parent' })\n});\n\nvar BaseScript = new r.Struct({\n  baseValues: new r.Pointer(r.uint16, BaseValues), // May be NULL\n  defaultMinMax: new r.Pointer(r.uint16, MinMax), // May be NULL\n  baseLangSysCount: r.uint16, // May be 0\n  baseLangSysRecords: new r.Array(BaseLangSysRecord, 'baseLangSysCount') // in alphabetical order by BaseLangSysTag\n});\n\nvar BaseScriptRecord = new r.Struct({\n  tag: new r.String(4), // 4-byte script identification tag\n  script: new r.Pointer(r.uint16, BaseScript, { type: 'parent' })\n});\n\nvar BaseScriptList = new r.Array(BaseScriptRecord, r.uint16);\n\n// Array of 4-byte baseline identification tags-must be in alphabetical order\nvar BaseTagList = new r.Array(new r.String(4), r.uint16);\n\nvar Axis = new r.Struct({\n  baseTagList: new r.Pointer(r.uint16, BaseTagList), // May be NULL\n  baseScriptList: new r.Pointer(r.uint16, BaseScriptList)\n});\n\nvar BASE = new r.VersionedStruct(r.uint32, {\n  header: {\n    horizAxis: new r.Pointer(r.uint16, Axis), // May be NULL\n    vertAxis: new r.Pointer(r.uint16, Axis) // May be NULL\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\n\nvar AttachPoint = new r.Array(r.uint16, r.uint16);\nvar AttachList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  glyphCount: r.uint16,\n  attachPoints: new r.Array(new r.Pointer(r.uint16, AttachPoint), 'glyphCount')\n});\n\nvar CaretValue = new r.VersionedStruct(r.uint16, {\n  1: { // Design units only\n    coordinate: r.int16\n  },\n\n  2: { // Contour point\n    caretValuePoint: r.uint16\n  },\n\n  3: { // Design units plus Device table\n    coordinate: r.int16,\n    deviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\n\nvar LigGlyph = new r.Array(new r.Pointer(r.uint16, CaretValue), r.uint16);\n\nvar LigCaretList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  ligGlyphCount: r.uint16,\n  ligGlyphs: new r.Array(new r.Pointer(r.uint16, LigGlyph), 'ligGlyphCount')\n});\n\nvar MarkGlyphSetsDef = new r.Struct({\n  markSetTableFormat: r.uint16,\n  markSetCount: r.uint16,\n  coverage: new r.Array(new r.Pointer(r.uint32, Coverage), 'markSetCount')\n});\n\nvar GDEF = new r.VersionedStruct(r.uint32, {\n  header: {\n    glyphClassDef: new r.Pointer(r.uint16, ClassDef),\n    attachList: new r.Pointer(r.uint16, AttachList),\n    ligCaretList: new r.Pointer(r.uint16, LigCaretList),\n    markAttachClassDef: new r.Pointer(r.uint16, ClassDef)\n  },\n\n  0x00010000: {},\n  0x00010002: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef)\n  },\n  0x00010003: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef),\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\n\nvar ValueFormat = new r.Bitfield(r.uint16, ['xPlacement', 'yPlacement', 'xAdvance', 'yAdvance', 'xPlaDevice', 'yPlaDevice', 'xAdvDevice', 'yAdvDevice']);\n\nvar types = {\n  xPlacement: r.int16,\n  yPlacement: r.int16,\n  xAdvance: r.int16,\n  yAdvance: r.int16,\n  xPlaDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: 'rel' }),\n  yPlaDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: 'rel' }),\n  xAdvDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: 'rel' }),\n  yAdvDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: 'rel' })\n};\n\nvar ValueRecord = function () {\n  function ValueRecord() {\n    var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'valueFormat';\n    classCallCheck(this, ValueRecord);\n\n    this.key = key;\n  }\n\n  ValueRecord.prototype.buildStruct = function buildStruct(parent) {\n    var struct = parent;\n    while (!struct[this.key] && struct.parent) {\n      struct = struct.parent;\n    }\n\n    if (!struct[this.key]) return;\n\n    var fields = {};\n    fields.rel = function () {\n      return struct._startOffset;\n    };\n\n    var format = struct[this.key];\n    for (var key in format) {\n      if (format[key]) {\n        fields[key] = types[key];\n      }\n    }\n\n    return new r.Struct(fields);\n  };\n\n  ValueRecord.prototype.size = function size(val, ctx) {\n    return this.buildStruct(ctx).size(val, ctx);\n  };\n\n  ValueRecord.prototype.decode = function decode(stream, parent) {\n    var res = this.buildStruct(parent).decode(stream, parent);\n    delete res.rel;\n    return res;\n  };\n\n  return ValueRecord;\n}();\n\nvar PairValueRecord = new r.Struct({\n  secondGlyph: r.uint16,\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\n\nvar PairSet = new r.Array(PairValueRecord, r.uint16);\n\nvar Class2Record = new r.Struct({\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\n\nvar Anchor = new r.VersionedStruct(r.uint16, {\n  1: { // Design units only\n    xCoordinate: r.int16,\n    yCoordinate: r.int16\n  },\n\n  2: { // Design units plus contour point\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    anchorPoint: r.uint16\n  },\n\n  3: { // Design units plus Device tables\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    xDeviceTable: new r.Pointer(r.uint16, Device),\n    yDeviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\n\nvar EntryExitRecord = new r.Struct({\n  entryAnchor: new r.Pointer(r.uint16, Anchor, { type: 'parent' }),\n  exitAnchor: new r.Pointer(r.uint16, Anchor, { type: 'parent' })\n});\n\nvar MarkRecord = new r.Struct({\n  class: r.uint16,\n  markAnchor: new r.Pointer(r.uint16, Anchor, { type: 'parent' })\n});\n\nvar MarkArray = new r.Array(MarkRecord, r.uint16);\n\nvar BaseRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.classCount;\n});\nvar BaseArray = new r.Array(BaseRecord, r.uint16);\n\nvar ComponentRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.parent.classCount;\n});\nvar LigatureAttach = new r.Array(ComponentRecord, r.uint16);\nvar LigatureArray = new r.Array(new r.Pointer(r.uint16, LigatureAttach), r.uint16);\n\nvar GPOSLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, { // Single Adjustment\n    1: { // Single positioning value\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      value: new ValueRecord()\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      valueCount: r.uint16,\n      values: new r.LazyArray(new ValueRecord(), 'valueCount')\n    }\n  }),\n\n  2: new r.VersionedStruct(r.uint16, { // Pair Adjustment Positioning\n    1: { // Adjustments for glyph pairs\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      pairSetCount: r.uint16,\n      pairSets: new r.LazyArray(new r.Pointer(r.uint16, PairSet), 'pairSetCount')\n    },\n\n    2: { // Class pair adjustment\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      classDef1: new r.Pointer(r.uint16, ClassDef),\n      classDef2: new r.Pointer(r.uint16, ClassDef),\n      class1Count: r.uint16,\n      class2Count: r.uint16,\n      classRecords: new r.LazyArray(new r.LazyArray(Class2Record, 'class2Count'), 'class1Count')\n    }\n  }),\n\n  3: { // Cursive Attachment Positioning\n    format: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    entryExitCount: r.uint16,\n    entryExitRecords: new r.Array(EntryExitRecord, 'entryExitCount')\n  },\n\n  4: { // MarkToBase Attachment Positioning\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    baseCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    baseArray: new r.Pointer(r.uint16, BaseArray)\n  },\n\n  5: { // MarkToLigature Attachment Positioning\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    ligatureCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    ligatureArray: new r.Pointer(r.uint16, LigatureArray)\n  },\n\n  6: { // MarkToMark Attachment Positioning\n    format: r.uint16,\n    mark1Coverage: new r.Pointer(r.uint16, Coverage),\n    mark2Coverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    mark1Array: new r.Pointer(r.uint16, MarkArray),\n    mark2Array: new r.Pointer(r.uint16, BaseArray)\n  },\n\n  7: Context, // Contextual positioning\n  8: ChainingContext, // Chaining contextual positioning\n\n  9: { // Extension Positioning\n    posFormat: r.uint16,\n    lookupType: r.uint16, // cannot also be 9\n    extension: new r.Pointer(r.uint32, undefined)\n  }\n});\n\n// Fix circular reference\nGPOSLookup.versions[9].extension.type = GPOSLookup;\n\nvar GPOS = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\n\nvar Sequence = new r.Array(r.uint16, r.uint16);\nvar AlternateSet = Sequence;\n\nvar Ligature = new r.Struct({\n  glyph: r.uint16,\n  compCount: r.uint16,\n  components: new r.Array(r.uint16, function (t) {\n    return t.compCount - 1;\n  })\n});\n\nvar LigatureSet = new r.Array(new r.Pointer(r.uint16, Ligature), r.uint16);\n\nvar GSUBLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, { // Single Substitution\n    1: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      deltaGlyphID: r.int16\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      glyphCount: r.uint16,\n      substitute: new r.LazyArray(r.uint16, 'glyphCount')\n    }\n  }),\n\n  2: { // Multiple Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    sequences: new r.LazyArray(new r.Pointer(r.uint16, Sequence), 'count')\n  },\n\n  3: { // Alternate Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    alternateSet: new r.LazyArray(new r.Pointer(r.uint16, AlternateSet), 'count')\n  },\n\n  4: { // Ligature Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    ligatureSets: new r.LazyArray(new r.Pointer(r.uint16, LigatureSet), 'count')\n  },\n\n  5: Context, // Contextual Substitution\n  6: ChainingContext, // Chaining Contextual Substitution\n\n  7: { // Extension Substitution\n    substFormat: r.uint16,\n    lookupType: r.uint16, // cannot also be 7\n    extension: new r.Pointer(r.uint32, undefined)\n  },\n\n  8: { // Reverse Chaining Contextual Single Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    glyphCount: r.uint16,\n    substitutes: new r.Array(r.uint16, 'glyphCount')\n  }\n});\n\n// Fix circular reference\nGSUBLookup.versions[7].extension.type = GSUBLookup;\n\nvar GSUB = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GSUBLookup))\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\n\nvar JstfGSUBModList = new r.Array(r.uint16, r.uint16);\n\nvar JstfPriority = new r.Struct({\n  shrinkageEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup)),\n  extensionEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n});\n\nvar JstfLangSys = new r.Array(new r.Pointer(r.uint16, JstfPriority), r.uint16);\n\nvar JstfLangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  jstfLangSys: new r.Pointer(r.uint16, JstfLangSys)\n});\n\nvar JstfScript = new r.Struct({\n  extenderGlyphs: new r.Pointer(r.uint16, new r.Array(r.uint16, r.uint16)), // array of glyphs to extend line length\n  defaultLangSys: new r.Pointer(r.uint16, JstfLangSys),\n  langSysCount: r.uint16,\n  langSysRecords: new r.Array(JstfLangSysRecord, 'langSysCount')\n});\n\nvar JstfScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, JstfScript, { type: 'parent' })\n});\n\nvar JSTF = new r.Struct({\n  version: r.uint32, // should be 0x00010000\n  scriptCount: r.uint16,\n  scriptList: new r.Array(JstfScriptRecord, 'scriptCount')\n});\n\n// TODO: add this to restructure\n\nvar VariableSizeNumber = function () {\n  function VariableSizeNumber(size) {\n    classCallCheck(this, VariableSizeNumber);\n\n    this._size = size;\n  }\n\n  VariableSizeNumber.prototype.decode = function decode(stream, parent) {\n    switch (this.size(0, parent)) {\n      case 1:\n        return stream.readUInt8();\n      case 2:\n        return stream.readUInt16BE();\n      case 3:\n        return stream.readUInt24BE();\n      case 4:\n        return stream.readUInt32BE();\n    }\n  };\n\n  VariableSizeNumber.prototype.size = function size(val, parent) {\n    return resolveLength(this._size, null, parent);\n  };\n\n  return VariableSizeNumber;\n}();\n\nvar MapDataEntry = new r.Struct({\n  entry: new VariableSizeNumber(function (t) {\n    return ((t.parent.entryFormat & 0x0030) >> 4) + 1;\n  }),\n  outerIndex: function outerIndex(t) {\n    return t.entry >> (t.parent.entryFormat & 0x000F) + 1;\n  },\n  innerIndex: function innerIndex(t) {\n    return t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1;\n  }\n});\n\nvar DeltaSetIndexMap = new r.Struct({\n  entryFormat: r.uint16,\n  mapCount: r.uint16,\n  mapData: new r.Array(MapDataEntry, 'mapCount')\n});\n\nvar HVAR = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore),\n  advanceWidthMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  LSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  RSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap)\n});\n\nvar Signature = new r.Struct({\n  format: r.uint32,\n  length: r.uint32,\n  offset: r.uint32\n});\n\nvar SignatureBlock = new r.Struct({\n  reserved: new r.Reserved(r.uint16, 2),\n  cbSignature: r.uint32, // Length (in bytes) of the PKCS#7 packet in pbSignature\n  signature: new r.Buffer('cbSignature')\n});\n\nvar DSIG = new r.Struct({\n  ulVersion: r.uint32, // Version number of the DSIG table (0x00000001)\n  usNumSigs: r.uint16, // Number of signatures in the table\n  usFlag: r.uint16, // Permission flags\n  signatures: new r.Array(Signature, 'usNumSigs'),\n  signatureBlocks: new r.Array(SignatureBlock, 'usNumSigs')\n});\n\nvar GaspRange = new r.Struct({\n  rangeMaxPPEM: r.uint16, // Upper limit of range, in ppem\n  rangeGaspBehavior: new r.Bitfield(r.uint16, [// Flags describing desired rasterizer behavior\n  'grayscale', 'gridfit', 'symmetricSmoothing', 'symmetricGridfit' // only in version 1, for ClearType\n  ])\n});\n\nvar gasp = new r.Struct({\n  version: r.uint16, // set to 0\n  numRanges: r.uint16,\n  gaspRanges: new r.Array(GaspRange, 'numRanges') // Sorted by ppem\n});\n\nvar DeviceRecord = new r.Struct({\n  pixelSize: r.uint8,\n  maximumWidth: r.uint8,\n  widths: new r.Array(r.uint8, function (t) {\n    return t.parent.parent.maxp.numGlyphs;\n  })\n});\n\n// The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\nvar hdmx = new r.Struct({\n  version: r.uint16,\n  numRecords: r.int16,\n  sizeDeviceRecord: r.int32,\n  records: new r.Array(DeviceRecord, 'numRecords')\n});\n\nvar KernPair = new r.Struct({\n  left: r.uint16,\n  right: r.uint16,\n  value: r.int16\n});\n\nvar ClassTable = new r.Struct({\n  firstGlyph: r.uint16,\n  nGlyphs: r.uint16,\n  offsets: new r.Array(r.uint16, 'nGlyphs'),\n  max: function max(t) {\n    return t.offsets.length && Math.max.apply(Math, t.offsets);\n  }\n});\n\nvar Kern2Array = new r.Struct({\n  off: function off(t) {\n    return t._startOffset - t.parent.parent._startOffset;\n  },\n  len: function len(t) {\n    return ((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2);\n  },\n  values: new r.LazyArray(r.int16, 'len')\n});\n\nvar KernSubtable = new r.VersionedStruct('format', {\n  0: {\n    nPairs: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    pairs: new r.Array(KernPair, 'nPairs')\n  },\n\n  2: {\n    rowWidth: r.uint16,\n    leftTable: new r.Pointer(r.uint16, ClassTable, { type: 'parent' }),\n    rightTable: new r.Pointer(r.uint16, ClassTable, { type: 'parent' }),\n    array: new r.Pointer(r.uint16, Kern2Array, { type: 'parent' })\n  },\n\n  3: {\n    glyphCount: r.uint16,\n    kernValueCount: r.uint8,\n    leftClassCount: r.uint8,\n    rightClassCount: r.uint8,\n    flags: r.uint8,\n    kernValue: new r.Array(r.int16, 'kernValueCount'),\n    leftClass: new r.Array(r.uint8, 'glyphCount'),\n    rightClass: new r.Array(r.uint8, 'glyphCount'),\n    kernIndex: new r.Array(r.uint8, function (t) {\n      return t.leftClassCount * t.rightClassCount;\n    })\n  }\n});\n\nvar KernTable = new r.VersionedStruct('version', {\n  0: { // Microsoft uses this format\n    subVersion: r.uint16, // Microsoft has an extra sub-table version number\n    length: r.uint16, // Length of the subtable, in bytes\n    format: r.uint8, // Format of subtable\n    coverage: new r.Bitfield(r.uint8, ['horizontal', // 1 if table has horizontal data, 0 if vertical\n    'minimum', // If set to 1, the table has minimum values. If set to 0, the table has kerning values.\n    'crossStream', // If set to 1, kerning is perpendicular to the flow of the text\n    'override' // If set to 1 the value in this table replaces the accumulated value\n    ]),\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  },\n  1: { // Apple uses this format\n    length: r.uint32,\n    coverage: new r.Bitfield(r.uint8, [null, null, null, null, null, 'variation', // Set if table has variation kerning values\n    'crossStream', // Set if table has cross-stream kerning values\n    'vertical' // Set if table has vertical kerning values\n    ]),\n    format: r.uint8,\n    tupleIndex: r.uint16,\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  }\n});\n\nvar kern = new r.VersionedStruct(r.uint16, {\n  0: { // Microsoft Version\n    nTables: r.uint16,\n    tables: new r.Array(KernTable, 'nTables')\n  },\n\n  1: { // Apple Version\n    reserved: new r.Reserved(r.uint16), // the other half of the version number\n    nTables: r.uint32,\n    tables: new r.Array(KernTable, 'nTables')\n  }\n});\n\n// Linear Threshold table\n// Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\nvar LTSH = new r.Struct({\n  version: r.uint16,\n  numGlyphs: r.uint16,\n  yPels: new r.Array(r.uint8, 'numGlyphs')\n});\n\n// PCL 5 Table\n// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\nvar PCLT = new r.Struct({\n  version: r.uint16,\n  fontNumber: r.uint32,\n  pitch: r.uint16,\n  xHeight: r.uint16,\n  style: r.uint16,\n  typeFamily: r.uint16,\n  capHeight: r.uint16,\n  symbolSet: r.uint16,\n  typeface: new r.String(16),\n  characterComplement: new r.String(8),\n  fileName: new r.String(6),\n  strokeWeight: new r.String(1),\n  widthType: new r.String(1),\n  serifStyle: r.uint8,\n  reserved: new r.Reserved(r.uint8)\n});\n\n// VDMX tables contain ascender/descender overrides for certain (usually small)\n// sizes. This is needed in order to match font metrics on Windows.\n\nvar Ratio = new r.Struct({\n  bCharSet: r.uint8, // Character set\n  xRatio: r.uint8, // Value to use for x-Ratio\n  yStartRatio: r.uint8, // Starting y-Ratio value\n  yEndRatio: r.uint8 // Ending y-Ratio value\n});\n\nvar vTable = new r.Struct({\n  yPelHeight: r.uint16, // yPelHeight to which values apply\n  yMax: r.int16, // Maximum value (in pels) for this yPelHeight\n  yMin: r.int16 // Minimum value (in pels) for this yPelHeight\n});\n\nvar VdmxGroup = new r.Struct({\n  recs: r.uint16, // Number of height records in this group\n  startsz: r.uint8, // Starting yPelHeight\n  endsz: r.uint8, // Ending yPelHeight\n  entries: new r.Array(vTable, 'recs') // The VDMX records\n});\n\nvar VDMX = new r.Struct({\n  version: r.uint16, // Version number (0 or 1)\n  numRecs: r.uint16, // Number of VDMX groups present\n  numRatios: r.uint16, // Number of aspect ratio groupings\n  ratioRanges: new r.Array(Ratio, 'numRatios'), // Ratio ranges\n  offsets: new r.Array(r.uint16, 'numRatios'), // Offset to the VDMX group for this ratio range\n  groups: new r.Array(VdmxGroup, 'numRecs') // The actual VDMX groupings\n});\n\n// Vertical Header Table\nvar vhea = new r.Struct({\n  version: r.uint16, // Version number of the Vertical Header Table\n  ascent: r.int16, // The vertical typographic ascender for this font\n  descent: r.int16, // The vertical typographic descender for this font\n  lineGap: r.int16, // The vertical typographic line gap for this font\n  advanceHeightMax: r.int16, // The maximum advance height measurement found in the font\n  minTopSideBearing: r.int16, // The minimum top side bearing measurement found in the font\n  minBottomSideBearing: r.int16, // The minimum bottom side bearing measurement found in the font\n  yMaxExtent: r.int16,\n  caretSlopeRise: r.int16, // Caret slope (rise/run)\n  caretSlopeRun: r.int16,\n  caretOffset: r.int16, // Set value equal to 0 for nonslanted fonts\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16, // Set to 0\n  numberOfMetrics: r.uint16 // Number of advance heights in the Vertical Metrics table\n});\n\nvar VmtxEntry = new r.Struct({\n  advance: r.uint16, // The advance height of the glyph\n  bearing: r.int16 // The top sidebearing of the glyph\n});\n\n// Vertical Metrics Table\nvar vmtx = new r.Struct({\n  metrics: new r.LazyArray(VmtxEntry, function (t) {\n    return t.parent.vhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics;\n  })\n});\n\nvar shortFrac = new r.Fixed(16, 'BE', 14);\n\nvar Correspondence = new r.Struct({\n  fromCoord: shortFrac,\n  toCoord: shortFrac\n});\n\nvar Segment = new r.Struct({\n  pairCount: r.uint16,\n  correspondence: new r.Array(Correspondence, 'pairCount')\n});\n\nvar avar = new r.Struct({\n  version: r.fixed32,\n  axisCount: r.uint32,\n  segment: new r.Array(Segment, 'axisCount')\n});\n\nvar UnboundedArrayAccessor = function () {\n  function UnboundedArrayAccessor(type, stream, parent) {\n    classCallCheck(this, UnboundedArrayAccessor);\n\n    this.type = type;\n    this.stream = stream;\n    this.parent = parent;\n    this.base = this.stream.pos;\n    this._items = [];\n  }\n\n  UnboundedArrayAccessor.prototype.getItem = function getItem(index) {\n    if (this._items[index] == null) {\n      var pos = this.stream.pos;\n      this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n      this._items[index] = this.type.decode(this.stream, this.parent);\n      this.stream.pos = pos;\n    }\n\n    return this._items[index];\n  };\n\n  UnboundedArrayAccessor.prototype.inspect = function inspect() {\n    return '[UnboundedArray ' + this.type.constructor.name + ']';\n  };\n\n  return UnboundedArrayAccessor;\n}();\n\nvar UnboundedArray = function (_r$Array) {\n  inherits(UnboundedArray, _r$Array);\n\n  function UnboundedArray(type) {\n    classCallCheck(this, UnboundedArray);\n    return possibleConstructorReturn(this, _r$Array.call(this, type, 0));\n  }\n\n  UnboundedArray.prototype.decode = function decode(stream, parent) {\n    return new UnboundedArrayAccessor(this.type, stream, parent);\n  };\n\n  return UnboundedArray;\n}(r.Array);\n\nvar LookupTable = function LookupTable() {\n  var ValueType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : r.uint16;\n\n  // Helper class that makes internal structures invisible to pointers\n  var Shadow = function () {\n    function Shadow(type) {\n      classCallCheck(this, Shadow);\n\n      this.type = type;\n    }\n\n    Shadow.prototype.decode = function decode(stream, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.decode(stream, ctx);\n    };\n\n    Shadow.prototype.size = function size(val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.size(val, ctx);\n    };\n\n    Shadow.prototype.encode = function encode(stream, val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.encode(stream, val, ctx);\n    };\n\n    return Shadow;\n  }();\n\n  ValueType = new Shadow(ValueType);\n\n  var BinarySearchHeader = new r.Struct({\n    unitSize: r.uint16,\n    nUnits: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16\n  });\n\n  var LookupSegmentSingle = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    value: ValueType\n  });\n\n  var LookupSegmentArray = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    values: new r.Pointer(r.uint16, new r.Array(ValueType, function (t) {\n      return t.lastGlyph - t.firstGlyph + 1;\n    }), { type: 'parent' })\n  });\n\n  var LookupSingle = new r.Struct({\n    glyph: r.uint16,\n    value: ValueType\n  });\n\n  return new r.VersionedStruct(r.uint16, {\n    0: {\n      values: new UnboundedArray(ValueType) // length == number of glyphs maybe?\n    },\n    2: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    4: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentArray, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    6: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    8: {\n      firstGlyph: r.uint16,\n      count: r.uint16,\n      values: new r.Array(ValueType, 'count')\n    }\n  });\n};\n\nfunction StateTable() {\n  var entryData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var lookupType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : r.uint16;\n\n  var entry = Object.assign({\n    newState: r.uint16,\n    flags: r.uint16\n  }, entryData);\n\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint16, function (t) {\n    return t.nClasses;\n  }));\n\n  var StateHeader = new r.Struct({\n    nClasses: r.uint32,\n    classTable: new r.Pointer(r.uint32, new LookupTable(lookupType)),\n    stateArray: new r.Pointer(r.uint32, StateArray),\n    entryTable: new r.Pointer(r.uint32, new UnboundedArray(Entry))\n  });\n\n  return StateHeader;\n}\n\n// This is the old version of the StateTable structure\nfunction StateTable1() {\n  var entryData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var lookupType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : r.uint16;\n\n  var ClassLookupTable = new r.Struct({\n    version: function version() {\n      return 8;\n    },\n    // simulate LookupTable\n    firstGlyph: r.uint16,\n    values: new r.Array(r.uint8, r.uint16)\n  });\n\n  var entry = Object.assign({\n    newStateOffset: r.uint16,\n    // convert offset to stateArray index\n    newState: function newState(t) {\n      return (t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses;\n    },\n    flags: r.uint16\n  }, entryData);\n\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint8, function (t) {\n    return t.nClasses;\n  }));\n\n  var StateHeader1 = new r.Struct({\n    nClasses: r.uint16,\n    classTable: new r.Pointer(r.uint16, ClassLookupTable),\n    stateArray: new r.Pointer(r.uint16, StateArray),\n    entryTable: new r.Pointer(r.uint16, new UnboundedArray(Entry))\n  });\n\n  return StateHeader1;\n}\n\nvar BslnSubtable = new r.VersionedStruct('format', {\n  0: { // Distance-based, no mapping\n    deltas: new r.Array(r.int16, 32)\n  },\n\n  1: { // Distance-based, with mapping\n    deltas: new r.Array(r.int16, 32),\n    mappingData: new LookupTable(r.uint16)\n  },\n\n  2: { // Control point-based, no mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32)\n  },\n\n  3: { // Control point-based, with mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32),\n    mappingData: new LookupTable(r.uint16)\n  }\n});\n\nvar bsln = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  defaultBaseline: r.uint16,\n  subtable: BslnSubtable\n});\n\nvar Setting = new r.Struct({\n  setting: r.uint16,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\n\nvar FeatureName = new r.Struct({\n  feature: r.uint16,\n  nSettings: r.uint16,\n  settingTable: new r.Pointer(r.uint32, new r.Array(Setting, 'nSettings'), { type: 'parent' }),\n  featureFlags: new r.Bitfield(r.uint8, [null, null, null, null, null, null, 'hasDefault', 'exclusive']),\n  defaultSetting: r.uint8,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\n\nvar feat = new r.Struct({\n  version: r.fixed32,\n  featureNameCount: r.uint16,\n  reserved1: new r.Reserved(r.uint16),\n  reserved2: new r.Reserved(r.uint32),\n  featureNames: new r.Array(FeatureName, 'featureNameCount')\n});\n\nvar Axis$1 = new r.Struct({\n  axisTag: new r.String(4),\n  minValue: r.fixed32,\n  defaultValue: r.fixed32,\n  maxValue: r.fixed32,\n  flags: r.uint16,\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  }\n});\n\nvar Instance = new r.Struct({\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  },\n  flags: r.uint16,\n  coord: new r.Array(r.fixed32, function (t) {\n    return t.parent.axisCount;\n  }),\n  postscriptNameID: new r.Optional(r.uint16, function (t) {\n    return t.parent.instanceSize - t._currentOffset > 0;\n  })\n});\n\nvar fvar = new r.Struct({\n  version: r.fixed32,\n  offsetToData: r.uint16,\n  countSizePairs: r.uint16,\n  axisCount: r.uint16,\n  axisSize: r.uint16,\n  instanceCount: r.uint16,\n  instanceSize: r.uint16,\n  axis: new r.Array(Axis$1, 'axisCount'),\n  instance: new r.Array(Instance, 'instanceCount')\n});\n\nvar shortFrac$1 = new r.Fixed(16, 'BE', 14);\n\nvar Offset = function () {\n  function Offset() {\n    classCallCheck(this, Offset);\n  }\n\n  Offset.decode = function decode(stream, parent) {\n    // In short format, offsets are multiplied by 2.\n    // This doesn't seem to be documented by Apple, but it\n    // is implemented this way in Freetype.\n    return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;\n  };\n\n  return Offset;\n}();\n\nvar gvar = new r.Struct({\n  version: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  axisCount: r.uint16,\n  globalCoordCount: r.uint16,\n  globalCoords: new r.Pointer(r.uint32, new r.Array(new r.Array(shortFrac$1, 'axisCount'), 'globalCoordCount')),\n  glyphCount: r.uint16,\n  flags: r.uint16,\n  offsetToData: r.uint32,\n  offsets: new r.Array(new r.Pointer(Offset, 'void', { relativeTo: 'offsetToData', allowNull: false }), function (t) {\n    return t.glyphCount + 1;\n  })\n});\n\nvar ClassTable$1 = new r.Struct({\n  length: r.uint16,\n  coverage: r.uint16,\n  subFeatureFlags: r.uint32,\n  stateTable: new StateTable1()\n});\n\nvar WidthDeltaRecord = new r.Struct({\n  justClass: r.uint32,\n  beforeGrowLimit: r.fixed32,\n  beforeShrinkLimit: r.fixed32,\n  afterGrowLimit: r.fixed32,\n  afterShrinkLimit: r.fixed32,\n  growFlags: r.uint16,\n  shrinkFlags: r.uint16\n});\n\nvar WidthDeltaCluster = new r.Array(WidthDeltaRecord, r.uint32);\n\nvar ActionData = new r.VersionedStruct('actionType', {\n  0: { // Decomposition action\n    lowerLimit: r.fixed32,\n    upperLimit: r.fixed32,\n    order: r.uint16,\n    glyphs: new r.Array(r.uint16, r.uint16)\n  },\n\n  1: { // Unconditional add glyph action\n    addGlyph: r.uint16\n  },\n\n  2: { // Conditional add glyph action\n    substThreshold: r.fixed32,\n    addGlyph: r.uint16,\n    substGlyph: r.uint16\n  },\n\n  3: {}, // Stretch glyph action (no data, not supported by CoreText)\n\n  4: { // Ductile glyph action (not supported by CoreText)\n    variationAxis: r.uint32,\n    minimumLimit: r.fixed32,\n    noStretchValue: r.fixed32,\n    maximumLimit: r.fixed32\n  },\n\n  5: { // Repeated add glyph action\n    flags: r.uint16,\n    glyph: r.uint16\n  }\n});\n\nvar Action = new r.Struct({\n  actionClass: r.uint16,\n  actionType: r.uint16,\n  actionLength: r.uint32,\n  actionData: ActionData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.actionLength - t._currentOffset;\n  })\n});\n\nvar PostcompensationAction = new r.Array(Action, r.uint32);\nvar PostCompensationTable = new r.Struct({\n  lookupTable: new LookupTable(new r.Pointer(r.uint16, PostcompensationAction))\n});\n\nvar JustificationTable = new r.Struct({\n  classTable: new r.Pointer(r.uint16, ClassTable$1, { type: 'parent' }),\n  wdcOffset: r.uint16,\n  postCompensationTable: new r.Pointer(r.uint16, PostCompensationTable, { type: 'parent' }),\n  widthDeltaClusters: new LookupTable(new r.Pointer(r.uint16, WidthDeltaCluster, { type: 'parent', relativeTo: 'wdcOffset' }))\n});\n\nvar just = new r.Struct({\n  version: r.uint32,\n  format: r.uint16,\n  horizontal: new r.Pointer(r.uint16, JustificationTable),\n  vertical: new r.Pointer(r.uint16, JustificationTable)\n});\n\nvar LigatureData = {\n  action: r.uint16\n};\n\nvar ContextualData = {\n  markIndex: r.uint16,\n  currentIndex: r.uint16\n};\n\nvar InsertionData = {\n  currentInsertIndex: r.uint16,\n  markedInsertIndex: r.uint16\n};\n\nvar SubstitutionTable = new r.Struct({\n  items: new UnboundedArray(new r.Pointer(r.uint32, new LookupTable()))\n});\n\nvar SubtableData = new r.VersionedStruct('type', {\n  0: { // Indic Rearrangement Subtable\n    stateTable: new StateTable()\n  },\n\n  1: { // Contextual Glyph Substitution Subtable\n    stateTable: new StateTable(ContextualData),\n    substitutionTable: new r.Pointer(r.uint32, SubstitutionTable)\n  },\n\n  2: { // Ligature subtable\n    stateTable: new StateTable(LigatureData),\n    ligatureActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint32)),\n    components: new r.Pointer(r.uint32, new UnboundedArray(r.uint16)),\n    ligatureList: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  },\n\n  4: { // Non-contextual Glyph Substitution Subtable\n    lookupTable: new LookupTable()\n  },\n\n  5: { // Glyph Insertion Subtable\n    stateTable: new StateTable(InsertionData),\n    insertionActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  }\n});\n\nvar Subtable = new r.Struct({\n  length: r.uint32,\n  coverage: r.uint24,\n  type: r.uint8,\n  subFeatureFlags: r.uint32,\n  table: SubtableData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.length - t._currentOffset;\n  })\n});\n\nvar FeatureEntry = new r.Struct({\n  featureType: r.uint16,\n  featureSetting: r.uint16,\n  enableFlags: r.uint32,\n  disableFlags: r.uint32\n});\n\nvar MorxChain = new r.Struct({\n  defaultFlags: r.uint32,\n  chainLength: r.uint32,\n  nFeatureEntries: r.uint32,\n  nSubtables: r.uint32,\n  features: new r.Array(FeatureEntry, 'nFeatureEntries'),\n  subtables: new r.Array(Subtable, 'nSubtables')\n});\n\nvar morx = new r.Struct({\n  version: r.uint16,\n  unused: new r.Reserved(r.uint16),\n  nChains: r.uint32,\n  chains: new r.Array(MorxChain, 'nChains')\n});\n\nvar OpticalBounds = new r.Struct({\n  left: r.int16,\n  top: r.int16,\n  right: r.int16,\n  bottom: r.int16\n});\n\nvar opbd = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  lookupTable: new LookupTable(OpticalBounds)\n});\n\nvar tables = {};\n// Required Tables\ntables.cmap = cmap;\ntables.head = head;\ntables.hhea = hhea;\ntables.hmtx = hmtx;\ntables.maxp = maxp;\ntables.name = NameTable;\ntables['OS/2'] = OS2;\ntables.post = post;\n\n// TrueType Outlines\ntables.fpgm = fpgm;\ntables.loca = loca;\ntables.prep = prep;\ntables['cvt '] = cvt;\ntables.glyf = glyf;\n\n// PostScript Outlines\ntables['CFF '] = CFFFont;\ntables['CFF2'] = CFFFont;\ntables.VORG = VORG;\n\n// Bitmap Glyphs\ntables.EBLC = EBLC;\ntables.CBLC = tables.EBLC;\ntables.sbix = sbix;\ntables.COLR = COLR;\ntables.CPAL = CPAL;\n\n// Advanced OpenType Tables\ntables.BASE = BASE;\ntables.GDEF = GDEF;\ntables.GPOS = GPOS;\ntables.GSUB = GSUB;\ntables.JSTF = JSTF;\n\n// OpenType variations tables\ntables.HVAR = HVAR;\n\n// Other OpenType Tables\ntables.DSIG = DSIG;\ntables.gasp = gasp;\ntables.hdmx = hdmx;\ntables.kern = kern;\ntables.LTSH = LTSH;\ntables.PCLT = PCLT;\ntables.VDMX = VDMX;\ntables.vhea = vhea;\ntables.vmtx = vmtx;\n\n// Apple Advanced Typography Tables\ntables.avar = avar;\ntables.bsln = bsln;\ntables.feat = feat;\ntables.fvar = fvar;\ntables.gvar = gvar;\ntables.just = just;\ntables.morx = morx;\ntables.opbd = opbd;\n\nvar TableEntry = new r.Struct({\n  tag: new r.String(4),\n  checkSum: r.uint32,\n  offset: new r.Pointer(r.uint32, 'void', { type: 'global' }),\n  length: r.uint32\n});\n\nvar Directory = new r.Struct({\n  tag: new r.String(4),\n  numTables: r.uint16,\n  searchRange: r.uint16,\n  entrySelector: r.uint16,\n  rangeShift: r.uint16,\n  tables: new r.Array(TableEntry, 'numTables')\n});\n\nDirectory.process = function () {\n  var tables$$1 = {};\n  for (var _iterator = this.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var table = _ref;\n\n    tables$$1[table.tag] = table;\n  }\n\n  this.tables = tables$$1;\n};\n\nDirectory.preEncode = function (stream) {\n  var tables$$1 = [];\n  for (var tag in this.tables) {\n    var table = this.tables[tag];\n    if (table) {\n      tables$$1.push({\n        tag: tag,\n        checkSum: 0,\n        offset: new r.VoidPointer(tables[tag], table),\n        length: tables[tag].size(table)\n      });\n    }\n  }\n\n  this.tag = 'true';\n  this.numTables = tables$$1.length;\n  this.tables = tables$$1;\n\n  this.searchRange = Math.floor(Math.log(this.numTables) / Math.LN2) * 16;\n  this.entrySelector = Math.floor(this.searchRange / Math.LN2);\n  this.rangeShift = this.numTables * 16 - this.searchRange;\n};\n\nfunction binarySearch(arr, cmp) {\n  var min = 0;\n  var max = arr.length - 1;\n  while (min <= max) {\n    var mid = min + max >> 1;\n    var res = cmp(arr[mid]);\n\n    if (res < 0) {\n      max = mid - 1;\n    } else if (res > 0) {\n      min = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n}\n\nfunction range(index, end) {\n  var range = [];\n  while (index < end) {\n    range.push(index++);\n  }\n  return range;\n}\n\nvar _class$1;\n\nfunction _applyDecoratedDescriptor$1(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n// iconv-lite is an optional dependency.\ntry {\n  var iconv = require('iconv-lite');\n} catch (err) {}\n\nvar CmapProcessor = (_class$1 = function () {\n  function CmapProcessor(cmapTable) {\n    classCallCheck(this, CmapProcessor);\n\n    // Attempt to find a Unicode cmap first\n    this.encoding = null;\n    this.cmap = this.findSubtable(cmapTable, [\n    // 32-bit subtables\n    [3, 10], [0, 6], [0, 4],\n\n    // 16-bit subtables\n    [3, 1], [0, 3], [0, 2], [0, 1], [0, 0]]);\n\n    // If not unicode cmap was found, and iconv-lite is installed,\n    // take the first table with a supported encoding.\n    if (!this.cmap && iconv) {\n      for (var _iterator = cmapTable.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var cmap = _ref;\n\n        var encoding = getEncoding(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n        if (iconv.encodingExists(encoding)) {\n          this.cmap = cmap.table;\n          this.encoding = encoding;\n        }\n      }\n    }\n\n    if (!this.cmap) {\n      throw new Error(\"Could not find a supported cmap table\");\n    }\n\n    this.uvs = this.findSubtable(cmapTable, [[0, 5]]);\n    if (this.uvs && this.uvs.version !== 14) {\n      this.uvs = null;\n    }\n  }\n\n  CmapProcessor.prototype.findSubtable = function findSubtable(cmapTable, pairs) {\n    for (var _iterator2 = pairs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var _ref3 = _ref2,\n          platformID = _ref3[0],\n          encodingID = _ref3[1];\n\n      for (var _iterator3 = cmapTable.tables, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref4;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref4 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref4 = _i3.value;\n        }\n\n        var cmap = _ref4;\n\n        if (cmap.platformID === platformID && cmap.encodingID === encodingID) {\n          return cmap.table;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  CmapProcessor.prototype.lookup = function lookup(codepoint, variationSelector) {\n    // If there is no Unicode cmap in this font, we need to re-encode\n    // the codepoint in the encoding that the cmap supports.\n    if (this.encoding) {\n      var buf = iconv.encode(String.fromCodePoint(codepoint), this.encoding);\n      codepoint = 0;\n      for (var i = 0; i < buf.length; i++) {\n        codepoint = codepoint << 8 | buf[i];\n      }\n\n      // Otherwise, try to get a Unicode variation selector for this codepoint if one is provided.\n    } else if (variationSelector) {\n      var gid = this.getVariationSelector(codepoint, variationSelector);\n      if (gid) {\n        return gid;\n      }\n    }\n\n    var cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        return cmap.codeMap.get(codepoint) || 0;\n\n      case 4:\n        {\n          var min = 0;\n          var max = cmap.segCount - 1;\n          while (min <= max) {\n            var mid = min + max >> 1;\n\n            if (codepoint < cmap.startCode.get(mid)) {\n              max = mid - 1;\n            } else if (codepoint > cmap.endCode.get(mid)) {\n              min = mid + 1;\n            } else {\n              var rangeOffset = cmap.idRangeOffset.get(mid);\n              var _gid = void 0;\n\n              if (rangeOffset === 0) {\n                _gid = codepoint + cmap.idDelta.get(mid);\n              } else {\n                var index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n                _gid = cmap.glyphIndexArray.get(index) || 0;\n                if (_gid !== 0) {\n                  _gid += cmap.idDelta.get(mid);\n                }\n              }\n\n              return _gid & 0xffff;\n            }\n          }\n\n          return 0;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n\n      case 12:\n      case 13:\n        {\n          var _min = 0;\n          var _max = cmap.nGroups - 1;\n          while (_min <= _max) {\n            var _mid = _min + _max >> 1;\n            var group = cmap.groups.get(_mid);\n\n            if (codepoint < group.startCharCode) {\n              _max = _mid - 1;\n            } else if (codepoint > group.endCharCode) {\n              _min = _mid + 1;\n            } else {\n              if (cmap.version === 12) {\n                return group.glyphID + (codepoint - group.startCharCode);\n              } else {\n                return group.glyphID;\n              }\n            }\n          }\n\n          return 0;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error('Unknown cmap format ' + cmap.version);\n    }\n  };\n\n  CmapProcessor.prototype.getVariationSelector = function getVariationSelector(codepoint, variationSelector) {\n    if (!this.uvs) {\n      return 0;\n    }\n\n    var selectors = this.uvs.varSelectors.toArray();\n    var i = binarySearch(selectors, function (x) {\n      return variationSelector - x.varSelector;\n    });\n    var sel = selectors[i];\n\n    if (i !== -1 && sel.defaultUVS) {\n      i = binarySearch(sel.defaultUVS, function (x) {\n        return codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? +1 : 0;\n      });\n    }\n\n    if (i !== -1 && sel.nonDefaultUVS) {\n      i = binarySearch(sel.nonDefaultUVS, function (x) {\n        return codepoint - x.unicodeValue;\n      });\n      if (i !== -1) {\n        return sel.nonDefaultUVS[i].glyphID;\n      }\n    }\n\n    return 0;\n  };\n\n  CmapProcessor.prototype.getCharacterSet = function getCharacterSet() {\n    var cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        return range(0, cmap.codeMap.length);\n\n      case 4:\n        {\n          var res = [];\n          var endCodes = cmap.endCode.toArray();\n          for (var i = 0; i < endCodes.length; i++) {\n            var tail = endCodes[i] + 1;\n            var start = cmap.startCode.get(i);\n            res.push.apply(res, range(start, tail));\n          }\n\n          return res;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return range(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n\n      case 12:\n      case 13:\n        {\n          var _res = [];\n          for (var _iterator4 = cmap.groups.toArray(), _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n            var _ref5;\n\n            if (_isArray4) {\n              if (_i4 >= _iterator4.length) break;\n              _ref5 = _iterator4[_i4++];\n            } else {\n              _i4 = _iterator4.next();\n              if (_i4.done) break;\n              _ref5 = _i4.value;\n            }\n\n            var group = _ref5;\n\n            _res.push.apply(_res, range(group.startCharCode, group.endCharCode + 1));\n          }\n\n          return _res;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error('Unknown cmap format ' + cmap.version);\n    }\n  };\n\n  CmapProcessor.prototype.codePointsForGlyph = function codePointsForGlyph(gid) {\n    var cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        {\n          var res = [];\n          for (var i = 0; i < 256; i++) {\n            if (cmap.codeMap.get(i) === gid) {\n              res.push(i);\n            }\n          }\n\n          return res;\n        }\n\n      case 4:\n        {\n          var _res2 = [];\n          for (var _i5 = 0; _i5 < cmap.segCount; _i5++) {\n            var end = cmap.endCode.get(_i5);\n            var start = cmap.startCode.get(_i5);\n            var rangeOffset = cmap.idRangeOffset.get(_i5);\n            var delta = cmap.idDelta.get(_i5);\n\n            for (var c = start; c <= end; c++) {\n              var g = 0;\n              if (rangeOffset === 0) {\n                g = c + delta;\n              } else {\n                var index = rangeOffset / 2 + (c - start) - (cmap.segCount - _i5);\n                g = cmap.glyphIndexArray.get(index) || 0;\n                if (g !== 0) {\n                  g += delta;\n                }\n              }\n\n              if (g === gid) {\n                _res2.push(c);\n              }\n            }\n          }\n\n          return _res2;\n        }\n\n      case 12:\n        {\n          var _res3 = [];\n          for (var _iterator5 = cmap.groups.toArray(), _isArray5 = Array.isArray(_iterator5), _i6 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n            var _ref6;\n\n            if (_isArray5) {\n              if (_i6 >= _iterator5.length) break;\n              _ref6 = _iterator5[_i6++];\n            } else {\n              _i6 = _iterator5.next();\n              if (_i6.done) break;\n              _ref6 = _i6.value;\n            }\n\n            var group = _ref6;\n\n            if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) {\n              _res3.push(group.startCharCode + (gid - group.glyphID));\n            }\n          }\n\n          return _res3;\n        }\n\n      case 13:\n        {\n          var _res4 = [];\n          for (var _iterator6 = cmap.groups.toArray(), _isArray6 = Array.isArray(_iterator6), _i7 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n            var _ref7;\n\n            if (_isArray6) {\n              if (_i7 >= _iterator6.length) break;\n              _ref7 = _iterator6[_i7++];\n            } else {\n              _i7 = _iterator6.next();\n              if (_i7.done) break;\n              _ref7 = _i7.value;\n            }\n\n            var _group = _ref7;\n\n            if (gid === _group.glyphID) {\n              _res4.push.apply(_res4, range(_group.startCharCode, _group.endCharCode + 1));\n            }\n          }\n\n          return _res4;\n        }\n\n      default:\n        throw new Error('Unknown cmap format ' + cmap.version);\n    }\n  };\n\n  return CmapProcessor;\n}(), _applyDecoratedDescriptor$1(_class$1.prototype, 'getCharacterSet', [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, 'getCharacterSet'), _class$1.prototype), _applyDecoratedDescriptor$1(_class$1.prototype, 'codePointsForGlyph', [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, 'codePointsForGlyph'), _class$1.prototype), _class$1);\n\nvar KernProcessor = function () {\n  function KernProcessor(font) {\n    classCallCheck(this, KernProcessor);\n\n    this.kern = font.kern;\n  }\n\n  KernProcessor.prototype.process = function process(glyphs, positions) {\n    for (var glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++) {\n      var left = glyphs[glyphIndex].id;\n      var right = glyphs[glyphIndex + 1].id;\n      positions[glyphIndex].xAdvance += this.getKerning(left, right);\n    }\n  };\n\n  KernProcessor.prototype.getKerning = function getKerning(left, right) {\n    var res = 0;\n\n    for (var _iterator = this.kern.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var table = _ref;\n\n      if (table.coverage.crossStream) {\n        continue;\n      }\n\n      switch (table.version) {\n        case 0:\n          if (!table.coverage.horizontal) {\n            continue;\n          }\n\n          break;\n        case 1:\n          if (table.coverage.vertical || table.coverage.variation) {\n            continue;\n          }\n\n          break;\n        default:\n          throw new Error('Unsupported kerning table version ' + table.version);\n      }\n\n      var val = 0;\n      var s = table.subtable;\n      switch (table.format) {\n        case 0:\n          var pairIdx = binarySearch(s.pairs, function (pair) {\n            return left - pair.left || right - pair.right;\n          });\n\n          if (pairIdx >= 0) {\n            val = s.pairs[pairIdx].value;\n          }\n\n          break;\n\n        case 2:\n          var leftOffset = 0,\n              rightOffset = 0;\n          if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) {\n            leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n          } else {\n            leftOffset = s.array.off;\n          }\n\n          if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) {\n            rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n          }\n\n          var index = (leftOffset + rightOffset - s.array.off) / 2;\n          val = s.array.values.get(index);\n          break;\n\n        case 3:\n          if (left >= s.glyphCount || right >= s.glyphCount) {\n            return 0;\n          }\n\n          val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n          break;\n\n        default:\n          throw new Error('Unsupported kerning sub-table format ' + table.format);\n      }\n\n      // Microsoft supports the override flag, which resets the result\n      // Otherwise, the sum of the results from all subtables is returned\n      if (table.coverage.override) {\n        res = val;\n      } else {\n        res += val;\n      }\n    }\n\n    return res;\n  };\n\n  return KernProcessor;\n}();\n\n/**\n * This class is used when GPOS does not define 'mark' or 'mkmk' features\n * for positioning marks relative to base glyphs. It uses the unicode\n * combining class property to position marks.\n *\n * Based on code from Harfbuzz, thanks!\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-fallback.cc\n */\n\nvar UnicodeLayoutEngine = function () {\n  function UnicodeLayoutEngine(font) {\n    classCallCheck(this, UnicodeLayoutEngine);\n\n    this.font = font;\n  }\n\n  UnicodeLayoutEngine.prototype.positionGlyphs = function positionGlyphs(glyphs, positions) {\n    // find each base + mark cluster, and position the marks relative to the base\n    var clusterStart = 0;\n    var clusterEnd = 0;\n    for (var index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n      if (glyph.isMark) {\n        // TODO: handle ligatures\n        clusterEnd = index;\n      } else {\n        if (clusterStart !== clusterEnd) {\n          this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        }\n\n        clusterStart = clusterEnd = index;\n      }\n    }\n\n    if (clusterStart !== clusterEnd) {\n      this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n    }\n\n    return positions;\n  };\n\n  UnicodeLayoutEngine.prototype.positionCluster = function positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n    var base = glyphs[clusterStart];\n    var baseBox = base.cbox.copy();\n\n    // adjust bounding box for ligature glyphs\n    if (base.codePoints.length > 1) {\n      // LTR. TODO: RTL support.\n      baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;\n    }\n\n    var xOffset = -positions[clusterStart].xAdvance;\n    var yOffset = 0;\n    var yGap = this.font.unitsPerEm / 16;\n\n    // position each of the mark glyphs relative to the base glyph\n    for (var index = clusterStart + 1; index <= clusterEnd; index++) {\n      var mark = glyphs[index];\n      var markBox = mark.cbox;\n      var position = positions[index];\n\n      var combiningClass = this.getCombiningClass(mark.codePoints[0]);\n\n      if (combiningClass !== 'Not_Reordered') {\n        position.xOffset = position.yOffset = 0;\n\n        // x positioning\n        switch (combiningClass) {\n          case 'Double_Above':\n          case 'Double_Below':\n            // LTR. TODO: RTL support.\n            position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n            break;\n\n          case 'Attached_Below_Left':\n          case 'Below_Left':\n          case 'Above_Left':\n            // left align\n            position.xOffset += baseBox.minX - markBox.minX;\n            break;\n\n          case 'Attached_Above_Right':\n          case 'Below_Right':\n          case 'Above_Right':\n            // right align\n            position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n            break;\n\n          default:\n            // Attached_Below, Attached_Above, Below, Above, other\n            // center align\n            position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n        }\n\n        // y positioning\n        switch (combiningClass) {\n          case 'Double_Below':\n          case 'Below_Left':\n          case 'Below':\n          case 'Below_Right':\n          case 'Attached_Below_Left':\n          case 'Attached_Below':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Below_Left' || combiningClass === 'Attached_Below') {\n              baseBox.minY += yGap;\n            }\n\n            position.yOffset = -baseBox.minY - markBox.maxY;\n            baseBox.minY += markBox.height;\n            break;\n\n          case 'Double_Above':\n          case 'Above_Left':\n          case 'Above':\n          case 'Above_Right':\n          case 'Attached_Above':\n          case 'Attached_Above_Right':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Above' || combiningClass === 'Attached_Above_Right') {\n              baseBox.maxY += yGap;\n            }\n\n            position.yOffset = baseBox.maxY - markBox.minY;\n            baseBox.maxY += markBox.height;\n            break;\n        }\n\n        position.xAdvance = position.yAdvance = 0;\n        position.xOffset += xOffset;\n        position.yOffset += yOffset;\n      } else {\n        xOffset -= position.xAdvance;\n        yOffset -= position.yAdvance;\n      }\n    }\n\n    return;\n  };\n\n  UnicodeLayoutEngine.prototype.getCombiningClass = function getCombiningClass(codePoint) {\n    var combiningClass = unicode.getCombiningClass(codePoint);\n\n    // Thai / Lao need some per-character work\n    if ((codePoint & ~0xff) === 0x0e00) {\n      if (combiningClass === 'Not_Reordered') {\n        switch (codePoint) {\n          case 0x0e31:\n          case 0x0e34:\n          case 0x0e35:\n          case 0x0e36:\n          case 0x0e37:\n          case 0x0e47:\n          case 0x0e4c:\n          case 0x0e3d:\n          case 0x0e4e:\n            return 'Above_Right';\n\n          case 0x0eb1:\n          case 0x0eb4:\n          case 0x0eb5:\n          case 0x0eb6:\n          case 0x0eb7:\n          case 0x0ebb:\n          case 0x0ecc:\n          case 0x0ecd:\n            return 'Above';\n\n          case 0x0ebc:\n            return 'Below';\n        }\n      } else if (codePoint === 0x0e3a) {\n        // virama\n        return 'Below_Right';\n      }\n    }\n\n    switch (combiningClass) {\n      // Hebrew\n\n      case 'CCC10': // sheva\n      case 'CCC11': // hataf segol\n      case 'CCC12': // hataf patah\n      case 'CCC13': // hataf qamats\n      case 'CCC14': // hiriq\n      case 'CCC15': // tsere\n      case 'CCC16': // segol\n      case 'CCC17': // patah\n      case 'CCC18': // qamats\n      case 'CCC20': // qubuts\n      case 'CCC22':\n        // meteg\n        return 'Below';\n\n      case 'CCC23':\n        // rafe\n        return 'Attached_Above';\n\n      case 'CCC24':\n        // shin dot\n        return 'Above_Right';\n\n      case 'CCC25': // sin dot\n      case 'CCC19':\n        // holam\n        return 'Above_Left';\n\n      case 'CCC26':\n        // point varika\n        return 'Above';\n\n      case 'CCC21':\n        // dagesh\n        break;\n\n      // Arabic and Syriac\n\n      case 'CCC27': // fathatan\n      case 'CCC28': // dammatan\n      case 'CCC30': // fatha\n      case 'CCC31': // damma\n      case 'CCC33': // shadda\n      case 'CCC34': // sukun\n      case 'CCC35': // superscript alef\n      case 'CCC36':\n        // superscript alaph\n        return 'Above';\n\n      case 'CCC29': // kasratan\n      case 'CCC32':\n        // kasra\n        return 'Below';\n\n      // Thai\n\n      case 'CCC103':\n        // sara u / sara uu\n        return 'Below_Right';\n\n      case 'CCC107':\n        // mai\n        return 'Above_Right';\n\n      // Lao\n\n      case 'CCC118':\n        // sign u / sign uu\n        return 'Below';\n\n      case 'CCC122':\n        // mai\n        return 'Above';\n\n      // Tibetan\n\n      case 'CCC129': // sign aa\n      case 'CCC132':\n        // sign u\n        return 'Below';\n\n      case 'CCC130':\n        // sign i\n        return 'Above';\n    }\n\n    return combiningClass;\n  };\n\n  return UnicodeLayoutEngine;\n}();\n\n/**\n * Represents a glyph bounding box\n */\nvar BBox = function () {\n  function BBox() {\n    var minX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Infinity;\n    var minY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n    var maxX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -Infinity;\n    var maxY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -Infinity;\n    classCallCheck(this, BBox);\n\n    /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * The width of the bounding box\n   * @type {number}\n   */\n\n\n  BBox.prototype.addPoint = function addPoint(x, y) {\n    if (Math.abs(x) !== Infinity) {\n      if (x < this.minX) {\n        this.minX = x;\n      }\n\n      if (x > this.maxX) {\n        this.maxX = x;\n      }\n    }\n\n    if (Math.abs(y) !== Infinity) {\n      if (y < this.minY) {\n        this.minY = y;\n      }\n\n      if (y > this.maxY) {\n        this.maxY = y;\n      }\n    }\n  };\n\n  BBox.prototype.copy = function copy() {\n    return new BBox(this.minX, this.minY, this.maxX, this.maxY);\n  };\n\n  createClass(BBox, [{\n    key: \"width\",\n    get: function get$$1() {\n      return this.maxX - this.minX;\n    }\n\n    /**\n     * The height of the bounding box\n     * @type {number}\n     */\n\n  }, {\n    key: \"height\",\n    get: function get$$1() {\n      return this.maxY - this.minY;\n    }\n  }]);\n  return BBox;\n}();\n\n// This maps the Unicode Script property to an OpenType script tag\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\nvar UNICODE_SCRIPTS = {\n  Caucasian_Albanian: 'aghb',\n  Arabic: 'arab',\n  Imperial_Aramaic: 'armi',\n  Armenian: 'armn',\n  Avestan: 'avst',\n  Balinese: 'bali',\n  Bamum: 'bamu',\n  Bassa_Vah: 'bass',\n  Batak: 'batk',\n  Bengali: ['bng2', 'beng'],\n  Bopomofo: 'bopo',\n  Brahmi: 'brah',\n  Braille: 'brai',\n  Buginese: 'bugi',\n  Buhid: 'buhd',\n  Chakma: 'cakm',\n  Canadian_Aboriginal: 'cans',\n  Carian: 'cari',\n  Cham: 'cham',\n  Cherokee: 'cher',\n  Coptic: 'copt',\n  Cypriot: 'cprt',\n  Cyrillic: 'cyrl',\n  Devanagari: ['dev2', 'deva'],\n  Deseret: 'dsrt',\n  Duployan: 'dupl',\n  Egyptian_Hieroglyphs: 'egyp',\n  Elbasan: 'elba',\n  Ethiopic: 'ethi',\n  Georgian: 'geor',\n  Glagolitic: 'glag',\n  Gothic: 'goth',\n  Grantha: 'gran',\n  Greek: 'grek',\n  Gujarati: ['gjr2', 'gujr'],\n  Gurmukhi: ['gur2', 'guru'],\n  Hangul: 'hang',\n  Han: 'hani',\n  Hanunoo: 'hano',\n  Hebrew: 'hebr',\n  Hiragana: 'hira',\n  Pahawh_Hmong: 'hmng',\n  Katakana_Or_Hiragana: 'hrkt',\n  Old_Italic: 'ital',\n  Javanese: 'java',\n  Kayah_Li: 'kali',\n  Katakana: 'kana',\n  Kharoshthi: 'khar',\n  Khmer: 'khmr',\n  Khojki: 'khoj',\n  Kannada: ['knd2', 'knda'],\n  Kaithi: 'kthi',\n  Tai_Tham: 'lana',\n  Lao: 'lao ',\n  Latin: 'latn',\n  Lepcha: 'lepc',\n  Limbu: 'limb',\n  Linear_A: 'lina',\n  Linear_B: 'linb',\n  Lisu: 'lisu',\n  Lycian: 'lyci',\n  Lydian: 'lydi',\n  Mahajani: 'mahj',\n  Mandaic: 'mand',\n  Manichaean: 'mani',\n  Mende_Kikakui: 'mend',\n  Meroitic_Cursive: 'merc',\n  Meroitic_Hieroglyphs: 'mero',\n  Malayalam: ['mlm2', 'mlym'],\n  Modi: 'modi',\n  Mongolian: 'mong',\n  Mro: 'mroo',\n  Meetei_Mayek: 'mtei',\n  Myanmar: ['mym2', 'mymr'],\n  Old_North_Arabian: 'narb',\n  Nabataean: 'nbat',\n  Nko: 'nko ',\n  Ogham: 'ogam',\n  Ol_Chiki: 'olck',\n  Old_Turkic: 'orkh',\n  Oriya: ['ory2', 'orya'],\n  Osmanya: 'osma',\n  Palmyrene: 'palm',\n  Pau_Cin_Hau: 'pauc',\n  Old_Permic: 'perm',\n  Phags_Pa: 'phag',\n  Inscriptional_Pahlavi: 'phli',\n  Psalter_Pahlavi: 'phlp',\n  Phoenician: 'phnx',\n  Miao: 'plrd',\n  Inscriptional_Parthian: 'prti',\n  Rejang: 'rjng',\n  Runic: 'runr',\n  Samaritan: 'samr',\n  Old_South_Arabian: 'sarb',\n  Saurashtra: 'saur',\n  Shavian: 'shaw',\n  Sharada: 'shrd',\n  Siddham: 'sidd',\n  Khudawadi: 'sind',\n  Sinhala: 'sinh',\n  Sora_Sompeng: 'sora',\n  Sundanese: 'sund',\n  Syloti_Nagri: 'sylo',\n  Syriac: 'syrc',\n  Tagbanwa: 'tagb',\n  Takri: 'takr',\n  Tai_Le: 'tale',\n  New_Tai_Lue: 'talu',\n  Tamil: ['tml2', 'taml'],\n  Tai_Viet: 'tavt',\n  Telugu: ['tel2', 'telu'],\n  Tifinagh: 'tfng',\n  Tagalog: 'tglg',\n  Thaana: 'thaa',\n  Thai: 'thai',\n  Tibetan: 'tibt',\n  Tirhuta: 'tirh',\n  Ugaritic: 'ugar',\n  Vai: 'vai ',\n  Warang_Citi: 'wara',\n  Old_Persian: 'xpeo',\n  Cuneiform: 'xsux',\n  Yi: 'yi  ',\n  Inherited: 'zinh',\n  Common: 'zyyy',\n  Unknown: 'zzzz'\n};\n\nvar OPENTYPE_SCRIPTS = {};\nfor (var script in UNICODE_SCRIPTS) {\n  var tag = UNICODE_SCRIPTS[script];\n  if (Array.isArray(tag)) {\n    for (var _iterator = tag, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var t = _ref;\n\n      OPENTYPE_SCRIPTS[t] = script;\n    }\n  } else {\n    OPENTYPE_SCRIPTS[tag] = script;\n  }\n}\n\n\n\nfunction fromOpenType(tag) {\n  return OPENTYPE_SCRIPTS[tag];\n}\n\nfunction forString(string) {\n  var len = string.length;\n  var idx = 0;\n  while (idx < len) {\n    var code = string.charCodeAt(idx++);\n\n    // Check if this is a high surrogate\n    if (0xd800 <= code && code <= 0xdbff && idx < len) {\n      var next = string.charCodeAt(idx);\n\n      // Check if this is a low surrogate\n      if (0xdc00 <= next && next <= 0xdfff) {\n        idx++;\n        code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n      }\n    }\n\n    var _script = unicode.getScript(code);\n    if (_script !== 'Common' && _script !== 'Inherited' && _script !== 'Unknown') {\n      return UNICODE_SCRIPTS[_script];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n}\n\n\n\n// The scripts in this map are written from right to left\nvar RTL = {\n  arab: true, // Arabic\n  hebr: true, // Hebrew\n  syrc: true, // Syriac\n  thaa: true, // Thaana\n  cprt: true, // Cypriot Syllabary\n  khar: true, // Kharosthi\n  phnx: true, // Phoenician\n  'nko ': true, // N'Ko\n  lydi: true, // Lydian\n  avst: true, // Avestan\n  armi: true, // Imperial Aramaic\n  phli: true, // Inscriptional Pahlavi\n  prti: true, // Inscriptional Parthian\n  sarb: true, // Old South Arabian\n  orkh: true, // Old Turkic, Orkhon Runic\n  samr: true, // Samaritan\n  mand: true, // Mandaic, Mandaean\n  merc: true, // Meroitic Cursive\n  mero: true, // Meroitic Hieroglyphs\n\n  // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n  mani: true, // Manichaean\n  mend: true, // Mende Kikakui\n  nbat: true, // Nabataean\n  narb: true, // Old North Arabian\n  palm: true, // Palmyrene\n  phlp: true // Psalter Pahlavi\n};\n\nfunction direction(script) {\n  if (RTL[script]) {\n    return 'rtl';\n  }\n\n  return 'ltr';\n}\n\n/**\n * Represents a run of Glyph and GlyphPosition objects.\n * Returned by the font layout method.\n */\n\nvar GlyphRun = function () {\n  function GlyphRun(glyphs, features, script, language, direction$$1) {\n    classCallCheck(this, GlyphRun);\n\n    /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */\n    this.glyphs = glyphs;\n\n    /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */\n    this.positions = null;\n\n    /**\n     * An array of indices to indices in the input string for each glyph\n     * @type {number[]}\n     */\n    this.stringIndices = null;\n\n    /**\n     * The script that was requested for shaping. This was either passed in or detected automatically.\n     * @type {string}\n     */\n    this.script = script;\n\n    /**\n     * The language requested for shaping, as passed in. If `null`, the default language for the\n     * script was used.\n     * @type {string}\n     */\n    this.language = language || null;\n\n    /**\n     * The direction requested for shaping, as passed in (either ltr or rtl).\n     * If `null`, the default direction of the script is used.\n     * @type {string}\n     */\n    this.direction = direction$$1 || direction(script);\n\n    /**\n     * The features requested during shaping. This is a combination of user\n     * specified features and features chosen by the shaper.\n     * @type {object}\n     */\n    this.features = {};\n\n    // Convert features to an object\n    if (Array.isArray(features)) {\n      for (var _iterator = features, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var tag = _ref;\n\n        this.features[tag] = true;\n      }\n    } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n      this.features = features;\n    }\n  }\n\n  /**\n   * The total advance width of the run.\n   * @type {number}\n   */\n\n\n  createClass(GlyphRun, [{\n    key: 'advanceWidth',\n    get: function get$$1() {\n      var width = 0;\n      for (var _iterator2 = this.positions, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var position = _ref2;\n\n        width += position.xAdvance;\n      }\n\n      return width;\n    }\n\n    /**\n     * The total advance height of the run.\n     * @type {number}\n     */\n\n  }, {\n    key: 'advanceHeight',\n    get: function get$$1() {\n      var height = 0;\n      for (var _iterator3 = this.positions, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var position = _ref3;\n\n        height += position.yAdvance;\n      }\n\n      return height;\n    }\n\n    /**\n     * The bounding box containing all glyphs in the run.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      var bbox = new BBox();\n\n      var x = 0;\n      var y = 0;\n      for (var index = 0; index < this.glyphs.length; index++) {\n        var glyph = this.glyphs[index];\n        var p = this.positions[index];\n        var b = glyph.bbox;\n\n        bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n        bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n\n        x += p.xAdvance;\n        y += p.yAdvance;\n      }\n\n      return bbox;\n    }\n  }]);\n  return GlyphRun;\n}();\n\n/**\n * Represents positioning information for a glyph in a GlyphRun.\n */\nvar GlyphPosition = function GlyphPosition() {\n  var xAdvance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var yAdvance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var xOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var yOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  classCallCheck(this, GlyphPosition);\n\n  /**\n   * The amount to move the virtual pen in the X direction after rendering this glyph.\n   * @type {number}\n   */\n  this.xAdvance = xAdvance;\n\n  /**\n   * The amount to move the virtual pen in the Y direction after rendering this glyph.\n   * @type {number}\n   */\n  this.yAdvance = yAdvance;\n\n  /**\n   * The offset from the pen position in the X direction at which to render this glyph.\n   * @type {number}\n   */\n  this.xOffset = xOffset;\n\n  /**\n   * The offset from the pen position in the Y direction at which to render this glyph.\n   * @type {number}\n   */\n  this.yOffset = yOffset;\n};\n\n// see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\nvar features = {\n  allTypographicFeatures: {\n    code: 0,\n    exclusive: false,\n    allTypeFeatures: 0\n  },\n  ligatures: {\n    code: 1,\n    exclusive: false,\n    requiredLigatures: 0,\n    commonLigatures: 2,\n    rareLigatures: 4,\n    // logos: 6\n    rebusPictures: 8,\n    diphthongLigatures: 10,\n    squaredLigatures: 12,\n    abbrevSquaredLigatures: 14,\n    symbolLigatures: 16,\n    contextualLigatures: 18,\n    historicalLigatures: 20\n  },\n  cursiveConnection: {\n    code: 2,\n    exclusive: true,\n    unconnected: 0,\n    partiallyConnected: 1,\n    cursive: 2\n  },\n  letterCase: {\n    code: 3,\n    exclusive: true\n  },\n  // upperAndLowerCase: 0          # deprecated\n  // allCaps: 1                    # deprecated\n  // allLowerCase: 2               # deprecated\n  // smallCaps: 3                  # deprecated\n  // initialCaps: 4                # deprecated\n  // initialCapsAndSmallCaps: 5    # deprecated\n  verticalSubstitution: {\n    code: 4,\n    exclusive: false,\n    substituteVerticalForms: 0\n  },\n  linguisticRearrangement: {\n    code: 5,\n    exclusive: false,\n    linguisticRearrangement: 0\n  },\n  numberSpacing: {\n    code: 6,\n    exclusive: true,\n    monospacedNumbers: 0,\n    proportionalNumbers: 1,\n    thirdWidthNumbers: 2,\n    quarterWidthNumbers: 3\n  },\n  smartSwash: {\n    code: 8,\n    exclusive: false,\n    wordInitialSwashes: 0,\n    wordFinalSwashes: 2,\n    // lineInitialSwashes: 4\n    // lineFinalSwashes: 6\n    nonFinalSwashes: 8\n  },\n  diacritics: {\n    code: 9,\n    exclusive: true,\n    showDiacritics: 0,\n    hideDiacritics: 1,\n    decomposeDiacritics: 2\n  },\n  verticalPosition: {\n    code: 10,\n    exclusive: true,\n    normalPosition: 0,\n    superiors: 1,\n    inferiors: 2,\n    ordinals: 3,\n    scientificInferiors: 4\n  },\n  fractions: {\n    code: 11,\n    exclusive: true,\n    noFractions: 0,\n    verticalFractions: 1,\n    diagonalFractions: 2\n  },\n  overlappingCharacters: {\n    code: 13,\n    exclusive: false,\n    preventOverlap: 0\n  },\n  typographicExtras: {\n    code: 14,\n    exclusive: false,\n    // hyphensToEmDash: 0\n    // hyphenToEnDash: 2\n    slashedZero: 4\n  },\n  // formInterrobang: 6\n  // smartQuotes: 8\n  // periodsToEllipsis: 10\n  mathematicalExtras: {\n    code: 15,\n    exclusive: false,\n    // hyphenToMinus: 0\n    // asteristoMultiply: 2\n    // slashToDivide: 4\n    // inequalityLigatures: 6\n    // exponents: 8\n    mathematicalGreek: 10\n  },\n  ornamentSets: {\n    code: 16,\n    exclusive: true,\n    noOrnaments: 0,\n    dingbats: 1,\n    piCharacters: 2,\n    fleurons: 3,\n    decorativeBorders: 4,\n    internationalSymbols: 5,\n    mathSymbols: 6\n  },\n  characterAlternatives: {\n    code: 17,\n    exclusive: true,\n    noAlternates: 0\n  },\n  // user defined options\n  designComplexity: {\n    code: 18,\n    exclusive: true,\n    designLevel1: 0,\n    designLevel2: 1,\n    designLevel3: 2,\n    designLevel4: 3,\n    designLevel5: 4\n  },\n  styleOptions: {\n    code: 19,\n    exclusive: true,\n    noStyleOptions: 0,\n    displayText: 1,\n    engravedText: 2,\n    illuminatedCaps: 3,\n    titlingCaps: 4,\n    tallCaps: 5\n  },\n  characterShape: {\n    code: 20,\n    exclusive: true,\n    traditionalCharacters: 0,\n    simplifiedCharacters: 1,\n    JIS1978Characters: 2,\n    JIS1983Characters: 3,\n    JIS1990Characters: 4,\n    traditionalAltOne: 5,\n    traditionalAltTwo: 6,\n    traditionalAltThree: 7,\n    traditionalAltFour: 8,\n    traditionalAltFive: 9,\n    expertCharacters: 10,\n    JIS2004Characters: 11,\n    hojoCharacters: 12,\n    NLCCharacters: 13,\n    traditionalNamesCharacters: 14\n  },\n  numberCase: {\n    code: 21,\n    exclusive: true,\n    lowerCaseNumbers: 0,\n    upperCaseNumbers: 1\n  },\n  textSpacing: {\n    code: 22,\n    exclusive: true,\n    proportionalText: 0,\n    monospacedText: 1,\n    halfWidthText: 2,\n    thirdWidthText: 3,\n    quarterWidthText: 4,\n    altProportionalText: 5,\n    altHalfWidthText: 6\n  },\n  transliteration: {\n    code: 23,\n    exclusive: true,\n    noTransliteration: 0\n  },\n  // hanjaToHangul: 1\n  // hiraganaToKatakana: 2\n  // katakanaToHiragana: 3\n  // kanaToRomanization: 4\n  // romanizationToHiragana: 5\n  // romanizationToKatakana: 6\n  // hanjaToHangulAltOne: 7\n  // hanjaToHangulAltTwo: 8\n  // hanjaToHangulAltThree: 9\n  annotation: {\n    code: 24,\n    exclusive: true,\n    noAnnotation: 0,\n    boxAnnotation: 1,\n    roundedBoxAnnotation: 2,\n    circleAnnotation: 3,\n    invertedCircleAnnotation: 4,\n    parenthesisAnnotation: 5,\n    periodAnnotation: 6,\n    romanNumeralAnnotation: 7,\n    diamondAnnotation: 8,\n    invertedBoxAnnotation: 9,\n    invertedRoundedBoxAnnotation: 10\n  },\n  kanaSpacing: {\n    code: 25,\n    exclusive: true,\n    fullWidthKana: 0,\n    proportionalKana: 1\n  },\n  ideographicSpacing: {\n    code: 26,\n    exclusive: true,\n    fullWidthIdeographs: 0,\n    proportionalIdeographs: 1,\n    halfWidthIdeographs: 2\n  },\n  unicodeDecomposition: {\n    code: 27,\n    exclusive: false,\n    canonicalComposition: 0,\n    compatibilityComposition: 2,\n    transcodingComposition: 4\n  },\n  rubyKana: {\n    code: 28,\n    exclusive: false,\n    // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n    // rubyKana: 1     # deprecated - use rubyKanaOn instead\n    rubyKana: 2\n  },\n  CJKSymbolAlternatives: {\n    code: 29,\n    exclusive: true,\n    noCJKSymbolAlternatives: 0,\n    CJKSymbolAltOne: 1,\n    CJKSymbolAltTwo: 2,\n    CJKSymbolAltThree: 3,\n    CJKSymbolAltFour: 4,\n    CJKSymbolAltFive: 5\n  },\n  ideographicAlternatives: {\n    code: 30,\n    exclusive: true,\n    noIdeographicAlternatives: 0,\n    ideographicAltOne: 1,\n    ideographicAltTwo: 2,\n    ideographicAltThree: 3,\n    ideographicAltFour: 4,\n    ideographicAltFive: 5\n  },\n  CJKVerticalRomanPlacement: {\n    code: 31,\n    exclusive: true,\n    CJKVerticalRomanCentered: 0,\n    CJKVerticalRomanHBaseline: 1\n  },\n  italicCJKRoman: {\n    code: 32,\n    exclusive: false,\n    // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n    // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n    CJKItalicRoman: 2\n  },\n  caseSensitiveLayout: {\n    code: 33,\n    exclusive: false,\n    caseSensitiveLayout: 0,\n    caseSensitiveSpacing: 2\n  },\n  alternateKana: {\n    code: 34,\n    exclusive: false,\n    alternateHorizKana: 0,\n    alternateVertKana: 2\n  },\n  stylisticAlternatives: {\n    code: 35,\n    exclusive: false,\n    noStylisticAlternates: 0,\n    stylisticAltOne: 2,\n    stylisticAltTwo: 4,\n    stylisticAltThree: 6,\n    stylisticAltFour: 8,\n    stylisticAltFive: 10,\n    stylisticAltSix: 12,\n    stylisticAltSeven: 14,\n    stylisticAltEight: 16,\n    stylisticAltNine: 18,\n    stylisticAltTen: 20,\n    stylisticAltEleven: 22,\n    stylisticAltTwelve: 24,\n    stylisticAltThirteen: 26,\n    stylisticAltFourteen: 28,\n    stylisticAltFifteen: 30,\n    stylisticAltSixteen: 32,\n    stylisticAltSeventeen: 34,\n    stylisticAltEighteen: 36,\n    stylisticAltNineteen: 38,\n    stylisticAltTwenty: 40\n  },\n  contextualAlternates: {\n    code: 36,\n    exclusive: false,\n    contextualAlternates: 0,\n    swashAlternates: 2,\n    contextualSwashAlternates: 4\n  },\n  lowerCase: {\n    code: 37,\n    exclusive: true,\n    defaultLowerCase: 0,\n    lowerCaseSmallCaps: 1,\n    lowerCasePetiteCaps: 2\n  },\n  upperCase: {\n    code: 38,\n    exclusive: true,\n    defaultUpperCase: 0,\n    upperCaseSmallCaps: 1,\n    upperCasePetiteCaps: 2\n  },\n  languageTag: { // indices into ltag table\n    code: 39,\n    exclusive: true\n  },\n  CJKRomanSpacing: {\n    code: 103,\n    exclusive: true,\n    halfWidthCJKRoman: 0,\n    proportionalCJKRoman: 1,\n    defaultCJKRoman: 2,\n    fullWidthCJKRoman: 3\n  }\n};\n\nvar feature = function feature(name, selector) {\n  return [features[name].code, features[name][selector]];\n};\n\nvar OTMapping = {\n  rlig: feature('ligatures', 'requiredLigatures'),\n  clig: feature('ligatures', 'contextualLigatures'),\n  dlig: feature('ligatures', 'rareLigatures'),\n  hlig: feature('ligatures', 'historicalLigatures'),\n  liga: feature('ligatures', 'commonLigatures'),\n  hist: feature('ligatures', 'historicalLigatures'), // ??\n\n  smcp: feature('lowerCase', 'lowerCaseSmallCaps'),\n  pcap: feature('lowerCase', 'lowerCasePetiteCaps'),\n\n  frac: feature('fractions', 'diagonalFractions'),\n  dnom: feature('fractions', 'diagonalFractions'), // ??\n  numr: feature('fractions', 'diagonalFractions'), // ??\n  afrc: feature('fractions', 'verticalFractions'),\n  // aalt\n  // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n  // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n  // unic, vatu, vhal, vjmo, vpal, vrt2\n  // dist -> trak table?\n  // kern, vkrn -> kern table\n  // lfbd + opbd + rtbd -> opbd table?\n  // mark, mkmk -> acnt table?\n  // locl -> languageTag + ltag table\n\n  case: feature('caseSensitiveLayout', 'caseSensitiveLayout'), // also caseSensitiveSpacing\n  ccmp: feature('unicodeDecomposition', 'canonicalComposition'), // compatibilityComposition?\n  cpct: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'), // guess..., probably not given below\n  valt: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  swsh: feature('contextualAlternates', 'swashAlternates'),\n  cswh: feature('contextualAlternates', 'contextualSwashAlternates'),\n  curs: feature('cursiveConnection', 'cursive'), // ??\n  c2pc: feature('upperCase', 'upperCasePetiteCaps'),\n  c2sc: feature('upperCase', 'upperCaseSmallCaps'),\n\n  init: feature('smartSwash', 'wordInitialSwashes'), // ??\n  fin2: feature('smartSwash', 'wordFinalSwashes'), // ??\n  medi: feature('smartSwash', 'nonFinalSwashes'), // ??\n  med2: feature('smartSwash', 'nonFinalSwashes'), // ??\n  fin3: feature('smartSwash', 'wordFinalSwashes'), // ??\n  fina: feature('smartSwash', 'wordFinalSwashes'), // ??\n\n  pkna: feature('kanaSpacing', 'proportionalKana'),\n  half: feature('textSpacing', 'halfWidthText'), // also HalfWidthCJKRoman, HalfWidthIdeographs?\n  halt: feature('textSpacing', 'altHalfWidthText'),\n\n  hkna: feature('alternateKana', 'alternateHorizKana'),\n  vkna: feature('alternateKana', 'alternateVertKana'),\n  // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n\n  ital: feature('italicCJKRoman', 'CJKItalicRoman'),\n  lnum: feature('numberCase', 'upperCaseNumbers'),\n  onum: feature('numberCase', 'lowerCaseNumbers'),\n  mgrk: feature('mathematicalExtras', 'mathematicalGreek'),\n\n  // nalt: not enough info. what type of annotation?\n  // ornm: ditto, which ornament style?\n\n  calt: feature('contextualAlternates', 'contextualAlternates'), // or more?\n  vrt2: feature('verticalSubstitution', 'substituteVerticalForms'), // oh... below?\n  vert: feature('verticalSubstitution', 'substituteVerticalForms'),\n  tnum: feature('numberSpacing', 'monospacedNumbers'),\n  pnum: feature('numberSpacing', 'proportionalNumbers'),\n  sups: feature('verticalPosition', 'superiors'),\n  subs: feature('verticalPosition', 'inferiors'),\n  ordn: feature('verticalPosition', 'ordinals'),\n  pwid: feature('textSpacing', 'proportionalText'),\n  hwid: feature('textSpacing', 'halfWidthText'),\n  qwid: feature('textSpacing', 'quarterWidthText'), // also QuarterWidthNumbers?\n  twid: feature('textSpacing', 'thirdWidthText'), // also ThirdWidthNumbers?\n  fwid: feature('textSpacing', 'proportionalText'), //??\n  palt: feature('textSpacing', 'altProportionalText'),\n  trad: feature('characterShape', 'traditionalCharacters'),\n  smpl: feature('characterShape', 'simplifiedCharacters'),\n  jp78: feature('characterShape', 'JIS1978Characters'),\n  jp83: feature('characterShape', 'JIS1983Characters'),\n  jp90: feature('characterShape', 'JIS1990Characters'),\n  jp04: feature('characterShape', 'JIS2004Characters'),\n  expt: feature('characterShape', 'expertCharacters'),\n  hojo: feature('characterShape', 'hojoCharacters'),\n  nlck: feature('characterShape', 'NLCCharacters'),\n  tnam: feature('characterShape', 'traditionalNamesCharacters'),\n  ruby: feature('rubyKana', 'rubyKana'),\n  titl: feature('styleOptions', 'titlingCaps'),\n  zero: feature('typographicExtras', 'slashedZero'),\n\n  ss01: feature('stylisticAlternatives', 'stylisticAltOne'),\n  ss02: feature('stylisticAlternatives', 'stylisticAltTwo'),\n  ss03: feature('stylisticAlternatives', 'stylisticAltThree'),\n  ss04: feature('stylisticAlternatives', 'stylisticAltFour'),\n  ss05: feature('stylisticAlternatives', 'stylisticAltFive'),\n  ss06: feature('stylisticAlternatives', 'stylisticAltSix'),\n  ss07: feature('stylisticAlternatives', 'stylisticAltSeven'),\n  ss08: feature('stylisticAlternatives', 'stylisticAltEight'),\n  ss09: feature('stylisticAlternatives', 'stylisticAltNine'),\n  ss10: feature('stylisticAlternatives', 'stylisticAltTen'),\n  ss11: feature('stylisticAlternatives', 'stylisticAltEleven'),\n  ss12: feature('stylisticAlternatives', 'stylisticAltTwelve'),\n  ss13: feature('stylisticAlternatives', 'stylisticAltThirteen'),\n  ss14: feature('stylisticAlternatives', 'stylisticAltFourteen'),\n  ss15: feature('stylisticAlternatives', 'stylisticAltFifteen'),\n  ss16: feature('stylisticAlternatives', 'stylisticAltSixteen'),\n  ss17: feature('stylisticAlternatives', 'stylisticAltSeventeen'),\n  ss18: feature('stylisticAlternatives', 'stylisticAltEighteen'),\n  ss19: feature('stylisticAlternatives', 'stylisticAltNineteen'),\n  ss20: feature('stylisticAlternatives', 'stylisticAltTwenty')\n};\n\n// salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n\n// Add cv01-cv99 features\nfor (var i = 1; i <= 99; i++) {\n  OTMapping['cv' + ('00' + i).slice(-2)] = [features.characterAlternatives.code, i];\n}\n\n// create inverse mapping\nvar AATMapping = {};\nfor (var ot in OTMapping) {\n  var aat = OTMapping[ot];\n  if (AATMapping[aat[0]] == null) {\n    AATMapping[aat[0]] = {};\n  }\n\n  AATMapping[aat[0]][aat[1]] = ot;\n}\n\n// Maps an array of OpenType features to AAT features\n// in the form of {featureType:{featureSetting:true}}\nfunction mapOTToAAT(features) {\n  var res = {};\n  for (var k in features) {\n    var r$$1 = void 0;\n    if (r$$1 = OTMapping[k]) {\n      if (res[r$$1[0]] == null) {\n        res[r$$1[0]] = {};\n      }\n\n      res[r$$1[0]][r$$1[1]] = features[k];\n    }\n  }\n\n  return res;\n}\n\n// Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\nfunction mapFeatureStrings(f) {\n  var type = f[0],\n      setting = f[1];\n\n  if (isNaN(type)) {\n    var typeCode = features[type] && features[type].code;\n  } else {\n    var typeCode = type;\n  }\n\n  if (isNaN(setting)) {\n    var settingCode = features[type] && features[type][setting];\n  } else {\n    var settingCode = setting;\n  }\n\n  return [typeCode, settingCode];\n}\n\n// Maps AAT features to an array of OpenType features\n// Supports both arrays in the form of [[featureType, featureSetting]]\n// and objects in the form of {featureType:{featureSetting:true}}\n// featureTypes and featureSettings can be either strings or number codes\nfunction mapAATToOT(features) {\n  var res = {};\n  if (Array.isArray(features)) {\n    for (var k = 0; k < features.length; k++) {\n      var r$$1 = void 0;\n      var f = mapFeatureStrings(features[k]);\n      if (r$$1 = AATMapping[f[0]] && AATMapping[f[0]][f[1]]) {\n        res[r$$1] = true;\n      }\n    }\n  } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n    for (var type in features) {\n      var _feature = features[type];\n      for (var setting in _feature) {\n        var _r = void 0;\n        var _f = mapFeatureStrings([type, setting]);\n        if (_feature[setting] && (_r = AATMapping[_f[0]] && AATMapping[_f[0]][_f[1]])) {\n          res[_r] = true;\n        }\n      }\n    }\n  }\n\n  return Object.keys(res);\n}\n\nvar _class$3;\n\nfunction _applyDecoratedDescriptor$3(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nvar AATLookupTable = (_class$3 = function () {\n  function AATLookupTable(table) {\n    classCallCheck(this, AATLookupTable);\n\n    this.table = table;\n  }\n\n  AATLookupTable.prototype.lookup = function lookup(glyph) {\n    switch (this.table.version) {\n      case 0:\n        // simple array format\n        return this.table.values.getItem(glyph);\n\n      case 2: // segment format\n      case 4:\n        {\n          var min = 0;\n          var max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n            var seg = this.table.segments[mid];\n\n            // special end of search value\n            if (seg.firstGlyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.firstGlyph) {\n              max = mid - 1;\n            } else if (glyph > seg.lastGlyph) {\n              min = mid + 1;\n            } else {\n              if (this.table.version === 2) {\n                return seg.value;\n              } else {\n                return seg.values[glyph - seg.firstGlyph];\n              }\n            }\n          }\n\n          return null;\n        }\n\n      case 6:\n        {\n          // lookup single\n          var _min = 0;\n          var _max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (_min <= _max) {\n            var mid = _min + _max >> 1;\n            var seg = this.table.segments[mid];\n\n            // special end of search value\n            if (seg.glyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.glyph) {\n              _max = mid - 1;\n            } else if (glyph > seg.glyph) {\n              _min = mid + 1;\n            } else {\n              return seg.value;\n            }\n          }\n\n          return null;\n        }\n\n      case 8:\n        // lookup trimmed\n        return this.table.values[glyph - this.table.firstGlyph];\n\n      default:\n        throw new Error('Unknown lookup table format: ' + this.table.version);\n    }\n  };\n\n  AATLookupTable.prototype.glyphsForValue = function glyphsForValue(classValue) {\n    var res = [];\n\n    switch (this.table.version) {\n      case 2: // segment format\n      case 4:\n        {\n          for (var _iterator = this.table.segments, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref = _i.value;\n            }\n\n            var segment = _ref;\n\n            if (this.table.version === 2 && segment.value === classValue) {\n              res.push.apply(res, range(segment.firstGlyph, segment.lastGlyph + 1));\n            } else {\n              for (var index = 0; index < segment.values.length; index++) {\n                if (segment.values[index] === classValue) {\n                  res.push(segment.firstGlyph + index);\n                }\n              }\n            }\n          }\n\n          break;\n        }\n\n      case 6:\n        {\n          // lookup single\n          for (var _iterator2 = this.table.segments, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n            var _ref2;\n\n            if (_isArray2) {\n              if (_i2 >= _iterator2.length) break;\n              _ref2 = _iterator2[_i2++];\n            } else {\n              _i2 = _iterator2.next();\n              if (_i2.done) break;\n              _ref2 = _i2.value;\n            }\n\n            var _segment = _ref2;\n\n            if (_segment.value === classValue) {\n              res.push(_segment.glyph);\n            }\n          }\n\n          break;\n        }\n\n      case 8:\n        {\n          // lookup trimmed\n          for (var i = 0; i < this.table.values.length; i++) {\n            if (this.table.values[i] === classValue) {\n              res.push(this.table.firstGlyph + i);\n            }\n          }\n\n          break;\n        }\n\n      default:\n        throw new Error('Unknown lookup table format: ' + this.table.version);\n    }\n\n    return res;\n  };\n\n  return AATLookupTable;\n}(), _applyDecoratedDescriptor$3(_class$3.prototype, 'glyphsForValue', [cache], Object.getOwnPropertyDescriptor(_class$3.prototype, 'glyphsForValue'), _class$3.prototype), _class$3);\n\nvar START_OF_TEXT_STATE = 0;\nvar END_OF_TEXT_CLASS = 0;\nvar OUT_OF_BOUNDS_CLASS = 1;\nvar DELETED_GLYPH_CLASS = 2;\nvar DONT_ADVANCE = 0x4000;\n\nvar AATStateMachine = function () {\n  function AATStateMachine(stateTable) {\n    classCallCheck(this, AATStateMachine);\n\n    this.stateTable = stateTable;\n    this.lookupTable = new AATLookupTable(stateTable.classTable);\n  }\n\n  AATStateMachine.prototype.process = function process(glyphs, reverse, processEntry) {\n    var currentState = START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n    var index = reverse ? glyphs.length - 1 : 0;\n    var dir = reverse ? -1 : 1;\n\n    while (dir === 1 && index <= glyphs.length || dir === -1 && index >= -1) {\n      var glyph = null;\n      var classCode = OUT_OF_BOUNDS_CLASS;\n      var shouldAdvance = true;\n\n      if (index === glyphs.length || index === -1) {\n        classCode = END_OF_TEXT_CLASS;\n      } else {\n        glyph = glyphs[index];\n        if (glyph.id === 0xffff) {\n          // deleted glyph\n          classCode = DELETED_GLYPH_CLASS;\n        } else {\n          classCode = this.lookupTable.lookup(glyph.id);\n          if (classCode == null) {\n            classCode = OUT_OF_BOUNDS_CLASS;\n          }\n        }\n      }\n\n      var row = this.stateTable.stateArray.getItem(currentState);\n      var entryIndex = row[classCode];\n      var entry = this.stateTable.entryTable.getItem(entryIndex);\n\n      if (classCode !== END_OF_TEXT_CLASS && classCode !== DELETED_GLYPH_CLASS) {\n        processEntry(glyph, entry, index);\n        shouldAdvance = !(entry.flags & DONT_ADVANCE);\n      }\n\n      currentState = entry.newState;\n      if (shouldAdvance) {\n        index += dir;\n      }\n    }\n\n    return glyphs;\n  };\n\n  /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */\n\n\n  AATStateMachine.prototype.traverse = function traverse(opts) {\n    var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var visited = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Set();\n\n    if (visited.has(state)) {\n      return;\n    }\n\n    visited.add(state);\n\n    var _stateTable = this.stateTable,\n        nClasses = _stateTable.nClasses,\n        stateArray = _stateTable.stateArray,\n        entryTable = _stateTable.entryTable;\n\n    var row = stateArray.getItem(state);\n\n    // Skip predefined classes\n    for (var classCode = 4; classCode < nClasses; classCode++) {\n      var entryIndex = row[classCode];\n      var entry = entryTable.getItem(entryIndex);\n\n      // Try all glyphs in the class\n      for (var _iterator = this.lookupTable.glyphsForValue(classCode), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var glyph = _ref;\n\n        if (opts.enter) {\n          opts.enter(glyph, entry);\n        }\n\n        if (entry.newState !== 0) {\n          this.traverse(opts, entry.newState, visited);\n        }\n\n        if (opts.exit) {\n          opts.exit(glyph, entry);\n        }\n      }\n    }\n  };\n\n  return AATStateMachine;\n}();\n\nvar _class$2;\n\nfunction _applyDecoratedDescriptor$2(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n// indic replacement flags\nvar MARK_FIRST = 0x8000;\nvar MARK_LAST = 0x2000;\nvar VERB = 0x000f;\n\n// contextual substitution and glyph insertion flag\nvar SET_MARK = 0x8000;\n\n// ligature entry flags\nvar SET_COMPONENT = 0x8000;\nvar PERFORM_ACTION = 0x2000;\n\n// ligature action masks\nvar LAST_MASK = 0x80000000;\nvar STORE_MASK = 0x40000000;\nvar OFFSET_MASK = 0x3fffffff;\n\nvar REVERSE_DIRECTION = 0x400000;\nvar CURRENT_INSERT_BEFORE = 0x0800;\nvar MARKED_INSERT_BEFORE = 0x0400;\nvar CURRENT_INSERT_COUNT = 0x03e0;\nvar MARKED_INSERT_COUNT = 0x001f;\n\nvar AATMorxProcessor = (_class$2 = function () {\n  function AATMorxProcessor(font) {\n    classCallCheck(this, AATMorxProcessor);\n\n    this.processIndicRearragement = this.processIndicRearragement.bind(this);\n    this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n    this.processLigature = this.processLigature.bind(this);\n    this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n    this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n    this.font = font;\n    this.morx = font.morx;\n    this.inputCache = null;\n  }\n\n  // Processes an array of glyphs and applies the specified features\n  // Features should be in the form of {featureType:{featureSetting:true}}\n\n\n  AATMorxProcessor.prototype.process = function process(glyphs) {\n    var features = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    for (var _iterator = this.morx.chains, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var chain = _ref;\n\n      var flags = chain.defaultFlags;\n\n      // enable/disable the requested features\n      for (var _iterator2 = chain.features, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var feature = _ref2;\n\n        var f = void 0;\n        if ((f = features[feature.featureType]) && f[feature.featureSetting]) {\n          flags &= feature.disableFlags;\n          flags |= feature.enableFlags;\n        }\n      }\n\n      for (var _iterator3 = chain.subtables, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var subtable = _ref3;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.processSubtable(subtable, glyphs);\n        }\n      }\n    }\n\n    // remove deleted glyphs\n    var index = glyphs.length - 1;\n    while (index >= 0) {\n      if (glyphs[index].id === 0xffff) {\n        glyphs.splice(index, 1);\n      }\n\n      index--;\n    }\n\n    return glyphs;\n  };\n\n  AATMorxProcessor.prototype.processSubtable = function processSubtable(subtable, glyphs) {\n    this.subtable = subtable;\n    this.glyphs = glyphs;\n    if (this.subtable.type === 4) {\n      this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n      return;\n    }\n\n    this.ligatureStack = [];\n    this.markedGlyph = null;\n    this.firstGlyph = null;\n    this.lastGlyph = null;\n    this.markedIndex = null;\n\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n\n    var reverse = !!(this.subtable.coverage & REVERSE_DIRECTION);\n    return stateMachine.process(this.glyphs, reverse, process);\n  };\n\n  AATMorxProcessor.prototype.getStateMachine = function getStateMachine(subtable) {\n    return new AATStateMachine(subtable.table.stateTable);\n  };\n\n  AATMorxProcessor.prototype.getProcessor = function getProcessor() {\n    switch (this.subtable.type) {\n      case 0:\n        return this.processIndicRearragement;\n      case 1:\n        return this.processContextualSubstitution;\n      case 2:\n        return this.processLigature;\n      case 4:\n        return this.processNoncontextualSubstitutions;\n      case 5:\n        return this.processGlyphInsertion;\n      default:\n        throw new Error('Invalid morx subtable type: ' + this.subtable.type);\n    }\n  };\n\n  AATMorxProcessor.prototype.processIndicRearragement = function processIndicRearragement(glyph, entry, index) {\n    if (entry.flags & MARK_FIRST) {\n      this.firstGlyph = index;\n    }\n\n    if (entry.flags & MARK_LAST) {\n      this.lastGlyph = index;\n    }\n\n    reorderGlyphs(this.glyphs, entry.flags & VERB, this.firstGlyph, this.lastGlyph);\n  };\n\n  AATMorxProcessor.prototype.processContextualSubstitution = function processContextualSubstitution(glyph, entry, index) {\n    var subsitutions = this.subtable.table.substitutionTable.items;\n    if (entry.markIndex !== 0xffff) {\n      var lookup = subsitutions.getItem(entry.markIndex);\n      var lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[this.markedGlyph];\n      var gid = lookupTable.lookup(glyph.id);\n      if (gid) {\n        this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.currentIndex !== 0xffff) {\n      var _lookup = subsitutions.getItem(entry.currentIndex);\n      var _lookupTable = new AATLookupTable(_lookup);\n      glyph = this.glyphs[index];\n      var gid = _lookupTable.lookup(glyph.id);\n      if (gid) {\n        this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.flags & SET_MARK) {\n      this.markedGlyph = index;\n    }\n  };\n\n  AATMorxProcessor.prototype.processLigature = function processLigature(glyph, entry, index) {\n    if (entry.flags & SET_COMPONENT) {\n      this.ligatureStack.push(index);\n    }\n\n    if (entry.flags & PERFORM_ACTION) {\n      var _ligatureStack;\n\n      var actions = this.subtable.table.ligatureActions;\n      var components = this.subtable.table.components;\n      var ligatureList = this.subtable.table.ligatureList;\n\n      var actionIndex = entry.action;\n      var last = false;\n      var ligatureIndex = 0;\n      var codePoints = [];\n      var ligatureGlyphs = [];\n\n      while (!last) {\n        var _codePoints;\n\n        var componentGlyph = this.ligatureStack.pop();\n        (_codePoints = codePoints).unshift.apply(_codePoints, this.glyphs[componentGlyph].codePoints);\n\n        var action = actions.getItem(actionIndex++);\n        last = !!(action & LAST_MASK);\n        var store = !!(action & STORE_MASK);\n        var offset = (action & OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n        offset += this.glyphs[componentGlyph].id;\n\n        var component = components.getItem(offset);\n        ligatureIndex += component;\n\n        if (last || store) {\n          var ligatureEntry = ligatureList.getItem(ligatureIndex);\n          this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n          ligatureGlyphs.push(componentGlyph);\n          ligatureIndex = 0;\n          codePoints = [];\n        } else {\n          this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n        }\n      }\n\n      // Put ligature glyph indexes back on the stack\n      (_ligatureStack = this.ligatureStack).push.apply(_ligatureStack, ligatureGlyphs);\n    }\n  };\n\n  AATMorxProcessor.prototype.processNoncontextualSubstitutions = function processNoncontextualSubstitutions(subtable, glyphs, index) {\n    var lookupTable = new AATLookupTable(subtable.table.lookupTable);\n\n    for (index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n      if (glyph.id !== 0xffff) {\n        var gid = lookupTable.lookup(glyph.id);\n        if (gid) {\n          // 0 means do nothing\n          glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n      }\n    }\n  };\n\n  AATMorxProcessor.prototype._insertGlyphs = function _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n    var _glyphs;\n\n    var stringIndex = this.glyphs[glyphIndex].stringIndex;\n    var insertions = [];\n    while (count--) {\n      var gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n      insertions.push(this.font.getGlyph(gid));\n    }\n\n    if (!isBefore) {\n      glyphIndex++;\n    }\n\n    (_glyphs = this.glyphs).splice.apply(_glyphs, [glyphIndex, 0].concat(insertions));\n  };\n\n  AATMorxProcessor.prototype.processGlyphInsertion = function processGlyphInsertion(glyph, entry, index) {\n    if (entry.flags & SET_MARK) {\n      this.markedIndex = index;\n    }\n\n    if (entry.markedInsertIndex !== 0xffff) {\n      var count = (entry.flags & MARKED_INSERT_COUNT) >>> 5;\n      var isBefore = !!(entry.flags & MARKED_INSERT_BEFORE);\n      this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n    }\n\n    if (entry.currentInsertIndex !== 0xffff) {\n      var _count = (entry.flags & CURRENT_INSERT_COUNT) >>> 5;\n      var _isBefore = !!(entry.flags & CURRENT_INSERT_BEFORE);\n      this._insertGlyphs(index, entry.currentInsertIndex, _count, _isBefore);\n    }\n  };\n\n  AATMorxProcessor.prototype.getSupportedFeatures = function getSupportedFeatures() {\n    var features = [];\n    for (var _iterator4 = this.morx.chains, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var chain = _ref4;\n\n      for (var _iterator5 = chain.features, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n        var _ref5;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref5 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref5 = _i5.value;\n        }\n\n        var feature = _ref5;\n\n        features.push([feature.featureType, feature.featureSetting]);\n      }\n    }\n\n    return features;\n  };\n\n  AATMorxProcessor.prototype.generateInputs = function generateInputs(gid) {\n    if (!this.inputCache) {\n      this.generateInputCache();\n    }\n\n    return this.inputCache[gid] || [];\n  };\n\n  AATMorxProcessor.prototype.generateInputCache = function generateInputCache() {\n    this.inputCache = {};\n\n    for (var _iterator6 = this.morx.chains, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n      var _ref6;\n\n      if (_isArray6) {\n        if (_i6 >= _iterator6.length) break;\n        _ref6 = _iterator6[_i6++];\n      } else {\n        _i6 = _iterator6.next();\n        if (_i6.done) break;\n        _ref6 = _i6.value;\n      }\n\n      var chain = _ref6;\n\n      var flags = chain.defaultFlags;\n\n      for (var _iterator7 = chain.subtables, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();;) {\n        var _ref7;\n\n        if (_isArray7) {\n          if (_i7 >= _iterator7.length) break;\n          _ref7 = _iterator7[_i7++];\n        } else {\n          _i7 = _iterator7.next();\n          if (_i7.done) break;\n          _ref7 = _i7.value;\n        }\n\n        var subtable = _ref7;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.generateInputsForSubtable(subtable);\n        }\n      }\n    }\n  };\n\n  AATMorxProcessor.prototype.generateInputsForSubtable = function generateInputsForSubtable(subtable) {\n    var _this = this;\n\n    // Currently, only supporting ligature subtables.\n    if (subtable.type !== 2) {\n      return;\n    }\n\n    var reverse = !!(subtable.coverage & REVERSE_DIRECTION);\n    if (reverse) {\n      throw new Error('Reverse subtable, not supported.');\n    }\n\n    this.subtable = subtable;\n    this.ligatureStack = [];\n\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n\n    var input = [];\n    var stack = [];\n    this.glyphs = [];\n\n    stateMachine.traverse({\n      enter: function enter(glyph, entry) {\n        var glyphs = _this.glyphs;\n        stack.push({\n          glyphs: glyphs.slice(),\n          ligatureStack: _this.ligatureStack.slice()\n        });\n\n        // Add glyph to input and glyphs to process.\n        var g = _this.font.getGlyph(glyph);\n        input.push(g);\n        glyphs.push(input[input.length - 1]);\n\n        // Process ligature substitution\n        process(glyphs[glyphs.length - 1], entry, glyphs.length - 1);\n\n        // Add input to result if only one matching (non-deleted) glyph remains.\n        var count = 0;\n        var found = 0;\n        for (var i = 0; i < glyphs.length && count <= 1; i++) {\n          if (glyphs[i].id !== 0xffff) {\n            count++;\n            found = glyphs[i].id;\n          }\n        }\n\n        if (count === 1) {\n          var result = input.map(function (g) {\n            return g.id;\n          });\n          var _cache = _this.inputCache[found];\n          if (_cache) {\n            _cache.push(result);\n          } else {\n            _this.inputCache[found] = [result];\n          }\n        }\n      },\n\n      exit: function exit() {\n        \n        var _stack$pop = stack.pop();\n\n        _this.glyphs = _stack$pop.glyphs;\n        _this.ligatureStack = _stack$pop.ligatureStack;\n\n        input.pop();\n      }\n    });\n  };\n\n  return AATMorxProcessor;\n}(), _applyDecoratedDescriptor$2(_class$2.prototype, 'getStateMachine', [cache], Object.getOwnPropertyDescriptor(_class$2.prototype, 'getStateMachine'), _class$2.prototype), _class$2);\n\nfunction swap(glyphs, rangeA, rangeB) {\n  var reverseA = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var reverseB = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  var end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n  if (reverseB) {\n    end.reverse();\n  }\n\n  var start = glyphs.splice.apply(glyphs, [rangeA[0], rangeA[1]].concat(end));\n  if (reverseA) {\n    start.reverse();\n  }\n\n  glyphs.splice.apply(glyphs, [rangeB[0] - (rangeA[1] - 1), 0].concat(start));\n  return glyphs;\n}\n\nfunction reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n  switch (verb) {\n    case 0:\n      // no change\n      return glyphs;\n\n    case 1:\n      // Ax => xA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 0]);\n\n    case 2:\n      // xD => Dx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 1]);\n\n    case 3:\n      // AxD => DxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 1]);\n\n    case 4:\n      // ABx => xAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0]);\n\n    case 5:\n      // ABx => xBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0], true, false);\n\n    case 6:\n      // xCD => CDx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2]);\n\n    case 7:\n      // xCD => DCx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2], false, true);\n\n    case 8:\n      // AxCD => CDxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2]);\n\n    case 9:\n      // AxCD => DCxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2], false, true);\n\n    case 10:\n      // ABxD => DxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1]);\n\n    case 11:\n      // ABxD => DxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1], true, false);\n\n    case 12:\n      // ABxCD => CDxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2]);\n\n    case 13:\n      // ABxCD => CDxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, false);\n\n    case 14:\n      // ABxCD => DCxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], false, true);\n\n    case 15:\n      // ABxCD => DCxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, true);\n\n    default:\n      throw new Error('Unknown verb: ' + verb);\n  }\n}\n\nvar AATLayoutEngine = function () {\n  function AATLayoutEngine(font) {\n    classCallCheck(this, AATLayoutEngine);\n\n    this.font = font;\n    this.morxProcessor = new AATMorxProcessor(font);\n    this.fallbackPosition = false;\n  }\n\n  AATLayoutEngine.prototype.substitute = function substitute(glyphRun) {\n    // AAT expects the glyphs to be in visual order prior to morx processing,\n    // so reverse the glyphs if the script is right-to-left.\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n    }\n\n    this.morxProcessor.process(glyphRun.glyphs, mapOTToAAT(glyphRun.features));\n  };\n\n  AATLayoutEngine.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return mapAATToOT(this.morxProcessor.getSupportedFeatures());\n  };\n\n  AATLayoutEngine.prototype.stringsForGlyph = function stringsForGlyph(gid) {\n    var glyphStrings = this.morxProcessor.generateInputs(gid);\n    var result = new Set();\n\n    for (var _iterator = glyphStrings, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var glyphs = _ref;\n\n      this._addStrings(glyphs, 0, result, '');\n    }\n\n    return result;\n  };\n\n  AATLayoutEngine.prototype._addStrings = function _addStrings(glyphs, index, strings, string) {\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n\n    for (var _iterator2 = codePoints, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var codePoint = _ref2;\n\n      var s = string + String.fromCodePoint(codePoint);\n      if (index < glyphs.length - 1) {\n        this._addStrings(glyphs, index + 1, strings, s);\n      } else {\n        strings.add(s);\n      }\n    }\n  };\n\n  return AATLayoutEngine;\n}();\n\n/**\n * ShapingPlans are used by the OpenType shapers to store which\n * features should by applied, and in what order to apply them.\n * The features are applied in groups called stages. A feature\n * can be applied globally to all glyphs, or locally to only\n * specific glyphs.\n *\n * @private\n */\n\nvar ShapingPlan = function () {\n  function ShapingPlan(font, script, direction$$1) {\n    classCallCheck(this, ShapingPlan);\n\n    this.font = font;\n    this.script = script;\n    this.direction = direction$$1;\n    this.stages = [];\n    this.globalFeatures = {};\n    this.allFeatures = {};\n  }\n\n  /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */\n\n\n  ShapingPlan.prototype._addFeatures = function _addFeatures(features, global) {\n    var stageIndex = this.stages.length - 1;\n    var stage = this.stages[stageIndex];\n    for (var _iterator = features, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var feature = _ref;\n\n      if (this.allFeatures[feature] == null) {\n        stage.push(feature);\n        this.allFeatures[feature] = stageIndex;\n\n        if (global) {\n          this.globalFeatures[feature] = true;\n        }\n      }\n    }\n  };\n\n  /**\n   * Add features to the last stage\n   */\n\n\n  ShapingPlan.prototype.add = function add(arg) {\n    var global = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (this.stages.length === 0) {\n      this.stages.push([]);\n    }\n\n    if (typeof arg === 'string') {\n      arg = [arg];\n    }\n\n    if (Array.isArray(arg)) {\n      this._addFeatures(arg, global);\n    } else if ((typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object') {\n      this._addFeatures(arg.global || [], true);\n      this._addFeatures(arg.local || [], false);\n    } else {\n      throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n  };\n\n  /**\n   * Add a new stage\n   */\n\n\n  ShapingPlan.prototype.addStage = function addStage(arg, global) {\n    if (typeof arg === 'function') {\n      this.stages.push(arg, []);\n    } else {\n      this.stages.push([]);\n      this.add(arg, global);\n    }\n  };\n\n  ShapingPlan.prototype.setFeatureOverrides = function setFeatureOverrides(features) {\n    if (Array.isArray(features)) {\n      this.add(features);\n    } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n      for (var tag in features) {\n        if (features[tag]) {\n          this.add(tag);\n        } else if (this.allFeatures[tag] != null) {\n          var stage = this.stages[this.allFeatures[tag]];\n          stage.splice(stage.indexOf(tag), 1);\n          delete this.allFeatures[tag];\n          delete this.globalFeatures[tag];\n        }\n      }\n    }\n  };\n\n  /**\n   * Assigns the global features to the given glyphs\n   */\n\n\n  ShapingPlan.prototype.assignGlobalFeatures = function assignGlobalFeatures(glyphs) {\n    for (var _iterator2 = glyphs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var glyph = _ref2;\n\n      for (var feature in this.globalFeatures) {\n        glyph.features[feature] = true;\n      }\n    }\n  };\n\n  /**\n   * Executes the planned stages using the given OTProcessor\n   */\n\n\n  ShapingPlan.prototype.process = function process(processor, glyphs, positions) {\n    for (var _iterator3 = this.stages, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var stage = _ref3;\n\n      if (typeof stage === 'function') {\n        if (!positions) {\n          stage(this.font, glyphs, this);\n        }\n      } else if (stage.length > 0) {\n        processor.applyFeatures(stage, glyphs, positions);\n      }\n    }\n  };\n\n  return ShapingPlan;\n}();\n\nvar _class$4;\nvar _temp;\n\nvar VARIATION_FEATURES = ['rvrn'];\nvar COMMON_FEATURES = ['ccmp', 'locl', 'rlig', 'mark', 'mkmk'];\nvar FRACTIONAL_FEATURES = ['frac', 'numr', 'dnom'];\nvar HORIZONTAL_FEATURES = ['calt', 'clig', 'liga', 'rclt', 'curs', 'kern'];\nvar DIRECTIONAL_FEATURES = {\n  ltr: ['ltra', 'ltrm'],\n  rtl: ['rtla', 'rtlm']\n};\n\nvar DefaultShaper = (_temp = _class$4 = function () {\n  function DefaultShaper() {\n    classCallCheck(this, DefaultShaper);\n  }\n\n  DefaultShaper.plan = function plan(_plan, glyphs, features) {\n    // Plan the features we want to apply\n    this.planPreprocessing(_plan);\n    this.planFeatures(_plan);\n    this.planPostprocessing(_plan, features);\n\n    // Assign the global features to all the glyphs\n    _plan.assignGlobalFeatures(glyphs);\n\n    // Assign local features to glyphs\n    this.assignFeatures(_plan, glyphs);\n  };\n\n  DefaultShaper.planPreprocessing = function planPreprocessing(plan) {\n    plan.add({\n      global: [].concat(VARIATION_FEATURES, DIRECTIONAL_FEATURES[plan.direction]),\n      local: FRACTIONAL_FEATURES\n    });\n  };\n\n  DefaultShaper.planFeatures = function planFeatures(plan) {\n    // Do nothing by default. Let subclasses override this.\n  };\n\n  DefaultShaper.planPostprocessing = function planPostprocessing(plan, userFeatures) {\n    plan.add([].concat(COMMON_FEATURES, HORIZONTAL_FEATURES));\n    plan.setFeatureOverrides(userFeatures);\n  };\n\n  DefaultShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    // Enable contextual fractions\n    for (var i = 0; i < glyphs.length; i++) {\n      var glyph = glyphs[i];\n      if (glyph.codePoints[0] === 0x2044) {\n        // fraction slash\n        var start = i;\n        var end = i + 1;\n\n        // Apply numerator\n        while (start > 0 && unicode.isDigit(glyphs[start - 1].codePoints[0])) {\n          glyphs[start - 1].features.numr = true;\n          glyphs[start - 1].features.frac = true;\n          start--;\n        }\n\n        // Apply denominator\n        while (end < glyphs.length && unicode.isDigit(glyphs[end].codePoints[0])) {\n          glyphs[end].features.dnom = true;\n          glyphs[end].features.frac = true;\n          end++;\n        }\n\n        // Apply fraction slash\n        glyph.features.frac = true;\n        i = end - 1;\n      }\n    }\n  };\n\n  return DefaultShaper;\n}(), _class$4.zeroMarkWidths = 'AFTER_GPOS', _temp);\n\nvar type = \"Buffer\";\nvar data = [0, 1, 16, 0, 0, 0, 0, 0, 0, 0, 49, 160, 1, 149, 1, 106, 254, 237, 216, 43, 79, 3, 65, 20, 5, 224, 217, 7, 77, 41, 138, 127, 64, 37, 146, 4, 131, 37, 4, 143, 68, 33, 193, 224, 192, 129, 3, 137, 196, 32, 81, 4, 73, 80, 72, 28, 18, 137, 194, 224, 144, 224, 48, 156, 210, 153, 228, 102, 152, 217, 206, 238, 206, 62, 40, 231, 38, 95, 102, 186, 219, 121, 246, 238, 35, 29, 167, 74, 173, 194, 26, 108, 192, 88, 127, 254, 43, 229, 14, 236, 194, 30, 236, 195, 33, 28, 195, 41, 156, 195, 5, 92, 194, 21, 92, 139, 118, 183, 112, 167, 63, 79, 60, 136, 250, 163, 168, 211, 124, 123, 130, 35, 237, 25, 94, 224, 181, 7, 243, 106, 203, 155, 168, 191, 247, 96, 62, 68, 68, 68, 68, 68, 68, 68, 68, 77, 153, 252, 255, 243, 209, 131, 121, 16, 17, 17, 17, 17, 205, 179, 124, 113, 234, 108, 216, 140, 45, 244, 125, 2, 247, 240, 9, 235, 35, 165, 14, 70, 211, 115, 55, 40, 183, 149, 82, 155, 195, 230, 214, 247, 5, 89, 246, 251, 248, 18, 142, 45, 59, 142, 119, 101, 37, 77, 126, 48, 24, 255, 57, 18, 15, 121, 222, 85, 143, 21, 185, 238, 55, 179, 228, 142, 210, 230, 106, 83, 150, 108, 215, 167, 144, 115, 146, 107, 180, 247, 42, 100, 125, 49, 84, 217, 219, 54, 100, 86, 61, 100, 29, 174, 188, 50, 231, 149, 40, 125, 17, 227, 58, 144, 227, 133, 132, 92, 179, 60, 86, 55, 22, 28, 253, 15, 180, 162, 223, 63, 52, 39, 50, 209, 167, 221, 110, 16, 97, 254, 170, 196, 92, 92, 121, 82, 55, 247, 138, 246, 198, 117, 126, 214, 184, 161, 209, 245, 117, 87, 55, 247, 124, 237, 103, 221, 235, 203, 228, 158, 252, 174, 235, 217, 230, 155, 87, 217, 28, 50, 247, 100, 223, 111, 92, 37, 18, 171, 173, 221, 79, 172, 103, 113, 215, 57, 226, 123, 255, 48, 235, 111, 43, 143, 235, 230, 115, 209, 250, 154, 232, 219, 247, 190, 22, 59, 98, 237, 113, 90, 113, 158, 190, 107, 47, 177, 74, 83, 79, 244, 88, 33, 239, 48, 105, 65, 255, 174, 241, 204, 88, 161, 115, 45, 243, 124, 47, 234, 211, 126, 158, 184, 230, 103, 215, 237, 251, 101, 157, 240, 237, 99, 19, 121, 247, 13];\nvar trieData = {\n\ttype: type,\n\tdata: data\n};\n\nvar trie = new UnicodeTrie(new Uint8Array(trieData.data));\nvar FEATURES = ['isol', 'fina', 'fin2', 'fin3', 'medi', 'med2', 'init'];\n\nvar ShapingClasses = {\n  Non_Joining: 0,\n  Left_Joining: 1,\n  Right_Joining: 2,\n  Dual_Joining: 3,\n  Join_Causing: 3,\n  ALAPH: 4,\n  'DALATH RISH': 5,\n  Transparent: 6\n};\n\nvar ISOL = 'isol';\nvar FINA = 'fina';\nvar FIN2 = 'fin2';\nvar FIN3 = 'fin3';\nvar MEDI = 'medi';\nvar MED2 = 'med2';\nvar INIT = 'init';\nvar NONE = null;\n\n// Each entry is [prevAction, curAction, nextState]\nvar STATE_TABLE = [\n//   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n// State 0: prev was U,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 6]],\n\n// State 1: prev was R or ISOL/ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN2, 5], [NONE, ISOL, 6]],\n\n// State 2: prev was D/L in ISOL form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [INIT, FINA, 1], [INIT, FINA, 3], [INIT, FINA, 4], [INIT, FINA, 6]],\n\n// State 3: prev was D in FINA form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MEDI, FINA, 1], [MEDI, FINA, 3], [MEDI, FINA, 4], [MEDI, FINA, 6]],\n\n// State 4: prev was FINA ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MED2, ISOL, 1], [MED2, ISOL, 2], [MED2, FIN2, 5], [MED2, ISOL, 6]],\n\n// State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [ISOL, ISOL, 1], [ISOL, ISOL, 2], [ISOL, FIN2, 5], [ISOL, ISOL, 6]],\n\n// State 6: prev was DALATH/RISH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN3, 5], [NONE, ISOL, 6]]];\n\n/**\n * This is a shaper for Arabic, and other cursive scripts.\n * It uses data from ArabicShaping.txt in the Unicode database,\n * compiled to a UnicodeTrie by generate-data.coffee.\n *\n * The shaping state machine was ported from Harfbuzz.\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-arabic.cc\n */\n\nvar ArabicShaper = function (_DefaultShaper) {\n  inherits(ArabicShaper, _DefaultShaper);\n\n  function ArabicShaper() {\n    classCallCheck(this, ArabicShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  ArabicShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ccmp', 'locl']);\n    for (var i = 0; i < FEATURES.length; i++) {\n      var feature = FEATURES[i];\n      plan.addStage(feature, false);\n    }\n\n    plan.addStage('mset');\n  };\n\n  ArabicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    _DefaultShaper.assignFeatures.call(this, plan, glyphs);\n\n    var prev = -1;\n    var state = 0;\n    var actions = [];\n\n    // Apply the state machine to map glyphs to features\n    for (var i = 0; i < glyphs.length; i++) {\n      var curAction = void 0,\n          prevAction = void 0;\n      var glyph = glyphs[i];\n      var type$$1 = getShapingClass(glyph.codePoints[0]);\n      if (type$$1 === ShapingClasses.Transparent) {\n        actions[i] = NONE;\n        continue;\n      }\n\n      var _STATE_TABLE$state$ty = STATE_TABLE[state][type$$1];\n      prevAction = _STATE_TABLE$state$ty[0];\n      curAction = _STATE_TABLE$state$ty[1];\n      state = _STATE_TABLE$state$ty[2];\n\n\n      if (prevAction !== NONE && prev !== -1) {\n        actions[prev] = prevAction;\n      }\n\n      actions[i] = curAction;\n      prev = i;\n    }\n\n    // Apply the chosen features to their respective glyphs\n    for (var index = 0; index < glyphs.length; index++) {\n      var feature = void 0;\n      var glyph = glyphs[index];\n      if (feature = actions[index]) {\n        glyph.features[feature] = true;\n      }\n    }\n  };\n\n  return ArabicShaper;\n}(DefaultShaper);\n\nfunction getShapingClass(codePoint) {\n  var res = trie.get(codePoint);\n  if (res) {\n    return res - 1;\n  }\n\n  var category = unicode.getCategory(codePoint);\n  if (category === 'Mn' || category === 'Me' || category === 'Cf') {\n    return ShapingClasses.Transparent;\n  }\n\n  return ShapingClasses.Non_Joining;\n}\n\nvar GlyphIterator = function () {\n  function GlyphIterator(glyphs, options) {\n    classCallCheck(this, GlyphIterator);\n\n    this.glyphs = glyphs;\n    this.reset(options);\n  }\n\n  GlyphIterator.prototype.reset = function reset() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    this.options = options;\n    this.flags = options.flags || {};\n    this.markAttachmentType = options.markAttachmentType || 0;\n    this.index = index;\n  };\n\n  GlyphIterator.prototype.shouldIgnore = function shouldIgnore(glyph) {\n    return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;\n  };\n\n  GlyphIterator.prototype.move = function move(dir) {\n    this.index += dir;\n    while (0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index])) {\n      this.index += dir;\n    }\n\n    if (0 > this.index || this.index >= this.glyphs.length) {\n      return null;\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  GlyphIterator.prototype.next = function next() {\n    return this.move(+1);\n  };\n\n  GlyphIterator.prototype.prev = function prev() {\n    return this.move(-1);\n  };\n\n  GlyphIterator.prototype.peek = function peek() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    var idx = this.index;\n    var res = this.increment(count);\n    this.index = idx;\n    return res;\n  };\n\n  GlyphIterator.prototype.peekIndex = function peekIndex() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    var idx = this.index;\n    this.increment(count);\n    var res = this.index;\n    this.index = idx;\n    return res;\n  };\n\n  GlyphIterator.prototype.increment = function increment() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    var dir = count < 0 ? -1 : 1;\n    count = Math.abs(count);\n    while (count--) {\n      this.move(dir);\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  createClass(GlyphIterator, [{\n    key: \"cur\",\n    get: function get$$1() {\n      return this.glyphs[this.index] || null;\n    }\n  }]);\n  return GlyphIterator;\n}();\n\nvar DEFAULT_SCRIPTS = ['DFLT', 'dflt', 'latn'];\n\nvar OTProcessor = function () {\n  function OTProcessor(font, table) {\n    classCallCheck(this, OTProcessor);\n\n    this.font = font;\n    this.table = table;\n\n    this.script = null;\n    this.scriptTag = null;\n\n    this.language = null;\n    this.languageTag = null;\n\n    this.features = {};\n    this.lookups = {};\n\n    // Setup variation substitutions\n    this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1;\n\n    // initialize to default script + language\n    this.selectScript();\n\n    // current context (set by applyFeatures)\n    this.glyphs = [];\n    this.positions = []; // only used by GPOS\n    this.ligatureID = 1;\n    this.currentFeature = null;\n  }\n\n  OTProcessor.prototype.findScript = function findScript(script) {\n    if (this.table.scriptList == null) {\n      return null;\n    }\n\n    if (!Array.isArray(script)) {\n      script = [script];\n    }\n\n    for (var _iterator = script, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var s = _ref;\n\n      for (var _iterator2 = this.table.scriptList, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var entry = _ref2;\n\n        if (entry.tag === s) {\n          return entry;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  OTProcessor.prototype.selectScript = function selectScript(script, language, direction$$1) {\n    var changed = false;\n    var entry = void 0;\n    if (!this.script || script !== this.scriptTag) {\n      entry = this.findScript(script);\n      if (!entry) {\n        entry = this.findScript(DEFAULT_SCRIPTS);\n      }\n\n      if (!entry) {\n        return this.scriptTag;\n      }\n\n      this.scriptTag = entry.tag;\n      this.script = entry.script;\n      this.language = null;\n      this.languageTag = null;\n      changed = true;\n    }\n\n    if (!direction$$1 || direction$$1 !== this.direction) {\n      this.direction = direction$$1 || direction(script);\n    }\n\n    if (language && language.length < 4) {\n      language += ' '.repeat(4 - language.length);\n    }\n\n    if (!language || language !== this.languageTag) {\n      this.language = null;\n\n      for (var _iterator3 = this.script.langSysRecords, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var lang = _ref3;\n\n        if (lang.tag === language) {\n          this.language = lang.langSys;\n          this.languageTag = lang.tag;\n          break;\n        }\n      }\n\n      if (!this.language) {\n        this.language = this.script.defaultLangSys;\n        this.languageTag = null;\n      }\n\n      changed = true;\n    }\n\n    // Build a feature lookup table\n    if (changed) {\n      this.features = {};\n      if (this.language) {\n        for (var _iterator4 = this.language.featureIndexes, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n          var _ref4;\n\n          if (_isArray4) {\n            if (_i4 >= _iterator4.length) break;\n            _ref4 = _iterator4[_i4++];\n          } else {\n            _i4 = _iterator4.next();\n            if (_i4.done) break;\n            _ref4 = _i4.value;\n          }\n\n          var featureIndex = _ref4;\n\n          var record = this.table.featureList[featureIndex];\n          var substituteFeature = this.substituteFeatureForVariations(featureIndex);\n          this.features[record.tag] = substituteFeature || record.feature;\n        }\n      }\n    }\n\n    return this.scriptTag;\n  };\n\n  OTProcessor.prototype.lookupsForFeatures = function lookupsForFeatures() {\n    var userFeatures = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var exclude = arguments[1];\n\n    var lookups = [];\n    for (var _iterator5 = userFeatures, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray5) {\n        if (_i5 >= _iterator5.length) break;\n        _ref5 = _iterator5[_i5++];\n      } else {\n        _i5 = _iterator5.next();\n        if (_i5.done) break;\n        _ref5 = _i5.value;\n      }\n\n      var tag = _ref5;\n\n      var feature = this.features[tag];\n      if (!feature) {\n        continue;\n      }\n\n      for (var _iterator6 = feature.lookupListIndexes, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n        var _ref6;\n\n        if (_isArray6) {\n          if (_i6 >= _iterator6.length) break;\n          _ref6 = _iterator6[_i6++];\n        } else {\n          _i6 = _iterator6.next();\n          if (_i6.done) break;\n          _ref6 = _i6.value;\n        }\n\n        var lookupIndex = _ref6;\n\n        if (exclude && exclude.indexOf(lookupIndex) !== -1) {\n          continue;\n        }\n\n        lookups.push({\n          feature: tag,\n          index: lookupIndex,\n          lookup: this.table.lookupList.get(lookupIndex)\n        });\n      }\n    }\n\n    lookups.sort(function (a, b) {\n      return a.index - b.index;\n    });\n    return lookups;\n  };\n\n  OTProcessor.prototype.substituteFeatureForVariations = function substituteFeatureForVariations(featureIndex) {\n    if (this.variationsIndex === -1) {\n      return null;\n    }\n\n    var record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n    var substitutions = record.featureTableSubstitution.substitutions;\n    for (var _iterator7 = substitutions, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();;) {\n      var _ref7;\n\n      if (_isArray7) {\n        if (_i7 >= _iterator7.length) break;\n        _ref7 = _iterator7[_i7++];\n      } else {\n        _i7 = _iterator7.next();\n        if (_i7.done) break;\n        _ref7 = _i7.value;\n      }\n\n      var substitution = _ref7;\n\n      if (substitution.featureIndex === featureIndex) {\n        return substitution.alternateFeatureTable;\n      }\n    }\n\n    return null;\n  };\n\n  OTProcessor.prototype.findVariationsIndex = function findVariationsIndex(coords) {\n    var variations = this.table.featureVariations;\n    if (!variations) {\n      return -1;\n    }\n\n    var records = variations.featureVariationRecords;\n    for (var i = 0; i < records.length; i++) {\n      var conditions = records[i].conditionSet.conditionTable;\n      if (this.variationConditionsMatch(conditions, coords)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  OTProcessor.prototype.variationConditionsMatch = function variationConditionsMatch(conditions, coords) {\n    return conditions.every(function (condition) {\n      var coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n      return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n    });\n  };\n\n  OTProcessor.prototype.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    var lookups = this.lookupsForFeatures(userFeatures);\n    this.applyLookups(lookups, glyphs, advances);\n  };\n\n  OTProcessor.prototype.applyLookups = function applyLookups(lookups, glyphs, positions) {\n    this.glyphs = glyphs;\n    this.positions = positions;\n    this.glyphIterator = new GlyphIterator(glyphs);\n\n    for (var _iterator8 = lookups, _isArray8 = Array.isArray(_iterator8), _i8 = 0, _iterator8 = _isArray8 ? _iterator8 : _iterator8[Symbol.iterator]();;) {\n      var _ref8;\n\n      if (_isArray8) {\n        if (_i8 >= _iterator8.length) break;\n        _ref8 = _iterator8[_i8++];\n      } else {\n        _i8 = _iterator8.next();\n        if (_i8.done) break;\n        _ref8 = _i8.value;\n      }\n\n      var _ref9 = _ref8,\n          feature = _ref9.feature,\n          lookup = _ref9.lookup;\n\n      this.currentFeature = feature;\n      this.glyphIterator.reset(lookup.flags);\n\n      while (this.glyphIterator.index < glyphs.length) {\n        if (!(feature in this.glyphIterator.cur.features)) {\n          this.glyphIterator.next();\n          continue;\n        }\n\n        for (var _iterator9 = lookup.subTables, _isArray9 = Array.isArray(_iterator9), _i9 = 0, _iterator9 = _isArray9 ? _iterator9 : _iterator9[Symbol.iterator]();;) {\n          var _ref10;\n\n          if (_isArray9) {\n            if (_i9 >= _iterator9.length) break;\n            _ref10 = _iterator9[_i9++];\n          } else {\n            _i9 = _iterator9.next();\n            if (_i9.done) break;\n            _ref10 = _i9.value;\n          }\n\n          var table = _ref10;\n\n          var res = this.applyLookup(lookup.lookupType, table);\n          if (res) {\n            break;\n          }\n        }\n\n        this.glyphIterator.next();\n      }\n    }\n  };\n\n  OTProcessor.prototype.applyLookup = function applyLookup(lookup, table) {\n    throw new Error(\"applyLookup must be implemented by subclasses\");\n  };\n\n  OTProcessor.prototype.applyLookupList = function applyLookupList(lookupRecords) {\n    var options = this.glyphIterator.options;\n    var glyphIndex = this.glyphIterator.index;\n\n    for (var _iterator10 = lookupRecords, _isArray10 = Array.isArray(_iterator10), _i10 = 0, _iterator10 = _isArray10 ? _iterator10 : _iterator10[Symbol.iterator]();;) {\n      var _ref11;\n\n      if (_isArray10) {\n        if (_i10 >= _iterator10.length) break;\n        _ref11 = _iterator10[_i10++];\n      } else {\n        _i10 = _iterator10.next();\n        if (_i10.done) break;\n        _ref11 = _i10.value;\n      }\n\n      var lookupRecord = _ref11;\n\n      // Reset flags and find glyph index for this lookup record\n      this.glyphIterator.reset(options, glyphIndex);\n      this.glyphIterator.increment(lookupRecord.sequenceIndex);\n\n      // Get the lookup and setup flags for subtables\n      var lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n      this.glyphIterator.reset(lookup.flags, this.glyphIterator.index);\n\n      // Apply lookup subtables until one matches\n      for (var _iterator11 = lookup.subTables, _isArray11 = Array.isArray(_iterator11), _i11 = 0, _iterator11 = _isArray11 ? _iterator11 : _iterator11[Symbol.iterator]();;) {\n        var _ref12;\n\n        if (_isArray11) {\n          if (_i11 >= _iterator11.length) break;\n          _ref12 = _iterator11[_i11++];\n        } else {\n          _i11 = _iterator11.next();\n          if (_i11.done) break;\n          _ref12 = _i11.value;\n        }\n\n        var table = _ref12;\n\n        if (this.applyLookup(lookup.lookupType, table)) {\n          break;\n        }\n      }\n    }\n\n    this.glyphIterator.reset(options, glyphIndex);\n    return true;\n  };\n\n  OTProcessor.prototype.coverageIndex = function coverageIndex(coverage, glyph) {\n    if (glyph == null) {\n      glyph = this.glyphIterator.cur.id;\n    }\n\n    switch (coverage.version) {\n      case 1:\n        return coverage.glyphs.indexOf(glyph);\n\n      case 2:\n        for (var _iterator12 = coverage.rangeRecords, _isArray12 = Array.isArray(_iterator12), _i12 = 0, _iterator12 = _isArray12 ? _iterator12 : _iterator12[Symbol.iterator]();;) {\n          var _ref13;\n\n          if (_isArray12) {\n            if (_i12 >= _iterator12.length) break;\n            _ref13 = _iterator12[_i12++];\n          } else {\n            _i12 = _iterator12.next();\n            if (_i12.done) break;\n            _ref13 = _i12.value;\n          }\n\n          var range = _ref13;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.startCoverageIndex + glyph - range.start;\n          }\n        }\n\n        break;\n    }\n\n    return -1;\n  };\n\n  OTProcessor.prototype.match = function match(sequenceIndex, sequence, fn, matched) {\n    var pos = this.glyphIterator.index;\n    var glyph = this.glyphIterator.increment(sequenceIndex);\n    var idx = 0;\n\n    while (idx < sequence.length && glyph && fn(sequence[idx], glyph)) {\n      if (matched) {\n        matched.push(this.glyphIterator.index);\n      }\n\n      idx++;\n      glyph = this.glyphIterator.next();\n    }\n\n    this.glyphIterator.index = pos;\n    if (idx < sequence.length) {\n      return false;\n    }\n\n    return matched || true;\n  };\n\n  OTProcessor.prototype.sequenceMatches = function sequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      return component === glyph.id;\n    });\n  };\n\n  OTProcessor.prototype.sequenceMatchIndices = function sequenceMatchIndices(sequenceIndex, sequence) {\n    var _this = this;\n\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      // If the current feature doesn't apply to this glyph,\n      if (!(_this.currentFeature in glyph.features)) {\n        return false;\n      }\n\n      return component === glyph.id;\n    }, []);\n  };\n\n  OTProcessor.prototype.coverageSequenceMatches = function coverageSequenceMatches(sequenceIndex, sequence) {\n    var _this2 = this;\n\n    return this.match(sequenceIndex, sequence, function (coverage, glyph) {\n      return _this2.coverageIndex(coverage, glyph.id) >= 0;\n    });\n  };\n\n  OTProcessor.prototype.getClassID = function getClassID(glyph, classDef) {\n    switch (classDef.version) {\n      case 1:\n        // Class array\n        var i = glyph - classDef.startGlyph;\n        if (i >= 0 && i < classDef.classValueArray.length) {\n          return classDef.classValueArray[i];\n        }\n\n        break;\n\n      case 2:\n        for (var _iterator13 = classDef.classRangeRecord, _isArray13 = Array.isArray(_iterator13), _i13 = 0, _iterator13 = _isArray13 ? _iterator13 : _iterator13[Symbol.iterator]();;) {\n          var _ref14;\n\n          if (_isArray13) {\n            if (_i13 >= _iterator13.length) break;\n            _ref14 = _iterator13[_i13++];\n          } else {\n            _i13 = _iterator13.next();\n            if (_i13.done) break;\n            _ref14 = _i13.value;\n          }\n\n          var range = _ref14;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.class;\n          }\n        }\n\n        break;\n    }\n\n    return 0;\n  };\n\n  OTProcessor.prototype.classSequenceMatches = function classSequenceMatches(sequenceIndex, sequence, classDef) {\n    var _this3 = this;\n\n    return this.match(sequenceIndex, sequence, function (classID, glyph) {\n      return classID === _this3.getClassID(glyph.id, classDef);\n    });\n  };\n\n  OTProcessor.prototype.applyContext = function applyContext(table) {\n    switch (table.version) {\n      case 1:\n        var index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        var set$$1 = table.ruleSets[index];\n        for (var _iterator14 = set$$1, _isArray14 = Array.isArray(_iterator14), _i14 = 0, _iterator14 = _isArray14 ? _iterator14 : _iterator14[Symbol.iterator]();;) {\n          var _ref15;\n\n          if (_isArray14) {\n            if (_i14 >= _iterator14.length) break;\n            _ref15 = _iterator14[_i14++];\n          } else {\n            _i14 = _iterator14.next();\n            if (_i14.done) break;\n            _ref15 = _i14.value;\n          }\n\n          var rule = _ref15;\n\n          if (this.sequenceMatches(1, rule.input)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n        if (index === -1) {\n          return false;\n        }\n\n        set$$1 = table.classSet[index];\n        for (var _iterator15 = set$$1, _isArray15 = Array.isArray(_iterator15), _i15 = 0, _iterator15 = _isArray15 ? _iterator15 : _iterator15[Symbol.iterator]();;) {\n          var _ref16;\n\n          if (_isArray15) {\n            if (_i15 >= _iterator15.length) break;\n            _ref16 = _iterator15[_i15++];\n          } else {\n            _i15 = _iterator15.next();\n            if (_i15.done) break;\n            _ref16 = _i15.value;\n          }\n\n          var _rule = _ref16;\n\n          if (this.classSequenceMatches(1, _rule.classes, table.classDef)) {\n            return this.applyLookupList(_rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(0, table.coverages)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  OTProcessor.prototype.applyChainingContext = function applyChainingContext(table) {\n    switch (table.version) {\n      case 1:\n        var index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        var set$$1 = table.chainRuleSets[index];\n        for (var _iterator16 = set$$1, _isArray16 = Array.isArray(_iterator16), _i16 = 0, _iterator16 = _isArray16 ? _iterator16 : _iterator16[Symbol.iterator]();;) {\n          var _ref17;\n\n          if (_isArray16) {\n            if (_i16 >= _iterator16.length) break;\n            _ref17 = _iterator16[_i16++];\n          } else {\n            _i16 = _iterator16.next();\n            if (_i16.done) break;\n            _ref17 = _i16.value;\n          }\n\n          var rule = _ref17;\n\n          if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n        var rules = table.chainClassSet[index];\n        if (!rules) {\n          return false;\n        }\n\n        for (var _iterator17 = rules, _isArray17 = Array.isArray(_iterator17), _i17 = 0, _iterator17 = _isArray17 ? _iterator17 : _iterator17[Symbol.iterator]();;) {\n          var _ref18;\n\n          if (_isArray17) {\n            if (_i17 >= _iterator17.length) break;\n            _ref18 = _iterator17[_i17++];\n          } else {\n            _i17 = _iterator17.next();\n            if (_i17.done) break;\n            _ref18 = _i17.value;\n          }\n\n          var _rule2 = _ref18;\n\n          if (this.classSequenceMatches(-_rule2.backtrack.length, _rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, _rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + _rule2.input.length, _rule2.lookahead, table.lookaheadClassDef)) {\n            return this.applyLookupList(_rule2.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  return OTProcessor;\n}();\n\nvar GlyphInfo = function () {\n  function GlyphInfo(font, id) {\n    var codePoints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var features = arguments[3];\n    var stringIndex = arguments[4];\n    classCallCheck(this, GlyphInfo);\n\n    this._font = font;\n    this.codePoints = codePoints;\n    this.stringIndex = stringIndex;\n    this.id = id;\n\n    this.features = {};\n    if (Array.isArray(features)) {\n      for (var i = 0; i < features.length; i++) {\n        var feature = features[i];\n        this.features[feature] = true;\n      }\n    } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n      Object.assign(this.features, features);\n    }\n\n    this.ligatureID = null;\n    this.ligatureComponent = null;\n    this.isLigated = false;\n    this.cursiveAttachment = null;\n    this.markAttachment = null;\n    this.shaperInfo = null;\n    this.substituted = false;\n    this.isMultiplied = false;\n  }\n\n  GlyphInfo.prototype.copy = function copy() {\n    return new GlyphInfo(this._font, this.id, this.codePoints, this.features, this.stringIndex);\n  };\n\n  createClass(GlyphInfo, [{\n    key: 'id',\n    get: function get$$1() {\n      return this._id;\n    },\n    set: function set$$1(id) {\n      this._id = id;\n      this.substituted = true;\n\n      var GDEF = this._font.GDEF;\n      if (GDEF && GDEF.glyphClassDef) {\n        // TODO: clean this up\n        var classID = OTProcessor.prototype.getClassID(id, GDEF.glyphClassDef);\n        this.isBase = classID === 1;\n        this.isLigature = classID === 2;\n        this.isMark = classID === 3;\n        this.markAttachmentType = GDEF.markAttachClassDef ? OTProcessor.prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n      } else {\n        this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n        this.isBase = !this.isMark;\n        this.isLigature = this.codePoints.length > 1;\n        this.markAttachmentType = 0;\n      }\n    }\n  }, {\n    key: 'advanceWidth',\n    get: function get$$1() {\n      return this._font.getGlyph(this.id, this.codePoints).advanceWidth;\n    }\n  }]);\n  return GlyphInfo;\n}();\n\nvar _class$5;\nvar _temp$1;\n\n/**\n * This is a shaper for the Hangul script, used by the Korean language.\n * It does the following:\n *   - decompose if unsupported by the font:\n *     <LV>   -> <L,V>\n *     <LVT>  -> <L,V,T>\n *     <LV,T> -> <L,V,T>\n *\n *   - compose if supported by the font:\n *     <L,V>   -> <LV>\n *     <L,V,T> -> <LVT>\n *     <LV,T>  -> <LVT>\n *\n *   - reorder tone marks (S is any valid syllable):\n *     <S, M> -> <M, S>\n *\n *   - apply ljmo, vjmo, and tjmo OpenType features to decomposed Jamo sequences.\n *\n * This logic is based on the following documents:\n *   - http://www.microsoft.com/typography/OpenTypeDev/hangul/intro.htm\n *   - http://ktug.org/~nomos/harfbuzz-hangul/hangulshaper.pdf\n */\nvar HangulShaper = (_temp$1 = _class$5 = function (_DefaultShaper) {\n  inherits(HangulShaper, _DefaultShaper);\n\n  function HangulShaper() {\n    classCallCheck(this, HangulShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  HangulShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ljmo', 'vjmo', 'tjmo'], false);\n  };\n\n  HangulShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var state = 0;\n    var i = 0;\n    while (i < glyphs.length) {\n      var action = void 0;\n      var glyph = glyphs[i];\n      var code = glyph.codePoints[0];\n      var type = getType(code);var _STATE_TABLE$state$ty = STATE_TABLE$1[state][type];\n      action = _STATE_TABLE$state$ty[0];\n      state = _STATE_TABLE$state$ty[1];\n\n\n      switch (action) {\n        case DECOMPOSE:\n          // Decompose the composed syllable if it is not supported by the font.\n          if (!plan.font.hasGlyphForCodePoint(code)) {\n            i = decompose(glyphs, i, plan.font);\n          }\n          break;\n\n        case COMPOSE:\n          // Found a decomposed syllable. Try to compose if supported by the font.\n          i = compose(glyphs, i, plan.font);\n          break;\n\n        case TONE_MARK:\n          // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n          reorderToneMark(glyphs, i, plan.font);\n          break;\n\n        case INVALID:\n          // Tone mark has no valid syllable to attach to, so insert a dotted circle\n          i = insertDottedCircle(glyphs, i, plan.font);\n          break;\n      }\n\n      i++;\n    }\n  };\n\n  return HangulShaper;\n}(DefaultShaper), _class$5.zeroMarkWidths = 'NONE', _temp$1);\nvar HANGUL_BASE = 0xac00;\nvar HANGUL_END = 0xd7a4;\nvar HANGUL_COUNT = HANGUL_END - HANGUL_BASE + 1;\nvar L_BASE = 0x1100; // lead\nvar V_BASE = 0x1161; // vowel\nvar T_BASE = 0x11a7; // trail\nvar L_COUNT = 19;\nvar V_COUNT = 21;\nvar T_COUNT = 28;\nvar L_END = L_BASE + L_COUNT - 1;\nvar V_END = V_BASE + V_COUNT - 1;\nvar T_END = T_BASE + T_COUNT - 1;\nvar DOTTED_CIRCLE = 0x25cc;\n\nvar isL = function isL(code) {\n  return 0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\n};\nvar isV = function isV(code) {\n  return 0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\n};\nvar isT = function isT(code) {\n  return 0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\n};\nvar isTone = function isTone(code) {\n  return 0x302e <= code && code <= 0x302f;\n};\nvar isLVT = function isLVT(code) {\n  return HANGUL_BASE <= code && code <= HANGUL_END;\n};\nvar isLV = function isLV(code) {\n  return code - HANGUL_BASE < HANGUL_COUNT && (code - HANGUL_BASE) % T_COUNT === 0;\n};\nvar isCombiningL = function isCombiningL(code) {\n  return L_BASE <= code && code <= L_END;\n};\nvar isCombiningV = function isCombiningV(code) {\n  return V_BASE <= code && code <= V_END;\n};\nvar isCombiningT = function isCombiningT(code) {\n  return T_BASE + 1 && 1 <= code && code <= T_END;\n};\n\n// Character categories\nvar X = 0; // Other character\nvar L = 1; // Leading consonant\nvar V = 2; // Medial vowel\nvar T = 3; // Trailing consonant\nvar LV = 4; // Composed <LV> syllable\nvar LVT = 5; // Composed <LVT> syllable\nvar M = 6; // Tone mark\n\n// This function classifies a character using the above categories.\nfunction getType(code) {\n  if (isL(code)) {\n    return L;\n  }\n  if (isV(code)) {\n    return V;\n  }\n  if (isT(code)) {\n    return T;\n  }\n  if (isLV(code)) {\n    return LV;\n  }\n  if (isLVT(code)) {\n    return LVT;\n  }\n  if (isTone(code)) {\n    return M;\n  }\n  return X;\n}\n\n// State machine actions\nvar NO_ACTION = 0;\nvar DECOMPOSE = 1;\nvar COMPOSE = 2;\nvar TONE_MARK = 4;\nvar INVALID = 5;\n\n// Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\nvar STATE_TABLE$1 = [\n//       X                 L                 V                T                  LV                LVT               M\n// State 0: start state\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]],\n\n// State 1: <L>\n[[NO_ACTION, 0], [NO_ACTION, 1], [COMPOSE, 2], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]],\n\n// State 2: <L,V> or <LV>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [COMPOSE, 3], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]],\n\n// State 3: <L,V,T> or <LVT>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]]];\n\nfunction getGlyph(font, code, features) {\n  return new GlyphInfo(font, font.glyphForCodePoint(code).id, [code], features);\n}\n\nfunction decompose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyph.codePoints[0];\n\n  var s = code - HANGUL_BASE;\n  var t = T_BASE + s % T_COUNT;\n  s = s / T_COUNT | 0;\n  var l = L_BASE + s / V_COUNT | 0;\n  var v = V_BASE + s % V_COUNT;\n\n  // Don't decompose if all of the components are not available\n  if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== T_BASE && !font.hasGlyphForCodePoint(t)) {\n    return i;\n  }\n\n  // Replace the current glyph with decomposed L, V, and T glyphs,\n  // and apply the proper OpenType features to each component.\n  var ljmo = getGlyph(font, l, glyph.features);\n  ljmo.features.ljmo = true;\n\n  var vjmo = getGlyph(font, v, glyph.features);\n  vjmo.features.vjmo = true;\n\n  var insert = [ljmo, vjmo];\n\n  if (t > T_BASE) {\n    var tjmo = getGlyph(font, t, glyph.features);\n    tjmo.features.tjmo = true;\n    insert.push(tjmo);\n  }\n\n  glyphs.splice.apply(glyphs, [i, 1].concat(insert));\n  return i + insert.length - 1;\n}\n\nfunction compose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n  var type = getType(code);\n\n  var prev = glyphs[i - 1].codePoints[0];\n  var prevType = getType(prev);\n\n  // Figure out what type of syllable we're dealing with\n  var lv = void 0,\n      ljmo = void 0,\n      vjmo = void 0,\n      tjmo = void 0;\n  if (prevType === LV && type === T) {\n    // <LV,T>\n    lv = prev;\n    tjmo = glyph;\n  } else {\n    if (type === V) {\n      // <L,V>\n      ljmo = glyphs[i - 1];\n      vjmo = glyph;\n    } else {\n      // <L,V,T>\n      ljmo = glyphs[i - 2];\n      vjmo = glyphs[i - 1];\n      tjmo = glyph;\n    }\n\n    var l = ljmo.codePoints[0];\n    var v = vjmo.codePoints[0];\n\n    // Make sure L and V are combining characters\n    if (isCombiningL(l) && isCombiningV(v)) {\n      lv = HANGUL_BASE + ((l - L_BASE) * V_COUNT + (v - V_BASE)) * T_COUNT;\n    }\n  }\n\n  var t = tjmo && tjmo.codePoints[0] || T_BASE;\n  if (lv != null && (t === T_BASE || isCombiningT(t))) {\n    var s = lv + (t - T_BASE);\n\n    // Replace with a composed glyph if supported by the font,\n    // otherwise apply the proper OpenType features to each component.\n    if (font.hasGlyphForCodePoint(s)) {\n      var del = prevType === V ? 3 : 2;\n      glyphs.splice(i - del + 1, del, getGlyph(font, s, glyph.features));\n      return i - del + 1;\n    }\n  }\n\n  // Didn't compose (either a non-combining component or unsupported by font).\n  if (ljmo) {\n    ljmo.features.ljmo = true;\n  }\n  if (vjmo) {\n    vjmo.features.vjmo = true;\n  }\n  if (tjmo) {\n    tjmo.features.tjmo = true;\n  }\n\n  if (prevType === LV) {\n    // Sequence was originally <L,V>, which got combined earlier.\n    // Either the T was non-combining, or the LVT glyph wasn't supported.\n    // Decompose the glyph again and apply OT features.\n    decompose(glyphs, i - 1, font);\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction getLength(code) {\n  switch (getType(code)) {\n    case LV:\n    case LVT:\n      return 1;\n    case V:\n      return 2;\n    case T:\n      return 3;\n  }\n}\n\nfunction reorderToneMark(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n\n  // Move tone mark to the beginning of the previous syllable, unless it is zero width\n  if (font.glyphForCodePoint(code).advanceWidth === 0) {\n    return;\n  }\n\n  var prev = glyphs[i - 1].codePoints[0];\n  var len = getLength(prev);\n\n  glyphs.splice(i, 1);\n  return glyphs.splice(i - len, 0, glyph);\n}\n\nfunction insertDottedCircle(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n\n  if (font.hasGlyphForCodePoint(DOTTED_CIRCLE)) {\n    var dottedCircle = getGlyph(font, DOTTED_CIRCLE, glyph.features);\n\n    // If the tone mark is zero width, insert the dotted circle before, otherwise after\n    var idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n    glyphs.splice(idx, 0, dottedCircle);\n    i++;\n  }\n\n  return i;\n}\n\nvar stateTable = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 14, 15, 16, 17], [0, 0, 0, 18, 19, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 28, 29, 30, 31, 32, 33, 0, 34, 0, 0, 35, 36, 0, 0, 37, 0], [0, 0, 0, 38, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 39, 0, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 12, 43, 0, 0, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0], [0, 0, 0, 45, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 51, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 55, 56, 57, 58, 0, 59, 0, 0, 60, 61, 0, 0, 62, 0], [0, 0, 0, 4, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 63, 64, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 63, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 0, 2, 16, 0], [0, 0, 0, 18, 65, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 0, 0], [0, 0, 0, 69, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 73, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 75, 0, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 25, 79, 0, 0, 0, 0], [0, 0, 0, 18, 19, 20, 74, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 81, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 87, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 18, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 89, 90, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 89, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 0, 0], [0, 0, 0, 94, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 96, 0, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 35, 100, 0, 0, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 102, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 108, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 28, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 110, 111, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 110, 0, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 0, 0], [0, 0, 0, 0, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 0, 0, 115, 116, 117, 118, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 39, 0, 122, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 124, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0], [0, 39, 0, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 47, 47, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 128, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 129, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 135, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 136, 0, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 60, 140, 0, 0, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0], [0, 0, 0, 142, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 148, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 150, 151, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 150, 0, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 157, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 3, 4, 5, 159, 160, 8, 161, 0, 162, 0, 11, 12, 163, 0, 75, 16, 0], [0, 0, 0, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0], [0, 124, 64, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 124, 0, 0], [0, 0, 0, 0, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 167, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 172, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 75, 0, 176, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 178, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0], [0, 75, 0, 0, 0, 175, 179, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 180, 180, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 83, 83, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 182, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 183, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 191, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 0, 194, 0, 0, 0, 0], [0, 178, 90, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 178, 0, 0], [0, 0, 0, 0, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 198, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 96, 0, 202, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 204, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0], [0, 96, 0, 0, 0, 201, 205, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 206, 206, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 104, 104, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 208, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 209, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 217, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 0, 220, 0, 0, 0, 0], [0, 204, 111, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 204, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 223, 0, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 119, 225, 0, 0, 0, 0], [0, 0, 0, 115, 116, 117, 222, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 115, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 226, 64, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 226, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 39, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 44, 44, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 229, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 39, 0, 122, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 231, 231, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 131, 131, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 234, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 235, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 0, 0, 240, 241, 242, 243, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 136, 0, 247, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 249, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 249, 0, 0], [0, 136, 0, 0, 0, 246, 250, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 251, 251, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 144, 144, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 253, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 254, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 259, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 262, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 0, 265, 0, 0, 0, 0], [0, 249, 151, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 249, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 158, 225, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 222, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 155, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 43, 266, 266, 8, 161, 0, 24, 0, 0, 12, 267, 0, 0, 0, 0], [0, 75, 0, 176, 43, 268, 268, 269, 161, 0, 24, 0, 0, 0, 267, 0, 75, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 271, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 272, 0, 0, 0, 0, 0, 0, 0, 0], [0, 273, 274, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 273, 0, 0], [0, 0, 0, 40, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 121, 275, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 276, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 279, 0, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 173, 281, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 278, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 169, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 282, 90, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 282, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 80, 80, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 285, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 75, 0, 176, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 287, 287, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 288, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 185, 185, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 290, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 291, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 192, 281, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 278, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 189, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 76, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 175, 296, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 299, 0, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 199, 301, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 298, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 195, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 302, 111, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 302, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 96, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 101, 101, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 305, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 96, 0, 202, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 307, 307, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 308, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 211, 211, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 310, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 311, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 218, 301, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 298, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 215, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 97, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 201, 316, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 320, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 223, 0, 323, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 0, 0, 121, 324, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 325, 318, 326, 327, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 64, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 121, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0], [0, 0, 0, 0, 0, 329, 329, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 330, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 237, 237, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 332, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 333, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 337, 0, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 244, 339, 0, 0, 0, 0], [0, 0, 0, 240, 241, 242, 336, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 240, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 340, 151, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 340, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 136, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 141, 141, 57, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 343, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 136, 0, 247, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 345, 345, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 346, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 256, 256, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 348, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 349, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 263, 339, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 336, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 260, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 137, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 246, 354, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 355, 90, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 355, 0, 0], [0, 0, 0, 0, 0, 356, 356, 269, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 357, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 363, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 366, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 40, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 0, 281, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 372, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 279, 0, 375, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 0, 0, 175, 376, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 377, 370, 378, 379, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 90, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 175, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0], [0, 0, 0, 0, 0, 381, 381, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 293, 293, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 384, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 385, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 76, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 0, 301, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 390, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 299, 0, 393, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 0, 0, 201, 394, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 395, 388, 396, 397, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 111, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 201, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0], [0, 0, 0, 0, 0, 399, 399, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 313, 313, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 402, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 403, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 97, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 407, 0, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 321, 409, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 406, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 0, 0, 317, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 410, 64, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 410, 0, 0], [0, 223, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 323, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 328, 409, 0, 0, 0, 0], [0, 0, 0, 325, 318, 326, 406, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 325, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0], [0, 0, 0, 0, 0, 411, 411, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 412, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 413, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 0, 339, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 417, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 337, 0, 420, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 0, 0, 246, 421, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 422, 415, 423, 424, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 151, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 246, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0], [0, 0, 0, 0, 0, 426, 426, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 427, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 351, 351, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 429, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 430, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 137, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 434, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 180, 180, 269, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 359, 359, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 437, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 438, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 443, 274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 443, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 367, 225, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 445, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 364, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 448, 0, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 373, 450, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 447, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 0, 0, 369, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 451, 90, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 451, 0, 0], [0, 279, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 375, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 380, 450, 0, 0, 0, 0], [0, 0, 0, 377, 370, 378, 447, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 377, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0], [0, 0, 0, 0, 0, 452, 452, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 453, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 454, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 457, 0, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 391, 459, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 456, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 0, 0, 387, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 460, 111, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 460, 0, 0], [0, 299, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 393, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 398, 459, 0, 0, 0, 0], [0, 0, 0, 395, 388, 396, 456, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 395, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0], [0, 0, 0, 0, 0, 461, 461, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 462, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 463, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 0, 409, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 467, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 407, 0, 470, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 0, 0, 121, 471, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 472, 465, 473, 474, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 0, 0], [0, 0, 0, 0, 0, 0, 476, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 479, 0, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 418, 481, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 478, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 0, 0, 414, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 482, 151, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 482, 0, 0], [0, 337, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 420, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 425, 481, 0, 0, 0, 0], [0, 0, 0, 422, 415, 423, 478, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 422, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0], [0, 0, 0, 0, 0, 483, 483, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 484, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 485, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 435, 225, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 445, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 432, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 486, 486, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 487, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 440, 440, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 489, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 490, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 497, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 0, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 0, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 0, 450, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 502, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 448, 0, 505, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 0, 0, 175, 506, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 507, 500, 508, 509, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292, 0, 0], [0, 0, 0, 0, 0, 0, 511, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 0, 459, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 515, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 457, 0, 518, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 0, 0, 201, 519, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 520, 513, 521, 522, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 312, 0, 0], [0, 0, 0, 0, 0, 0, 524, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 527, 0, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 468, 529, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 526, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 0, 0, 464, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 530, 64, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 530, 0, 0], [0, 407, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 470, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 475, 529, 0, 0, 0, 0], [0, 0, 0, 472, 465, 473, 526, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 472, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0], [0, 0, 0, 0, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 0, 481, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 534, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 479, 0, 537, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 0, 0, 246, 538, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 539, 532, 540, 541, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 0, 0], [0, 0, 0, 0, 0, 0, 543, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 358, 0, 0], [0, 0, 0, 0, 0, 544, 544, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 545, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 492, 492, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 547, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 548, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 274, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 368, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 553, 0, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 503, 555, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 552, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 0, 0, 499, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 556, 90, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 556, 0, 0], [0, 448, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 505, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 510, 555, 0, 0, 0, 0], [0, 0, 0, 507, 500, 508, 552, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 507, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 559, 0, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 516, 561, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 558, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 0, 0, 512, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 562, 111, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 562, 0, 0], [0, 457, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 518, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 523, 561, 0, 0, 0, 0], [0, 0, 0, 520, 513, 521, 558, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 520, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0], [0, 0, 0, 0, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 0, 529, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 565, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 527, 0, 567, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 0, 0, 121, 568, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 569, 66, 570, 571, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 575, 0, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 535, 577, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 574, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 0, 0, 531, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 578, 151, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 578, 0, 0], [0, 479, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 537, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 542, 577, 0, 0, 0, 0], [0, 0, 0, 539, 532, 540, 574, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 539, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0], [0, 0, 0, 0, 0, 0, 0, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 439, 0, 0], [0, 0, 0, 0, 0, 579, 579, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 580, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 581, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 0, 555, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 584, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 553, 0, 586, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 0, 0, 175, 587, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 588, 91, 589, 590, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 0, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 0, 561, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 594, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 559, 0, 596, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 0, 0, 201, 597, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 598, 112, 599, 600, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 566, 165, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 67, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 0, 0, 563, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 527, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 567, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 572, 165, 0, 0, 0, 0], [0, 0, 0, 569, 66, 570, 67, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 569, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 0, 577, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 605, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 575, 0, 607, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 0, 0, 246, 608, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 609, 152, 610, 611, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 491, 0, 0], [0, 0, 0, 0, 0, 0, 613, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 585, 194, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 92, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 0, 0, 582, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 553, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 586, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 591, 194, 0, 0, 0, 0], [0, 0, 0, 588, 91, 589, 92, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 588, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 595, 220, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 113, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 0, 0, 592, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 559, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 596, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 601, 220, 0, 0, 0, 0], [0, 0, 0, 598, 112, 599, 113, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 598, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 606, 265, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 153, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 0, 0, 603, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 575, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 607, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 612, 265, 0, 0, 0, 0], [0, 0, 0, 609, 152, 610, 153, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 609, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 549, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0]];\nvar accepting = [false, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, false, true, true, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, false, true, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, false, false, true, false, true, true, false, true, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, true, true, false, false, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, false, false, true, true, false, false, true, true, true, false, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, false, false, false, true, true, false, true, true, true, true, true, true, false, true, true, false, true, false, true, true, true, true, false, false, false, false, false, false, false, true, true, false, false, true, true, false, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, true, false, true, true, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, false, true, true, false, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, true, false, true, true, true, false, true, true, true, true, true, false, true, true, true, true, false, true, true, true, true, true, false, true, true, false, true, true, true];\nvar tags = [[], [\"broken_cluster\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"symbol_cluster\"], [], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [], [\"broken_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [], [\"consonant_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [], [\"vowel_syllable\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [\"standalone_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"standalone_cluster\"]];\nvar indicMachine = {\n\tstateTable: stateTable,\n\taccepting: accepting,\n\ttags: tags\n};\n\nvar categories = [\"O\", \"IND\", \"S\", \"GB\", \"B\", \"FM\", \"CGJ\", \"VMAbv\", \"VMPst\", \"VAbv\", \"VPst\", \"CMBlw\", \"VPre\", \"VBlw\", \"H\", \"VMBlw\", \"CMAbv\", \"MBlw\", \"CS\", \"R\", \"SUB\", \"MPst\", \"MPre\", \"FAbv\", \"FPst\", \"FBlw\", \"SMAbv\", \"SMBlw\", \"VMPre\", \"ZWNJ\", \"ZWJ\", \"WJ\", \"VS\", \"N\", \"HN\", \"MAbv\"];\nvar decompositions$1 = { \"2507\": [2503, 2494], \"2508\": [2503, 2519], \"2888\": [2887, 2902], \"2891\": [2887, 2878], \"2892\": [2887, 2903], \"3018\": [3014, 3006], \"3019\": [3015, 3006], \"3020\": [3014, 3031], \"3144\": [3142, 3158], \"3264\": [3263, 3285], \"3271\": [3270, 3285], \"3272\": [3270, 3286], \"3274\": [3270, 3266], \"3275\": [3270, 3266, 3285], \"3402\": [3398, 3390], \"3403\": [3399, 3390], \"3404\": [3398, 3415], \"3546\": [3545, 3530], \"3548\": [3545, 3535], \"3549\": [3545, 3535, 3530], \"3550\": [3545, 3551], \"3635\": [3661, 3634], \"3763\": [3789, 3762], \"3955\": [3953, 3954], \"3957\": [3953, 3956], \"3958\": [4018, 3968], \"3959\": [4018, 3953, 3968], \"3960\": [4019, 3968], \"3961\": [4019, 3953, 3968], \"3969\": [3953, 3968], \"6971\": [6970, 6965], \"6973\": [6972, 6965], \"6976\": [6974, 6965], \"6977\": [6975, 6965], \"6979\": [6978, 6965], \"69934\": [69937, 69927], \"69935\": [69938, 69927], \"70475\": [70471, 70462], \"70476\": [70471, 70487], \"70843\": [70841, 70842], \"70844\": [70841, 70832], \"70846\": [70841, 70845], \"71098\": [71096, 71087], \"71099\": [71097, 71087] };\nvar stateTable$1 = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 3, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 2, 0, 24, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 27, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 39, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 49, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 53, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0]];\nvar accepting$1 = [false, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true];\nvar tags$1 = [[], [\"broken_cluster\"], [\"independent_cluster\"], [\"symbol_cluster\"], [\"standard_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"numeral_cluster\"], [\"broken_cluster\"], [\"independent_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"virama_terminated_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"numeral_cluster\"], [\"number_joiner_terminated_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"numeral_cluster\"]];\nvar useData = {\n\tcategories: categories,\n\tdecompositions: decompositions$1,\n\tstateTable: stateTable$1,\n\taccepting: accepting$1,\n\ttags: tags$1\n};\n\n// Cateories used in the OpenType spec:\n// https://www.microsoft.com/typography/otfntdev/devanot/shaping.aspx\nvar CATEGORIES = {\n  X: 1 << 0,\n  C: 1 << 1,\n  V: 1 << 2,\n  N: 1 << 3,\n  H: 1 << 4,\n  ZWNJ: 1 << 5,\n  ZWJ: 1 << 6,\n  M: 1 << 7,\n  SM: 1 << 8,\n  VD: 1 << 9,\n  A: 1 << 10,\n  Placeholder: 1 << 11,\n  Dotted_Circle: 1 << 12,\n  RS: 1 << 13, // Register Shifter, used in Khmer OT spec.\n  Coeng: 1 << 14, // Khmer-style Virama.\n  Repha: 1 << 15, // Atomically-encoded logical or visual repha.\n  Ra: 1 << 16,\n  CM: 1 << 17, // Consonant-Medial.\n  Symbol: 1 << 18 // Avagraha, etc that take marks (SM,A,VD).\n};\n\n// Visual positions in a syllable from left to right.\nvar POSITIONS = {\n  Start: 1 << 0,\n\n  Ra_To_Become_Reph: 1 << 1,\n  Pre_M: 1 << 2,\n  Pre_C: 1 << 3,\n\n  Base_C: 1 << 4,\n  After_Main: 1 << 5,\n\n  Above_C: 1 << 6,\n\n  Before_Sub: 1 << 7,\n  Below_C: 1 << 8,\n  After_Sub: 1 << 9,\n\n  Before_Post: 1 << 10,\n  Post_C: 1 << 11,\n  After_Post: 1 << 12,\n\n  Final_C: 1 << 13,\n  SMVD: 1 << 14,\n\n  End: 1 << 15\n};\n\nvar CONSONANT_FLAGS = CATEGORIES.C | CATEGORIES.Ra | CATEGORIES.CM | CATEGORIES.V | CATEGORIES.Placeholder | CATEGORIES.Dotted_Circle;\nvar JOINER_FLAGS = CATEGORIES.ZWJ | CATEGORIES.ZWNJ;\nvar HALANT_OR_COENG_FLAGS = CATEGORIES.H | CATEGORIES.Coeng;\n\nvar INDIC_CONFIGS = {\n  Default: {\n    hasOldSpec: false,\n    virama: 0,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Devanagari: {\n    hasOldSpec: true,\n    virama: 0x094D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Bengali: {\n    hasOldSpec: true,\n    virama: 0x09CD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Gurmukhi: {\n    hasOldSpec: true,\n    virama: 0x0A4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Gujarati: {\n    hasOldSpec: true,\n    virama: 0x0ACD,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Oriya: {\n    hasOldSpec: true,\n    virama: 0x0B4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Tamil: {\n    hasOldSpec: true,\n    virama: 0x0BCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Telugu: {\n    hasOldSpec: true,\n    virama: 0x0C4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Explicit',\n    blwfMode: 'Post_Only'\n  },\n\n  Kannada: {\n    hasOldSpec: true,\n    virama: 0x0CCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Post_Only'\n  },\n\n  Malayalam: {\n    hasOldSpec: true,\n    virama: 0x0D4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Log_Repha',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  // Handled by UniversalShaper\n  // Sinhala: {\n  //   hasOldSpec: false,\n  //   virama: 0x0DCA,\n  //   basePos: 'Last_Sinhala',\n  //   rephPos: POSITIONS.After_Main,\n  //   rephMode: 'Explicit',\n  //   blwfMode: 'Pre_And_Post'\n  // },\n\n  Khmer: {\n    hasOldSpec: false,\n    virama: 0x17D2,\n    basePos: 'First',\n    rephPos: POSITIONS.Ra_To_Become_Reph,\n    rephMode: 'Vis_Repha',\n    blwfMode: 'Pre_And_Post'\n  }\n};\n\n// Additional decompositions that aren't in Unicode\nvar INDIC_DECOMPOSITIONS = {\n  // Khmer\n  0x17BE: [0x17C1, 0x17BE],\n  0x17BF: [0x17C1, 0x17BF],\n  0x17C0: [0x17C1, 0x17C0],\n  0x17C4: [0x17C1, 0x17C4],\n  0x17C5: [0x17C1, 0x17C5]\n};\n\nvar type$1 = \"Buffer\";\nvar data$1 = [0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 194, 160, 1, 177, 13, 78, 242, 237, 157, 127, 172, 29, 69, 21, 199, 247, 245, 222, 119, 127, 188, 119, 251, 110, 95, 133, 68, 98, 251, 71, 67, 137, 49, 197, 152, 166, 16, 107, 138, 105, 21, 9, 34, 81, 219, 24, 132, 104, 177, 6, 67, 176, 36, 4, 106, 48, 109, 132, 82, 130, 63, 10, 216, 31, 198, 146, 148, 88, 19, 172, 37, 65, 44, 137, 40, 38, 160, 173, 41, 70, 146, 106, 172, 169, 70, 76, 99, 180, 182, 9, 105, 32, 169, 5, 98, 65, 41, 45, 224, 119, 238, 206, 188, 123, 238, 220, 153, 217, 249, 181, 187, 239, 209, 61, 201, 39, 187, 59, 59, 59, 115, 230, 156, 51, 179, 179, 179, 123, 223, 59, 94, 75, 146, 151, 192, 171, 224, 13, 48, 167, 158, 36, 239, 5, 243, 193, 37, 224, 21, 164, 253, 175, 22, 190, 189, 24, 101, 45, 2, 75, 192, 50, 135, 114, 175, 64, 222, 79, 128, 107, 192, 42, 112, 61, 88, 3, 110, 6, 183, 129, 175, 131, 141, 134, 242, 150, 226, 220, 10, 240, 77, 240, 93, 176, 25, 108, 7, 59, 193, 35, 224, 56, 242, 60, 134, 237, 207, 64, 194, 121, 154, 111, 15, 128, 131, 224, 79, 224, 111, 224, 40, 56, 1, 78, 130, 211, 224, 44, 168, 141, 38, 73, 27, 76, 130, 139, 192, 2, 240, 126, 240, 33, 240, 97, 176, 28, 92, 5, 62, 13, 174, 3, 55, 130, 155, 193, 109, 224, 78, 112, 55, 184, 15, 60, 8, 190, 15, 126, 0, 126, 4, 126, 2, 158, 228, 199, 207, 128, 103, 193, 239, 193, 159, 193, 17, 112, 12, 188, 8, 94, 1, 175, 129, 115, 163, 169, 206, 245, 70, 146, 116, 192, 5, 141, 244, 120, 30, 182, 11, 193, 165, 96, 49, 88, 10, 150, 131, 171, 249, 249, 207, 98, 123, 61, 88, 3, 110, 1, 183, 55, 82, 155, 172, 231, 91, 91, 54, 242, 252, 223, 198, 246, 46, 176, 149, 31, 63, 192, 183, 155, 80, 215, 14, 150, 94, 239, 95, 179, 203, 177, 14, 27, 118, 144, 50, 247, 96, 127, 47, 120, 10, 236, 3, 191, 3, 127, 4, 127, 5, 255, 0, 47, 128, 147, 36, 255, 155, 124, 123, 154, 167, 109, 99, 62, 198, 126, 173, 153, 36, 227, 224, 61, 205, 212, 94, 239, 195, 246, 226, 102, 154, 103, 17, 79, 91, 130, 237, 50, 112, 101, 51, 141, 39, 17, 75, 215, 226, 120, 37, 184, 1, 172, 1, 183, 128, 219, 249, 53, 235, 249, 118, 19, 182, 155, 121, 121, 226, 186, 173, 56, 222, 209, 52, 183, 117, 87, 198, 121, 106, 227, 31, 35, 239, 22, 110, 251, 245, 216, 254, 20, 199, 191, 0, 191, 38, 101, 252, 22, 251, 127, 0, 247, 224, 124, 7, 252, 69, 81, 254, 223, 45, 234, 180, 101, 173, 136, 5, 148, 121, 204, 177, 220, 151, 34, 234, 81, 20, 255, 134, 206, 255, 1, 111, 128, 164, 149, 36, 163, 173, 52, 125, 111, 61, 181, 185, 156, 127, 54, 63, 47, 250, 226, 5, 56, 158, 7, 22, 114, 104, 222, 69, 173, 52, 110, 150, 144, 244, 179, 6, 93, 88, 108, 47, 35, 121, 87, 241, 250, 175, 145, 244, 248, 56, 242, 92, 77, 242, 49, 93, 133, 223, 62, 211, 82, 235, 45, 48, 157, 171, 168, 168, 240, 99, 91, 213, 175, 42, 42, 42, 42, 42, 42, 42, 42, 42, 28, 217, 198, 215, 25, 202, 214, 67, 102, 39, 127, 214, 189, 174, 101, 127, 205, 91, 154, 244, 55, 53, 233, 95, 224, 207, 202, 95, 198, 246, 171, 224, 14, 176, 1, 220, 11, 238, 7, 91, 193, 67, 224, 135, 224, 81, 240, 4, 120, 170, 149, 174, 45, 237, 195, 246, 0, 56, 8, 14, 131, 35, 224, 40, 56, 1, 78, 181, 210, 245, 156, 215, 177, 125, 139, 61, 223, 183, 241, 12, 15, 46, 108, 167, 245, 206, 107, 247, 117, 88, 136, 253, 75, 219, 246, 109, 172, 168, 168, 168, 168, 8, 135, 173, 91, 94, 134, 177, 247, 76, 173, 191, 222, 94, 22, 101, 219, 162, 162, 162, 34, 14, 175, 145, 119, 82, 91, 121, 255, 94, 134, 113, 230, 74, 112, 173, 52, 215, 251, 156, 227, 220, 175, 195, 199, 138, 83, 188, 142, 183, 193, 23, 219, 253, 247, 169, 95, 193, 254, 173, 82, 153, 119, 180, 251, 239, 117, 40, 236, 189, 204, 6, 156, 187, 119, 26, 204, 63, 147, 57, 41, 43, 192, 157, 96, 127, 55, 155, 45, 200, 119, 72, 147, 247, 85, 164, 47, 156, 76, 146, 213, 224, 33, 240, 252, 228, 224, 249, 227, 56, 223, 153, 139, 185, 56, 88, 13, 238, 29, 75, 146, 103, 65, 50, 14, 95, 129, 187, 192, 10, 28, 239, 227, 219, 163, 124, 75, 153, 223, 25, 78, 147, 185, 17, 121, 54, 146, 124, 191, 193, 254, 57, 126, 124, 197, 236, 36, 185, 27, 236, 7, 15, 143, 196, 229, 28, 47, 243, 178, 9, 216, 115, 34, 221, 223, 52, 161, 214, 241, 128, 38, 189, 162, 162, 162, 162, 34, 127, 222, 41, 121, 12, 142, 125, 255, 113, 97, 121, 183, 252, 250, 203, 126, 254, 43, 155, 171, 192, 253, 152, 7, 126, 175, 61, 252, 60, 202, 190, 243, 121, 24, 233, 187, 200, 60, 113, 55, 246, 31, 111, 167, 243, 209, 45, 138, 242, 196, 247, 119, 236, 219, 177, 51, 252, 26, 246, 188, 205, 190, 169, 99, 229, 253, 156, 151, 245, 43, 69, 125, 12, 86, 230, 254, 246, 224, 243, 241, 205, 124, 251, 92, 123, 184, 62, 155, 57, 38, 251, 102, 138, 173, 119, 179, 57, 179, 124, 253, 33, 148, 121, 24, 28, 105, 247, 231, 198, 199, 120, 61, 47, 98, 251, 50, 248, 175, 164, 207, 219, 237, 254, 60, 188, 129, 62, 52, 27, 92, 56, 70, 230, 180, 60, 223, 124, 158, 118, 134, 127, 247, 181, 27, 233, 151, 32, 237, 131, 99, 195, 250, 95, 62, 214, 63, 62, 202, 203, 254, 232, 152, 157, 15, 5, 247, 248, 248, 31, 117, 124, 10, 172, 2, 159, 7, 95, 2, 55, 129, 29, 56, 183, 22, 219, 117, 96, 195, 88, 58, 79, 254, 14, 216, 198, 206, 129, 93, 96, 15, 216, 11, 158, 36, 122, 62, 51, 150, 206, 167, 15, 130, 195, 224, 8, 56, 10, 78, 128, 83, 22, 237, 121, 29, 121, 206, 128, 145, 113, 245, 249, 7, 224, 203, 54, 206, 77, 142, 247, 143, 47, 194, 254, 2, 126, 252, 32, 142, 63, 128, 253, 197, 252, 248, 35, 216, 126, 76, 83, 22, 181, 255, 82, 69, 108, 217, 194, 174, 223, 211, 40, 191, 47, 219, 232, 89, 36, 91, 13, 245, 127, 114, 92, 127, 221, 59, 138, 126, 58, 19, 219, 175, 226, 95, 205, 119, 81, 28, 120, 182, 37, 70, 221, 172, 191, 177, 241, 110, 37, 233, 219, 236, 158, 116, 3, 137, 171, 213, 216, 191, 9, 156, 203, 41, 158, 178, 218, 183, 174, 158, 234, 120, 171, 52, 254, 124, 205, 48, 30, 157, 15, 80, 63, 126, 3, 182, 216, 52, 158, 95, 159, 119, 141, 63, 241, 109, 229, 183, 52, 249, 46, 39, 247, 249, 117, 26, 63, 138, 243, 108, 222, 177, 221, 112, 126, 61, 223, 103, 191, 97, 217, 140, 178, 86, 242, 227, 237, 216, 223, 9, 30, 49, 140, 145, 50, 187, 45, 126, 75, 241, 114, 14, 223, 204, 63, 10, 29, 159, 152, 65, 241, 172, 107, 199, 47, 103, 72, 27, 88, 140, 236, 135, 174, 207, 129, 67, 224, 121, 240, 79, 174, 251, 11, 22, 109, 96, 109, 165, 191, 225, 96, 191, 17, 184, 15, 233, 39, 199, 211, 216, 103, 223, 95, 236, 37, 249, 214, 146, 107, 79, 35, 207, 217, 241, 52, 109, 164, 227, 222, 183, 92, 17, 191, 101, 88, 105, 81, 46, 123, 222, 104, 119, 6, 211, 232, 239, 31, 196, 111, 186, 68, 219, 39, 121, 94, 246, 108, 177, 143, 204, 253, 22, 75, 115, 212, 139, 120, 59, 31, 15, 152, 31, 78, 39, 98, 247, 255, 233, 194, 188, 214, 187, 187, 125, 148, 167, 13, 237, 220, 114, 158, 216, 64, 135, 203, 220, 42, 180, 46, 213, 250, 199, 76, 98, 129, 52, 94, 186, 216, 167, 232, 57, 117, 53, 22, 198, 133, 197, 238, 177, 218, 72, 194, 150, 64, 103, 26, 245, 241, 193, 125, 27, 202, 214, 121, 186, 114, 190, 75, 217, 246, 143, 22, 155, 77, 206, 76, 208, 117, 26, 35, 36, 235, 124, 86, 190, 46, 57, 159, 149, 207, 87, 207, 178, 109, 53, 211, 218, 225, 226, 179, 233, 96, 15, 149, 190, 101, 235, 23, 203, 7, 58, 41, 91, 23, 31, 157, 203, 210, 127, 186, 199, 68, 153, 54, 41, 35, 118, 108, 164, 108, 189, 203, 182, 81, 153, 177, 84, 134, 253, 169, 222, 121, 213, 239, 43, 101, 196, 196, 68, 107, 144, 250, 172, 8, 140, 68, 100, 142, 93, 190, 118, 51, 165, 133, 103, 233, 137, 185, 233, 254, 172, 102, 63, 221, 133, 86, 189, 127, 109, 207, 70, 99, 28, 110, 35, 154, 55, 83, 55, 110, 147, 54, 41, 143, 225, 250, 156, 236, 107, 107, 217, 199, 137, 169, 44, 142, 16, 221, 177, 171, 15, 123, 215, 26, 252, 43, 206, 83, 81, 149, 193, 68, 248, 183, 195, 253, 219, 81, 248, 79, 200, 44, 158, 71, 72, 135, 231, 103, 254, 149, 235, 83, 73, 167, 57, 156, 54, 212, 38, 201, 191, 83, 249, 44, 253, 43, 226, 59, 100, 108, 177, 245, 239, 80, 91, 10, 246, 175, 156, 87, 222, 103, 194, 252, 43, 108, 47, 252, 43, 144, 69, 78, 167, 254, 165, 146, 53, 38, 235, 218, 99, 188, 198, 210, 191, 83, 227, 42, 233, 143, 245, 201, 12, 133, 36, 113, 237, 191, 194, 167, 218, 227, 130, 252, 107, 219, 127, 101, 68, 63, 18, 125, 74, 248, 88, 229, 223, 144, 251, 45, 181, 137, 28, 75, 174, 227, 179, 177, 142, 140, 88, 106, 206, 144, 241, 217, 213, 191, 163, 22, 227, 243, 168, 69, 255, 85, 201, 168, 102, 76, 136, 61, 62, 119, 147, 126, 191, 13, 153, 235, 49, 223, 138, 252, 54, 227, 179, 169, 47, 235, 238, 149, 98, 95, 78, 83, 229, 147, 211, 180, 233, 150, 243, 47, 89, 104, 95, 86, 141, 223, 226, 222, 60, 75, 234, 219, 140, 134, 101, 255, 86, 249, 95, 39, 121, 188, 151, 80, 137, 60, 159, 238, 213, 29, 50, 86, 231, 208, 159, 93, 253, 201, 250, 115, 179, 57, 12, 237, 83, 52, 93, 62, 110, 100, 244, 103, 122, 157, 41, 166, 168, 93, 232, 53, 46, 254, 205, 18, 27, 159, 207, 36, 255, 234, 242, 10, 17, 227, 181, 141, 127, 233, 177, 216, 183, 241, 175, 60, 246, 170, 100, 74, 215, 8, 254, 237, 118, 83, 124, 196, 213, 23, 190, 253, 139, 250, 64, 220, 47, 117, 48, 201, 26, 47, 109, 218, 155, 53, 94, 210, 152, 12, 157, 15, 153, 198, 74, 113, 79, 53, 218, 196, 113, 190, 107, 59, 39, 142, 230, 103, 151, 62, 73, 98, 67, 228, 179, 209, 131, 138, 170, 143, 233, 214, 47, 196, 57, 177, 21, 107, 25, 170, 245, 16, 109, 44, 56, 142, 167, 116, 125, 195, 85, 98, 251, 194, 151, 174, 193, 166, 58, 59, 83, 97, 215, 211, 126, 58, 171, 57, 184, 142, 196, 182, 141, 218, 32, 44, 77, 172, 41, 249, 172, 11, 153, 236, 41, 246, 109, 210, 109, 125, 147, 229, 47, 249, 60, 45, 223, 164, 139, 171, 253, 19, 158, 151, 61, 75, 211, 231, 105, 149, 253, 133, 111, 152, 200, 246, 103, 63, 19, 18, 227, 76, 79, 23, 199, 184, 87, 197, 80, 158, 180, 56, 186, 243, 214, 235, 78, 14, 113, 70, 227, 183, 203, 109, 40, 215, 203, 76, 82, 203, 136, 13, 235, 113, 50, 194, 88, 76, 197, 103, 13, 152, 174, 245, 178, 251, 51, 139, 147, 134, 78, 247, 73, 123, 122, 237, 119, 200, 159, 7, 162, 63, 152, 160, 107, 213, 170, 123, 185, 79, 236, 170, 164, 236, 49, 191, 135, 229, 252, 65, 23, 43, 170, 251, 42, 139, 157, 222, 220, 154, 61, 247, 79, 12, 142, 85, 83, 176, 186, 61, 231, 85, 116, 109, 66, 213, 6, 89, 31, 99, 204, 142, 164, 121, 198, 107, 41, 34, 143, 184, 86, 164, 83, 104, 89, 153, 117, 217, 48, 57, 108, 75, 85, 189, 140, 22, 175, 191, 167, 135, 165, 253, 196, 181, 242, 123, 152, 172, 24, 87, 73, 87, 218, 15, 69, 85, 142, 77, 249, 73, 224, 245, 161, 245, 231, 221, 62, 159, 114, 139, 128, 74, 222, 117, 248, 158, 207, 171, 189, 178, 248, 172, 99, 244, 174, 147, 210, 108, 158, 73, 98, 213, 175, 130, 214, 111, 211, 238, 188, 234, 119, 149, 24, 246, 103, 226, 93, 127, 81, 247, 104, 155, 117, 149, 8, 107, 4, 194, 247, 166, 245, 24, 25, 250, 172, 49, 181, 38, 195, 239, 253, 189, 253, 217, 41, 34, 93, 85, 6, 155, 35, 116, 44, 238, 75, 98, 46, 58, 101, 255, 192, 117, 207, 208, 49, 160, 168, 241, 59, 70, 253, 177, 245, 103, 244, 236, 91, 84, 31, 80, 244, 99, 155, 103, 25, 121, 238, 79, 69, 164, 247, 222, 81, 27, 158, 25, 76, 107, 30, 42, 123, 90, 63, 99, 198, 180, 137, 199, 90, 160, 235, 253, 110, 200, 126, 30, 62, 163, 162, 123, 158, 160, 107, 71, 186, 103, 12, 149, 127, 101, 196, 188, 87, 171, 191, 195, 243, 135, 210, 207, 57, 198, 183, 170, 237, 81, 234, 215, 197, 133, 56, 239, 242, 28, 61, 225, 183, 190, 160, 91, 39, 84, 173, 17, 54, 106, 131, 215, 210, 216, 9, 29, 255, 67, 175, 167, 239, 194, 196, 61, 207, 251, 254, 155, 67, 12, 201, 182, 203, 242, 135, 156, 62, 94, 55, 151, 31, 210, 159, 92, 97, 247, 253, 86, 210, 95, 139, 82, 225, 122, 31, 180, 246, 91, 158, 247, 50, 197, 125, 70, 229, 11, 214, 215, 6, 214, 78, 70, 236, 237, 205, 230, 77, 202, 58, 53, 99, 131, 109, 220, 100, 221, 31, 101, 25, 154, 63, 104, 108, 97, 138, 73, 211, 152, 68, 215, 45, 91, 53, 115, 221, 46, 247, 233, 129, 24, 39, 250, 134, 206, 159, 178, 100, 234, 219, 219, 49, 62, 255, 29, 243, 96, 174, 132, 42, 77, 140, 99, 99, 131, 125, 91, 148, 97, 235, 207, 88, 184, 214, 23, 122, 158, 230, 51, 109, 77, 215, 132, 180, 51, 143, 178, 109, 235, 179, 173, 195, 75, 151, 81, 208, 232, 31, 199, 184, 23, 248, 232, 49, 213, 110, 139, 103, 76, 37, 205, 196, 249, 55, 173, 190, 190, 163, 18, 211, 231, 62, 18, 90, 87, 12, 253, 99, 180, 195, 86, 92, 117, 170, 119, 226, 182, 81, 27, 183, 57, 83, 84, 61, 42, 95, 250, 92, 155, 87, 172, 196, 142, 185, 60, 237, 230, 83, 135, 141, 174, 190, 82, 100, 204, 248, 232, 80, 196, 249, 162, 37, 111, 155, 103, 181, 189, 104, 253, 99, 148, 17, 59, 22, 243, 142, 233, 188, 218, 90, 100, 125, 182, 229, 229, 41, 54, 122, 210, 247, 32, 242, 247, 4, 242, 179, 42, 253, 93, 83, 158, 235, 127, 170, 119, 115, 58, 123, 133, 250, 62, 215, 117, 14, 151, 53, 73, 213, 121, 221, 154, 133, 106, 13, 97, 164, 255, 155, 19, 151, 248, 138, 246, 59, 224, 28, 215, 138, 92, 214, 89, 109, 126, 75, 68, 227, 38, 120, 61, 212, 103, 125, 194, 102, 205, 130, 147, 21, 207, 165, 188, 119, 177, 137, 103, 5, 173, 90, 159, 41, 251, 231, 60, 126, 152, 214, 209, 92, 223, 127, 119, 73, 127, 49, 174, 161, 234, 236, 18, 217, 230, 166, 53, 75, 186, 150, 56, 240, 126, 168, 238, 127, 63, 11, 233, 47, 38, 127, 139, 113, 222, 170, 221, 1, 241, 222, 235, 47, 101, 172, 119, 91, 198, 169, 188, 254, 171, 122, 255, 148, 37, 33, 223, 136, 38, 30, 254, 29, 154, 79, 4, 218, 70, 46, 67, 59, 111, 25, 73, 223, 115, 54, 20, 223, 39, 198, 246, 141, 238, 221, 172, 234, 61, 30, 211, 77, 108, 243, 22, 211, 124, 206, 166, 173, 170, 54, 169, 202, 20, 223, 180, 134, 232, 101, 51, 39, 182, 61, 239, 83, 119, 55, 194, 121, 215, 241, 50, 84, 95, 27, 188, 99, 157, 198, 137, 237, 248, 151, 49, 134, 100, 221, 127, 153, 190, 226, 155, 92, 33, 161, 243, 47, 23, 31, 196, 242, 109, 168, 207, 77, 250, 184, 182, 49, 182, 254, 166, 244, 68, 147, 183, 72, 29, 125, 109, 173, 146, 50, 234, 13, 109, 111, 17, 254, 14, 185, 222, 166, 189, 177, 219, 17, 98, 203, 44, 187, 230, 113, 62, 203, 62, 182, 118, 178, 21, 223, 120, 202, 58, 31, 18, 47, 161, 101, 219, 232, 239, 122, 189, 141, 221, 242, 138, 197, 24, 109, 241, 41, 67, 213, 230, 50, 165, 8, 155, 103, 197, 102, 30, 49, 145, 151, 132, 212, 19, 67, 47, 155, 254, 101, 202, 151, 135, 255, 116, 109, 44, 35, 126, 92, 252, 83, 68, 28, 21, 97, 243, 60, 234, 114, 209, 169, 140, 250, 203, 106, 127, 86, 157, 236, 185, 109, 84, 250, 150, 152, 109, 233, 223, 225, 162, 34, 242, 201, 127, 199, 110, 96, 13, 205, 112, 28, 27, 89, 26, 100, 13, 121, 168, 237, 19, 254, 207, 145, 58, 251, 197, 236, 195, 62, 117, 217, 214, 235, 91, 102, 140, 54, 186, 74, 104, 27, 125, 203, 142, 85, 71, 104, 253, 121, 248, 64, 64, 191, 207, 23, 127, 23, 105, 218, 189, 211, 179, 88, 11, 151, 105, 100, 188, 183, 144, 197, 250, 61, 65, 224, 120, 97, 146, 222, 119, 232, 62, 127, 107, 57, 178, 125, 179, 254, 46, 50, 123, 103, 74, 223, 201, 229, 53, 254, 217, 148, 97, 180, 87, 1, 241, 152, 21, 155, 38, 91, 138, 223, 6, 9, 223, 251, 252, 46, 196, 57, 198, 10, 236, 183, 114, 140, 216, 72, 148, 191, 53, 158, 163, 127, 93, 255, 102, 56, 123, 127, 106, 122, 47, 63, 133, 244, 183, 39, 166, 252, 229, 25, 23, 212, 230, 177, 198, 54, 159, 49, 46, 150, 175, 122, 101, 229, 112, 191, 96, 113, 198, 124, 36, 222, 207, 103, 141, 63, 38, 253, 133, 142, 42, 93, 125, 245, 247, 185, 222, 212, 215, 202, 238, 67, 46, 136, 223, 41, 101, 222, 143, 164, 119, 68, 3, 237, 13, 253, 94, 199, 243, 239, 181, 210, 124, 67, 182, 143, 236, 123, 122, 94, 151, 87, 72, 151, 252, 255, 3, 29, 66, 228, 191, 143, 79, 199, 180, 169, 242, 244, 166, 211, 250, 132, 246, 43, 97, 19, 185, 110, 211, 183, 79, 84, 178, 206, 103, 9, 213, 161, 140, 251, 140, 77, 124, 235, 206, 211, 184, 20, 115, 50, 249, 94, 147, 37, 161, 253, 35, 175, 182, 11, 145, 207, 171, 218, 28, 243, 25, 74, 70, 246, 185, 172, 95, 12, 255, 187, 66, 219, 175, 250, 6, 195, 69, 138, 244, 63, 253, 237, 105, 86, 204, 143, 215, 213, 107, 54, 177, 245, 15, 149, 162, 238, 133, 3, 117, 90, 124, 67, 145, 213, 175, 92, 237, 151, 53, 207, 180, 125, 134, 115, 125, 62, 148, 197, 247, 121, 209, 247, 121, 201, 183, 126, 157, 62, 62, 207, 200, 62, 245, 135, 232, 234, 98, 87, 185, 158, 16, 201, 91, 207, 34, 36, 166, 45, 99, 180, 53, 52, 62, 105, 186, 156, 199, 116, 141, 79, 27, 92, 174, 205, 210, 53, 164, 111, 248, 232, 31, 35, 94, 109, 245, 160, 182, 178, 105, 115, 72, 123, 66, 36, 15, 219, 134, 138, 169, 204, 24, 62, 116, 209, 33, 73, 134, 235, 119, 209, 67, 149, 87, 46, 199, 164, 131, 46, 77, 181, 85, 213, 105, 210, 223, 166, 60, 213, 245, 46, 177, 98, 123, 141, 174, 45, 121, 245, 153, 172, 152, 176, 169, 39, 207, 250, 93, 36, 70, 57, 161, 250, 231, 209, 254, 24, 182, 45, 194, 23, 121, 215, 27, 234, 223, 80, 125, 66, 109, 20, 106, 243, 60, 226, 168, 104, 41, 163, 78, 157, 252, 31];\nvar trieData$1 = {\n\ttype: type$1,\n\tdata: data$1\n};\n\nvar _class$6;\nvar _temp$2;\n\nvar decompositions = useData.decompositions;\n\nvar trie$1 = new UnicodeTrie(new Uint8Array(trieData$1.data));\nvar stateMachine = new StateMachine(indicMachine);\n\n/**\n * The IndicShaper supports indic scripts e.g. Devanagari, Kannada, etc.\n * Based on code from Harfbuzz: https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-indic.cc\n */\nvar IndicShaper = (_temp$2 = _class$6 = function (_DefaultShaper) {\n  inherits(IndicShaper, _DefaultShaper);\n\n  function IndicShaper() {\n    classCallCheck(this, IndicShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  IndicShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables);\n\n    plan.addStage(['locl', 'ccmp']);\n\n    plan.addStage(initialReordering);\n\n    plan.addStage('nukt');\n    plan.addStage('akhn');\n    plan.addStage('rphf', false);\n    plan.addStage('rkrf');\n    plan.addStage('pref', false);\n    plan.addStage('blwf', false);\n    plan.addStage('abvf', false);\n    plan.addStage('half', false);\n    plan.addStage('pstf', false);\n    plan.addStage('vatu');\n    plan.addStage('cjct');\n    plan.addStage('cfar', false);\n\n    plan.addStage(finalReordering);\n\n    plan.addStage({\n      local: ['init'],\n      global: ['pres', 'abvs', 'blws', 'psts', 'haln', 'dist', 'abvm', 'blwm', 'calt', 'clig']\n    });\n\n    // Setup the indic config for the selected script\n    plan.unicodeScript = fromOpenType(plan.script);\n    plan.indicConfig = INDIC_CONFIGS[plan.unicodeScript] || INDIC_CONFIGS.Default;\n    plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== '2';\n\n    // TODO: turn off kern (Khmer) and liga features.\n  };\n\n  IndicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n      var d = INDIC_DECOMPOSITIONS[codepoint] || decompositions[codepoint];\n      if (d) {\n        var decomposed = d.map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    };\n\n    // Decompose split matras\n    // TODO: do this in a more general unicode normalizer\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return IndicShaper;\n}(DefaultShaper), _class$6.zeroMarkWidths = 'NONE', _temp$2);\nfunction indicCategory(glyph) {\n  return trie$1.get(glyph.codePoints[0]) >> 8;\n}\n\nfunction indicPosition(glyph) {\n  return 1 << (trie$1.get(glyph.codePoints[0]) & 0xff);\n}\n\nvar IndicInfo = function IndicInfo(category, position, syllableType, syllable) {\n  classCallCheck(this, IndicInfo);\n\n  this.category = category;\n  this.position = position;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables(font, glyphs) {\n  var syllable = 0;\n  var last = 0;\n  for (var _iterator = stateMachine.match(glyphs.map(indicCategory)), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _ref2 = _ref,\n        start = _ref2[0],\n        end = _ref2[1],\n        tags$$1 = _ref2[2];\n\n    if (start > last) {\n      ++syllable;\n      for (var _i2 = last; _i2 < start; _i2++) {\n        glyphs[_i2].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n      }\n    }\n\n    ++syllable;\n\n    // Create shaper info\n    for (var _i3 = start; _i3 <= end; _i3++) {\n      glyphs[_i3].shaperInfo = new IndicInfo(1 << indicCategory(glyphs[_i3]), indicPosition(glyphs[_i3]), tags$$1[0], syllable);\n    }\n\n    last = end + 1;\n  }\n\n  if (last < glyphs.length) {\n    ++syllable;\n    for (var i = last; i < glyphs.length; i++) {\n      glyphs[i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n    }\n  }\n}\n\nfunction isConsonant(glyph) {\n  return glyph.shaperInfo.category & CONSONANT_FLAGS;\n}\n\nfunction isJoiner(glyph) {\n  return glyph.shaperInfo.category & JOINER_FLAGS;\n}\n\nfunction isHalantOrCoeng(glyph) {\n  return glyph.shaperInfo.category & HALANT_OR_COENG_FLAGS;\n}\n\nfunction wouldSubstitute(glyphs, feature) {\n  for (var _iterator2 = glyphs, _isArray2 = Array.isArray(_iterator2), _i4 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n    var _glyph$features;\n\n    var _ref3;\n\n    if (_isArray2) {\n      if (_i4 >= _iterator2.length) break;\n      _ref3 = _iterator2[_i4++];\n    } else {\n      _i4 = _iterator2.next();\n      if (_i4.done) break;\n      _ref3 = _i4.value;\n    }\n\n    var glyph = _ref3;\n\n    glyph.features = (_glyph$features = {}, _glyph$features[feature] = true, _glyph$features);\n  }\n\n  var GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n  GSUB.applyFeatures([feature], glyphs);\n\n  return glyphs.length === 1;\n}\n\nfunction consonantPosition(font, consonant, virama) {\n  var glyphs = [virama, consonant, virama];\n  if (wouldSubstitute(glyphs.slice(0, 2), 'blwf') || wouldSubstitute(glyphs.slice(1, 3), 'blwf')) {\n    return POSITIONS.Below_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pstf') || wouldSubstitute(glyphs.slice(1, 3), 'pstf')) {\n    return POSITIONS.Post_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pref') || wouldSubstitute(glyphs.slice(1, 3), 'pref')) {\n    return POSITIONS.Post_C;\n  }\n\n  return POSITIONS.Base_C;\n}\n\nfunction initialReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n  var virama = font.glyphForCodePoint(indicConfig.virama).id;\n  if (virama) {\n    var info = new GlyphInfo(font, virama, [indicConfig.virama]);\n    for (var i = 0; i < glyphs.length; i++) {\n      if (glyphs[i].shaperInfo.position === POSITIONS.Base_C) {\n        glyphs[i].shaperInfo.position = consonantPosition(font, glyphs[i].copy(), info);\n      }\n    }\n  }\n\n  for (var start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    var _glyphs$start$shaperI = glyphs[start].shaperInfo,\n        category = _glyphs$start$shaperI.category,\n        syllableType = _glyphs$start$shaperI.syllableType;\n\n\n    if (syllableType === 'symbol_cluster' || syllableType === 'non_indic_cluster') {\n      continue;\n    }\n\n    if (syllableType === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = new IndicInfo(1 << indicCategory(g), indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable);\n\n      // Insert after possible Repha.\n      var _i5 = start;\n      while (_i5 < end && glyphs[_i5].shaperInfo.category === CATEGORIES.Repha) {\n        _i5++;\n      }\n\n      glyphs.splice(_i5++, 0, g);\n      end++;\n    }\n\n    // 1. Find base consonant:\n    //\n    // The shaping engine finds the base consonant of the syllable, using the\n    // following algorithm: starting from the end of the syllable, move backwards\n    // until a consonant is found that does not have a below-base or post-base\n    // form (post-base forms have to follow below-base forms), or that is not a\n    // pre-base reordering Ra, or arrive at the first consonant. The consonant\n    // stopped at will be the base.\n\n    var base = end;\n    var limit = start;\n    var hasReph = false;\n\n    // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    if (indicConfig.rephPos !== POSITIONS.Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === 'Implicit' && !isJoiner(glyphs[start + 2]) || indicConfig.rephMode === 'Explicit' && glyphs[start + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n      // See if it matches the 'rphf' feature.\n      var _g = [glyphs[start].copy(), glyphs[start + 1].copy(), glyphs[start + 2].copy()];\n      if (wouldSubstitute(_g.slice(0, 2), 'rphf') || indicConfig.rephMode === 'Explicit' && wouldSubstitute(_g, 'rphf')) {\n        limit += 2;\n        while (limit < end && isJoiner(glyphs[limit])) {\n          limit++;\n        }\n        base = start;\n        hasReph = true;\n      }\n    } else if (indicConfig.rephMode === 'Log_Repha' && glyphs[start].shaperInfo.category === CATEGORIES.Repha) {\n      limit++;\n      while (limit < end && isJoiner(glyphs[limit])) {\n        limit++;\n      }\n      base = start;\n      hasReph = true;\n    }\n\n    switch (indicConfig.basePos) {\n      case 'Last':\n        {\n          // starting from the end of the syllable, move backwards\n          var _i6 = end;\n          var seenBelow = false;\n\n          do {\n            var _info = glyphs[--_i6].shaperInfo;\n\n            // until a consonant is found\n            if (isConsonant(glyphs[_i6])) {\n              // that does not have a below-base or post-base form\n              // (post-base forms have to follow below-base forms),\n              if (_info.position !== POSITIONS.Below_C && (_info.position !== POSITIONS.Post_C || seenBelow)) {\n                base = _i6;\n                break;\n              }\n\n              // or that is not a pre-base reordering Ra,\n              //\n              // IMPLEMENTATION NOTES:\n              //\n              // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n              // by the logic above already.\n              //\n\n              // or arrive at the first consonant. The consonant stopped at will\n              // be the base.\n              if (_info.position === POSITIONS.Below_C) {\n                seenBelow = true;\n              }\n\n              base = _i6;\n            } else if (start < _i6 && _info.category === CATEGORIES.ZWJ && glyphs[_i6 - 1].shaperInfo.category === CATEGORIES.H) {\n              // A ZWJ after a Halant stops the base search, and requests an explicit\n              // half form.\n              // A ZWJ before a Halant, requests a subjoined form instead, and hence\n              // search continues.  This is particularly important for Bengali\n              // sequence Ra,H,Ya that should form Ya-Phalaa by subjoining Ya.\n              break;\n            }\n          } while (_i6 > limit);\n          break;\n        }\n\n      case 'First':\n        {\n          // The first consonant is always the base.\n          base = start;\n\n          // Mark all subsequent consonants as below.\n          for (var _i7 = base + 1; _i7 < end; _i7++) {\n            if (isConsonant(glyphs[_i7])) {\n              glyphs[_i7].shaperInfo.position = POSITIONS.Below_C;\n            }\n          }\n        }\n    }\n\n    // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    //\n    //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n    if (hasReph && base === start && limit - base <= 2) {\n      hasReph = false;\n    }\n\n    // 2. Decompose and reorder Matras:\n    //\n    // Each matra and any syllable modifier sign in the cluster are moved to the\n    // appropriate position relative to the consonant(s) in the cluster. The\n    // shaping engine decomposes two- or three-part matras into their constituent\n    // parts before any repositioning. Matra characters are classified by which\n    // consonant in a conjunct they have affinity for and are reordered to the\n    // following positions:\n    //\n    //   o Before first half form in the syllable\n    //   o After subjoined consonants\n    //   o After post-form consonant\n    //   o After main consonant (for above marks)\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // The normalize() routine has already decomposed matras for us, so we don't\n    // need to worry about that.\n\n    // 3.  Reorder marks to canonical order:\n    //\n    // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n    // if necessary, so that the nukta is first.\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // We don't need to do this: the normalize() routine already did this for us.\n\n    // Reorder characters\n\n    for (var _i8 = start; _i8 < base; _i8++) {\n      var _info2 = glyphs[_i8].shaperInfo;\n      _info2.position = Math.min(POSITIONS.Pre_C, _info2.position);\n    }\n\n    if (base < end) {\n      glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n    }\n\n    // Mark final consonants.  A final consonant is one appearing after a matra,\n    // like in Khmer.\n    for (var _i9 = base + 1; _i9 < end; _i9++) {\n      if (glyphs[_i9].shaperInfo.category === CATEGORIES.M) {\n        for (var j = _i9 + 1; j < end; j++) {\n          if (isConsonant(glyphs[j])) {\n            glyphs[j].shaperInfo.position = POSITIONS.Final_C;\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    // Handle beginning Ra\n    if (hasReph) {\n      glyphs[start].shaperInfo.position = POSITIONS.Ra_To_Become_Reph;\n    }\n\n    // For old-style Indic script tags, move the first post-base Halant after\n    // last consonant.\n    //\n    // Reports suggest that in some scripts Uniscribe does this only if there\n    // is *not* a Halant after last consonant already (eg. Kannada), while it\n    // does it unconditionally in other scripts (eg. Malayalam).  We don't\n    // currently know about other scripts, so we single out Malayalam for now.\n    //\n    // Kannada test case:\n    // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n    // With some versions of Lohit Kannada.\n    // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n    //\n    // Malayalam test case:\n    // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n    // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n    if (plan.isOldSpec) {\n      var disallowDoubleHalants = plan.unicodeScript !== 'Malayalam';\n      for (var _i10 = base + 1; _i10 < end; _i10++) {\n        if (glyphs[_i10].shaperInfo.category === CATEGORIES.H) {\n          var _j = void 0;\n          for (_j = end - 1; _j > _i10; _j--) {\n            if (isConsonant(glyphs[_j]) || disallowDoubleHalants && glyphs[_j].shaperInfo.category === CATEGORIES.H) {\n              break;\n            }\n          }\n\n          if (glyphs[_j].shaperInfo.category !== CATEGORIES.H && _j > _i10) {\n            // Move Halant to after last consonant.\n            var t = glyphs[_i10];\n            glyphs.splice.apply(glyphs, [_i10, 0].concat(glyphs.splice(_i10 + 1, _j - _i10)));\n            glyphs[_j] = t;\n          }\n\n          break;\n        }\n      }\n    }\n\n    // Attach misc marks to previous char to move with them.\n    var lastPos = POSITIONS.Start;\n    for (var _i11 = start; _i11 < end; _i11++) {\n      var _info3 = glyphs[_i11].shaperInfo;\n      if (_info3.category & (JOINER_FLAGS | CATEGORIES.N | CATEGORIES.RS | CATEGORIES.CM | HALANT_OR_COENG_FLAGS & _info3.category)) {\n        _info3.position = lastPos;\n        if (_info3.category === CATEGORIES.H && _info3.position === POSITIONS.Pre_M) {\n          // Uniscribe doesn't move the Halant with Left Matra.\n          // TEST: U+092B,U+093F,U+094DE\n          // We follow.  This is important for the Sinhala\n          // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n          // where U+0DD9 is a left matra and U+0DCA is the virama.\n          // We don't want to move the virama with the left matra.\n          // TEST: U+0D9A,U+0DDA\n          for (var _j2 = _i11; _j2 > start; _j2--) {\n            if (glyphs[_j2 - 1].shaperInfo.position !== POSITIONS.Pre_M) {\n              _info3.position = glyphs[_j2 - 1].shaperInfo.position;\n              break;\n            }\n          }\n        }\n      } else if (_info3.position !== POSITIONS.SMVD) {\n        lastPos = _info3.position;\n      }\n    }\n\n    // For post-base consonants let them own anything before them\n    // since the last consonant or matra.\n    var last = base;\n    for (var _i12 = base + 1; _i12 < end; _i12++) {\n      if (isConsonant(glyphs[_i12])) {\n        for (var _j3 = last + 1; _j3 < _i12; _j3++) {\n          if (glyphs[_j3].shaperInfo.position < POSITIONS.SMVD) {\n            glyphs[_j3].shaperInfo.position = glyphs[_i12].shaperInfo.position;\n          }\n        }\n        last = _i12;\n      } else if (glyphs[_i12].shaperInfo.category === CATEGORIES.M) {\n        last = _i12;\n      }\n    }\n\n    var arr = glyphs.slice(start, end);\n    arr.sort(function (a, b) {\n      return a.shaperInfo.position - b.shaperInfo.position;\n    });\n    glyphs.splice.apply(glyphs, [start, arr.length].concat(arr));\n\n    // Find base again\n    for (var _i13 = start; _i13 < end; _i13++) {\n      if (glyphs[_i13].shaperInfo.position === POSITIONS.Base_C) {\n        base = _i13;\n        break;\n      }\n    }\n\n    // Setup features now\n\n    // Reph\n    for (var _i14 = start; _i14 < end && glyphs[_i14].shaperInfo.position === POSITIONS.Ra_To_Become_Reph; _i14++) {\n      glyphs[_i14].features.rphf = true;\n    }\n\n    // Pre-base\n    var blwf = !plan.isOldSpec && indicConfig.blwfMode === 'Pre_And_Post';\n    for (var _i15 = start; _i15 < base; _i15++) {\n      glyphs[_i15].features.half = true;\n      if (blwf) {\n        glyphs[_i15].features.blwf = true;\n      }\n    }\n\n    // Post-base\n    for (var _i16 = base + 1; _i16 < end; _i16++) {\n      glyphs[_i16].features.abvf = true;\n      glyphs[_i16].features.pstf = true;\n      glyphs[_i16].features.blwf = true;\n    }\n\n    if (plan.isOldSpec && plan.unicodeScript === 'Devanagari') {\n      // Old-spec eye-lash Ra needs special handling.  From the\n      // spec:\n      //\n      // \"The feature 'below-base form' is applied to consonants\n      // having below-base forms and following the base consonant.\n      // The exception is vattu, which may appear below half forms\n      // as well as below the base glyph. The feature 'below-base\n      // form' will be applied to all such occurrences of Ra as well.\"\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n      // with Sanskrit 2003 font.\n      //\n      // However, note that Ra,Halant,ZWJ is the correct way to\n      // request eyelash form of Ra, so we wouldbn't inhibit it\n      // in that sequence.\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n      for (var _i17 = start; _i17 + 1 < base; _i17++) {\n        if (glyphs[_i17].shaperInfo.category === CATEGORIES.Ra && glyphs[_i17 + 1].shaperInfo.category === CATEGORIES.H && (_i17 + 1 === base || glyphs[_i17 + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n          glyphs[_i17].features.blwf = true;\n          glyphs[_i17 + 1].features.blwf = true;\n        }\n      }\n    }\n\n    var prefLen = 2;\n    if (features.pref && base + prefLen < end) {\n      // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n      for (var _i18 = base + 1; _i18 + prefLen - 1 < end; _i18++) {\n        var _g2 = [glyphs[_i18].copy(), glyphs[_i18 + 1].copy()];\n        if (wouldSubstitute(_g2, 'pref')) {\n          for (var _j4 = 0; _j4 < prefLen; _j4++) {\n            glyphs[_i18++].features.pref = true;\n          }\n\n          // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n          // Read the feature spec.\n          // This allows distinguishing the following cases with MS Khmer fonts:\n          // U+1784,U+17D2,U+179A,U+17D2,U+1782\n          // U+1784,U+17D2,U+1782,U+17D2,U+179A\n          if (features.cfar) {\n            for (; _i18 < end; _i18++) {\n              glyphs[_i18].features.cfar = true;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    // Apply ZWJ/ZWNJ effects\n    for (var _i19 = start + 1; _i19 < end; _i19++) {\n      if (isJoiner(glyphs[_i19])) {\n        var nonJoiner = glyphs[_i19].shaperInfo.category === CATEGORIES.ZWNJ;\n        var _j5 = _i19;\n\n        do {\n          _j5--;\n\n          // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n          // being there, since we don't skip them for the CJCT\n          // feature (ie. F_MANUAL_ZWJ)\n\n          // A ZWNJ disables HALF.\n          if (nonJoiner) {\n            delete glyphs[_j5].features.half;\n          }\n        } while (_j5 > start && !isConsonant(glyphs[_j5]));\n      }\n    }\n  }\n}\n\nfunction finalReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  for (var start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    // 4. Final reordering:\n    //\n    // After the localized forms and basic shaping forms GSUB features have been\n    // applied (see below), the shaping engine performs some final glyph\n    // reordering before applying all the remaining font features to the entire\n    // cluster.\n\n    var tryPref = !!features.pref;\n\n    // Find base again\n    var base = start;\n    for (; base < end; base++) {\n      if (glyphs[base].shaperInfo.position >= POSITIONS.Base_C) {\n        if (tryPref && base + 1 < end) {\n          for (var i = base + 1; i < end; i++) {\n            if (glyphs[i].features.pref) {\n              if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                // Ok, this was a 'pref' candidate but didn't form any.\n                // Base is around here...\n                base = i;\n                while (base < end && isHalantOrCoeng(glyphs[base])) {\n                  base++;\n                }\n                glyphs[base].shaperInfo.position = POSITIONS.BASE_C;\n                tryPref = false;\n              }\n              break;\n            }\n          }\n        }\n\n        // For Malayalam, skip over unformed below- (but NOT post-) forms.\n        if (plan.unicodeScript === 'Malayalam') {\n          for (var _i20 = base + 1; _i20 < end; _i20++) {\n            while (_i20 < end && isJoiner(glyphs[_i20])) {\n              _i20++;\n            }\n\n            if (_i20 === end || !isHalantOrCoeng(glyphs[_i20])) {\n              break;\n            }\n\n            _i20++; // Skip halant.\n            while (_i20 < end && isJoiner(glyphs[_i20])) {\n              _i20++;\n            }\n\n            if (_i20 < end && isConsonant(glyphs[_i20]) && glyphs[_i20].shaperInfo.position === POSITIONS.Below_C) {\n              base = _i20;\n              glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n            }\n          }\n        }\n\n        if (start < base && glyphs[base].shaperInfo.position > POSITIONS.Base_C) {\n          base--;\n        }\n        break;\n      }\n    }\n\n    if (base === end && start < base && glyphs[base - 1].shaperInfo.category === CATEGORIES.ZWJ) {\n      base--;\n    }\n\n    if (base < end) {\n      while (start < base && glyphs[base].shaperInfo.category & (CATEGORIES.N | HALANT_OR_COENG_FLAGS)) {\n        base--;\n      }\n    }\n\n    // o Reorder matras:\n    //\n    // If a pre-base matra character had been reordered before applying basic\n    // features, the glyph can be moved closer to the main consonant based on\n    // whether half-forms had been formed. Actual position for the matra is\n    // defined as “after last standalone halant glyph, after initial matra\n    // position and before the main consonant”. If ZWJ or ZWNJ follow this\n    // halant, position is moved after it.\n    //\n\n    if (start + 1 < end && start < base) {\n      // Otherwise there can't be any pre-base matra characters.\n      // If we lost track of base, alas, position before last thingy.\n      var newPos = base === end ? base - 2 : base - 1;\n\n      // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n      // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n      // We want to position matra after them.\n      if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n        while (newPos > start && !(glyphs[newPos].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n          newPos--;\n        }\n\n        // If we found no Halant we are done.\n        // Otherwise only proceed if the Halant does\n        // not belong to the Matra itself!\n        if (isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n          // If ZWJ or ZWNJ follow this halant, position is moved after it.\n          if (newPos + 1 < end && isJoiner(glyphs[newPos + 1])) {\n            newPos++;\n          }\n        } else {\n          newPos = start; // No move.\n        }\n      }\n\n      if (start < newPos && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n        // Now go see if there's actually any matras...\n        for (var _i21 = newPos; _i21 > start; _i21--) {\n          if (glyphs[_i21 - 1].shaperInfo.position === POSITIONS.Pre_M) {\n            var oldPos = _i21 - 1;\n            if (oldPos < base && base <= newPos) {\n              // Shouldn't actually happen.\n              base--;\n            }\n\n            var tmp = glyphs[oldPos];\n            glyphs.splice.apply(glyphs, [oldPos, 0].concat(glyphs.splice(oldPos + 1, newPos - oldPos)));\n            glyphs[newPos] = tmp;\n\n            newPos--;\n          }\n        }\n      }\n    }\n\n    // o Reorder reph:\n    //\n    // Reph’s original position is always at the beginning of the syllable,\n    // (i.e. it is not reordered at the character reordering stage). However,\n    // it will be reordered according to the basic-forms shaping results.\n    // Possible positions for reph, depending on the script, are; after main,\n    // before post-base consonant forms, and after post-base consonant forms.\n\n    // Two cases:\n    //\n    // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n    //   we should only move it if the sequence ligated to the repha form.\n    //\n    // - If repha is encoded separately and in the logical position, we should only\n    //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n    //   to make it work without the reordering.\n    if (start + 1 < end && glyphs[start].shaperInfo.position === POSITIONS.Ra_To_Become_Reph && glyphs[start].shaperInfo.category === CATEGORIES.Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {\n      var newRephPos = void 0;\n      var rephPos = indicConfig.rephPos;\n      var found = false;\n\n      // 1. If reph should be positioned after post-base consonant forms,\n      //    proceed to step 5.\n      if (rephPos !== POSITIONS.After_Post) {\n        //  2. If the reph repositioning class is not after post-base: target\n        //     position is after the first explicit halant glyph between the\n        //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n        //     are following this halant, position is moved after it. If such\n        //     position is found, this is the target position. Otherwise,\n        //     proceed to the next step.\n        //\n        //     Note: in old-implementation fonts, where classifications were\n        //     fixed in shaping engine, there was no case where reph position\n        //     will be found on this step.\n        newRephPos = start + 1;\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n\n        // 3. If reph should be repositioned after the main consonant: find the\n        //    first consonant not ligated with main, or find the first\n        //    consonant that is not a potential pre-base reordering Ra.\n        if (!found && rephPos === POSITIONS.After_Main) {\n          newRephPos = base;\n          while (newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= POSITIONS.After_Main) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n\n        // 4. If reph should be positioned before post-base consonant, find\n        //    first post-base classified consonant not ligated with main. If no\n        //    consonant is found, the target position should be before the\n        //    first matra, syllable modifier sign or vedic sign.\n        //\n        // This is our take on what step 4 is trying to say (and failing, BADLY).\n        if (!found && rephPos === POSITIONS.After_Sub) {\n          newRephPos = base;\n          while (newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & (POSITIONS.Post_C | POSITIONS.After_Post | POSITIONS.SMVD))) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n      }\n\n      //  5. If no consonant is found in steps 3 or 4, move reph to a position\n      //     immediately before the first post-base matra, syllable modifier\n      //     sign or vedic sign that has a reordering class after the intended\n      //     reph position. For example, if the reordering position for reph\n      //     is post-main, it will skip above-base matras that also have a\n      //     post-main position.\n      if (!found) {\n        // Copied from step 2.\n        newRephPos = start + 1;\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n      }\n\n      // 6. Otherwise, reorder reph to the end of the syllable.\n      if (!found) {\n        newRephPos = end - 1;\n        while (newRephPos > start && glyphs[newRephPos].shaperInfo.position === POSITIONS.SMVD) {\n          newRephPos--;\n        }\n\n        // If the Reph is to be ending up after a Matra,Halant sequence,\n        // position it before that Halant so it can interact with the Matra.\n        // However, if it's a plain Consonant,Halant we shouldn't do that.\n        // Uniscribe doesn't do this.\n        // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n        if (isHalantOrCoeng(glyphs[newRephPos])) {\n          for (var _i22 = base + 1; _i22 < newRephPos; _i22++) {\n            if (glyphs[_i22].shaperInfo.category === CATEGORIES.M) {\n              newRephPos--;\n            }\n          }\n        }\n      }\n\n      var reph = glyphs[start];\n      glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, newRephPos - start)));\n      glyphs[newRephPos] = reph;\n\n      if (start < base && base <= newRephPos) {\n        base--;\n      }\n    }\n\n    // o Reorder pre-base reordering consonants:\n    //\n    // If a pre-base reordering consonant is found, reorder it according to\n    // the following rules:\n    if (tryPref && base + 1 < end) {\n      for (var _i23 = base + 1; _i23 < end; _i23++) {\n        if (glyphs[_i23].features.pref) {\n          // 1. Only reorder a glyph produced by substitution during application\n          //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n          //    the feature generally but block it in certain contexts.)\n\n          // Note: We just check that something got substituted.  We don't check that\n          // the <pref> feature actually did it...\n          //\n          // Reorder pref only if it ligated.\n          if (glyphs[_i23].isLigated && !glyphs[_i23].isMultiplied) {\n            // 2. Try to find a target position the same way as for pre-base matra.\n            //    If it is found, reorder pre-base consonant glyph.\n            //\n            // 3. If position is not found, reorder immediately before main\n            //    consonant.\n            var _newPos = base;\n\n            // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n            // We want to position matra after them.\n            if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n              while (_newPos > start && !(glyphs[_newPos - 1].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n                _newPos--;\n              }\n\n              // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n              // split matra, it should be reordered to *before* the left part of such matra.\n              if (_newPos > start && glyphs[_newPos - 1].shaperInfo.category === CATEGORIES.M) {\n                var _oldPos2 = _i23;\n                for (var j = base + 1; j < _oldPos2; j++) {\n                  if (glyphs[j].shaperInfo.category === CATEGORIES.M) {\n                    _newPos--;\n                    break;\n                  }\n                }\n              }\n            }\n\n            if (_newPos > start && isHalantOrCoeng(glyphs[_newPos - 1])) {\n              // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n              if (_newPos < end && isJoiner(glyphs[_newPos])) {\n                _newPos++;\n              }\n            }\n\n            var _oldPos = _i23;\n            var _tmp = glyphs[_oldPos];\n            glyphs.splice.apply(glyphs, [_newPos + 1, 0].concat(glyphs.splice(_newPos, _oldPos - _newPos)));\n            glyphs[_newPos] = _tmp;\n\n            if (_newPos <= base && base < _oldPos) {\n              base++;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    // Apply 'init' to the Left Matra if it's a word start.\n    if (glyphs[start].shaperInfo.position === POSITIONS.Pre_M && (!start || !/Cf|Mn/.test(unicode.getCategory(glyphs[start - 1].codePoints[0])))) {\n      glyphs[start].features.init = true;\n    }\n  }\n}\n\nfunction nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {}\n  return start;\n}\n\nvar type$2 = \"Buffer\";\nvar data$2 = [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 169, 208, 1, 81, 12, 174, 243, 237, 156, 127, 168, 29, 71, 21, 199, 231, 221, 247, 222, 253, 245, 110, 94, 242, 108, 126, 244, 217, 24, 155, 182, 20, 35, 98, 173, 138, 105, 21, 12, 109, 197, 90, 5, 83, 21, 141, 69, 169, 173, 149, 38, 42, 216, 7, 66, 26, 80, 82, 193, 104, 161, 137, 86, 37, 226, 175, 170, 49, 40, 36, 129, 162, 45, 20, 76, 171, 96, 219, 32, 54, 234, 31, 166, 138, 86, 13, 180, 193, 254, 209, 98, 181, 85, 12, 175, 180, 20, 191, 227, 206, 225, 158, 119, 50, 51, 59, 179, 187, 179, 123, 159, 185, 7, 62, 204, 238, 236, 236, 204, 153, 51, 115, 118, 103, 102, 127, 60, 223, 82, 106, 98, 82, 169, 30, 152, 3, 27, 193, 38, 112, 41, 184, 220, 196, 205, 87, 16, 190, 21, 188, 29, 188, 27, 124, 192, 147, 238, 122, 112, 179, 37, 126, 7, 88, 0, 59, 193, 110, 240, 69, 240, 101, 176, 31, 220, 101, 248, 33, 75, 127, 8, 252, 4, 252, 20, 252, 194, 146, 223, 207, 192, 49, 240, 60, 234, 255, 107, 163, 219, 156, 65, 199, 81, 248, 40, 194, 63, 128, 147, 224, 73, 240, 12, 248, 55, 120, 1, 76, 78, 41, 53, 3, 230, 192, 60, 216, 8, 54, 129, 75, 192, 102, 176, 101, 42, 75, 127, 53, 194, 173, 96, 27, 248, 8, 216, 14, 110, 1, 59, 193, 110, 176, 7, 236, 3, 251, 193, 93, 224, 32, 56, 2, 238, 53, 251, 247, 131, 135, 192, 113, 112, 2, 60, 6, 158, 0, 79, 129, 231, 192, 105, 240, 210, 84, 166, 115, 123, 90, 169, 89, 176, 118, 58, 219, 223, 128, 240, 98, 240, 90, 240, 6, 240, 22, 112, 37, 120, 167, 57, 254, 94, 132, 31, 4, 55, 128, 29, 96, 97, 58, 171, 183, 102, 23, 219, 174, 130, 207, 33, 191, 61, 21, 231, 201, 217, 43, 242, 254, 42, 246, 191, 5, 126, 0, 14, 131, 123, 166, 179, 250, 30, 5, 15, 130, 71, 192, 239, 114, 244, 121, 12, 199, 159, 0, 79, 129, 127, 152, 243, 79, 131, 23, 193, 84, 91, 169, 65, 59, 139, 91, 141, 112, 61, 184, 8, 188, 166, 61, 236, 75, 111, 196, 246, 102, 176, 5, 92, 13, 182, 130, 109, 230, 156, 235, 77, 120, 51, 194, 79, 129, 237, 172, 15, 238, 196, 254, 238, 118, 58, 91, 17, 95, 64, 25, 95, 2, 95, 7, 223, 5, 63, 2, 119, 179, 114, 239, 195, 246, 207, 193, 49, 19, 119, 28, 225, 9, 240, 71, 112, 50, 64, 191, 39, 145, 230, 153, 118, 102, 171, 103, 193, 34, 56, 4, 84, 71, 169, 110, 39, 139, 95, 129, 112, 208, 201, 210, 175, 52, 113, 154, 181, 108, 155, 179, 1, 241, 23, 131, 87, 139, 227, 175, 119, 164, 39, 46, 235, 100, 101, 79, 49, 189, 125, 233, 121, 186, 162, 232, 60, 222, 132, 114, 183, 128, 171, 192, 53, 96, 43, 216, 6, 62, 220, 241, 159, 123, 147, 56, 62, 152, 60, 51, 205, 39, 145, 230, 211, 224, 51, 157, 172, 223, 124, 158, 217, 224, 164, 167, 94, 119, 32, 221, 87, 192, 55, 193, 1, 135, 30, 54, 255, 63, 212, 25, 214, 235, 199, 157, 172, 175, 220, 135, 240, 1, 83, 174, 222, 126, 216, 108, 223, 157, 99, 219, 42, 236, 59, 102, 204, 217, 200, 216, 127, 198, 140, 25, 51, 102, 204, 152, 49, 99, 198, 196, 50, 103, 153, 79, 54, 205, 225, 246, 112, 77, 96, 123, 128, 126, 191, 98, 115, 215, 223, 136, 121, 236, 39, 60, 231, 83, 221, 127, 143, 115, 254, 218, 201, 214, 97, 254, 134, 240, 239, 224, 159, 224, 52, 120, 201, 196, 183, 187, 208, 167, 155, 165, 95, 131, 112, 30, 108, 4, 155, 186, 217, 241, 75, 17, 94, 14, 174, 48, 251, 215, 32, 124, 15, 184, 174, 235, 46, 95, 167, 187, 209, 115, 124, 204, 152, 49, 99, 198, 164, 101, 110, 178, 89, 154, 174, 255, 152, 49, 99, 210, 144, 218, 191, 119, 96, 252, 184, 208, 205, 158, 11, 221, 138, 240, 54, 203, 120, 242, 246, 110, 246, 108, 95, 111, 223, 41, 142, 127, 99, 4, 198, 159, 31, 27, 100, 236, 1, 199, 192, 219, 2, 88, 4, 151, 173, 88, 26, 183, 139, 237, 31, 192, 246, 159, 192, 185, 179, 74, 93, 11, 22, 102, 77, 60, 194, 199, 103, 135, 233, 158, 197, 246, 1, 216, 224, 113, 112, 126, 79, 169, 15, 129, 239, 128, 27, 176, 255, 189, 118, 22, 254, 210, 236, 115, 218, 253, 51, 227, 36, 87, 34, 205, 71, 89, 186, 131, 216, 62, 101, 246, 47, 152, 193, 49, 112, 112, 166, 249, 251, 79, 211, 228, 249, 203, 247, 181, 237, 76, 63, 61, 130, 240, 30, 112, 180, 155, 205, 19, 31, 236, 198, 223, 79, 247, 154, 52, 131, 156, 244, 182, 252, 30, 41, 80, 158, 43, 95, 121, 254, 111, 145, 247, 163, 221, 165, 233, 72, 223, 189, 158, 242, 254, 130, 115, 78, 129, 167, 187, 195, 186, 233, 116, 207, 97, 255, 63, 38, 191, 23, 88, 190, 147, 61, 119, 253, 108, 249, 199, 182, 101, 108, 251, 207, 64, 159, 21, 96, 13, 88, 15, 46, 2, 175, 2, 15, 152, 252, 94, 135, 237, 205, 96, 11, 184, 202, 28, 127, 23, 120, 159, 241, 215, 155, 192, 142, 222, 48, 191, 5, 108, 239, 2, 159, 5, 123, 192, 62, 240, 53, 240, 109, 112, 176, 151, 175, 143, 126, 159, 230, 8, 210, 221, 235, 72, 171, 231, 237, 247, 227, 216, 67, 189, 225, 254, 113, 108, 159, 96, 251, 127, 238, 101, 239, 150, 232, 253, 83, 216, 126, 218, 83, 110, 81, 91, 219, 242, 104, 218, 151, 99, 124, 189, 46, 92, 229, 255, 171, 23, 231, 167, 203, 217, 86, 77, 151, 191, 216, 91, 154, 239, 139, 198, 246, 45, 220, 15, 251, 253, 102, 108, 62, 138, 109, 62, 74, 253, 109, 208, 175, 215, 38, 190, 119, 132, 238, 48, 239, 19, 173, 238, 103, 225, 121, 8, 47, 4, 155, 204, 254, 37, 253, 97, 218, 205, 125, 127, 254, 189, 142, 255, 62, 220, 20, 121, 239, 73, 133, 188, 71, 245, 102, 211, 102, 87, 32, 124, 71, 205, 237, 87, 117, 255, 91, 110, 126, 233, 211, 61, 164, 14, 186, 13, 175, 101, 253, 88, 191, 187, 247, 126, 236, 95, 215, 207, 250, 255, 97, 246, 126, 163, 78, 183, 200, 222, 49, 189, 17, 251, 31, 55, 113, 183, 228, 244, 127, 27, 139, 145, 125, 141, 222, 49, 60, 29, 144, 86, 191, 11, 120, 107, 127, 105, 28, 127, 47, 241, 97, 51, 166, 166, 186, 223, 102, 194, 219, 17, 238, 235, 12, 245, 191, 83, 212, 107, 191, 217, 63, 106, 25, 147, 47, 71, 22, 91, 19, 255, 99, 20, 100, 130, 209, 18, 251, 60, 13, 133, 147, 236, 248, 84, 32, 50, 63, 229, 136, 75, 45, 163, 97, 241, 177, 144, 80, 95, 106, 89, 160, 182, 106, 89, 206, 107, 137, 112, 218, 64, 18, 210, 183, 82, 247, 133, 201, 196, 249, 87, 45, 237, 166, 21, 40, 33, 33, 109, 121, 54, 249, 190, 205, 103, 206, 38, 153, 112, 48, 10, 34, 245, 224, 215, 188, 229, 46, 182, 49, 131, 220, 94, 46, 82, 180, 207, 216, 198, 82, 69, 218, 87, 218, 111, 57, 217, 176, 46, 191, 11, 205, 59, 198, 246, 85, 251, 33, 111, 123, 215, 117, 41, 143, 255, 119, 113, 205, 59, 202, 74, 81, 123, 147, 14, 29, 6, 166, 158, 193, 243, 157, 170, 233, 1, 76, 129, 213, 140, 217, 215, 219, 3, 19, 174, 16, 244, 4, 125, 193, 44, 59, 151, 234, 184, 146, 217, 172, 199, 242, 10, 213, 143, 210, 23, 153, 23, 170, 18, 118, 33, 253, 187, 134, 144, 188, 148, 72, 39, 247, 139, 232, 16, 114, 156, 139, 75, 167, 144, 246, 37, 25, 24, 228, 190, 110, 223, 16, 31, 234, 91, 226, 92, 117, 146, 101, 199, 218, 40, 239, 254, 231, 59, 206, 253, 207, 87, 182, 175, 46, 69, 116, 142, 109, 223, 188, 109, 45, 51, 38, 180, 181, 175, 20, 242, 95, 185, 63, 107, 73, 235, 147, 144, 254, 152, 119, 142, 11, 221, 46, 171, 84, 54, 215, 165, 249, 238, 92, 164, 126, 161, 237, 235, 107, 147, 24, 157, 171, 106, 223, 162, 254, 75, 109, 202, 175, 209, 74, 45, 189, 62, 87, 37, 101, 253, 151, 198, 174, 121, 101, 228, 149, 223, 132, 253, 233, 222, 87, 228, 250, 153, 39, 210, 55, 101, 125, 165, 158, 69, 237, 223, 18, 245, 43, 42, 218, 191, 242, 238, 181, 182, 122, 184, 108, 110, 75, 171, 44, 233, 93, 233, 92, 229, 216, 226, 67, 251, 16, 23, 242, 37, 62, 254, 225, 50, 80, 75, 219, 159, 239, 135, 250, 159, 237, 254, 233, 146, 34, 245, 176, 173, 137, 230, 173, 21, 240, 177, 80, 204, 120, 40, 198, 31, 203, 250, 115, 172, 29, 244, 190, 111, 60, 171, 212, 153, 215, 82, 190, 159, 215, 158, 52, 222, 181, 217, 65, 74, 89, 127, 46, 35, 212, 230, 69, 198, 187, 77, 181, 175, 43, 45, 137, 188, 94, 167, 104, 95, 155, 255, 75, 145, 186, 150, 105, 223, 151, 25, 138, 72, 89, 191, 41, 226, 99, 100, 127, 9, 183, 65, 222, 245, 242, 156, 128, 186, 133, 180, 65, 29, 254, 37, 215, 26, 108, 235, 14, 49, 254, 85, 68, 183, 20, 109, 25, 147, 46, 68, 15, 46, 54, 31, 227, 125, 133, 124, 145, 218, 108, 5, 75, 51, 112, 224, 235, 15, 177, 54, 37, 61, 138, 172, 29, 213, 233, 115, 33, 109, 211, 99, 113, 114, 45, 199, 54, 142, 37, 105, 41, 127, 222, 250, 252, 142, 96, 149, 9, 245, 177, 178, 207, 243, 165, 61, 21, 11, 243, 226, 93, 18, 219, 207, 229, 113, 101, 9, 109, 186, 196, 218, 95, 153, 253, 57, 71, 190, 46, 63, 146, 246, 87, 44, 204, 171, 155, 45, 79, 91, 188, 124, 134, 94, 148, 22, 11, 229, 152, 211, 53, 38, 173, 218, 39, 116, 158, 211, 34, 92, 165, 220, 18, 234, 99, 169, 253, 152, 11, 95, 147, 117, 173, 209, 74, 104, 140, 199, 247, 59, 106, 184, 198, 234, 171, 239, 234, 8, 84, 100, 250, 20, 104, 201, 155, 235, 76, 123, 142, 241, 243, 93, 253, 216, 230, 19, 54, 73, 221, 55, 98, 176, 221, 91, 53, 3, 101, 239, 47, 122, 13, 95, 247, 153, 89, 19, 183, 6, 172, 85, 217, 53, 106, 46, 178, 108, 105, 67, 122, 79, 39, 79, 87, 215, 115, 131, 57, 181, 84, 143, 190, 26, 142, 177, 100, 30, 93, 11, 60, 47, 89, 247, 34, 182, 157, 83, 195, 177, 9, 229, 99, 43, 183, 107, 236, 58, 101, 209, 195, 7, 157, 75, 237, 215, 196, 243, 125, 91, 31, 111, 250, 89, 99, 158, 159, 87, 97, 167, 84, 245, 72, 97, 163, 162, 247, 23, 25, 39, 199, 38, 41, 203, 183, 193, 203, 143, 177, 81, 213, 229, 199, 74, 21, 246, 87, 53, 151, 159, 167, 155, 22, 126, 223, 176, 205, 29, 92, 115, 50, 130, 198, 31, 125, 53, 28, 123, 232, 123, 240, 58, 149, 141, 191, 166, 25, 180, 6, 163, 183, 165, 143, 200, 251, 48, 181, 85, 108, 253, 83, 137, 239, 26, 88, 199, 117, 81, 223, 87, 171, 238, 3, 49, 54, 229, 125, 67, 142, 55, 8, 57, 86, 227, 114, 174, 97, 37, 219, 150, 204, 155, 124, 166, 45, 231, 203, 107, 125, 236, 251, 3, 85, 251, 77, 217, 190, 87, 180, 220, 162, 231, 75, 248, 186, 85, 25, 253, 164, 132, 222, 183, 83, 147, 178, 15, 144, 31, 208, 218, 20, 191, 78, 165, 236, 151, 52, 70, 215, 190, 178, 142, 49, 47, 208, 50, 203, 116, 115, 249, 43, 159, 99, 146, 95, 219, 174, 241, 114, 110, 201, 225, 215, 119, 146, 233, 136, 58, 185, 164, 236, 249, 121, 227, 214, 212, 99, 90, 110, 35, 221, 70, 117, 191, 19, 166, 239, 189, 182, 57, 161, 92, 87, 112, 181, 245, 108, 78, 254, 82, 66, 245, 202, 91, 71, 10, 225, 229, 224, 60, 19, 186, 136, 157, 59, 52, 213, 78, 28, 126, 255, 180, 93, 99, 200, 151, 103, 89, 186, 212, 253, 70, 174, 221, 83, 72, 215, 158, 144, 103, 102, 90, 100, 91, 187, 234, 46, 175, 65, 124, 189, 96, 157, 135, 245, 6, 125, 237, 161, 119, 167, 92, 101, 199, 92, 159, 185, 132, 92, 119, 66, 165, 236, 220, 154, 95, 95, 116, 250, 149, 14, 40, 141, 45, 190, 235, 57, 143, 191, 231, 73, 98, 139, 163, 113, 68, 71, 196, 119, 44, 113, 49, 242, 10, 176, 129, 237, 79, 58, 8, 181, 151, 92, 159, 138, 181, 119, 204, 122, 72, 72, 124, 108, 222, 242, 222, 21, 115, 158, 150, 87, 6, 212, 49, 70, 108, 99, 244, 208, 243, 228, 120, 161, 14, 105, 114, 44, 170, 28, 219, 174, 227, 161, 245, 9, 57, 47, 79, 39, 91, 104, 43, 39, 70, 175, 178, 245, 168, 114, 253, 51, 70, 31, 223, 24, 33, 180, 77, 93, 249, 132, 30, 47, 210, 183, 108, 229, 87, 93, 142, 111, 236, 20, 34, 177, 249, 165, 210, 183, 108, 154, 148, 246, 108, 162, 92, 87, 91, 142, 130, 14, 117, 233, 209, 132, 52, 173, 219, 40, 244, 229, 24, 61, 38, 19, 235, 236, 179, 187, 28, 115, 150, 181, 95, 21, 246, 175, 67, 242, 202, 170, 195, 254, 117, 181, 115, 19, 253, 42, 69, 191, 41, 42, 41, 250, 87, 213, 58, 22, 121, 246, 226, 154, 135, 185, 242, 204, 91, 47, 116, 157, 95, 180, 14, 69, 230, 114, 182, 244, 82, 175, 186, 165, 78, 255, 169, 203, 63, 235, 180, 135, 77, 228, 218, 104, 25, 61, 138, 156, 151, 66, 242, 234, 91, 85, 59, 184, 242, 169, 187, 31, 196, 74, 83, 253, 186, 108, 157, 71, 193, 247, 82, 60, 199, 161, 124, 99, 211, 242, 117, 98, 190, 110, 108, 123, 15, 173, 99, 137, 171, 18, 190, 134, 78, 107, 248, 69, 109, 31, 122, 94, 213, 117, 136, 93, 175, 181, 189, 15, 88, 39, 250, 25, 173, 237, 91, 25, 23, 161, 223, 18, 150, 121, 126, 193, 197, 246, 44, 183, 8, 121, 122, 186, 198, 38, 46, 125, 109, 239, 56, 243, 103, 18, 177, 245, 15, 65, 62, 23, 149, 207, 74, 249, 115, 38, 106, 215, 24, 209, 250, 54, 249, 44, 88, 66, 207, 248, 92, 239, 12, 211, 115, 96, 253, 60, 110, 141, 129, 254, 21, 17, 11, 73, 209, 254, 234, 107, 111, 122, 239, 34, 181, 189, 66, 203, 176, 189, 95, 193, 159, 177, 83, 156, 124, 223, 58, 68, 120, 57, 235, 2, 116, 161, 190, 106, 59, 63, 196, 254, 178, 29, 171, 182, 33, 23, 126, 63, 209, 199, 232, 121, 98, 149, 126, 210, 99, 33, 181, 131, 108, 55, 215, 121, 116, 127, 166, 176, 78, 41, 98, 127, 221, 215, 120, 223, 235, 43, 251, 125, 147, 190, 1, 8, 17, 158, 191, 237, 155, 121, 254, 94, 224, 132, 201, 187, 238, 239, 158, 203, 136, 28, 207, 156, 95, 146, 208, 57, 188, 79, 66, 230, 252, 182, 99, 121, 105, 93, 229, 248, 210, 209, 220, 44, 197, 248, 218, 166, 71, 75, 249, 109, 102, 91, 151, 137, 41, 67, 198, 41, 101, 183, 117, 93, 34, 251, 159, 109, 205, 35, 239, 156, 50, 229, 165, 154, 59, 21, 145, 81, 153, 159, 151, 153, 195, 74, 29, 203, 206, 133, 155, 92, 147, 160, 242, 235, 166, 42, 73, 221, 167, 83, 231, 31, 98, 15, 125, 239, 148, 223, 124, 251, 190, 53, 161, 116, 244, 46, 88, 200, 120, 173, 170, 177, 88, 200, 125, 95, 207, 81, 102, 212, 153, 239, 242, 105, 201, 123, 55, 53, 100, 28, 17, 51, 119, 9, 145, 212, 254, 89, 149, 158, 203, 89, 7, 95, 153, 124, 206, 64, 255, 85, 73, 217, 95, 109, 243, 4, 215, 55, 84, 190, 127, 110, 230, 205, 171, 165, 108, 44, 73, 29, 227, 240, 11, 84, 243, 255, 66, 181, 253, 87, 79, 190, 211, 172, 109, 175, 175, 47, 182, 113, 51, 95, 227, 106, 66, 127, 87, 223, 242, 125, 219, 77, 199, 232, 187, 110, 21, 81, 70, 89, 127, 174, 178, 190, 178, 77, 234, 46, 223, 247, 79, 70, 159, 31, 235, 115, 207, 81, 195, 127, 28, 217, 252, 121, 70, 13, 219, 138, 215, 47, 198, 47, 109, 115, 188, 170, 109, 64, 101, 133, 74, 149, 101, 22, 109, 51, 249, 156, 67, 254, 247, 64, 183, 209, 42, 67, 222, 245, 54, 68, 71, 91, 186, 178, 182, 136, 57, 223, 231, 31, 85, 247, 133, 24, 180, 173, 125, 215, 95, 98, 70, 185, 199, 167, 101, 251, 40, 191, 255, 140, 250, 255, 158, 125, 105, 73, 248, 255, 239, 228, 218, 155, 252, 6, 167, 204, 255, 74, 149, 10, 123, 190, 33, 253, 142, 36, 244, 89, 81, 204, 179, 36, 95, 249, 69, 9, 185, 198, 211, 61, 150, 127, 139, 68, 223, 188, 83, 223, 162, 49, 4, 181, 85, 232, 61, 171, 108, 255, 78, 85, 119, 18, 219, 119, 254, 178, 206, 33, 115, 168, 162, 72, 157, 203, 254, 87, 220, 102, 3, 249, 47, 26, 215, 61, 158, 210, 241, 250, 247, 148, 253, 190, 17, 42, 117, 182, 63, 255, 71, 84, 222, 53, 153, 218, 182, 42, 253, 203, 194, 69, 63, 43, 211, 207, 205, 46, 84, 249, 255, 60, 146, 117, 43, 171, 191, 92, 155, 46, 43, 169, 230, 208, 41, 231, 227, 77, 205, 243, 201, 230, 190, 181, 193, 170, 218, 165, 168, 200, 181, 244, 208, 53, 226, 186, 215, 79, 235, 88, 67, 15, 201, 191, 174, 58, 143, 226, 122, 180, 77, 108, 101, 52, 213, 159, 171, 170, 119, 136, 61, 99, 108, 79, 219, 117, 172, 63, 142, 98, 191, 43, 155, 71, 138, 190, 159, 194, 135, 83, 248, 97, 234, 114, 203, 232, 86, 84, 63, 223, 249, 85, 151, 95, 149, 254, 77, 151, 95, 101, 159, 138, 45, 191, 73, 249, 47];\nvar trieData$2 = {\n\ttype: type$2,\n\tdata: data$2\n};\n\nvar _class$7;\nvar _temp$3;\n\nvar categories$1 = useData.categories;\nvar decompositions$2 = useData.decompositions;\n\nvar trie$2 = new UnicodeTrie(new Uint8Array(trieData$2.data));\nvar stateMachine$1 = new StateMachine(useData);\n\n/**\n * This shaper is an implementation of the Universal Shaping Engine, which\n * uses Unicode data to shape a number of scripts without a dedicated shaping engine.\n * See https://www.microsoft.com/typography/OpenTypeDev/USE/intro.htm.\n */\nvar UniversalShaper = (_temp$3 = _class$7 = function (_DefaultShaper) {\n  inherits(UniversalShaper, _DefaultShaper);\n\n  function UniversalShaper() {\n    classCallCheck(this, UniversalShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  UniversalShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables$1);\n\n    // Default glyph pre-processing group\n    plan.addStage(['locl', 'ccmp', 'nukt', 'akhn']);\n\n    // Reordering group\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['rphf'], false);\n    plan.addStage(recordRphf);\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['pref']);\n    plan.addStage(recordPref);\n\n    // Orthographic unit shaping group\n    plan.addStage(['rkrf', 'abvf', 'blwf', 'half', 'pstf', 'vatu', 'cjct']);\n    plan.addStage(reorder);\n\n    // Topographical features\n    // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n    // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n\n    // Standard topographic presentation and positional feature application\n    plan.addStage(['abvs', 'blws', 'pres', 'psts', 'dist', 'abvm', 'blwm']);\n  };\n\n  UniversalShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n      if (decompositions$2[codepoint]) {\n        var decomposed = decompositions$2[codepoint].map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    };\n\n    // Decompose split vowels\n    // TODO: do this in a more general unicode normalizer\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return UniversalShaper;\n}(DefaultShaper), _class$7.zeroMarkWidths = 'BEFORE_GPOS', _temp$3);\nfunction useCategory(glyph) {\n  return trie$2.get(glyph.codePoints[0]);\n}\n\nvar USEInfo = function USEInfo(category, syllableType, syllable) {\n  classCallCheck(this, USEInfo);\n\n  this.category = category;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables$1(font, glyphs) {\n  var syllable = 0;\n  for (var _iterator = stateMachine$1.match(glyphs.map(useCategory)), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _ref2 = _ref,\n        start = _ref2[0],\n        end = _ref2[1],\n        tags = _ref2[2];\n\n    ++syllable;\n\n    // Create shaper info\n    for (var i = start; i <= end; i++) {\n      glyphs[i].shaperInfo = new USEInfo(categories$1[useCategory(glyphs[i])], tags[0], syllable);\n    }\n\n    // Assign rphf feature\n    var limit = glyphs[start].shaperInfo.category === 'R' ? 1 : Math.min(3, end - start);\n    for (var _i2 = start; _i2 < start + limit; _i2++) {\n      glyphs[_i2].features.rphf = true;\n    }\n  }\n}\n\nfunction clearSubstitutionFlags(font, glyphs) {\n  for (var _iterator2 = glyphs, _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n    var _ref3;\n\n    if (_isArray2) {\n      if (_i3 >= _iterator2.length) break;\n      _ref3 = _iterator2[_i3++];\n    } else {\n      _i3 = _iterator2.next();\n      if (_i3.done) break;\n      _ref3 = _i3.value;\n    }\n\n    var glyph = _ref3;\n\n    glyph.substituted = false;\n  }\n}\n\nfunction recordRphf(font, glyphs) {\n  for (var _iterator3 = glyphs, _isArray3 = Array.isArray(_iterator3), _i4 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n    var _ref4;\n\n    if (_isArray3) {\n      if (_i4 >= _iterator3.length) break;\n      _ref4 = _iterator3[_i4++];\n    } else {\n      _i4 = _iterator3.next();\n      if (_i4.done) break;\n      _ref4 = _i4.value;\n    }\n\n    var glyph = _ref4;\n\n    if (glyph.substituted && glyph.features.rphf) {\n      // Mark a substituted repha.\n      glyph.shaperInfo.category = 'R';\n    }\n  }\n}\n\nfunction recordPref(font, glyphs) {\n  for (var _iterator4 = glyphs, _isArray4 = Array.isArray(_iterator4), _i5 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n    var _ref5;\n\n    if (_isArray4) {\n      if (_i5 >= _iterator4.length) break;\n      _ref5 = _iterator4[_i5++];\n    } else {\n      _i5 = _iterator4.next();\n      if (_i5.done) break;\n      _ref5 = _i5.value;\n    }\n\n    var glyph = _ref5;\n\n    if (glyph.substituted) {\n      // Mark a substituted pref as VPre, as they behave the same way.\n      glyph.shaperInfo.category = 'VPre';\n    }\n  }\n}\n\nfunction reorder(font, glyphs) {\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n\n  for (var start = 0, end = nextSyllable$1(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable$1(glyphs, start)) {\n    var i = void 0,\n        j = void 0;\n    var info = glyphs[start].shaperInfo;\n    var type = info.syllableType;\n\n    // Only a few syllable types need reordering.\n    if (type !== 'virama_terminated_cluster' && type !== 'standard_cluster' && type !== 'broken_cluster') {\n      continue;\n    }\n\n    // Insert a dotted circle glyph in broken clusters.\n    if (type === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = info;\n\n      // Insert after possible Repha.\n      for (i = start; i < end && glyphs[i].shaperInfo.category === 'R'; i++) {}\n      glyphs.splice(++i, 0, g);\n      end++;\n    }\n\n    // Move things forward.\n    if (info.category === 'R' && end - start > 1) {\n      // Got a repha. Reorder it to after first base, before first halant.\n      for (i = start + 1; i < end; i++) {\n        info = glyphs[i].shaperInfo;\n        if (isBase(info) || isHalant(glyphs[i])) {\n          // If we hit a halant, move before it; otherwise it's a base: move to it's\n          // place, and shift things in between backward.\n          if (isHalant(glyphs[i])) {\n            i--;\n          }\n\n          glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, i - start), [glyphs[i]]));\n          break;\n        }\n      }\n    }\n\n    // Move things back.\n    for (i = start, j = end; i < end; i++) {\n      info = glyphs[i].shaperInfo;\n      if (isBase(info) || isHalant(glyphs[i])) {\n        // If we hit a halant, move after it; otherwise it's a base: move to it's\n        // place, and shift things in between backward.\n        j = isHalant(glyphs[i]) ? i + 1 : i;\n      } else if ((info.category === 'VPre' || info.category === 'VMPre') && j < i) {\n        glyphs.splice.apply(glyphs, [j, 1, glyphs[i]].concat(glyphs.splice(j, i - j)));\n      }\n    }\n  }\n}\n\nfunction nextSyllable$1(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {}\n  return start;\n}\n\nfunction isHalant(glyph) {\n  return glyph.shaperInfo.category === 'H' && !glyph.isLigated;\n}\n\nfunction isBase(info) {\n  return info.category === 'B' || info.category === 'GB';\n}\n\nvar SHAPERS = {\n  arab: ArabicShaper, // Arabic\n  mong: ArabicShaper, // Mongolian\n  syrc: ArabicShaper, // Syriac\n  'nko ': ArabicShaper, // N'Ko\n  phag: ArabicShaper, // Phags Pa\n  mand: ArabicShaper, // Mandaic\n  mani: ArabicShaper, // Manichaean\n  phlp: ArabicShaper, // Psalter Pahlavi\n\n  hang: HangulShaper, // Hangul\n\n  bng2: IndicShaper, // Bengali\n  beng: IndicShaper, // Bengali\n  dev2: IndicShaper, // Devanagari\n  deva: IndicShaper, // Devanagari\n  gjr2: IndicShaper, // Gujarati\n  gujr: IndicShaper, // Gujarati\n  guru: IndicShaper, // Gurmukhi\n  gur2: IndicShaper, // Gurmukhi\n  knda: IndicShaper, // Kannada\n  knd2: IndicShaper, // Kannada\n  mlm2: IndicShaper, // Malayalam\n  mlym: IndicShaper, // Malayalam\n  ory2: IndicShaper, // Oriya\n  orya: IndicShaper, // Oriya\n  taml: IndicShaper, // Tamil\n  tml2: IndicShaper, // Tamil\n  telu: IndicShaper, // Telugu\n  tel2: IndicShaper, // Telugu\n  khmr: IndicShaper, // Khmer\n\n  bali: UniversalShaper, // Balinese\n  batk: UniversalShaper, // Batak\n  brah: UniversalShaper, // Brahmi\n  bugi: UniversalShaper, // Buginese\n  buhd: UniversalShaper, // Buhid\n  cakm: UniversalShaper, // Chakma\n  cham: UniversalShaper, // Cham\n  dupl: UniversalShaper, // Duployan\n  egyp: UniversalShaper, // Egyptian Hieroglyphs\n  gran: UniversalShaper, // Grantha\n  hano: UniversalShaper, // Hanunoo\n  java: UniversalShaper, // Javanese\n  kthi: UniversalShaper, // Kaithi\n  kali: UniversalShaper, // Kayah Li\n  khar: UniversalShaper, // Kharoshthi\n  khoj: UniversalShaper, // Khojki\n  sind: UniversalShaper, // Khudawadi\n  lepc: UniversalShaper, // Lepcha\n  limb: UniversalShaper, // Limbu\n  mahj: UniversalShaper, // Mahajani\n  // mand: UniversalShaper, // Mandaic\n  // mani: UniversalShaper, // Manichaean\n  mtei: UniversalShaper, // Meitei Mayek\n  modi: UniversalShaper, // Modi\n  // mong: UniversalShaper, // Mongolian\n  // 'nko ': UniversalShaper, // N’Ko\n  hmng: UniversalShaper, // Pahawh Hmong\n  // phag: UniversalShaper, // Phags-pa\n  // phlp: UniversalShaper, // Psalter Pahlavi\n  rjng: UniversalShaper, // Rejang\n  saur: UniversalShaper, // Saurashtra\n  shrd: UniversalShaper, // Sharada\n  sidd: UniversalShaper, // Siddham\n  sinh: UniversalShaper, // Sinhala\n  sund: UniversalShaper, // Sundanese\n  sylo: UniversalShaper, // Syloti Nagri\n  tglg: UniversalShaper, // Tagalog\n  tagb: UniversalShaper, // Tagbanwa\n  tale: UniversalShaper, // Tai Le\n  lana: UniversalShaper, // Tai Tham\n  tavt: UniversalShaper, // Tai Viet\n  takr: UniversalShaper, // Takri\n  tibt: UniversalShaper, // Tibetan\n  tfng: UniversalShaper, // Tifinagh\n  tirh: UniversalShaper, // Tirhuta\n\n  latn: DefaultShaper, // Latin\n  DFLT: DefaultShaper // Default\n};\n\nfunction choose(script) {\n  if (!Array.isArray(script)) {\n    script = [script];\n  }\n\n  for (var _iterator = script, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var s = _ref;\n\n    var shaper = SHAPERS[s];\n    if (shaper) {\n      return shaper;\n    }\n  }\n\n  return DefaultShaper;\n}\n\nvar GSUBProcessor = function (_OTProcessor) {\n  inherits(GSUBProcessor, _OTProcessor);\n\n  function GSUBProcessor() {\n    classCallCheck(this, GSUBProcessor);\n    return possibleConstructorReturn(this, _OTProcessor.apply(this, arguments));\n  }\n\n  GSUBProcessor.prototype.applyLookup = function applyLookup(lookupType, table) {\n    var _this2 = this;\n\n    switch (lookupType) {\n      case 1:\n        {\n          // Single Substitution\n          var index = this.coverageIndex(table.coverage);\n          if (index === -1) {\n            return false;\n          }\n\n          var glyph = this.glyphIterator.cur;\n          switch (table.version) {\n            case 1:\n              glyph.id = glyph.id + table.deltaGlyphID & 0xffff;\n              break;\n\n            case 2:\n              glyph.id = table.substitute.get(index);\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          // Multiple Substitution\n          var _index = this.coverageIndex(table.coverage);\n          if (_index !== -1) {\n            var _glyphs;\n\n            var sequence = table.sequences.get(_index);\n            this.glyphIterator.cur.id = sequence[0];\n            this.glyphIterator.cur.ligatureComponent = 0;\n\n            var features = this.glyphIterator.cur.features;\n            var curGlyph = this.glyphIterator.cur;\n            var replacement = sequence.slice(1).map(function (gid, i) {\n              var glyph = new GlyphInfo(_this2.font, gid, undefined, features);\n              glyph.shaperInfo = curGlyph.shaperInfo;\n              glyph.isLigated = curGlyph.isLigated;\n              glyph.ligatureComponent = i + 1;\n              glyph.substituted = true;\n              glyph.isMultiplied = true;\n              return glyph;\n            });\n\n            (_glyphs = this.glyphs).splice.apply(_glyphs, [this.glyphIterator.index + 1, 0].concat(replacement));\n            return true;\n          }\n\n          return false;\n        }\n\n      case 3:\n        {\n          // Alternate Substitution\n          var _index2 = this.coverageIndex(table.coverage);\n          if (_index2 !== -1) {\n            var USER_INDEX = 0; // TODO\n            this.glyphIterator.cur.id = table.alternateSet.get(_index2)[USER_INDEX];\n            return true;\n          }\n\n          return false;\n        }\n\n      case 4:\n        {\n          // Ligature Substitution\n          var _index3 = this.coverageIndex(table.coverage);\n          if (_index3 === -1) {\n            return false;\n          }\n\n          for (var _iterator = table.ligatureSets.get(_index3), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref = _i.value;\n            }\n\n            var ligature = _ref;\n\n            var matched = this.sequenceMatchIndices(1, ligature.components);\n            if (!matched) {\n              continue;\n            }\n\n            var _curGlyph = this.glyphIterator.cur;\n\n            // Concatenate all of the characters the new ligature will represent\n            var characters = _curGlyph.codePoints.slice();\n            for (var _iterator2 = matched, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n              var _ref2;\n\n              if (_isArray2) {\n                if (_i2 >= _iterator2.length) break;\n                _ref2 = _iterator2[_i2++];\n              } else {\n                _i2 = _iterator2.next();\n                if (_i2.done) break;\n                _ref2 = _i2.value;\n              }\n\n              var _index4 = _ref2;\n\n              characters.push.apply(characters, this.glyphs[_index4].codePoints);\n            }\n\n            // Create the replacement ligature glyph\n            var ligatureGlyph = new GlyphInfo(this.font, ligature.glyph, characters, _curGlyph.features, _curGlyph.stringIndex);\n            ligatureGlyph.shaperInfo = _curGlyph.shaperInfo;\n            ligatureGlyph.isLigated = true;\n            ligatureGlyph.substituted = true;\n\n            // From Harfbuzz:\n            // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n            //   the ligature to keep its old ligature id.  This will allow it to attach to\n            //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n            //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n            //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n            //   later, we don't want them to lose their ligature id/component, otherwise\n            //   GPOS will fail to correctly position the mark ligature on top of the\n            //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n            //\n            // - If a ligature is formed of components that some of which are also ligatures\n            //   themselves, and those ligature components had marks attached to *their*\n            //   components, we have to attach the marks to the new ligature component\n            //   positions!  Now *that*'s tricky!  And these marks may be following the\n            //   last component of the whole sequence, so we should loop forward looking\n            //   for them and update them.\n            //\n            //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n            //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n            //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n            //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n            //   the new ligature with a component value of 2.\n            //\n            //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n            var isMarkLigature = _curGlyph.isMark;\n            for (var i = 0; i < matched.length && isMarkLigature; i++) {\n              isMarkLigature = this.glyphs[matched[i]].isMark;\n            }\n\n            ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n\n            var lastLigID = _curGlyph.ligatureID;\n            var lastNumComps = _curGlyph.codePoints.length;\n            var curComps = lastNumComps;\n            var idx = this.glyphIterator.index + 1;\n\n            // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n            // This allows GPOS to attach marks to the correct ligature components.\n            for (var _iterator3 = matched, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n              var _ref3;\n\n              if (_isArray3) {\n                if (_i3 >= _iterator3.length) break;\n                _ref3 = _iterator3[_i3++];\n              } else {\n                _i3 = _iterator3.next();\n                if (_i3.done) break;\n                _ref3 = _i3.value;\n              }\n\n              var matchIndex = _ref3;\n\n              // Don't assign new ligature components for mark ligatures (see above)\n              if (isMarkLigature) {\n                idx = matchIndex;\n              } else {\n                while (idx < matchIndex) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                  this.glyphs[idx].ligatureComponent = ligatureComponent;\n                  idx++;\n                }\n              }\n\n              lastLigID = this.glyphs[idx].ligatureID;\n              lastNumComps = this.glyphs[idx].codePoints.length;\n              curComps += lastNumComps;\n              idx++; // skip base glyph\n            }\n\n            // Adjust ligature components for any marks following\n            if (lastLigID && !isMarkLigature) {\n              for (var _i4 = idx; _i4 < this.glyphs.length; _i4++) {\n                if (this.glyphs[_i4].ligatureID === lastLigID) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[_i4].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[_i4].ligatureComponent = ligatureComponent;\n                } else {\n                  break;\n                }\n              }\n            }\n\n            // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n            for (var _i5 = matched.length - 1; _i5 >= 0; _i5--) {\n              this.glyphs.splice(matched[_i5], 1);\n            }\n\n            this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n            return true;\n          }\n\n          return false;\n        }\n\n      case 5:\n        // Contextual Substitution\n        return this.applyContext(table);\n\n      case 6:\n        // Chaining Contextual Substitution\n        return this.applyChainingContext(table);\n\n      case 7:\n        // Extension Substitution\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error('GSUB lookupType ' + lookupType + ' is not supported');\n    }\n  };\n\n  return GSUBProcessor;\n}(OTProcessor);\n\nvar GPOSProcessor = function (_OTProcessor) {\n  inherits(GPOSProcessor, _OTProcessor);\n\n  function GPOSProcessor() {\n    classCallCheck(this, GPOSProcessor);\n    return possibleConstructorReturn(this, _OTProcessor.apply(this, arguments));\n  }\n\n  GPOSProcessor.prototype.applyPositionValue = function applyPositionValue(sequenceIndex, value) {\n    var position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n    if (value.xAdvance != null) {\n      position.xAdvance += value.xAdvance;\n    }\n\n    if (value.yAdvance != null) {\n      position.yAdvance += value.yAdvance;\n    }\n\n    if (value.xPlacement != null) {\n      position.xOffset += value.xPlacement;\n    }\n\n    if (value.yPlacement != null) {\n      position.yOffset += value.yPlacement;\n    }\n\n    // Adjustments for font variations\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n    if (variationProcessor && variationStore) {\n      if (value.xPlaDevice) {\n        position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n      }\n\n      if (value.yPlaDevice) {\n        position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n      }\n\n      if (value.xAdvDevice) {\n        position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n      }\n\n      if (value.yAdvDevice) {\n        position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n      }\n    }\n\n    // TODO: device tables\n  };\n\n  GPOSProcessor.prototype.applyLookup = function applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1:\n        {\n          // Single positioning value\n          var index = this.coverageIndex(table.coverage);\n          if (index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              this.applyPositionValue(0, table.value);\n              break;\n\n            case 2:\n              this.applyPositionValue(0, table.values.get(index));\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          // Pair Adjustment Positioning\n          var nextGlyph = this.glyphIterator.peek();\n          if (!nextGlyph) {\n            return false;\n          }\n\n          var _index = this.coverageIndex(table.coverage);\n          if (_index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              // Adjustments for glyph pairs\n              var set$$1 = table.pairSets.get(_index);\n\n              for (var _iterator = set$$1, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n                var _ref;\n\n                if (_isArray) {\n                  if (_i >= _iterator.length) break;\n                  _ref = _iterator[_i++];\n                } else {\n                  _i = _iterator.next();\n                  if (_i.done) break;\n                  _ref = _i.value;\n                }\n\n                var _pair = _ref;\n\n                if (_pair.secondGlyph === nextGlyph.id) {\n                  this.applyPositionValue(0, _pair.value1);\n                  this.applyPositionValue(1, _pair.value2);\n                  return true;\n                }\n              }\n\n              return false;\n\n            case 2:\n              // Class pair adjustment\n              var class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n              var class2 = this.getClassID(nextGlyph.id, table.classDef2);\n              if (class1 === -1 || class2 === -1) {\n                return false;\n              }\n\n              var pair = table.classRecords.get(class1).get(class2);\n              this.applyPositionValue(0, pair.value1);\n              this.applyPositionValue(1, pair.value2);\n              return true;\n          }\n        }\n\n      case 3:\n        {\n          // Cursive Attachment Positioning\n          var nextIndex = this.glyphIterator.peekIndex();\n          var _nextGlyph = this.glyphs[nextIndex];\n          if (!_nextGlyph) {\n            return false;\n          }\n\n          var curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n          if (!curRecord || !curRecord.exitAnchor) {\n            return false;\n          }\n\n          var nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, _nextGlyph.id)];\n          if (!nextRecord || !nextRecord.entryAnchor) {\n            return false;\n          }\n\n          var entry = this.getAnchor(nextRecord.entryAnchor);\n          var exit = this.getAnchor(curRecord.exitAnchor);\n\n          var cur = this.positions[this.glyphIterator.index];\n          var next = this.positions[nextIndex];\n\n          switch (this.direction) {\n            case 'ltr':\n              cur.xAdvance = exit.x + cur.xOffset;\n\n              var d = entry.x + next.xOffset;\n              next.xAdvance -= d;\n              next.xOffset -= d;\n              break;\n\n            case 'rtl':\n              d = exit.x + cur.xOffset;\n              cur.xAdvance -= d;\n              cur.xOffset -= d;\n              next.xAdvance = entry.x + next.xOffset;\n              break;\n          }\n\n          if (this.glyphIterator.flags.rightToLeft) {\n            this.glyphIterator.cur.cursiveAttachment = nextIndex;\n            cur.yOffset = entry.y - exit.y;\n          } else {\n            _nextGlyph.cursiveAttachment = this.glyphIterator.index;\n            cur.yOffset = exit.y - entry.y;\n          }\n\n          return true;\n        }\n\n      case 4:\n        {\n          // Mark to base positioning\n          var markIndex = this.coverageIndex(table.markCoverage);\n          if (markIndex === -1) {\n            return false;\n          }\n\n          // search backward for a base glyph\n          var baseGlyphIndex = this.glyphIterator.index;\n          while (--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0)) {}\n\n          if (baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n          if (baseIndex === -1) {\n            return false;\n          }\n\n          var markRecord = table.markArray[markIndex];\n          var baseAnchor = table.baseArray[baseIndex][markRecord.class];\n          this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n          return true;\n        }\n\n      case 5:\n        {\n          // Mark to ligature positioning\n          var _markIndex = this.coverageIndex(table.markCoverage);\n          if (_markIndex === -1) {\n            return false;\n          }\n\n          // search backward for a base glyph\n          var _baseGlyphIndex = this.glyphIterator.index;\n          while (--_baseGlyphIndex >= 0 && this.glyphs[_baseGlyphIndex].isMark) {}\n\n          if (_baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[_baseGlyphIndex].id);\n          if (ligIndex === -1) {\n            return false;\n          }\n\n          var ligAttach = table.ligatureArray[ligIndex];\n          var markGlyph = this.glyphIterator.cur;\n          var ligGlyph = this.glyphs[_baseGlyphIndex];\n          var compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;\n\n          var _markRecord = table.markArray[_markIndex];\n          var _baseAnchor = ligAttach[compIndex][_markRecord.class];\n          this.applyAnchor(_markRecord, _baseAnchor, _baseGlyphIndex);\n          return true;\n        }\n\n      case 6:\n        {\n          // Mark to mark positioning\n          var mark1Index = this.coverageIndex(table.mark1Coverage);\n          if (mark1Index === -1) {\n            return false;\n          }\n\n          // get the previous mark to attach to\n          var prevIndex = this.glyphIterator.peekIndex(-1);\n          var prev = this.glyphs[prevIndex];\n          if (!prev || !prev.isMark) {\n            return false;\n          }\n\n          var _cur = this.glyphIterator.cur;\n\n          // The following logic was borrowed from Harfbuzz\n          var good = false;\n          if (_cur.ligatureID === prev.ligatureID) {\n            if (!_cur.ligatureID) {\n              // Marks belonging to the same base\n              good = true;\n            } else if (_cur.ligatureComponent === prev.ligatureComponent) {\n              // Marks belonging to the same ligature component\n              good = true;\n            }\n          } else {\n            // If ligature ids don't match, it may be the case that one of the marks\n            // itself is a ligature, in which case match.\n            if (_cur.ligatureID && !_cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) {\n              good = true;\n            }\n          }\n\n          if (!good) {\n            return false;\n          }\n\n          var mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n          if (mark2Index === -1) {\n            return false;\n          }\n\n          var _markRecord2 = table.mark1Array[mark1Index];\n          var _baseAnchor2 = table.mark2Array[mark2Index][_markRecord2.class];\n          this.applyAnchor(_markRecord2, _baseAnchor2, prevIndex);\n          return true;\n        }\n\n      case 7:\n        // Contextual positioning\n        return this.applyContext(table);\n\n      case 8:\n        // Chaining contextual positioning\n        return this.applyChainingContext(table);\n\n      case 9:\n        // Extension positioning\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error('Unsupported GPOS table: ' + lookupType);\n    }\n  };\n\n  GPOSProcessor.prototype.applyAnchor = function applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n    var baseCoords = this.getAnchor(baseAnchor);\n    var markCoords = this.getAnchor(markRecord.markAnchor);\n\n    var basePos = this.positions[baseGlyphIndex];\n    var markPos = this.positions[this.glyphIterator.index];\n\n    markPos.xOffset = baseCoords.x - markCoords.x;\n    markPos.yOffset = baseCoords.y - markCoords.y;\n    this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n  };\n\n  GPOSProcessor.prototype.getAnchor = function getAnchor(anchor) {\n    // TODO: contour point, device tables\n    var x = anchor.xCoordinate;\n    var y = anchor.yCoordinate;\n\n    // Adjustments for font variations\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n    if (variationProcessor && variationStore) {\n      if (anchor.xDeviceTable) {\n        x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n      }\n\n      if (anchor.yDeviceTable) {\n        y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n      }\n    }\n\n    return { x: x, y: y };\n  };\n\n  GPOSProcessor.prototype.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    _OTProcessor.prototype.applyFeatures.call(this, userFeatures, glyphs, advances);\n\n    for (var i = 0; i < this.glyphs.length; i++) {\n      this.fixCursiveAttachment(i);\n    }\n\n    this.fixMarkAttachment();\n  };\n\n  GPOSProcessor.prototype.fixCursiveAttachment = function fixCursiveAttachment(i) {\n    var glyph = this.glyphs[i];\n    if (glyph.cursiveAttachment != null) {\n      var j = glyph.cursiveAttachment;\n\n      glyph.cursiveAttachment = null;\n      this.fixCursiveAttachment(j);\n\n      this.positions[i].yOffset += this.positions[j].yOffset;\n    }\n  };\n\n  GPOSProcessor.prototype.fixMarkAttachment = function fixMarkAttachment() {\n    for (var i = 0; i < this.glyphs.length; i++) {\n      var glyph = this.glyphs[i];\n      if (glyph.markAttachment != null) {\n        var j = glyph.markAttachment;\n\n        this.positions[i].xOffset += this.positions[j].xOffset;\n        this.positions[i].yOffset += this.positions[j].yOffset;\n\n        if (this.direction === 'ltr') {\n          for (var k = j; k < i; k++) {\n            this.positions[i].xOffset -= this.positions[k].xAdvance;\n            this.positions[i].yOffset -= this.positions[k].yAdvance;\n          }\n        } else {\n          for (var _k = j + 1; _k < i + 1; _k++) {\n            this.positions[i].xOffset += this.positions[_k].xAdvance;\n            this.positions[i].yOffset += this.positions[_k].yAdvance;\n          }\n        }\n      }\n    }\n  };\n\n  return GPOSProcessor;\n}(OTProcessor);\n\nvar OTLayoutEngine = function () {\n  function OTLayoutEngine(font) {\n    classCallCheck(this, OTLayoutEngine);\n\n    this.font = font;\n    this.plan = null;\n    this.GSUBProcessor = null;\n    this.GPOSProcessor = null;\n    this.fallbackPosition = true;\n\n    if (font.GSUB) {\n      this.GSUBProcessor = new GSUBProcessor(font, font.GSUB);\n    }\n\n    if (font.GPOS) {\n      this.GPOSProcessor = new GPOSProcessor(font, font.GPOS);\n    }\n  }\n\n  OTLayoutEngine.prototype.setup = function setup(glyphRun) {\n    // Select a script based on what is available in GSUB/GPOS.\n    var script = null;\n    if (this.GPOSProcessor) {\n      script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    if (this.GSUBProcessor) {\n      script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    // Choose a shaper based on the script, and setup a shaping plan.\n    // This determines which features to apply to which glyphs.\n    this.shaper = choose(script);\n    this.plan = new ShapingPlan(this.font, script, glyphRun.direction);\n    this.shaper.plan(this.plan, glyphRun.glyphs, glyphRun.features);\n\n    // Assign chosen features to output glyph run\n    for (var key in this.plan.allFeatures) {\n      glyphRun.features[key] = true;\n    }\n  };\n\n  OTLayoutEngine.prototype.substitute = function substitute(glyphRun) {\n    if (this.GSUBProcessor) {\n      this.plan.process(this.GSUBProcessor, glyphRun.glyphs);\n    }\n  };\n\n  OTLayoutEngine.prototype.position = function position(glyphRun) {\n    if (this.shaper.zeroMarkWidths === 'BEFORE_GPOS') {\n      this.zeroMarkAdvances(glyphRun);\n    }\n\n    if (this.GPOSProcessor) {\n      this.plan.process(this.GPOSProcessor, glyphRun.glyphs, glyphRun.positions);\n    }\n\n    if (this.shaper.zeroMarkWidths === 'AFTER_GPOS') {\n      this.zeroMarkAdvances(glyphRun);\n    }\n\n    // Reverse the glyphs and positions if the script is right-to-left\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n      glyphRun.positions.reverse();\n    }\n\n    return this.GPOSProcessor && this.GPOSProcessor.features;\n  };\n\n  OTLayoutEngine.prototype.zeroMarkAdvances = function zeroMarkAdvances(glyphRun) {\n    for (var i = 0; i < glyphRun.glyphs; i++) {\n      if (glyphRun.glyphs[i].isMark) {\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  OTLayoutEngine.prototype.cleanup = function cleanup() {\n    this.glyphInfos = null;\n    this.plan = null;\n    this.shaper = null;\n  };\n\n  OTLayoutEngine.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.GSUBProcessor) {\n      this.GSUBProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GSUBProcessor.features));\n    }\n\n    if (this.GPOSProcessor) {\n      this.GPOSProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GPOSProcessor.features));\n    }\n\n    return features;\n  };\n\n  return OTLayoutEngine;\n}();\n\nvar LayoutEngine = function () {\n  function LayoutEngine(font) {\n    classCallCheck(this, LayoutEngine);\n\n    this.font = font;\n    this.unicodeLayoutEngine = null;\n    this.kernProcessor = null;\n\n    // Choose an advanced layout engine. We try the AAT morx table first since more\n    // scripts are currently supported because the shaping logic is built into the font.\n    if (this.font.morx) {\n      this.engine = new AATLayoutEngine(this.font);\n    } else if (this.font.GSUB || this.font.GPOS) {\n      this.engine = new OTLayoutEngine(this.font);\n    }\n  }\n\n  LayoutEngine.prototype.layout = function layout(string, features, script, language, direction$$1) {\n    var _this = this;\n\n    // Make the features parameter optional\n    if (typeof features === 'string') {\n      direction$$1 = language;\n      language = script;\n      script = features;\n      features = [];\n    }\n\n    // Attempt to detect the script from the string if not provided.\n    if (script == null) {\n      script = forString(string);\n    }\n\n    var glyphs = this.glyphsForString(string);\n\n    var glyphRun = new GlyphRun(glyphs, features, script, language, direction$$1);\n\n    // Return early if there are no glyphs\n    if (glyphs.length === 0) {\n      glyphRun.positions = [];\n      return glyphRun;\n    }\n\n    // Setup the advanced layout engine\n    if (this.engine && this.engine.setup) {\n      this.engine.setup(glyphRun);\n    }\n\n    // Substitute and position the glyphs\n    this.substitute(glyphRun);\n    this.position(glyphRun);\n\n    this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions);\n\n    // Let the layout engine clean up any state it might have\n    if (this.engine && this.engine.cleanup) {\n      this.engine.cleanup();\n    }\n\n    // Map glyph infos back to normal Glyph objects\n    glyphRun.stringIndices = glyphRun.glyphs.map(function (glyphInfo) {\n      return glyphInfo.stringIndex;\n    });\n    glyphRun.glyphs = glyphRun.glyphs.map(function (glyphInfo) {\n      return _this.font.getGlyph(glyphInfo.id, glyphInfo.codePoints);\n    });\n    return glyphRun;\n  };\n\n  LayoutEngine.prototype.glyphsForString = function glyphsForString(string) {\n    var glyphs = [];\n    var len = string.length;\n    var idx = 0;\n    var last = -1;\n    var state = -1;\n\n    while (idx <= len) {\n      var code = 0;\n      var nextState = 0;\n      var stringIndex = idx - 1;\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          var next = string.charCodeAt(idx);\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        }\n        // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n        nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n      } else {\n        idx++;\n      }\n      if (state === 0 && nextState === 1) {\n        // Variation selector following normal codepoint.\n        glyphs.push(new GlyphInfo(this.font, this.font._cmapProcessor.lookup(last, code), [last, code], null, stringIndex));\n      } else if (state === 0 && nextState === 0) {\n        // Normal codepoint following normal codepoint.\n        glyphs.push(new GlyphInfo(this.font, this.font._cmapProcessor.lookup(last), [last], null, stringIndex));\n      }\n      last = code;\n      state = nextState;\n    }\n\n    return glyphs;\n  };\n\n  LayoutEngine.prototype.substitute = function substitute(glyphRun) {\n    // Call the advanced layout engine to make substitutions\n    if (this.engine && this.engine.substitute) {\n      this.engine.substitute(glyphRun);\n    }\n  };\n\n  LayoutEngine.prototype.position = function position(glyphRun) {\n    // Get initial glyph positions\n    glyphRun.positions = glyphRun.glyphs.map(function (glyph) {\n      return new GlyphPosition(glyph.advanceWidth);\n    });\n    var positioned = null;\n\n    // Call the advanced layout engine. Returns the features applied.\n    if (this.engine && this.engine.position) {\n      positioned = this.engine.position(glyphRun);\n    }\n\n    // if there is no GPOS table, use unicode properties to position marks.\n    if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n      if (!this.unicodeLayoutEngine) {\n        this.unicodeLayoutEngine = new UnicodeLayoutEngine(this.font);\n      }\n\n      this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n    }\n\n    // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n    if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n      if (!this.kernProcessor) {\n        this.kernProcessor = new KernProcessor(this.font);\n      }\n\n      this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n      glyphRun.features.kern = true;\n    }\n  };\n\n  LayoutEngine.prototype.hideDefaultIgnorables = function hideDefaultIgnorables(glyphs, positions) {\n    var space = this.font.glyphForCodePoint(0x20);\n    for (var i = 0; i < glyphs.length; i++) {\n      if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n        glyphs[i] = space;\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  LayoutEngine.prototype.isDefaultIgnorable = function isDefaultIgnorable(ch) {\n    // From DerivedCoreProperties.txt in the Unicode database,\n    // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n    // Harfbuzz and Uniscribe do.\n    var plane = ch >> 16;\n    if (plane === 0) {\n      // BMP\n      switch (ch >> 8) {\n        case 0x00:\n          return ch === 0x00ad;\n        case 0x03:\n          return ch === 0x034f;\n        case 0x06:\n          return ch === 0x061c;\n        case 0x17:\n          return 0x17b4 <= ch && ch <= 0x17b5;\n        case 0x18:\n          return 0x180b <= ch && ch <= 0x180e;\n        case 0x20:\n          return 0x200b <= ch && ch <= 0x200f || 0x202a <= ch && ch <= 0x202e || 0x2060 <= ch && ch <= 0x206f;\n        case 0xfe:\n          return 0xfe00 <= ch && ch <= 0xfe0f || ch === 0xfeff;\n        case 0xff:\n          return 0xfff0 <= ch && ch <= 0xfff8;\n        default:\n          return false;\n      }\n    } else {\n      // Other planes\n      switch (plane) {\n        case 0x01:\n          return 0x1bca0 <= ch && ch <= 0x1bca3 || 0x1d173 <= ch && ch <= 0x1d17a;\n        case 0x0e:\n          return 0xe0000 <= ch && ch <= 0xe0fff;\n        default:\n          return false;\n      }\n    }\n  };\n\n  LayoutEngine.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.engine) {\n      features.push.apply(features, this.engine.getAvailableFeatures(script, language));\n    }\n\n    if (this.font.kern && features.indexOf('kern') === -1) {\n      features.push('kern');\n    }\n\n    return features;\n  };\n\n  LayoutEngine.prototype.stringsForGlyph = function stringsForGlyph(gid) {\n    var result = new Set();\n\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n    for (var _iterator = codePoints, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var codePoint = _ref;\n\n      result.add(String.fromCodePoint(codePoint));\n    }\n\n    if (this.engine && this.engine.stringsForGlyph) {\n      for (var _iterator2 = this.engine.stringsForGlyph(gid), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var string = _ref2;\n\n        result.add(string);\n      }\n    }\n\n    return Array.from(result);\n  };\n\n  return LayoutEngine;\n}();\n\nvar SVG_COMMANDS = {\n  moveTo: 'M',\n  lineTo: 'L',\n  quadraticCurveTo: 'Q',\n  bezierCurveTo: 'C',\n  closePath: 'Z'\n};\n\n/**\n * Path objects are returned by glyphs and represent the actual\n * vector outlines for each glyph in the font. Paths can be converted\n * to SVG path data strings, or to functions that can be applied to\n * render the path to a graphics context.\n */\n\nvar Path = function () {\n  function Path() {\n    classCallCheck(this, Path);\n\n    this.commands = [];\n    this._bbox = null;\n    this._cbox = null;\n  }\n\n  /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */\n\n\n  Path.prototype.toFunction = function toFunction() {\n    var cmds = this.commands.map(function (c) {\n      return '  ctx.' + c.command + '(' + c.args.join(', ') + ');';\n    });\n    return new Function('ctx', cmds.join('\\n'));\n  };\n\n  /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */\n\n\n  Path.prototype.toSVG = function toSVG() {\n    var cmds = this.commands.map(function (c) {\n      var args = c.args.map(function (arg) {\n        return Math.round(arg * 100) / 100;\n      });\n      return '' + SVG_COMMANDS[c.command] + args.join(' ');\n    });\n\n    return cmds.join('');\n  };\n\n  /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */\n\n\n  /**\n   * Applies a mapping function to each point in the path.\n   * @param {function} fn\n   * @return {Path}\n   */\n  Path.prototype.mapPoints = function mapPoints(fn) {\n    var path = new Path();\n\n    for (var _iterator = this.commands, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var c = _ref;\n\n      var args = [];\n      for (var _i2 = 0; _i2 < c.args.length; _i2 += 2) {\n        var _fn = fn(c.args[_i2], c.args[_i2 + 1]),\n            x = _fn[0],\n            y = _fn[1];\n\n        args.push(x, y);\n      }\n\n      path[c.command].apply(path, args);\n    }\n\n    return path;\n  };\n\n  /**\n   * Transforms the path by the given matrix.\n   */\n\n\n  Path.prototype.transform = function transform(m0, m1, m2, m3, m4, m5) {\n    return this.mapPoints(function (x, y) {\n      x = m0 * x + m2 * y + m4;\n      y = m1 * x + m3 * y + m5;\n      return [x, y];\n    });\n  };\n\n  /**\n   * Translates the path by the given offset.\n   */\n\n\n  Path.prototype.translate = function translate(x, y) {\n    return this.transform(1, 0, 0, 1, x, y);\n  };\n\n  /**\n   * Rotates the path by the given angle (in radians).\n   */\n\n\n  Path.prototype.rotate = function rotate(angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return this.transform(cos, sin, -sin, cos, 0, 0);\n  };\n\n  /**\n   * Scales the path.\n   */\n\n\n  Path.prototype.scale = function scale(scaleX) {\n    var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n\n    return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n  };\n\n  createClass(Path, [{\n    key: 'cbox',\n    get: function get$$1() {\n      if (!this._cbox) {\n        var cbox = new BBox();\n        for (var _iterator2 = this.commands, _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n          var _ref2;\n\n          if (_isArray2) {\n            if (_i3 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i3++];\n          } else {\n            _i3 = _iterator2.next();\n            if (_i3.done) break;\n            _ref2 = _i3.value;\n          }\n\n          var command = _ref2;\n\n          for (var _i4 = 0; _i4 < command.args.length; _i4 += 2) {\n            cbox.addPoint(command.args[_i4], command.args[_i4 + 1]);\n          }\n        }\n\n        this._cbox = Object.freeze(cbox);\n      }\n\n      return this._cbox;\n    }\n\n    /**\n     * Gets the exact bounding box of the path by evaluating curve segments.\n     * Slower to compute than the control box, but more accurate.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      if (this._bbox) {\n        return this._bbox;\n      }\n\n      var bbox = new BBox();\n      var cx = 0,\n          cy = 0;\n\n      var f = function f(t) {\n        return Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n      };\n\n      for (var _iterator3 = this.commands, _isArray3 = Array.isArray(_iterator3), _i5 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i5 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i5++];\n        } else {\n          _i5 = _iterator3.next();\n          if (_i5.done) break;\n          _ref3 = _i5.value;\n        }\n\n        var c = _ref3;\n\n        switch (c.command) {\n          case 'moveTo':\n          case 'lineTo':\n            var _c$args = c.args,\n                x = _c$args[0],\n                y = _c$args[1];\n\n            bbox.addPoint(x, y);\n            cx = x;\n            cy = y;\n            break;\n\n          case 'quadraticCurveTo':\n          case 'bezierCurveTo':\n            if (c.command === 'quadraticCurveTo') {\n              // http://fontforge.org/bezier.html\n              var _c$args2 = c.args,\n                  qp1x = _c$args2[0],\n                  qp1y = _c$args2[1],\n                  p3x = _c$args2[2],\n                  p3y = _c$args2[3];\n\n              var cp1x = cx + 2 / 3 * (qp1x - cx); // CP1 = QP0 + 2/3 * (QP1-QP0)\n              var cp1y = cy + 2 / 3 * (qp1y - cy);\n              var cp2x = p3x + 2 / 3 * (qp1x - p3x); // CP2 = QP2 + 2/3 * (QP1-QP2)\n              var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n            } else {\n              var _c$args3 = c.args,\n                  cp1x = _c$args3[0],\n                  cp1y = _c$args3[1],\n                  cp2x = _c$args3[2],\n                  cp2y = _c$args3[3],\n                  p3x = _c$args3[4],\n                  p3y = _c$args3[5];\n            }\n\n            // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n            bbox.addPoint(p3x, p3y);\n\n            var p0 = [cx, cy];\n            var p1 = [cp1x, cp1y];\n            var p2 = [cp2x, cp2y];\n            var p3 = [p3x, p3y];\n\n            for (var i = 0; i <= 1; i++) {\n              var b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n              var a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n              c = 3 * p1[i] - 3 * p0[i];\n\n              if (a === 0) {\n                if (b === 0) {\n                  continue;\n                }\n\n                var t = -c / b;\n                if (0 < t && t < 1) {\n                  if (i === 0) {\n                    bbox.addPoint(f(t), bbox.maxY);\n                  } else if (i === 1) {\n                    bbox.addPoint(bbox.maxX, f(t));\n                  }\n                }\n\n                continue;\n              }\n\n              var b2ac = Math.pow(b, 2) - 4 * c * a;\n              if (b2ac < 0) {\n                continue;\n              }\n\n              var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n              if (0 < t1 && t1 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t1), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t1));\n                }\n              }\n\n              var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n              if (0 < t2 && t2 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t2), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t2));\n                }\n              }\n            }\n\n            cx = p3x;\n            cy = p3y;\n            break;\n        }\n      }\n\n      return this._bbox = Object.freeze(bbox);\n    }\n  }]);\n  return Path;\n}();\n\nvar _arr = ['moveTo', 'lineTo', 'quadraticCurveTo', 'bezierCurveTo', 'closePath'];\n\nvar _loop = function _loop() {\n  var command = _arr[_i6];\n  Path.prototype[command] = function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this._bbox = this._cbox = null;\n    this.commands.push({\n      command: command,\n      args: args\n    });\n\n    return this;\n  };\n};\n\nfor (var _i6 = 0; _i6 < _arr.length; _i6++) {\n  _loop();\n}\n\nvar StandardNames = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\nvar _class$8;\n\nfunction _applyDecoratedDescriptor$4(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n/**\n * Glyph objects represent a glyph in the font. They have various properties for accessing metrics and\n * the actual vector path the glyph represents, and methods for rendering the glyph to a graphics context.\n *\n * You do not create glyph objects directly. They are created by various methods on the font object.\n * There are several subclasses of the base Glyph class internally that may be returned depending\n * on the font format, but they all inherit from this class.\n */\nvar Glyph = (_class$8 = function () {\n  function Glyph(id, codePoints, font) {\n    classCallCheck(this, Glyph);\n\n    /**\n     * The glyph id in the font\n     * @type {number}\n     */\n    this.id = id;\n\n    /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */\n    this.codePoints = codePoints;\n    this._font = font;\n\n    // TODO: get this info from GDEF if available\n    this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n    this.isLigature = this.codePoints.length > 1;\n  }\n\n  Glyph.prototype._getPath = function _getPath() {\n    return new Path();\n  };\n\n  Glyph.prototype._getCBox = function _getCBox() {\n    return this.path.cbox;\n  };\n\n  Glyph.prototype._getBBox = function _getBBox() {\n    return this.path.bbox;\n  };\n\n  Glyph.prototype._getTableMetrics = function _getTableMetrics(table) {\n    if (this.id < table.metrics.length) {\n      return table.metrics.get(this.id);\n    }\n\n    var metric = table.metrics.get(table.metrics.length - 1);\n    var res = {\n      advance: metric ? metric.advance : 0,\n      bearing: table.bearings.get(this.id - table.metrics.length) || 0\n    };\n\n    return res;\n  };\n\n  Glyph.prototype._getMetrics = function _getMetrics(cbox) {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var _getTableMetrics2 = this._getTableMetrics(this._font.hmtx),\n        advanceWidth = _getTableMetrics2.advance,\n        leftBearing = _getTableMetrics2.bearing;\n\n    // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n\n\n    if (this._font.vmtx) {\n      var _getTableMetrics3 = this._getTableMetrics(this._font.vmtx),\n          advanceHeight = _getTableMetrics3.advance,\n          topBearing = _getTableMetrics3.bearing;\n    } else {\n      var os2 = void 0;\n      if (typeof cbox === 'undefined' || cbox === null) {\n        cbox = this.cbox;\n      }\n\n      if ((os2 = this._font['OS/2']) && os2.version > 0) {\n        var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n        var topBearing = os2.typoAscender - cbox.maxY;\n      } else {\n        var hhea = this._font.hhea;\n\n        var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n        var topBearing = hhea.ascent - cbox.maxY;\n      }\n    }\n\n    if (this._font._variationProcessor && this._font.HVAR) {\n      advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n    }\n\n    return this._metrics = { advanceWidth: advanceWidth, advanceHeight: advanceHeight, leftBearing: leftBearing, topBearing: topBearing };\n  };\n\n  /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */\n\n\n  /**\n   * Returns a path scaled to the given font size.\n   * @param {number} size\n   * @return {Path}\n   */\n  Glyph.prototype.getScaledPath = function getScaledPath(size) {\n    var scale = 1 / this._font.unitsPerEm * size;\n    return this.path.scale(scale);\n  };\n\n  /**\n   * The glyph's advance width.\n   * @type {number}\n   */\n\n\n  Glyph.prototype._getName = function _getName() {\n    var post = this._font.post;\n\n    if (!post) {\n      return null;\n    }\n\n    switch (post.version) {\n      case 1:\n        return StandardNames[this.id];\n\n      case 2:\n        var id = post.glyphNameIndex[this.id];\n        if (id < StandardNames.length) {\n          return StandardNames[id];\n        }\n\n        return post.names[id - StandardNames.length];\n\n      case 2.5:\n        return StandardNames[this.id + post.offsets[this.id]];\n\n      case 4:\n        return String.fromCharCode(post.map[this.id]);\n    }\n  };\n\n  /**\n   * The glyph's name\n   * @type {string}\n   */\n\n\n  /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */\n  Glyph.prototype.render = function render(ctx, size) {\n    ctx.save();\n\n    var scale = 1 / this._font.head.unitsPerEm * size;\n    ctx.scale(scale, scale);\n\n    var fn = this.path.toFunction();\n    fn(ctx);\n    ctx.fill();\n\n    ctx.restore();\n  };\n\n  createClass(Glyph, [{\n    key: 'cbox',\n    get: function get$$1() {\n      return this._getCBox();\n    }\n\n    /**\n     * The glyph’s bounding box, i.e. the rectangle that encloses the\n     * glyph outline as tightly as possible.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      return this._getBBox();\n    }\n\n    /**\n     * A vector Path object representing the glyph outline.\n     * @type {Path}\n     */\n\n  }, {\n    key: 'path',\n    get: function get$$1() {\n      // Cache the path so we only decode it once\n      // Decoding is actually performed by subclasses\n      return this._getPath();\n    }\n  }, {\n    key: 'advanceWidth',\n    get: function get$$1() {\n      return this._getMetrics().advanceWidth;\n    }\n\n    /**\n     * The glyph's advance height.\n     * @type {number}\n     */\n\n  }, {\n    key: 'advanceHeight',\n    get: function get$$1() {\n      return this._getMetrics().advanceHeight;\n    }\n  }, {\n    key: 'ligatureCaretPositions',\n    get: function get$$1() {}\n  }, {\n    key: 'name',\n    get: function get$$1() {\n      return this._getName();\n    }\n  }]);\n  return Glyph;\n}(), _applyDecoratedDescriptor$4(_class$8.prototype, 'cbox', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'cbox'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'bbox', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'bbox'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'path', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'path'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'advanceWidth', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'advanceWidth'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'advanceHeight', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'advanceHeight'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'name', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'name'), _class$8.prototype), _class$8);\n\n// The header for both simple and composite glyphs\nvar GlyfHeader = new r.Struct({\n  numberOfContours: r.int16, // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16\n});\n\n// Flags for simple glyphs\nvar ON_CURVE = 1 << 0;\nvar X_SHORT_VECTOR = 1 << 1;\nvar Y_SHORT_VECTOR = 1 << 2;\nvar REPEAT = 1 << 3;\nvar SAME_X = 1 << 4;\nvar SAME_Y = 1 << 5;\n\n// Flags for composite glyphs\nvar ARG_1_AND_2_ARE_WORDS = 1 << 0;\nvar WE_HAVE_A_SCALE = 1 << 3;\nvar MORE_COMPONENTS = 1 << 5;\nvar WE_HAVE_AN_X_AND_Y_SCALE = 1 << 6;\nvar WE_HAVE_A_TWO_BY_TWO = 1 << 7;\nvar WE_HAVE_INSTRUCTIONS = 1 << 8;\n// Represents a point in a simple glyph\nvar Point = function () {\n  function Point(onCurve, endContour) {\n    var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    classCallCheck(this, Point);\n\n    this.onCurve = onCurve;\n    this.endContour = endContour;\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype.copy = function copy() {\n    return new Point(this.onCurve, this.endContour, this.x, this.y);\n  };\n\n  return Point;\n}();\n\n// Represents a component in a composite glyph\n\nvar Component = function Component(glyphID, dx, dy) {\n  classCallCheck(this, Component);\n\n  this.glyphID = glyphID;\n  this.dx = dx;\n  this.dy = dy;\n  this.pos = 0;\n  this.scaleX = this.scaleY = 1;\n  this.scale01 = this.scale10 = 0;\n};\n\n/**\n * Represents a TrueType glyph.\n */\n\n\nvar TTFGlyph = function (_Glyph) {\n  inherits(TTFGlyph, _Glyph);\n\n  function TTFGlyph() {\n    classCallCheck(this, TTFGlyph);\n    return possibleConstructorReturn(this, _Glyph.apply(this, arguments));\n  }\n\n  // Parses just the glyph header and returns the bounding box\n  TTFGlyph.prototype._getCBox = function _getCBox(internal) {\n    // We need to decode the glyph if variation processing is requested,\n    // so it's easier just to recompute the path's cbox after decoding.\n    if (this._font._variationProcessor && !internal) {\n      return this.path.cbox;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n    stream.pos += this._font.loca.offsets[this.id];\n    var glyph = GlyfHeader.decode(stream);\n\n    var cbox = new BBox(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n    return Object.freeze(cbox);\n  };\n\n  // Parses a single glyph coordinate\n\n\n  TTFGlyph.prototype._parseGlyphCoord = function _parseGlyphCoord(stream, prev, short, same) {\n    if (short) {\n      var val = stream.readUInt8();\n      if (!same) {\n        val = -val;\n      }\n\n      val += prev;\n    } else {\n      if (same) {\n        var val = prev;\n      } else {\n        var val = prev + stream.readInt16BE();\n      }\n    }\n\n    return val;\n  };\n\n  // Decodes the glyph data into points for simple glyphs,\n  // or components for composite glyphs\n\n\n  TTFGlyph.prototype._decode = function _decode() {\n    var glyfPos = this._font.loca.offsets[this.id];\n    var nextPos = this._font.loca.offsets[this.id + 1];\n\n    // Nothing to do if there is no data for this glyph\n    if (glyfPos === nextPos) {\n      return null;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n    stream.pos += glyfPos;\n    var startPos = stream.pos;\n\n    var glyph = GlyfHeader.decode(stream);\n\n    if (glyph.numberOfContours > 0) {\n      this._decodeSimple(glyph, stream);\n    } else if (glyph.numberOfContours < 0) {\n      this._decodeComposite(glyph, stream, startPos);\n    }\n\n    return glyph;\n  };\n\n  TTFGlyph.prototype._decodeSimple = function _decodeSimple(glyph, stream) {\n    // this is a simple glyph\n    glyph.points = [];\n\n    var endPtsOfContours = new r.Array(r.uint16, glyph.numberOfContours).decode(stream);\n    glyph.instructions = new r.Array(r.uint8, r.uint16).decode(stream);\n\n    var flags = [];\n    var numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\n    while (flags.length < numCoords) {\n      var flag = stream.readUInt8();\n      flags.push(flag);\n\n      // check for repeat flag\n      if (flag & REPEAT) {\n        var count = stream.readUInt8();\n        for (var j = 0; j < count; j++) {\n          flags.push(flag);\n        }\n      }\n    }\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      var point = new Point(!!(flag & ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n      glyph.points.push(point);\n    }\n\n    var px = 0;\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & X_SHORT_VECTOR, flag & SAME_X);\n    }\n\n    var py = 0;\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & Y_SHORT_VECTOR, flag & SAME_Y);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = glyph.points.slice();\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n      glyph.phantomPoints = points.slice(-4);\n    }\n\n    return;\n  };\n\n  TTFGlyph.prototype._decodeComposite = function _decodeComposite(glyph, stream) {\n    var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    // this is a composite glyph\n    glyph.components = [];\n    var haveInstructions = false;\n    var flags = MORE_COMPONENTS;\n\n    while (flags & MORE_COMPONENTS) {\n      flags = stream.readUInt16BE();\n      var gPos = stream.pos - offset;\n      var glyphID = stream.readUInt16BE();\n      if (!haveInstructions) {\n        haveInstructions = (flags & WE_HAVE_INSTRUCTIONS) !== 0;\n      }\n\n      if (flags & ARG_1_AND_2_ARE_WORDS) {\n        var dx = stream.readInt16BE();\n        var dy = stream.readInt16BE();\n      } else {\n        var dx = stream.readInt8();\n        var dy = stream.readInt8();\n      }\n\n      var component = new Component(glyphID, dx, dy);\n      component.pos = gPos;\n\n      if (flags & WE_HAVE_A_SCALE) {\n        // fixed number with 14 bits of fraction\n        component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_A_TWO_BY_TWO) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      }\n\n      glyph.components.push(component);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = [];\n      for (var j = 0; j < glyph.components.length; j++) {\n        var component = glyph.components[j];\n        points.push(new Point(true, true, component.dx, component.dy));\n      }\n\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n      glyph.phantomPoints = points.splice(-4, 4);\n\n      for (var i = 0; i < points.length; i++) {\n        var point = points[i];\n        glyph.components[i].dx = point.x;\n        glyph.components[i].dy = point.y;\n      }\n    }\n\n    return haveInstructions;\n  };\n\n  TTFGlyph.prototype._getPhantomPoints = function _getPhantomPoints(glyph) {\n    var cbox = this._getCBox(true);\n    if (this._metrics == null) {\n      this._metrics = Glyph.prototype._getMetrics.call(this, cbox);\n    }\n\n    var _metrics = this._metrics,\n        advanceWidth = _metrics.advanceWidth,\n        advanceHeight = _metrics.advanceHeight,\n        leftBearing = _metrics.leftBearing,\n        topBearing = _metrics.topBearing;\n\n\n    return [new Point(false, true, glyph.xMin - leftBearing, 0), new Point(false, true, glyph.xMin - leftBearing + advanceWidth, 0), new Point(false, true, 0, glyph.yMax + topBearing), new Point(false, true, 0, glyph.yMax + topBearing + advanceHeight)];\n  };\n\n  // Decodes font data, resolves composite glyphs, and returns an array of contours\n\n\n  TTFGlyph.prototype._getContours = function _getContours() {\n    var glyph = this._decode();\n    if (!glyph) {\n      return [];\n    }\n\n    var points = [];\n\n    if (glyph.numberOfContours < 0) {\n      // resolve composite glyphs\n      for (var _iterator = glyph.components, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var component = _ref;\n\n        var _contours = this._font.getGlyph(component.glyphID)._getContours();\n        for (var i = 0; i < _contours.length; i++) {\n          var contour = _contours[i];\n          for (var j = 0; j < contour.length; j++) {\n            var _point = contour[j];\n            var x = _point.x * component.scaleX + _point.y * component.scale01 + component.dx;\n            var y = _point.y * component.scaleY + _point.x * component.scale10 + component.dy;\n            points.push(new Point(_point.onCurve, _point.endContour, x, y));\n          }\n        }\n      }\n    } else {\n      points = glyph.points || [];\n    }\n\n    // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n    if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n      this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n      this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n      this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;\n      this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;\n    }\n\n    var contours = [];\n    var cur = [];\n    for (var k = 0; k < points.length; k++) {\n      var point = points[k];\n      cur.push(point);\n      if (point.endContour) {\n        contours.push(cur);\n        cur = [];\n      }\n    }\n\n    return contours;\n  };\n\n  TTFGlyph.prototype._getMetrics = function _getMetrics() {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var cbox = this._getCBox(true);\n    _Glyph.prototype._getMetrics.call(this, cbox);\n\n    if (this._font._variationProcessor && !this._font.HVAR) {\n      // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n      this.path;\n    }\n\n    return this._metrics;\n  };\n\n  // Converts contours to a Path object that can be rendered\n\n\n  TTFGlyph.prototype._getPath = function _getPath() {\n    var contours = this._getContours();\n    var path = new Path();\n\n    for (var i = 0; i < contours.length; i++) {\n      var contour = contours[i];\n      var firstPt = contour[0];\n      var lastPt = contour[contour.length - 1];\n      var start = 0;\n\n      if (firstPt.onCurve) {\n        // The first point will be consumed by the moveTo command, so skip in the loop\n        var curvePt = null;\n        start = 1;\n      } else {\n        if (lastPt.onCurve) {\n          // Start at the last point if the first point is off curve and the last point is on curve\n          firstPt = lastPt;\n        } else {\n          // Start at the middle if both the first and last points are off curve\n          firstPt = new Point(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n        }\n\n        var curvePt = firstPt;\n      }\n\n      path.moveTo(firstPt.x, firstPt.y);\n\n      for (var j = start; j < contour.length; j++) {\n        var pt = contour[j];\n        var prevPt = j === 0 ? firstPt : contour[j - 1];\n\n        if (prevPt.onCurve && pt.onCurve) {\n          path.lineTo(pt.x, pt.y);\n        } else if (prevPt.onCurve && !pt.onCurve) {\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && !pt.onCurve) {\n          var midX = (prevPt.x + pt.x) / 2;\n          var midY = (prevPt.y + pt.y) / 2;\n          path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && pt.onCurve) {\n          path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n          var curvePt = null;\n        } else {\n          throw new Error(\"Unknown TTF path state\");\n        }\n      }\n\n      // Connect the first and last points\n      if (curvePt) {\n        path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n      }\n\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return TTFGlyph;\n}(Glyph);\n\n/**\n * Represents an OpenType PostScript glyph, in the Compact Font Format.\n */\n\nvar CFFGlyph = function (_Glyph) {\n  inherits(CFFGlyph, _Glyph);\n\n  function CFFGlyph() {\n    classCallCheck(this, CFFGlyph);\n    return possibleConstructorReturn(this, _Glyph.apply(this, arguments));\n  }\n\n  CFFGlyph.prototype._getName = function _getName() {\n    if (this._font.CFF2) {\n      return _Glyph.prototype._getName.call(this);\n    }\n\n    return this._font['CFF '].getGlyphName(this.id);\n  };\n\n  CFFGlyph.prototype.bias = function bias(s) {\n    if (s.length < 1240) {\n      return 107;\n    } else if (s.length < 33900) {\n      return 1131;\n    } else {\n      return 32768;\n    }\n  };\n\n  CFFGlyph.prototype._getPath = function _getPath() {\n    var stream = this._font.stream;\n    var pos = stream.pos;\n\n\n    var cff = this._font.CFF2 || this._font['CFF '];\n    var str = cff.topDict.CharStrings[this.id];\n    var end = str.offset + str.length;\n    stream.pos = str.offset;\n\n    var path = new Path();\n    var stack = [];\n    var trans = [];\n\n    var width = null;\n    var nStems = 0;\n    var x = 0,\n        y = 0;\n    var usedGsubrs = void 0;\n    var usedSubrs = void 0;\n    var open = false;\n\n    this._usedGsubrs = usedGsubrs = {};\n    this._usedSubrs = usedSubrs = {};\n\n    var gsubrs = cff.globalSubrIndex || [];\n    var gsubrsBias = this.bias(gsubrs);\n\n    var privateDict = cff.privateDictForGlyph(this.id);\n    var subrs = privateDict.Subrs || [];\n    var subrsBias = this.bias(subrs);\n\n    var vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n    var vsindex = privateDict.vsindex;\n    var variationProcessor = this._font._variationProcessor;\n\n    function checkWidth() {\n      if (width == null) {\n        width = stack.shift() + privateDict.nominalWidthX;\n      }\n    }\n\n    function parseStems() {\n      if (stack.length % 2 !== 0) {\n        checkWidth();\n      }\n\n      nStems += stack.length >> 1;\n      return stack.length = 0;\n    }\n\n    function moveTo(x, y) {\n      if (open) {\n        path.closePath();\n      }\n\n      path.moveTo(x, y);\n      open = true;\n    }\n\n    var parse = function parse() {\n      while (stream.pos < end) {\n        var op = stream.readUInt8();\n        if (op < 32) {\n          switch (op) {\n            case 1: // hstem\n            case 3: // vstem\n            case 18: // hstemhm\n            case 23:\n              // vstemhm\n              parseStems();\n              break;\n\n            case 4:\n              // vmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 5:\n              // rlineto\n              while (stack.length >= 2) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n              break;\n\n            case 6: // hlineto\n            case 7:\n              // vlineto\n              var phase = op === 6;\n              while (stack.length >= 1) {\n                if (phase) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n\n                path.lineTo(x, y);\n                phase = !phase;\n              }\n              break;\n\n            case 8:\n              // rrcurveto\n              while (stack.length > 0) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 10:\n              // callsubr\n              var index = stack.pop() + subrsBias;\n              var subr = subrs[index];\n              if (subr) {\n                usedSubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n              break;\n\n            case 11:\n              // return\n              if (cff.version >= 2) {\n                break;\n              }\n              return;\n\n            case 14:\n              // endchar\n              if (cff.version >= 2) {\n                break;\n              }\n\n              if (stack.length > 0) {\n                checkWidth();\n              }\n\n              if (open) {\n                path.closePath();\n                open = false;\n              }\n              break;\n\n            case 15:\n              {\n                // vsindex\n                if (cff.version < 2) {\n                  throw new Error('vsindex operator not supported in CFF v1');\n                }\n\n                vsindex = stack.pop();\n                break;\n              }\n\n            case 16:\n              {\n                // blend\n                if (cff.version < 2) {\n                  throw new Error('blend operator not supported in CFF v1');\n                }\n\n                if (!variationProcessor) {\n                  throw new Error('blend operator in non-variation font');\n                }\n\n                var blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n                var numBlends = stack.pop();\n                var numOperands = numBlends * blendVector.length;\n                var delta = stack.length - numOperands;\n                var base = delta - numBlends;\n\n                for (var i = 0; i < numBlends; i++) {\n                  var sum = stack[base + i];\n                  for (var j = 0; j < blendVector.length; j++) {\n                    sum += blendVector[j] * stack[delta++];\n                  }\n\n                  stack[base + i] = sum;\n                }\n\n                while (numOperands--) {\n                  stack.pop();\n                }\n\n                break;\n              }\n\n            case 19: // hintmask\n            case 20:\n              // cntrmask\n              parseStems();\n              stream.pos += nStems + 7 >> 3;\n              break;\n\n            case 21:\n              // rmoveto\n              if (stack.length > 2) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 22:\n              // hmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 24:\n              // rcurveline\n              while (stack.length >= 8) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              path.lineTo(x, y);\n              break;\n\n            case 25:\n              // rlinecurve\n              while (stack.length >= 8) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              var c1x = x + stack.shift();\n              var c1y = y + stack.shift();\n              var c2x = c1x + stack.shift();\n              var c2y = c1y + stack.shift();\n              x = c2x + stack.shift();\n              y = c2y + stack.shift();\n              path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              break;\n\n            case 26:\n              // vvcurveto\n              if (stack.length % 2) {\n                x += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x;\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x;\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 27:\n              // hhcurveto\n              if (stack.length % 2) {\n                y += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x + stack.shift();\n                c1y = y;\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y;\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 28:\n              // shortint\n              stack.push(stream.readInt16BE());\n              break;\n\n            case 29:\n              // callgsubr\n              index = stack.pop() + gsubrsBias;\n              subr = gsubrs[index];\n              if (subr) {\n                usedGsubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n              break;\n\n            case 30: // vhcurveto\n            case 31:\n              // hvcurveto\n              phase = op === 31;\n              while (stack.length >= 4) {\n                if (phase) {\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  y = c2y + stack.shift();\n                  x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                } else {\n                  c1x = x;\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  x = c2x + stack.shift();\n                  y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                }\n\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n                phase = !phase;\n              }\n              break;\n\n            case 12:\n              op = stream.readUInt8();\n              switch (op) {\n                case 3:\n                  // and\n                  var a = stack.pop();\n                  var b = stack.pop();\n                  stack.push(a && b ? 1 : 0);\n                  break;\n\n                case 4:\n                  // or\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a || b ? 1 : 0);\n                  break;\n\n                case 5:\n                  // not\n                  a = stack.pop();\n                  stack.push(a ? 0 : 1);\n                  break;\n\n                case 9:\n                  // abs\n                  a = stack.pop();\n                  stack.push(Math.abs(a));\n                  break;\n\n                case 10:\n                  // add\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a + b);\n                  break;\n\n                case 11:\n                  // sub\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a - b);\n                  break;\n\n                case 12:\n                  // div\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a / b);\n                  break;\n\n                case 14:\n                  // neg\n                  a = stack.pop();\n                  stack.push(-a);\n                  break;\n\n                case 15:\n                  // eq\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a === b ? 1 : 0);\n                  break;\n\n                case 18:\n                  // drop\n                  stack.pop();\n                  break;\n\n                case 20:\n                  // put\n                  var val = stack.pop();\n                  var idx = stack.pop();\n                  trans[idx] = val;\n                  break;\n\n                case 21:\n                  // get\n                  idx = stack.pop();\n                  stack.push(trans[idx] || 0);\n                  break;\n\n                case 22:\n                  // ifelse\n                  var s1 = stack.pop();\n                  var s2 = stack.pop();\n                  var v1 = stack.pop();\n                  var v2 = stack.pop();\n                  stack.push(v1 <= v2 ? s1 : s2);\n                  break;\n\n                case 23:\n                  // random\n                  stack.push(Math.random());\n                  break;\n\n                case 24:\n                  // mul\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a * b);\n                  break;\n\n                case 26:\n                  // sqrt\n                  a = stack.pop();\n                  stack.push(Math.sqrt(a));\n                  break;\n\n                case 27:\n                  // dup\n                  a = stack.pop();\n                  stack.push(a, a);\n                  break;\n\n                case 28:\n                  // exch\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(b, a);\n                  break;\n\n                case 29:\n                  // index\n                  idx = stack.pop();\n                  if (idx < 0) {\n                    idx = 0;\n                  } else if (idx > stack.length - 1) {\n                    idx = stack.length - 1;\n                  }\n\n                  stack.push(stack[idx]);\n                  break;\n\n                case 30:\n                  // roll\n                  var n = stack.pop();\n                  var _j = stack.pop();\n\n                  if (_j >= 0) {\n                    while (_j > 0) {\n                      var t = stack[n - 1];\n                      for (var _i = n - 2; _i >= 0; _i--) {\n                        stack[_i + 1] = stack[_i];\n                      }\n\n                      stack[0] = t;\n                      _j--;\n                    }\n                  } else {\n                    while (_j < 0) {\n                      var t = stack[0];\n                      for (var _i2 = 0; _i2 <= n; _i2++) {\n                        stack[_i2] = stack[_i2 + 1];\n                      }\n\n                      stack[n - 1] = t;\n                      _j++;\n                    }\n                  }\n                  break;\n\n                case 34:\n                  // hflex\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  var c3x = c2x + stack.shift();\n                  var c3y = c2y;\n                  var c4x = c3x + stack.shift();\n                  var c4y = c3y;\n                  var c5x = c4x + stack.shift();\n                  var c5y = c4y;\n                  var c6x = c5x + stack.shift();\n                  var c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 35:\n                  // flex\n                  var pts = [];\n\n                  for (var _i3 = 0; _i3 <= 5; _i3++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  stack.shift(); // fd\n                  break;\n\n                case 36:\n                  // hflex1\n                  c1x = x + stack.shift();\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  c3x = c2x + stack.shift();\n                  c3y = c2y;\n                  c4x = c3x + stack.shift();\n                  c4y = c3y;\n                  c5x = c4x + stack.shift();\n                  c5y = c4y + stack.shift();\n                  c6x = c5x + stack.shift();\n                  c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 37:\n                  // flex1\n                  var startx = x;\n                  var starty = y;\n\n                  pts = [];\n                  for (var _i4 = 0; _i4 <= 4; _i4++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  if (Math.abs(x - startx) > Math.abs(y - starty)) {\n                    // horizontal\n                    x += stack.shift();\n                    y = starty;\n                  } else {\n                    x = startx;\n                    y += stack.shift();\n                  }\n\n                  pts.push(x, y);\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  break;\n\n                default:\n                  throw new Error('Unknown op: 12 ' + op);\n              }\n              break;\n\n            default:\n              throw new Error('Unknown op: ' + op);\n          }\n        } else if (op < 247) {\n          stack.push(op - 139);\n        } else if (op < 251) {\n          var b1 = stream.readUInt8();\n          stack.push((op - 247) * 256 + b1 + 108);\n        } else if (op < 255) {\n          var b1 = stream.readUInt8();\n          stack.push(-(op - 251) * 256 - b1 - 108);\n        } else {\n          stack.push(stream.readInt32BE() / 65536);\n        }\n      }\n    };\n\n    parse();\n\n    if (open) {\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return CFFGlyph;\n}(Glyph);\n\nvar SBIXImage = new r.Struct({\n  originX: r.uint16,\n  originY: r.uint16,\n  type: new r.String(4),\n  data: new r.Buffer(function (t) {\n    return t.parent.buflen - t._currentOffset;\n  })\n});\n\n/**\n * Represents a color (e.g. emoji) glyph in Apple's SBIX format.\n */\n\nvar SBIXGlyph = function (_TTFGlyph) {\n  inherits(SBIXGlyph, _TTFGlyph);\n\n  function SBIXGlyph() {\n    classCallCheck(this, SBIXGlyph);\n    return possibleConstructorReturn(this, _TTFGlyph.apply(this, arguments));\n  }\n\n  /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */\n  SBIXGlyph.prototype.getImageForSize = function getImageForSize(size) {\n    for (var i = 0; i < this._font.sbix.imageTables.length; i++) {\n      var table = this._font.sbix.imageTables[i];\n      if (table.ppem >= size) {\n        break;\n      }\n    }\n\n    var offsets = table.imageOffsets;\n    var start = offsets[this.id];\n    var end = offsets[this.id + 1];\n\n    if (start === end) {\n      return null;\n    }\n\n    this._font.stream.pos = start;\n    return SBIXImage.decode(this._font.stream, { buflen: end - start });\n  };\n\n  SBIXGlyph.prototype.render = function render(ctx, size) {\n    var img = this.getImageForSize(size);\n    if (img != null) {\n      var scale = size / this._font.unitsPerEm;\n      ctx.image(img.data, { height: size, x: img.originX, y: (this.bbox.minY - img.originY) * scale });\n    }\n\n    if (this._font.sbix.flags.renderOutlines) {\n      _TTFGlyph.prototype.render.call(this, ctx, size);\n    }\n  };\n\n  return SBIXGlyph;\n}(TTFGlyph);\n\nvar COLRLayer = function COLRLayer(glyph, color) {\n  classCallCheck(this, COLRLayer);\n\n  this.glyph = glyph;\n  this.color = color;\n};\n\n/**\n * Represents a color (e.g. emoji) glyph in Microsoft's COLR format.\n * Each glyph in this format contain a list of colored layers, each\n * of which  is another vector glyph.\n */\n\n\nvar COLRGlyph = function (_Glyph) {\n  inherits(COLRGlyph, _Glyph);\n\n  function COLRGlyph() {\n    classCallCheck(this, COLRGlyph);\n    return possibleConstructorReturn(this, _Glyph.apply(this, arguments));\n  }\n\n  COLRGlyph.prototype._getBBox = function _getBBox() {\n    var bbox = new BBox();\n    for (var i = 0; i < this.layers.length; i++) {\n      var layer = this.layers[i];\n      var b = layer.glyph.bbox;\n      bbox.addPoint(b.minX, b.minY);\n      bbox.addPoint(b.maxX, b.maxY);\n    }\n\n    return bbox;\n  };\n\n  /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */\n\n\n  COLRGlyph.prototype.render = function render(ctx, size) {\n    for (var _iterator = this.layers, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _ref2 = _ref,\n          glyph = _ref2.glyph,\n          color = _ref2.color;\n\n      ctx.fillColor([color.red, color.green, color.blue], color.alpha / 255 * 100);\n      glyph.render(ctx, size);\n    }\n\n    return;\n  };\n\n  createClass(COLRGlyph, [{\n    key: 'layers',\n    get: function get$$1() {\n      var cpal = this._font.CPAL;\n      var colr = this._font.COLR;\n      var low = 0;\n      var high = colr.baseGlyphRecord.length - 1;\n\n      while (low <= high) {\n        var mid = low + high >> 1;\n        var rec = colr.baseGlyphRecord[mid];\n\n        if (this.id < rec.gid) {\n          high = mid - 1;\n        } else if (this.id > rec.gid) {\n          low = mid + 1;\n        } else {\n          var baseLayer = rec;\n          break;\n        }\n      }\n\n      // if base glyph not found in COLR table,\n      // default to normal glyph from glyf or CFF\n      if (baseLayer == null) {\n        var g = this._font._getBaseGlyph(this.id);\n        var color = {\n          red: 0,\n          green: 0,\n          blue: 0,\n          alpha: 255\n        };\n\n        return [new COLRLayer(g, color)];\n      }\n\n      // otherwise, return an array of all the layers\n      var layers = [];\n      for (var i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++) {\n        var rec = colr.layerRecords[i];\n        var color = cpal.colorRecords[rec.paletteIndex];\n        var g = this._font._getBaseGlyph(rec.gid);\n        layers.push(new COLRLayer(g, color));\n      }\n\n      return layers;\n    }\n  }]);\n  return COLRGlyph;\n}(Glyph);\n\nvar TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nvar TUPLE_COUNT_MASK = 0x0fff;\nvar EMBEDDED_TUPLE_COORD = 0x8000;\nvar INTERMEDIATE_TUPLE = 0x4000;\nvar PRIVATE_POINT_NUMBERS = 0x2000;\nvar TUPLE_INDEX_MASK = 0x0fff;\nvar POINTS_ARE_WORDS = 0x80;\nvar POINT_RUN_COUNT_MASK = 0x7f;\nvar DELTAS_ARE_ZERO = 0x80;\nvar DELTAS_ARE_WORDS = 0x40;\nvar DELTA_RUN_COUNT_MASK = 0x3f;\n\n/**\n * This class is transforms TrueType glyphs according to the data from\n * the Apple Advanced Typography variation tables (fvar, gvar, and avar).\n * These tables allow infinite adjustments to glyph weight, width, slant,\n * and optical size without the designer needing to specify every exact style.\n *\n * Apple's documentation for these tables is not great, so thanks to the\n * Freetype project for figuring much of this out.\n *\n * @private\n */\n\nvar GlyphVariationProcessor = function () {\n  function GlyphVariationProcessor(font, coords) {\n    classCallCheck(this, GlyphVariationProcessor);\n\n    this.font = font;\n    this.normalizedCoords = this.normalizeCoords(coords);\n    this.blendVectors = new Map();\n  }\n\n  GlyphVariationProcessor.prototype.normalizeCoords = function normalizeCoords(coords) {\n    // the default mapping is linear along each axis, in two segments:\n    // from the minValue to defaultValue, and from defaultValue to maxValue.\n    var normalized = [];\n    for (var i = 0; i < this.font.fvar.axis.length; i++) {\n      var axis = this.font.fvar.axis[i];\n      if (coords[i] < axis.defaultValue) {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));\n      } else {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n      }\n    }\n\n    // if there is an avar table, the normalized value is calculated\n    // by interpolating between the two nearest mapped values.\n    if (this.font.avar) {\n      for (var i = 0; i < this.font.avar.segment.length; i++) {\n        var segment = this.font.avar.segment[i];\n        for (var j = 0; j < segment.correspondence.length; j++) {\n          var pair = segment.correspondence[j];\n          if (j >= 1 && normalized[i] < pair.fromCoord) {\n            var prev = segment.correspondence[j - 1];\n            normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) / (pair.fromCoord - prev.fromCoord + Number.EPSILON) + prev.toCoord;\n\n            break;\n          }\n        }\n      }\n    }\n\n    return normalized;\n  };\n\n  GlyphVariationProcessor.prototype.transformPoints = function transformPoints(gid, glyphPoints) {\n    if (!this.font.fvar || !this.font.gvar) {\n      return;\n    }\n\n    var gvar = this.font.gvar;\n\n    if (gid >= gvar.glyphCount) {\n      return;\n    }\n\n    var offset = gvar.offsets[gid];\n    if (offset === gvar.offsets[gid + 1]) {\n      return;\n    }\n\n    // Read the gvar data for this glyph\n    var stream = this.font.stream;\n\n    stream.pos = offset;\n    if (stream.pos >= stream.length) {\n      return;\n    }\n\n    var tupleCount = stream.readUInt16BE();\n    var offsetToData = offset + stream.readUInt16BE();\n\n    if (tupleCount & TUPLES_SHARE_POINT_NUMBERS) {\n      var here = stream.pos;\n      stream.pos = offsetToData;\n      var sharedPoints = this.decodePoints();\n      offsetToData = stream.pos;\n      stream.pos = here;\n    }\n\n    var origPoints = glyphPoints.map(function (pt) {\n      return pt.copy();\n    });\n\n    tupleCount &= TUPLE_COUNT_MASK;\n    for (var i = 0; i < tupleCount; i++) {\n      var tupleDataSize = stream.readUInt16BE();\n      var tupleIndex = stream.readUInt16BE();\n\n      if (tupleIndex & EMBEDDED_TUPLE_COORD) {\n        var tupleCoords = [];\n        for (var a = 0; a < gvar.axisCount; a++) {\n          tupleCoords.push(stream.readInt16BE() / 16384);\n        }\n      } else {\n        if ((tupleIndex & TUPLE_INDEX_MASK) >= gvar.globalCoordCount) {\n          throw new Error('Invalid gvar table');\n        }\n\n        var tupleCoords = gvar.globalCoords[tupleIndex & TUPLE_INDEX_MASK];\n      }\n\n      if (tupleIndex & INTERMEDIATE_TUPLE) {\n        var startCoords = [];\n        for (var _a = 0; _a < gvar.axisCount; _a++) {\n          startCoords.push(stream.readInt16BE() / 16384);\n        }\n\n        var endCoords = [];\n        for (var _a2 = 0; _a2 < gvar.axisCount; _a2++) {\n          endCoords.push(stream.readInt16BE() / 16384);\n        }\n      }\n\n      // Get the factor at which to apply this tuple\n      var factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n      if (factor === 0) {\n        offsetToData += tupleDataSize;\n        continue;\n      }\n\n      var here = stream.pos;\n      stream.pos = offsetToData;\n\n      if (tupleIndex & PRIVATE_POINT_NUMBERS) {\n        var points = this.decodePoints();\n      } else {\n        var points = sharedPoints;\n      }\n\n      // points.length = 0 means there are deltas for all points\n      var nPoints = points.length === 0 ? glyphPoints.length : points.length;\n      var xDeltas = this.decodeDeltas(nPoints);\n      var yDeltas = this.decodeDeltas(nPoints);\n\n      if (points.length === 0) {\n        // all points\n        for (var _i = 0; _i < glyphPoints.length; _i++) {\n          var point = glyphPoints[_i];\n          point.x += Math.round(xDeltas[_i] * factor);\n          point.y += Math.round(yDeltas[_i] * factor);\n        }\n      } else {\n        var outPoints = origPoints.map(function (pt) {\n          return pt.copy();\n        });\n        var hasDelta = glyphPoints.map(function () {\n          return false;\n        });\n\n        for (var _i2 = 0; _i2 < points.length; _i2++) {\n          var idx = points[_i2];\n          if (idx < glyphPoints.length) {\n            var _point = outPoints[idx];\n            hasDelta[idx] = true;\n\n            _point.x += Math.round(xDeltas[_i2] * factor);\n            _point.y += Math.round(yDeltas[_i2] * factor);\n          }\n        }\n\n        this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n\n        for (var _i3 = 0; _i3 < glyphPoints.length; _i3++) {\n          var deltaX = outPoints[_i3].x - origPoints[_i3].x;\n          var deltaY = outPoints[_i3].y - origPoints[_i3].y;\n\n          glyphPoints[_i3].x += deltaX;\n          glyphPoints[_i3].y += deltaY;\n        }\n      }\n\n      offsetToData += tupleDataSize;\n      stream.pos = here;\n    }\n  };\n\n  GlyphVariationProcessor.prototype.decodePoints = function decodePoints() {\n    var stream = this.font.stream;\n    var count = stream.readUInt8();\n\n    if (count & POINTS_ARE_WORDS) {\n      count = (count & POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n    }\n\n    var points = new Uint16Array(count);\n    var i = 0;\n    var point = 0;\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & POINT_RUN_COUNT_MASK) + 1;\n      var fn = run & POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n\n      for (var j = 0; j < runCount && i < count; j++) {\n        point += fn.call(stream);\n        points[i++] = point;\n      }\n    }\n\n    return points;\n  };\n\n  GlyphVariationProcessor.prototype.decodeDeltas = function decodeDeltas(count) {\n    var stream = this.font.stream;\n    var i = 0;\n    var deltas = new Int16Array(count);\n\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & DELTA_RUN_COUNT_MASK) + 1;\n\n      if (run & DELTAS_ARE_ZERO) {\n        i += runCount;\n      } else {\n        var fn = run & DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n        for (var j = 0; j < runCount && i < count; j++) {\n          deltas[i++] = fn.call(stream);\n        }\n      }\n    }\n\n    return deltas;\n  };\n\n  GlyphVariationProcessor.prototype.tupleFactor = function tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n    var normalized = this.normalizedCoords;\n    var gvar = this.font.gvar;\n\n    var factor = 1;\n\n    for (var i = 0; i < gvar.axisCount; i++) {\n      if (tupleCoords[i] === 0) {\n        continue;\n      }\n\n      if (normalized[i] === 0) {\n        return 0;\n      }\n\n      if ((tupleIndex & INTERMEDIATE_TUPLE) === 0) {\n        if (normalized[i] < Math.min(0, tupleCoords[i]) || normalized[i] > Math.max(0, tupleCoords[i])) {\n          return 0;\n        }\n\n        factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n      } else {\n        if (normalized[i] < startCoords[i] || normalized[i] > endCoords[i]) {\n          return 0;\n        } else if (normalized[i] < tupleCoords[i]) {\n          factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);\n        } else {\n          factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n        }\n      }\n    }\n\n    return factor;\n  };\n\n  // Interpolates points without delta values.\n  // Needed for the Ø and Q glyphs in Skia.\n  // Algorithm from Freetype.\n\n\n  GlyphVariationProcessor.prototype.interpolateMissingDeltas = function interpolateMissingDeltas(points, inPoints, hasDelta) {\n    if (points.length === 0) {\n      return;\n    }\n\n    var point = 0;\n    while (point < points.length) {\n      var firstPoint = point;\n\n      // find the end point of the contour\n      var endPoint = point;\n      var pt = points[endPoint];\n      while (!pt.endContour) {\n        pt = points[++endPoint];\n      }\n\n      // find the first point that has a delta\n      while (point <= endPoint && !hasDelta[point]) {\n        point++;\n      }\n\n      if (point > endPoint) {\n        continue;\n      }\n\n      var firstDelta = point;\n      var curDelta = point;\n      point++;\n\n      while (point <= endPoint) {\n        // find the next point with a delta, and interpolate intermediate points\n        if (hasDelta[point]) {\n          this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n          curDelta = point;\n        }\n\n        point++;\n      }\n\n      // shift contour if we only have a single delta\n      if (curDelta === firstDelta) {\n        this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n      } else {\n        // otherwise, handle the remaining points at the end and beginning of the contour\n        this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n\n        if (firstDelta > 0) {\n          this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n        }\n      }\n\n      point = endPoint + 1;\n    }\n  };\n\n  GlyphVariationProcessor.prototype.deltaInterpolate = function deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n    if (p1 > p2) {\n      return;\n    }\n\n    var iterable = ['x', 'y'];\n    for (var i = 0; i < iterable.length; i++) {\n      var k = iterable[i];\n      if (inPoints[ref1][k] > inPoints[ref2][k]) {\n        var p = ref1;\n        ref1 = ref2;\n        ref2 = p;\n      }\n\n      var in1 = inPoints[ref1][k];\n      var in2 = inPoints[ref2][k];\n      var out1 = outPoints[ref1][k];\n      var out2 = outPoints[ref2][k];\n\n      // If the reference points have the same coordinate but different\n      // delta, inferred delta is zero.  Otherwise interpolate.\n      if (in1 !== in2 || out1 === out2) {\n        var scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n\n        for (var _p = p1; _p <= p2; _p++) {\n          var out = inPoints[_p][k];\n\n          if (out <= in1) {\n            out += out1 - in1;\n          } else if (out >= in2) {\n            out += out2 - in2;\n          } else {\n            out = out1 + (out - in1) * scale;\n          }\n\n          outPoints[_p][k] = out;\n        }\n      }\n    }\n  };\n\n  GlyphVariationProcessor.prototype.deltaShift = function deltaShift(p1, p2, ref, inPoints, outPoints) {\n    var deltaX = outPoints[ref].x - inPoints[ref].x;\n    var deltaY = outPoints[ref].y - inPoints[ref].y;\n\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n\n    for (var p = p1; p <= p2; p++) {\n      if (p !== ref) {\n        outPoints[p].x += deltaX;\n        outPoints[p].y += deltaY;\n      }\n    }\n  };\n\n  GlyphVariationProcessor.prototype.getAdvanceAdjustment = function getAdvanceAdjustment(gid, table) {\n    var outerIndex = void 0,\n        innerIndex = void 0;\n\n    if (table.advanceWidthMapping) {\n      var idx = gid;\n      if (idx >= table.advanceWidthMapping.mapCount) {\n        idx = table.advanceWidthMapping.mapCount - 1;\n      }\n\n      var entryFormat = table.advanceWidthMapping.entryFormat;\n      var _table$advanceWidthMa = table.advanceWidthMapping.mapData[idx];\n      outerIndex = _table$advanceWidthMa.outerIndex;\n      innerIndex = _table$advanceWidthMa.innerIndex;\n    } else {\n      outerIndex = 0;\n      innerIndex = gid;\n    }\n\n    return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n  };\n\n  // See pseudo code from `Font Variations Overview'\n  // in the OpenType specification.\n\n\n  GlyphVariationProcessor.prototype.getDelta = function getDelta(itemStore, outerIndex, innerIndex) {\n    if (outerIndex >= itemStore.itemVariationData.length) {\n      return 0;\n    }\n\n    var varData = itemStore.itemVariationData[outerIndex];\n    if (innerIndex >= varData.deltaSets.length) {\n      return 0;\n    }\n\n    var deltaSet = varData.deltaSets[innerIndex];\n    var blendVector = this.getBlendVector(itemStore, outerIndex);\n    var netAdjustment = 0;\n\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      netAdjustment += deltaSet.deltas[master] * blendVector[master];\n    }\n\n    return netAdjustment;\n  };\n\n  GlyphVariationProcessor.prototype.getBlendVector = function getBlendVector(itemStore, outerIndex) {\n    var varData = itemStore.itemVariationData[outerIndex];\n    if (this.blendVectors.has(varData)) {\n      return this.blendVectors.get(varData);\n    }\n\n    var normalizedCoords = this.normalizedCoords;\n    var blendVector = [];\n\n    // outer loop steps through master designs to be blended\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      var scalar = 1;\n      var regionIndex = varData.regionIndexes[master];\n      var axes = itemStore.variationRegionList.variationRegions[regionIndex];\n\n      // inner loop steps through axes in this region\n      for (var j = 0; j < axes.length; j++) {\n        var axis = axes[j];\n        var axisScalar = void 0;\n\n        // compute the scalar contribution of this axis\n        // ignore invalid ranges\n        if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) {\n          axisScalar = 1;\n        } else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) {\n          axisScalar = 1;\n\n          // peak of 0 means ignore this axis\n        } else if (axis.peakCoord === 0) {\n          axisScalar = 1;\n\n          // ignore this region if coords are out of range\n        } else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) {\n          axisScalar = 0;\n\n          // calculate a proportional factor\n        } else {\n          if (normalizedCoords[j] === axis.peakCoord) {\n            axisScalar = 1;\n          } else if (normalizedCoords[j] < axis.peakCoord) {\n            axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) / (axis.peakCoord - axis.startCoord + Number.EPSILON);\n          } else {\n            axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) / (axis.endCoord - axis.peakCoord + Number.EPSILON);\n          }\n        }\n\n        // take product of all the axis scalars\n        scalar *= axisScalar;\n      }\n\n      blendVector[master] = scalar;\n    }\n\n    this.blendVectors.set(varData, blendVector);\n    return blendVector;\n  };\n\n  return GlyphVariationProcessor;\n}();\n\nvar Subset = function () {\n  function Subset(font) {\n    classCallCheck(this, Subset);\n\n    this.font = font;\n    this.glyphs = [];\n    this.mapping = {};\n\n    // always include the missing glyph\n    this.includeGlyph(0);\n  }\n\n  Subset.prototype.includeGlyph = function includeGlyph(glyph) {\n    if ((typeof glyph === 'undefined' ? 'undefined' : _typeof(glyph)) === 'object') {\n      glyph = glyph.id;\n    }\n\n    if (this.mapping[glyph] == null) {\n      this.glyphs.push(glyph);\n      this.mapping[glyph] = this.glyphs.length - 1;\n    }\n\n    return this.mapping[glyph];\n  };\n\n  Subset.prototype.encodeStream = function encodeStream() {\n    var _this = this;\n\n    var s = new r.EncodeStream();\n\n    process.nextTick(function () {\n      _this.encode(s);\n      return s.end();\n    });\n\n    return s;\n  };\n\n  return Subset;\n}();\n\n// Flags for simple glyphs\nvar ON_CURVE$1 = 1 << 0;\nvar X_SHORT_VECTOR$1 = 1 << 1;\nvar Y_SHORT_VECTOR$1 = 1 << 2;\nvar REPEAT$1 = 1 << 3;\nvar SAME_X$1 = 1 << 4;\nvar SAME_Y$1 = 1 << 5;\n\nvar Point$1 = function () {\n  function Point() {\n    classCallCheck(this, Point);\n  }\n\n  Point.size = function size(val) {\n    return val >= 0 && val <= 255 ? 1 : 2;\n  };\n\n  Point.encode = function encode(stream, value) {\n    if (value >= 0 && value <= 255) {\n      stream.writeUInt8(value);\n    } else {\n      stream.writeInt16BE(value);\n    }\n  };\n\n  return Point;\n}();\n\nvar Glyf = new r.Struct({\n  numberOfContours: r.int16, // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16,\n  endPtsOfContours: new r.Array(r.uint16, 'numberOfContours'),\n  instructions: new r.Array(r.uint8, r.uint16),\n  flags: new r.Array(r.uint8, 0),\n  xPoints: new r.Array(Point$1, 0),\n  yPoints: new r.Array(Point$1, 0)\n});\n\n/**\n * Encodes TrueType glyph outlines\n */\n\nvar TTFGlyphEncoder = function () {\n  function TTFGlyphEncoder() {\n    classCallCheck(this, TTFGlyphEncoder);\n  }\n\n  TTFGlyphEncoder.prototype.encodeSimple = function encodeSimple(path) {\n    var instructions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    var endPtsOfContours = [];\n    var xPoints = [];\n    var yPoints = [];\n    var flags = [];\n    var same = 0;\n    var lastX = 0,\n        lastY = 0,\n        lastFlag = 0;\n    var pointCount = 0;\n\n    for (var i = 0; i < path.commands.length; i++) {\n      var c = path.commands[i];\n\n      for (var j = 0; j < c.args.length; j += 2) {\n        var x = c.args[j];\n        var y = c.args[j + 1];\n        var flag = 0;\n\n        // If the ending point of a quadratic curve is the midpoint\n        // between the control point and the control point of the next\n        // quadratic curve, we can omit the ending point.\n        if (c.command === 'quadraticCurveTo' && j === 2) {\n          var next = path.commands[i + 1];\n          if (next && next.command === 'quadraticCurveTo') {\n            var midX = (lastX + next.args[0]) / 2;\n            var midY = (lastY + next.args[1]) / 2;\n\n            if (x === midX && y === midY) {\n              continue;\n            }\n          }\n        }\n\n        // All points except control points are on curve.\n        if (!(c.command === 'quadraticCurveTo' && j === 0)) {\n          flag |= ON_CURVE$1;\n        }\n\n        flag = this._encodePoint(x, lastX, xPoints, flag, X_SHORT_VECTOR$1, SAME_X$1);\n        flag = this._encodePoint(y, lastY, yPoints, flag, Y_SHORT_VECTOR$1, SAME_Y$1);\n\n        if (flag === lastFlag && same < 255) {\n          flags[flags.length - 1] |= REPEAT$1;\n          same++;\n        } else {\n          if (same > 0) {\n            flags.push(same);\n            same = 0;\n          }\n\n          flags.push(flag);\n          lastFlag = flag;\n        }\n\n        lastX = x;\n        lastY = y;\n        pointCount++;\n      }\n\n      if (c.command === 'closePath') {\n        endPtsOfContours.push(pointCount - 1);\n      }\n    }\n\n    // Close the path if the last command didn't already\n    if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== 'closePath') {\n      endPtsOfContours.push(pointCount - 1);\n    }\n\n    var bbox = path.bbox;\n    var glyf = {\n      numberOfContours: endPtsOfContours.length,\n      xMin: bbox.minX,\n      yMin: bbox.minY,\n      xMax: bbox.maxX,\n      yMax: bbox.maxY,\n      endPtsOfContours: endPtsOfContours,\n      instructions: instructions,\n      flags: flags,\n      xPoints: xPoints,\n      yPoints: yPoints\n    };\n\n    var size = Glyf.size(glyf);\n    var tail = 4 - size % 4;\n\n    var stream = new r.EncodeStream(size + tail);\n    Glyf.encode(stream, glyf);\n\n    // Align to 4-byte length\n    if (tail !== 0) {\n      stream.fill(0, tail);\n    }\n\n    return stream.buffer;\n  };\n\n  TTFGlyphEncoder.prototype._encodePoint = function _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n    var diff = value - last;\n\n    if (value === last) {\n      flag |= sameFlag;\n    } else {\n      if (-255 <= diff && diff <= 255) {\n        flag |= shortFlag;\n        if (diff < 0) {\n          diff = -diff;\n        } else {\n          flag |= sameFlag;\n        }\n      }\n\n      points.push(diff);\n    }\n\n    return flag;\n  };\n\n  return TTFGlyphEncoder;\n}();\n\nvar TTFSubset = function (_Subset) {\n  inherits(TTFSubset, _Subset);\n\n  function TTFSubset(font) {\n    classCallCheck(this, TTFSubset);\n\n    var _this = possibleConstructorReturn(this, _Subset.call(this, font));\n\n    _this.glyphEncoder = new TTFGlyphEncoder();\n    return _this;\n  }\n\n  TTFSubset.prototype._addGlyph = function _addGlyph(gid) {\n    var glyph = this.font.getGlyph(gid);\n    var glyf = glyph._decode();\n\n    // get the offset to the glyph from the loca table\n    var curOffset = this.font.loca.offsets[gid];\n    var nextOffset = this.font.loca.offsets[gid + 1];\n\n    var stream = this.font._getTableStream('glyf');\n    stream.pos += curOffset;\n\n    var buffer = stream.readBuffer(nextOffset - curOffset);\n\n    // if it is a compound glyph, include its components\n    if (glyf && glyf.numberOfContours < 0) {\n      buffer = Buffer.from(buffer);\n      for (var _iterator = glyf.components, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var component = _ref;\n\n        gid = this.includeGlyph(component.glyphID);\n        buffer.writeUInt16BE(gid, component.pos);\n      }\n    } else if (glyf && this.font._variationProcessor) {\n      // If this is a TrueType variation glyph, re-encode the path\n      buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n    }\n\n    this.glyf.push(buffer);\n    this.loca.offsets.push(this.offset);\n\n    this.hmtx.metrics.push({\n      advance: glyph.advanceWidth,\n      bearing: glyph._getMetrics().leftBearing\n    });\n\n    this.offset += buffer.length;\n    return this.glyf.length - 1;\n  };\n\n  TTFSubset.prototype.encode = function encode(stream) {\n    // tables required by PDF spec:\n    //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n    //\n    // additional tables required for standalone fonts:\n    //   name, cmap, OS/2, post\n\n    this.glyf = [];\n    this.offset = 0;\n    this.loca = {\n      offsets: []\n    };\n\n    this.hmtx = {\n      metrics: [],\n      bearings: []\n    };\n\n    // include all the glyphs\n    // not using a for loop because we need to support adding more\n    // glyphs to the array as we go, and CoffeeScript caches the length.\n    var i = 0;\n    while (i < this.glyphs.length) {\n      this._addGlyph(this.glyphs[i++]);\n    }\n\n    var maxp = cloneDeep(this.font.maxp);\n    maxp.numGlyphs = this.glyf.length;\n\n    this.loca.offsets.push(this.offset);\n    tables.loca.preEncode.call(this.loca);\n\n    var head = cloneDeep(this.font.head);\n    head.indexToLocFormat = this.loca.version;\n\n    var hhea = cloneDeep(this.font.hhea);\n    hhea.numberOfMetrics = this.hmtx.metrics.length;\n\n    // map = []\n    // for index in [0...256]\n    //     if index < @numGlyphs\n    //         map[index] = index\n    //     else\n    //         map[index] = 0\n    //\n    // cmapTable =\n    //     version: 0\n    //     length: 262\n    //     language: 0\n    //     codeMap: map\n    //\n    // cmap =\n    //     version: 0\n    //     numSubtables: 1\n    //     tables: [\n    //         platformID: 1\n    //         encodingID: 0\n    //         table: cmapTable\n    //     ]\n\n    // TODO: subset prep, cvt, fpgm?\n    Directory.encode(stream, {\n      tables: {\n        head: head,\n        hhea: hhea,\n        loca: this.loca,\n        maxp: maxp,\n        'cvt ': this.font['cvt '],\n        prep: this.font.prep,\n        glyf: this.glyf,\n        hmtx: this.hmtx,\n        fpgm: this.font.fpgm\n\n        // name: clone @font.name\n        // 'OS/2': clone @font['OS/2']\n        // post: clone @font.post\n        // cmap: cmap\n      }\n    });\n  };\n\n  return TTFSubset;\n}(Subset);\n\nvar CFFSubset = function (_Subset) {\n  inherits(CFFSubset, _Subset);\n\n  function CFFSubset(font) {\n    classCallCheck(this, CFFSubset);\n\n    var _this = possibleConstructorReturn(this, _Subset.call(this, font));\n\n    _this.cff = _this.font['CFF '];\n    if (!_this.cff) {\n      throw new Error('Not a CFF Font');\n    }\n    return _this;\n  }\n\n  CFFSubset.prototype.subsetCharstrings = function subsetCharstrings() {\n    this.charstrings = [];\n    var gsubrs = {};\n\n    for (var _iterator = this.glyphs, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var gid = _ref;\n\n      this.charstrings.push(this.cff.getCharString(gid));\n\n      var glyph = this.font.getGlyph(gid);\n      var path = glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedGsubrs) {\n        gsubrs[subr] = true;\n      }\n    }\n\n    this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n  };\n\n  CFFSubset.prototype.subsetSubrs = function subsetSubrs(subrs, used) {\n    var res = [];\n    for (var i = 0; i < subrs.length; i++) {\n      var subr = subrs[i];\n      if (used[i]) {\n        this.cff.stream.pos = subr.offset;\n        res.push(this.cff.stream.readBuffer(subr.length));\n      } else {\n        res.push(Buffer.from([11])); // return\n      }\n    }\n\n    return res;\n  };\n\n  CFFSubset.prototype.subsetFontdict = function subsetFontdict(topDict) {\n    topDict.FDArray = [];\n    topDict.FDSelect = {\n      version: 0,\n      fds: []\n    };\n\n    var used_fds = {};\n    var used_subrs = [];\n    for (var _iterator2 = this.glyphs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var gid = _ref2;\n\n      var fd = this.cff.fdForGlyph(gid);\n      if (fd == null) {\n        continue;\n      }\n\n      if (!used_fds[fd]) {\n        topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n        used_subrs.push({});\n      }\n\n      used_fds[fd] = true;\n      topDict.FDSelect.fds.push(topDict.FDArray.length - 1);\n\n      var glyph = this.font.getGlyph(gid);\n      var path = glyph.path; // this causes the glyph to be parsed\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[used_subrs.length - 1][subr] = true;\n      }\n    }\n\n    for (var i = 0; i < topDict.FDArray.length; i++) {\n      var dict = topDict.FDArray[i];\n      delete dict.FontName;\n      if (dict.Private && dict.Private.Subrs) {\n        dict.Private = Object.assign({}, dict.Private);\n        dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n      }\n    }\n\n    return;\n  };\n\n  CFFSubset.prototype.createCIDFontdict = function createCIDFontdict(topDict) {\n    var used_subrs = {};\n    for (var _iterator3 = this.glyphs, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var gid = _ref3;\n\n      var glyph = this.font.getGlyph(gid);\n      var path = glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[subr] = true;\n      }\n    }\n\n    var privateDict = Object.assign({}, this.cff.topDict.Private);\n    if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) {\n      privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n    }\n\n    topDict.FDArray = [{ Private: privateDict }];\n    return topDict.FDSelect = {\n      version: 3,\n      nRanges: 1,\n      ranges: [{ first: 0, fd: 0 }],\n      sentinel: this.charstrings.length\n    };\n  };\n\n  CFFSubset.prototype.addString = function addString(string) {\n    if (!string) {\n      return null;\n    }\n\n    if (!this.strings) {\n      this.strings = [];\n    }\n\n    this.strings.push(string);\n    return standardStrings.length + this.strings.length - 1;\n  };\n\n  CFFSubset.prototype.encode = function encode(stream) {\n    this.subsetCharstrings();\n\n    var charset = {\n      version: this.charstrings.length > 255 ? 2 : 1,\n      ranges: [{ first: 1, nLeft: this.charstrings.length - 2 }]\n    };\n\n    var topDict = Object.assign({}, this.cff.topDict);\n    topDict.Private = null;\n    topDict.charset = charset;\n    topDict.Encoding = null;\n    topDict.CharStrings = this.charstrings;\n\n    var _arr = ['version', 'Notice', 'Copyright', 'FullName', 'FamilyName', 'Weight', 'PostScript', 'BaseFontName', 'FontName'];\n    for (var _i4 = 0; _i4 < _arr.length; _i4++) {\n      var key = _arr[_i4];\n      topDict[key] = this.addString(this.cff.string(topDict[key]));\n    }\n\n    topDict.ROS = [this.addString('Adobe'), this.addString('Identity'), 0];\n    topDict.CIDCount = this.charstrings.length;\n\n    if (this.cff.isCIDFont) {\n      this.subsetFontdict(topDict);\n    } else {\n      this.createCIDFontdict(topDict);\n    }\n\n    var top = {\n      version: 1,\n      hdrSize: this.cff.hdrSize,\n      offSize: this.cff.length,\n      header: this.cff.header,\n      nameIndex: [this.cff.postscriptName],\n      topDictIndex: [topDict],\n      stringIndex: this.strings,\n      globalSubrIndex: this.gsubrs\n    };\n\n    CFFTop.encode(stream, top);\n  };\n\n  return CFFSubset;\n}(Subset);\n\nvar _class;\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n/**\n * This is the base class for all SFNT-based font formats in fontkit.\n * It supports TrueType, and PostScript glyphs, and several color glyph formats.\n */\nvar TTFFont = (_class = function () {\n  TTFFont.probe = function probe(buffer) {\n    var format = buffer.toString('ascii', 0, 4);\n    return format === 'true' || format === 'OTTO' || format === String.fromCharCode(0, 1, 0, 0);\n  };\n\n  function TTFFont(stream) {\n    var variationCoords = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    classCallCheck(this, TTFFont);\n\n    this.stream = stream;\n    this.variationCoords = variationCoords;\n\n    this._directoryPos = this.stream.pos;\n    this._tables = {};\n    this._glyphs = {};\n    this._decodeDirectory();\n\n    // define properties for each table to lazily parse\n    for (var tag in this.directory.tables) {\n      var table = this.directory.tables[tag];\n      if (tables[tag] && table.length > 0) {\n        Object.defineProperty(this, tag, {\n          get: this._getTable.bind(this, table)\n        });\n      }\n    }\n  }\n\n  TTFFont.prototype._getTable = function _getTable(table) {\n    if (!(table.tag in this._tables)) {\n      try {\n        this._tables[table.tag] = this._decodeTable(table);\n      } catch (e) {\n        if (fontkit$1.logErrors) {\n          console.error('Error decoding table ' + table.tag);\n          console.error(e.stack);\n        }\n      }\n    }\n\n    return this._tables[table.tag];\n  };\n\n  TTFFont.prototype._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n    if (table) {\n      this.stream.pos = table.offset;\n      return this.stream;\n    }\n\n    return null;\n  };\n\n  TTFFont.prototype._decodeDirectory = function _decodeDirectory() {\n    return this.directory = Directory.decode(this.stream, { _startOffset: 0 });\n  };\n\n  TTFFont.prototype._decodeTable = function _decodeTable(table) {\n    var pos = this.stream.pos;\n\n    var stream = this._getTableStream(table.tag);\n    var result = tables[table.tag].decode(stream, this, table.length);\n\n    this.stream.pos = pos;\n    return result;\n  };\n\n  /**\n   * The unique PostScript name for this font\n   * @type {string}\n   */\n\n\n  /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */\n  TTFFont.prototype.getName = function getName(key) {\n    var lang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en';\n\n    var record = this.name.records[key];\n    if (record) {\n      return record[lang];\n    }\n\n    return null;\n  };\n\n  /**\n   * The font's full name, e.g. \"Helvetica Bold\"\n   * @type {string}\n   */\n\n\n  /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */\n  TTFFont.prototype.hasGlyphForCodePoint = function hasGlyphForCodePoint(codePoint) {\n    return !!this._cmapProcessor.lookup(codePoint);\n  };\n\n  /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */\n\n\n  TTFFont.prototype.glyphForCodePoint = function glyphForCodePoint(codePoint) {\n    return this.getGlyph(this._cmapProcessor.lookup(codePoint), [codePoint]);\n  };\n\n  /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */\n\n\n  TTFFont.prototype.glyphsForString = function glyphsForString(string) {\n    var glyphs = [];\n    var len = string.length;\n    var idx = 0;\n    var last = -1;\n    var state = -1;\n    while (idx <= len) {\n      var code = 0;\n      var nextState = 0;\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          var next = string.charCodeAt(idx);\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        }\n        // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n        nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n      } else {\n        idx++;\n      }\n      if (state === 0 && nextState === 1) {\n        // Variation selector following normal codepoint.\n        glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [last, code]));\n      } else if (state === 0 && nextState === 0) {\n        // Normal codepoint following normal codepoint.\n        glyphs.push(this.glyphForCodePoint(last));\n      }\n      last = code;\n      state = nextState;\n    }\n    return glyphs;\n  };\n\n  /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @param {string} [direction]\n   * @return {GlyphRun}\n   */\n  TTFFont.prototype.layout = function layout(string, userFeatures, script, language, direction) {\n    return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n  };\n\n  /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */\n\n\n  TTFFont.prototype.stringsForGlyph = function stringsForGlyph(gid) {\n    return this._layoutEngine.stringsForGlyph(gid);\n  };\n\n  /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */\n\n\n  TTFFont.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return this._layoutEngine.getAvailableFeatures(script, language);\n  };\n\n  TTFFont.prototype._getBaseGlyph = function _getBaseGlyph(glyph) {\n    var characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf) {\n        this._glyphs[glyph] = new TTFGlyph(glyph, characters, this);\n      } else if (this.directory.tables['CFF '] || this.directory.tables.CFF2) {\n        this._glyphs[glyph] = new CFFGlyph(glyph, characters, this);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  };\n\n  /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */\n\n\n  TTFFont.prototype.getGlyph = function getGlyph(glyph) {\n    var characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.sbix) {\n        this._glyphs[glyph] = new SBIXGlyph(glyph, characters, this);\n      } else if (this.directory.tables.COLR && this.directory.tables.CPAL) {\n        this._glyphs[glyph] = new COLRGlyph(glyph, characters, this);\n      } else {\n        this._getBaseGlyph(glyph, characters);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  };\n\n  /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */\n\n\n  TTFFont.prototype.createSubset = function createSubset() {\n    if (this.directory.tables['CFF ']) {\n      return new CFFSubset(this);\n    }\n\n    return new TTFSubset(this);\n  };\n\n  /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */\n\n\n  /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */\n  TTFFont.prototype.getVariation = function getVariation(settings) {\n    if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) {\n      throw new Error('Variations require a font with the fvar, gvar and glyf, or CFF2 tables.');\n    }\n\n    if (typeof settings === 'string') {\n      settings = this.namedVariations[settings];\n    }\n\n    if ((typeof settings === 'undefined' ? 'undefined' : _typeof(settings)) !== 'object') {\n      throw new Error('Variation settings must be either a variation name or settings object.');\n    }\n\n    // normalize the coordinates\n    var coords = this.fvar.axis.map(function (axis, i) {\n      var axisTag = axis.axisTag.trim();\n      if (axisTag in settings) {\n        return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n      } else {\n        return axis.defaultValue;\n      }\n    });\n\n    var stream = new r.DecodeStream(this.stream.buffer);\n    stream.pos = this._directoryPos;\n\n    var font = new TTFFont(stream, coords);\n    font._tables = this._tables;\n\n    return font;\n  };\n\n  // Standardized format plugin API\n  TTFFont.prototype.getFont = function getFont(name) {\n    return this.getVariation(name);\n  };\n\n  createClass(TTFFont, [{\n    key: 'postscriptName',\n    get: function get$$1() {\n      var name = this.name.records.postscriptName;\n      if (name) {\n        var lang = Object.keys(name)[0];\n        return name[lang];\n      }\n\n      return null;\n    }\n  }, {\n    key: 'fullName',\n    get: function get$$1() {\n      return this.getName('fullName');\n    }\n\n    /**\n     * The font's family name, e.g. \"Helvetica\"\n     * @type {string}\n     */\n\n  }, {\n    key: 'familyName',\n    get: function get$$1() {\n      return this.getName('fontFamily');\n    }\n\n    /**\n     * The font's sub-family, e.g. \"Bold\".\n     * @type {string}\n     */\n\n  }, {\n    key: 'subfamilyName',\n    get: function get$$1() {\n      return this.getName('fontSubfamily');\n    }\n\n    /**\n     * The font's copyright information\n     * @type {string}\n     */\n\n  }, {\n    key: 'copyright',\n    get: function get$$1() {\n      return this.getName('copyright');\n    }\n\n    /**\n     * The font's version number\n     * @type {string}\n     */\n\n  }, {\n    key: 'version',\n    get: function get$$1() {\n      return this.getName('version');\n    }\n\n    /**\n     * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n     * @type {number}\n     */\n\n  }, {\n    key: 'ascent',\n    get: function get$$1() {\n      return this.hhea.ascent;\n    }\n\n    /**\n     * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n     * @type {number}\n     */\n\n  }, {\n    key: 'descent',\n    get: function get$$1() {\n      return this.hhea.descent;\n    }\n\n    /**\n     * The amount of space that should be included between lines\n     * @type {number}\n     */\n\n  }, {\n    key: 'lineGap',\n    get: function get$$1() {\n      return this.hhea.lineGap;\n    }\n\n    /**\n     * The offset from the normal underline position that should be used\n     * @type {number}\n     */\n\n  }, {\n    key: 'underlinePosition',\n    get: function get$$1() {\n      return this.post.underlinePosition;\n    }\n\n    /**\n     * The weight of the underline that should be used\n     * @type {number}\n     */\n\n  }, {\n    key: 'underlineThickness',\n    get: function get$$1() {\n      return this.post.underlineThickness;\n    }\n\n    /**\n     * If this is an italic font, the angle the cursor should be drawn at to match the font design\n     * @type {number}\n     */\n\n  }, {\n    key: 'italicAngle',\n    get: function get$$1() {\n      return this.post.italicAngle;\n    }\n\n    /**\n     * The height of capital letters above the baseline.\n     * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n     * @type {number}\n     */\n\n  }, {\n    key: 'capHeight',\n    get: function get$$1() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.capHeight : this.ascent;\n    }\n\n    /**\n     * The height of lower case letters in the font.\n     * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n     * @type {number}\n     */\n\n  }, {\n    key: 'xHeight',\n    get: function get$$1() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.xHeight : 0;\n    }\n\n    /**\n     * The number of glyphs in the font.\n     * @type {number}\n     */\n\n  }, {\n    key: 'numGlyphs',\n    get: function get$$1() {\n      return this.maxp.numGlyphs;\n    }\n\n    /**\n     * The size of the font’s internal coordinate grid\n     * @type {number}\n     */\n\n  }, {\n    key: 'unitsPerEm',\n    get: function get$$1() {\n      return this.head.unitsPerEm;\n    }\n\n    /**\n     * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      return Object.freeze(new BBox(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n    }\n  }, {\n    key: '_cmapProcessor',\n    get: function get$$1() {\n      return new CmapProcessor(this.cmap);\n    }\n\n    /**\n     * An array of all of the unicode code points supported by the font.\n     * @type {number[]}\n     */\n\n  }, {\n    key: 'characterSet',\n    get: function get$$1() {\n      return this._cmapProcessor.getCharacterSet();\n    }\n  }, {\n    key: '_layoutEngine',\n    get: function get$$1() {\n      return new LayoutEngine(this);\n    }\n  }, {\n    key: 'availableFeatures',\n    get: function get$$1() {\n      return this._layoutEngine.getAvailableFeatures();\n    }\n  }, {\n    key: 'variationAxes',\n    get: function get$$1() {\n      var res = {};\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator = this.fvar.axis, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var axis = _ref;\n\n        res[axis.axisTag.trim()] = {\n          name: axis.name.en,\n          min: axis.minValue,\n          default: axis.defaultValue,\n          max: axis.maxValue\n        };\n      }\n\n      return res;\n    }\n\n    /**\n     * Returns an object describing the named variation instances\n     * that the font designer has specified. Keys are variation names\n     * and values are the variation settings for this instance.\n     *\n     * @type {object}\n     */\n\n  }, {\n    key: 'namedVariations',\n    get: function get$$1() {\n      var res = {};\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator2 = this.fvar.instance, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var instance = _ref2;\n\n        var settings = {};\n        for (var i = 0; i < this.fvar.axis.length; i++) {\n          var axis = this.fvar.axis[i];\n          settings[axis.axisTag.trim()] = instance.coord[i];\n        }\n\n        res[instance.name.en] = settings;\n      }\n\n      return res;\n    }\n  }, {\n    key: '_variationProcessor',\n    get: function get$$1() {\n      if (!this.fvar) {\n        return null;\n      }\n\n      var variationCoords = this.variationCoords;\n\n      // Ignore if no variation coords and not CFF2\n      if (!variationCoords && !this.CFF2) {\n        return null;\n      }\n\n      if (!variationCoords) {\n        variationCoords = this.fvar.axis.map(function (axis) {\n          return axis.defaultValue;\n        });\n      }\n\n      return new GlyphVariationProcessor(this, variationCoords);\n    }\n  }]);\n  return TTFFont;\n}(), _applyDecoratedDescriptor(_class.prototype, 'bbox', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'bbox'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_cmapProcessor', [cache], Object.getOwnPropertyDescriptor(_class.prototype, '_cmapProcessor'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'characterSet', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'characterSet'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_layoutEngine', [cache], Object.getOwnPropertyDescriptor(_class.prototype, '_layoutEngine'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'variationAxes', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'variationAxes'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'namedVariations', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'namedVariations'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_variationProcessor', [cache], Object.getOwnPropertyDescriptor(_class.prototype, '_variationProcessor'), _class.prototype), _class);\n\nvar WOFFDirectoryEntry = new r.Struct({\n  tag: new r.String(4),\n  offset: new r.Pointer(r.uint32, 'void', { type: 'global' }),\n  compLength: r.uint32,\n  length: r.uint32,\n  origChecksum: r.uint32\n});\n\nvar WOFFDirectory = new r.Struct({\n  tag: new r.String(4), // should be 'wOFF'\n  flavor: r.uint32,\n  length: r.uint32,\n  numTables: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  totalSfntSize: r.uint32,\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  metaOffset: r.uint32,\n  metaLength: r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset: r.uint32,\n  privLength: r.uint32,\n  tables: new r.Array(WOFFDirectoryEntry, 'numTables')\n});\n\nWOFFDirectory.process = function () {\n  var tables$$1 = {};\n  for (var _iterator = this.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var table = _ref;\n\n    tables$$1[table.tag] = table;\n  }\n\n  this.tables = tables$$1;\n};\n\nvar WOFFFont = function (_TTFFont) {\n  inherits(WOFFFont, _TTFFont);\n\n  function WOFFFont() {\n    classCallCheck(this, WOFFFont);\n    return possibleConstructorReturn(this, _TTFFont.apply(this, arguments));\n  }\n\n  WOFFFont.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'wOFF';\n  };\n\n  WOFFFont.prototype._decodeDirectory = function _decodeDirectory() {\n    this.directory = WOFFDirectory.decode(this.stream, { _startOffset: 0 });\n  };\n\n  WOFFFont.prototype._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n    if (table) {\n      this.stream.pos = table.offset;\n\n      if (table.compLength < table.length) {\n        this.stream.pos += 2; // skip deflate header\n        var outBuffer = Buffer.alloc(table.length);\n        var buf = inflate(this.stream.readBuffer(table.compLength - 2), outBuffer);\n        return new r.DecodeStream(buf);\n      } else {\n        return this.stream;\n      }\n    }\n\n    return null;\n  };\n\n  return WOFFFont;\n}(TTFFont);\n\nvar TTCHeader = new r.VersionedStruct(r.uint32, {\n  0x00010000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts')\n  },\n  0x00020000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts'),\n    dsigTag: r.uint32,\n    dsigLength: r.uint32,\n    dsigOffset: r.uint32\n  }\n});\n\nvar TrueTypeCollection = function () {\n  TrueTypeCollection.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'ttcf';\n  };\n\n  function TrueTypeCollection(stream) {\n    classCallCheck(this, TrueTypeCollection);\n\n    this.stream = stream;\n    if (stream.readString(4) !== 'ttcf') {\n      throw new Error('Not a TrueType collection');\n    }\n\n    this.header = TTCHeader.decode(stream);\n  }\n\n  TrueTypeCollection.prototype.getFont = function getFont(name) {\n    for (var _iterator = this.header.offsets, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var offset = _ref;\n\n      var stream = new r.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      var font = new TTFFont(stream);\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  createClass(TrueTypeCollection, [{\n    key: 'fonts',\n    get: function get$$1() {\n      var fonts = [];\n      for (var _iterator2 = this.header.offsets, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var offset = _ref2;\n\n        var stream = new r.DecodeStream(this.stream.buffer);\n        stream.pos = offset;\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n  return TrueTypeCollection;\n}();\n\nvar DFontName = new r.String(r.uint8);\nvar DFontData = new r.Struct({\n  len: r.uint32,\n  buf: new r.Buffer('len')\n});\n\nvar Ref = new r.Struct({\n  id: r.uint16,\n  nameOffset: r.int16,\n  attr: r.uint8,\n  dataOffset: r.uint24,\n  handle: r.uint32\n});\n\nvar Type = new r.Struct({\n  name: new r.String(4),\n  maxTypeIndex: r.uint16,\n  refList: new r.Pointer(r.uint16, new r.Array(Ref, function (t) {\n    return t.maxTypeIndex + 1;\n  }), { type: 'parent' })\n});\n\nvar TypeList = new r.Struct({\n  length: r.uint16,\n  types: new r.Array(Type, function (t) {\n    return t.length + 1;\n  })\n});\n\nvar DFontMap = new r.Struct({\n  reserved: new r.Reserved(r.uint8, 24),\n  typeList: new r.Pointer(r.uint16, TypeList),\n  nameListOffset: new r.Pointer(r.uint16, 'void')\n});\n\nvar DFontHeader = new r.Struct({\n  dataOffset: r.uint32,\n  map: new r.Pointer(r.uint32, DFontMap),\n  dataLength: r.uint32,\n  mapLength: r.uint32\n});\n\nvar DFont = function () {\n  DFont.probe = function probe(buffer) {\n    var stream = new r.DecodeStream(buffer);\n\n    try {\n      var header = DFontHeader.decode(stream);\n    } catch (e) {\n      return false;\n    }\n\n    for (var _iterator = header.map.typeList.types, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var type = _ref;\n\n      if (type.name === 'sfnt') {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  function DFont(stream) {\n    classCallCheck(this, DFont);\n\n    this.stream = stream;\n    this.header = DFontHeader.decode(this.stream);\n\n    for (var _iterator2 = this.header.map.typeList.types, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var type = _ref2;\n\n      for (var _iterator3 = type.refList, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var ref = _ref3;\n\n        if (ref.nameOffset >= 0) {\n          this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n          ref.name = DFontName.decode(this.stream);\n        } else {\n          ref.name = null;\n        }\n      }\n\n      if (type.name === 'sfnt') {\n        this.sfnt = type;\n      }\n    }\n  }\n\n  DFont.prototype.getFont = function getFont(name) {\n    if (!this.sfnt) {\n      return null;\n    }\n\n    for (var _iterator4 = this.sfnt.refList, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var ref = _ref4;\n\n      var pos = this.header.dataOffset + ref.dataOffset + 4;\n      var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n      var font = new TTFFont(stream);\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  createClass(DFont, [{\n    key: 'fonts',\n    get: function get$$1() {\n      var fonts = [];\n      for (var _iterator5 = this.sfnt.refList, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n        var _ref5;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref5 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref5 = _i5.value;\n        }\n\n        var ref = _ref5;\n\n        var pos = this.header.dataOffset + ref.dataOffset + 4;\n        var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n  return DFont;\n}();\n\n// Register font formats\nfontkit$1.registerFormat(TTFFont);\nfontkit$1.registerFormat(WOFFFont);\nfontkit$1.registerFormat(TrueTypeCollection);\nfontkit$1.registerFormat(DFont);\n\nexport default fontkit$1;\n"]}}