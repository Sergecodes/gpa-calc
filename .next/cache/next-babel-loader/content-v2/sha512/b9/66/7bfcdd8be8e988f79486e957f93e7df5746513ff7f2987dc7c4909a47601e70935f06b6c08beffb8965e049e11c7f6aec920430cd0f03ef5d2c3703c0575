{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/pages/index.js\";\n// import { Suspense } from 'react';\nimport { useState } from 'react';\nimport LanguageSelector from \"../components/LanguageSelector.jsx\";\nimport Heading from \"../components/Heading.jsx\";\nimport Semester from \"../components/Semester.jsx\";\nexport default function GPACalculator() {\n  const {\n    0: semesters,\n    1: setSemesters\n  } = useState([]);\n  const {\n    0: allCourses,\n    1: setAllCourses\n  } = useState([]);\n  /* Add a row to enter course info in the semester */\n\n  addCourse = (semesterNum, name, credit, marks) => {\n    let numCourses = allCourses.length;\n    let id;\n    if (numCourses !== 0) // if there is a course\n      id = allCourses[numCourses - 1].id + 1; // get unused id by taking id of last course(max id in array) + 1\n    else id = 1;\n    setAllCourses(...allCourses, {\n      semesterNum: semesterNum,\n      id: id,\n      name: name,\n      credit: credit,\n      grade: grade\n    });\n  };\n\n  removeCourse = id => {\n    const remainingCourses = allCourses.filter(course => course.id !== id);\n    setAllCourses(remainingCourses);\n  };\n\n  addSemester = () => {\n    let numSemesters = semesters.length;\n    let semesterNum;\n    if (numSemesters !== 0) semesterNum = semesters[numSemesters - 1].number + 1;else semesterNum = 1;\n    setSemesters(...semesters, {\n      number: semesterNum,\n      gpa: '-'\n    });\n  };\n\n  removeSemester = num => {\n    const remainingSems = semesters.filter(sem => sem.num !== num);\n    setSemesters(remainingSems);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LanguageSelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Semester, {\n        removeSemester: removeSemester,\n        removeCourse: removeContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/pages/index.js"],"names":["useState","LanguageSelector","Heading","Semester","GPACalculator","semesters","setSemesters","allCourses","setAllCourses","addCourse","semesterNum","name","credit","marks","numCourses","length","id","grade","removeCourse","remainingCourses","filter","course","addSemester","numSemesters","number","gpa","removeSemester","num","remainingSems","sem","removeContact"],"mappings":";;;AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACO,UAAD;AAAA,OAAaC;AAAb,MAA8BR,QAAQ,CAAC,EAAD,CAA5C;AAEA;;AACAS,EAAAA,SAAS,GAAG,CAACC,WAAD,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,KAA5B,KAAsC;AAChD,QAAIC,UAAU,GAAGP,UAAU,CAACQ,MAA5B;AACA,QAAIC,EAAJ;AAEA,QAAIF,UAAU,KAAK,CAAnB,EAAwB;AACpBE,MAAAA,EAAE,GAAGT,UAAU,CAACO,UAAU,GAAC,CAAZ,CAAV,CAAyBE,EAAzB,GAA8B,CAAnC,CADJ,CAC2C;AAD3C,SAGIA,EAAE,GAAG,CAAL;AAEJR,IAAAA,aAAa,CACX,GAAGD,UADQ,EAEX;AACIG,MAAAA,WAAW,EAAEA,WADjB;AAEIM,MAAAA,EAAE,EAAEA,EAFR;AAGIL,MAAAA,IAAI,EAAEA,IAHV;AAIIC,MAAAA,MAAM,EAAEA,MAJZ;AAKIK,MAAAA,KAAK,EAAEA;AALX,KAFW,CAAb;AAUD,GAnBD;;AAqBAC,EAAAA,YAAY,GAAGF,EAAE,IAAI;AACnB,UAAMG,gBAAgB,GAAGZ,UAAU,CAACa,MAAX,CAAkBC,MAAM,IAAIA,MAAM,CAACL,EAAP,KAAcA,EAA1C,CAAzB;AACAR,IAAAA,aAAa,CAACW,gBAAD,CAAb;AACD,GAHD;;AAKAG,EAAAA,WAAW,GAAG,MAAM;AAClB,QAAIC,YAAY,GAAGlB,SAAS,CAACU,MAA7B;AACA,QAAIL,WAAJ;AAEA,QAAIa,YAAY,KAAK,CAArB,EACIb,WAAW,GAAGL,SAAS,CAACkB,YAAY,GAAC,CAAd,CAAT,CAA0BC,MAA1B,GAAmC,CAAjD,CADJ,KAGId,WAAW,GAAG,CAAd;AAEJJ,IAAAA,YAAY,CACV,GAAGD,SADO,EAEV;AACImB,MAAAA,MAAM,EAAEd,WADZ;AAEIe,MAAAA,GAAG,EAAE;AAFT,KAFU,CAAZ;AAOD,GAhBD;;AAkBAC,EAAAA,cAAc,GAAGC,GAAG,IAAI;AACtB,UAAMC,aAAa,GAAGvB,SAAS,CAACe,MAAV,CAAiBS,GAAG,IAAIA,GAAG,CAACF,GAAJ,KAAYA,GAApC,CAAtB;AACArB,IAAAA,YAAY,CAACsB,aAAD,CAAZ;AACD,GAHD;;AAKA,sBACE;AAAA,4BACA,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,cAAc,EAAEF,cAA1B;AAA0C,QAAA,YAAY,EAAEI;AAAxD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALA;AAAA,kBADF;AAWD","sourcesContent":["// import { Suspense } from 'react';\nimport { useState } from 'react';\nimport LanguageSelector from \"../components/LanguageSelector.jsx\";\nimport Heading from \"../components/Heading.jsx\";\nimport Semester from \"../components/Semester.jsx\";\n\nexport default function GPACalculator() {\n  const [semesters, setSemesters] = useState([]);\n  const [allCourses, setAllCourses] = useState([]);\n\n  /* Add a row to enter course info in the semester */\n  addCourse = (semesterNum, name, credit, marks) => {\n    let numCourses = allCourses.length;\n    let id;\n\n    if (numCourses !== 0)   // if there is a course\n        id = allCourses[numCourses-1].id + 1;  // get unused id by taking id of last course(max id in array) + 1\n    else\n        id = 1;\n\n    setAllCourses(\n      ...allCourses,\n      {\n          semesterNum: semesterNum,\n          id: id,\n          name: name,\n          credit: credit,\n          grade: grade\n      }\n    );\n  }\n\n  removeCourse = id => {\n    const remainingCourses = allCourses.filter(course => course.id !== id);\n    setAllCourses(remainingCourses);\n  }\n\n  addSemester = () => {\n    let numSemesters = semesters.length;\n    let semesterNum;\n\n    if (numSemesters !== 0)\n        semesterNum = semesters[numSemesters-1].number + 1;\n    else\n        semesterNum = 1;\n\n    setSemesters(\n      ...semesters,\n      {\n          number: semesterNum,\n          gpa: '-'\n      }\n    );\n  }\n\n  removeSemester = num => {\n    const remainingSems = semesters.filter(sem => sem.num !== num);\n    setSemesters(remainingSems);\n  }\n\n  return (\n    <>\n  \t\t<LanguageSelector />\n      <br />\n  \t\t<Heading />\n  \t\t<br />\n  \t\t<main>\n  \t\t  <Semester removeSemester={removeSemester} removeCourse={removeContact} />\n  \t\t</main>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}