{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/components/HowToCalculate_Table.jsx\";\nimport React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nconst createData = (mark, grade, points, appreciation) => {\n  mark, grade, points, appreciation;\n};\n\nconst tableHeader = ['Marks /100', 'Grade', 'Points', 'Appreciation'];\nconst rows = [createData('80 and above', 'A', '4.00', 'Very good'), createData('75-79', 'A-', '3.70', 'Good'), createData('70-74', 'B+', '3.30', ''), createData('65-69', 'B', '3.70', 'Good enough'), createData('60-64', 'B-', '2.70', ''), createData('55-59', 'C+', '2.30', 'Satisfactory'), createData('50-54', 'A-', '3.70', ''), createData('45-49', 'C-', '1.70', 'Credits capitalised, non-trasnferable'), createData('40-44', 'D+', '3.70', ''), createData('35-39', 'D', '3.70', ''), createData('30-34', 'E', '3.70', 'Fail'), createData('0-29', 'F', '', '')];\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nexport default function HowToCalculate_Table() {\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: tableHeader.map(col => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: col\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map((row, index) => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.mark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.grade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.points\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.appreciation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/components/HowToCalculate_Table.jsx"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","withStyles","makeStyles","createData","mark","grade","points","appreciation","tableHeader","rows","StyledTableRow","theme","root","backgroundColor","palette","action","hover","HowToCalculate_Table","map","col","row","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nconst createData = (mark, grade, points, appreciation) => { mark, grade, points, appreciation };\n\nconst tableHeader = ['Marks /100', 'Grade', 'Points', 'Appreciation'];\nconst rows = [\n  createData('80 and above', 'A', '4.00', 'Very good'),\n  createData('75-79', 'A-', '3.70', 'Good'),\n  createData('70-74', 'B+', '3.30', ''),\n  createData('65-69', 'B', '3.70', 'Good enough'),\n  createData('60-64', 'B-', '2.70', ''),\n  createData('55-59', 'C+', '2.30', 'Satisfactory'),\n  createData('50-54', 'A-', '3.70', ''),\n  createData('45-49', 'C-', '1.70', 'Credits capitalised, non-trasnferable'),\n  createData('40-44', 'D+', '3.70', ''),\n  createData('35-39', 'D', '3.70', ''),\n  createData('30-34', 'E', '3.70', 'Fail'),\n  createData('0-29', 'F', '', ''),\n];\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nexport default function HowToCalculate_Table() {\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {tableHeader.map(col =>\n              <TableCell>{col}</TableCell>\n            )}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row, index) => (\n            <StyledTableRow key={index}>\n              <TableCell component=\"th\" scope=\"row\">{row.mark}</TableCell>\n              <TableCell>{row.grade}</TableCell>\n              <TableCell>{row.points}</TableCell>\n              <TableCell>{row.appreciation}</TableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}