{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/components/CourseInput.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Typography from '@material-ui/core/Typography';\nimport { useTranslation } from 'react-i18next';\nimport { useState } from 'react';\nimport { TableRow, TableCell, TextField } from '@material-ui/core';\nimport rc from '../components/Utils.jsx';\nexport default function CourseInput(props) {\n  // const { t } = useTranslation();\n  const {\n    0: course,\n    1: setCourse\n  } = useState({\n    id: '',\n    name: '',\n    credit: '',\n    marksOver100: '',\n    grade: '-',\n    semesterNumber: ''\n  });\n  const courseConcerned = props.semester.courses.filter(course => course.id === props.id)[0];\n  console.log(courseConcerned.id === props.id);\n  console.log(courseConcerned.name === props.name); // const [ course, setCourse ] = useState(\n  //   {\n  //     id: props.id,\n  //     name: props.name,\n  //     credit: props.credit,\n  //     marksOver100: props.marksOver100,\n  //     grade: props.grade,\n  //     semesterNumber: props.semesterNumber\n  //   }\n  // );\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target; // console.log(courseConcerned);\n\n    setCourse(_objectSpread(_objectSpread({}, courseConcerned), {}, {\n      [`${name}`]: value // set the value of the *name* attribute to *value*\n\n    })); // console.log(name, value);\n\n    console.log(course);\n    props.handleCourseInfoChange(courseConcerned, props.semester); // TODO: on change remove the current GPA value\n  };\n\n  const handleMarksChange = event => {\n    handleChange(event); // // TODO: recalculate and display gpa\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: /*#__PURE__*/_jsxDEV(TextField // id={`course-${course.id}-name`}\n        , {\n          name: \"name\",\n          value: courseConcerned.name,\n          size: \"small\",\n          variant: \"outlined\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(TextField // id={`course-${course.id}-credit`}\n        , {\n          name: \"credit\",\n          value: courseConcerned.credit,\n          size: \"small\",\n          variant: \"outlined\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(TextField // id={`course-${id}-marks`}\n        , {\n          name: \"marksOver100\",\n          value: courseConcerned.marksOver100,\n          size: \"small\",\n          variant: \"outlined\",\n          onChange: () => handleMarksChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: courseConcerned.grade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), \"// \", /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"body1\",\n      children: props.grade\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/components/CourseInput.jsx"],"names":["Typography","useTranslation","useState","TableRow","TableCell","TextField","rc","CourseInput","props","course","setCourse","id","name","credit","marksOver100","grade","semesterNumber","courseConcerned","semester","courses","filter","console","log","handleChange","event","value","target","handleCourseInfoChange","handleMarksChange"],"mappings":";;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,8BAAvB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,SAA9B,QAA+C,mBAA/C;AACA,OAAOC,EAAP,MAAe,yBAAf;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACvC;AACA,QAAM;AAAA,OAAEC,MAAF;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CACpC;AACES,IAAAA,EAAE,EAAE,EADN;AAEEC,IAAAA,IAAI,EAAE,EAFR;AAGEC,IAAAA,MAAM,EAAE,EAHV;AAIEC,IAAAA,YAAY,EAAE,EAJhB;AAKEC,IAAAA,KAAK,EAAE,GALT;AAMEC,IAAAA,cAAc,EAAE;AANlB,GADoC,CAAtC;AAUA,QAAMC,eAAe,GAAGT,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BX,MAAM,IAAIA,MAAM,CAACE,EAAP,KAAcH,KAAK,CAACG,EAA5D,EAAgE,CAAhE,CAAxB;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYL,eAAe,CAACN,EAAhB,KAAuBH,KAAK,CAACG,EAAzC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYL,eAAe,CAACL,IAAhB,KAAyBJ,KAAK,CAACI,IAA3C,EAduC,CAevC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMW,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAM;AAAEZ,MAAAA,IAAF;AAAQa,MAAAA;AAAR,QAAkBD,KAAK,CAACE,MAA9B,CAD8B,CAE9B;;AACAhB,IAAAA,SAAS,iCAEFO,eAFE;AAGL,OAAE,GAAEL,IAAK,EAAT,GAAaa,KAHR,CAGe;;AAHf,OAAT,CAH8B,CAS9B;;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;AACAD,IAAAA,KAAK,CAACmB,sBAAN,CAA6BV,eAA7B,EAA8CT,KAAK,CAACU,QAApD,EAX8B,CAY9B;AACD,GAbD;;AAeA,QAAMU,iBAAiB,GAAIJ,KAAD,IAAW;AACnCD,IAAAA,YAAY,CAACC,KAAD,CAAZ,CADmC,CAEnC;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,IAArB;AAA0B,QAAA,KAAK,EAAC,KAAhC;AAAA,+BACI,QAAC,SAAD,CACE;AADF;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,KAAK,EAAEP,eAAe,CAACL,IAHzB;AAIE,UAAA,IAAI,EAAC,OAJP;AAKE,UAAA,OAAO,EAAC,UALV;AAME,UAAA,QAAQ,EAAEW;AANZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,SAAD;AAAA,+BACI,QAAC,SAAD,CACE;AADF;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EAAEN,eAAe,CAACJ,MAHzB;AAIE,UAAA,IAAI,EAAC,OAJP;AAKE,UAAA,OAAO,EAAC,UALV;AAME,UAAA,QAAQ,EAAEU;AANZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXF,eAqBE,QAAC,SAAD;AAAA,+BACI,QAAC,SAAD,CACE;AADF;AAEE,UAAA,IAAI,EAAC,cAFP;AAGE,UAAA,KAAK,EAAEN,eAAe,CAACH,YAHzB;AAIE,UAAA,IAAI,EAAC,OAJP;AAKE,UAAA,OAAO,EAAC,UALV;AAME,UAAA,QAAQ,EAAE,MAAMc;AANlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cArBF,eA+BE,QAAC,SAAD;AAAA,kBAAYX,eAAe,CAACF;AAA5B;AAAA;AAAA;AAAA;AAAA,cA/BF,eAgCE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,sBAsCK,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,OAAtB;AAAA,gBAA+BP,KAAK,CAACO;AAArC;AAAA;AAAA;AAAA;AAAA,YAtCL;AAAA,kBADF;AA0CH","sourcesContent":["import Typography from '@material-ui/core/Typography';\nimport { useTranslation } from 'react-i18next';\nimport { useState } from 'react';\nimport { TableRow, TableCell, TextField } from '@material-ui/core';\nimport rc from '../components/Utils.jsx';\n\nexport default function CourseInput(props) {\n    // const { t } = useTranslation();\n    const [ course, setCourse ] = useState(\n      {\n        id: '',\n        name: '',\n        credit: '',\n        marksOver100: '',\n        grade: '-',\n        semesterNumber: ''\n      }\n    );\n    const courseConcerned = props.semester.courses.filter(course => course.id === props.id)[0];\n    console.log(courseConcerned.id === props.id);\n    console.log(courseConcerned.name === props.name);\n    // const [ course, setCourse ] = useState(\n    //   {\n    //     id: props.id,\n    //     name: props.name,\n    //     credit: props.credit,\n    //     marksOver100: props.marksOver100,\n    //     grade: props.grade,\n    //     semesterNumber: props.semesterNumber\n    //   }\n    // );\n\n    const handleChange = (event) => {\n      const { name, value } = event.target;\n      // console.log(courseConcerned);\n      setCourse(\n        {\n          ...courseConcerned,\n          [`${name}`]: value  // set the value of the *name* attribute to *value*\n        }\n      );\n      // console.log(name, value);\n      console.log(course);\n      props.handleCourseInfoChange(courseConcerned, props.semester);\n      // TODO: on change remove the current GPA value\n    }\n\n    const handleMarksChange = (event) => {\n      handleChange(event);\n      // // TODO: recalculate and display gpa\n    }\n\n    return (\n      <>\n        <TableRow>\n          <TableCell component=\"th\" scope=\"row\">\n              <TextField\n                // id={`course-${course.id}-name`}\n                name=\"name\"\n                value={courseConcerned.name}\n                size=\"small\"\n                variant=\"outlined\"\n                onChange={handleChange}\n              />\n          </TableCell>\n          <TableCell>\n              <TextField\n                // id={`course-${course.id}-credit`}\n                name=\"credit\"\n                value={courseConcerned.credit}\n                size=\"small\"\n                variant=\"outlined\"\n                onChange={handleChange}\n              />\n          </TableCell>\n          <TableCell>\n              <TextField\n                // id={`course-${id}-marks`}\n                name=\"marksOver100\"\n                value={courseConcerned.marksOver100}\n                size=\"small\"\n                variant=\"outlined\"\n                onChange={() => handleMarksChange}\n              />\n          </TableCell>\n          <TableCell>{courseConcerned.grade}</TableCell>\n          <TableCell>\n              {//<button onClick={props.removeCourse}>X</button>\n              }\n          </TableCell>\n        </TableRow>\n        // <Typography component=\"body1\">{props.grade}</Typography>\n      </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}