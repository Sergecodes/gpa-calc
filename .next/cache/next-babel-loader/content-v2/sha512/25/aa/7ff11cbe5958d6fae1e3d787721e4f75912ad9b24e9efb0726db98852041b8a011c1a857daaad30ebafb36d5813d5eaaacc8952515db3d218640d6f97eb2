{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Typography from '@material-ui/core/Typography'; // import { useTranslation } from 'react-i18next';\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { TableRow, TableCell, TextField } from '@material-ui/core'; // import t from './utils.js';\n\nexport default class CourseInput extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    // note: the course is added to the semester before this method is called(before the course is rendered)\n    // so this.props.semester.courses.length will always equal nextProps.semester.courses.length\n    // if 1 course is left, re-render so as to remove delete button\n    // if 2 courses are left(principally after 1 course was left), re-render so as to re-display delete button\n    if (this.props.semester.courses.length === 1 || this.props.semester.courses.length === 2) return true; // if the course wasn't modified then don't re-render\n\n    if (JSON.stringify(this.props.course) === JSON.stringify(nextProps.course) // && JSON.stringify(this.props.semester) === JSON.stringify(nextProps.semester)\n    ) return false;\n    return true;\n  }\n\n  render() {\n    // console.log(`Course ${this.props.course.id} in semester ${this.props.semester.number} rendered`);\n    const {\n      course,\n      semester,\n      onInputChange,\n      onMarkOrCreditChange,\n      onDeleteCourse\n    } = this.props;\n    const {\n      name,\n      credit,\n      markOver100,\n      grade\n    } = course;\n    return /*#__PURE__*/_jsx(_Fragment, {\n      children: /*#__PURE__*/_jsxs(TableRow, {\n        hover: true,\n        children: [/*#__PURE__*/_jsx(TableCell, {\n          children: /*#__PURE__*/_jsx(TextField // id={`course-${course.id}-name`}\n          , {\n            name: \"name\",\n            value: name,\n            placeholder: \"e.g. Math 1032\",\n            size: \"small\",\n            variant: \"outlined\",\n            onChange: () => onInputChange(event, course, semester)\n          })\n        }), /*#__PURE__*/_jsx(TableCell, {\n          children: /*#__PURE__*/_jsx(TextField // id={`course-${course.id}-credit`}\n          , {\n            name: \"credit\",\n            value: credit // type=\"number\"\n            // value={credit === 0 ? '' : credit}\n            ,\n            size: \"small\",\n            variant: \"outlined\",\n            onChange: () => onMarkOrCreditChange(event, course, semester)\n          })\n        }), /*#__PURE__*/_jsx(TableCell, {\n          children: /*#__PURE__*/_jsx(TextField // id={`course-${id}-marks`}\n          // type=\"number\"\n          // TODO: when on mobile, set type to number.\n          , {\n            name: \"markOver100\",\n            value: markOver100,\n            size: \"small\",\n            variant: \"outlined\",\n            onChange: () => onMarkOrCreditChange(event, course, semester) // or onChange={(event) => props.onInputChange(event, props.course, props.semester)}\n\n          })\n        }), /*#__PURE__*/_jsx(TableCell, {\n          size: \"small\",\n          children: grade === '' ? '-' : grade\n        }), semester.courses.length > 1 ? /*#__PURE__*/_jsx(TableCell, {\n          style: {\n            paddingLeft: '0'\n          },\n          children: /*#__PURE__*/_jsx(IconButton, {\n            color: \"secondary\",\n            \"aria-label\": \"Delete course\",\n            onClick: () => onDeleteCourse(course, semester),\n            component: \"span\",\n            children: /*#__PURE__*/_jsx(DeleteIcon, {})\n          })\n        }) : null]\n      })\n    });\n  }\n\n} // export default React.memo(CourseInput);\n// export default CourseInput;","map":null,"metadata":{},"sourceType":"module"}