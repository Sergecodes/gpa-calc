{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/components/CourseInput.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Typography from '@material-ui/core/Typography'; // import { useTranslation } from 'react-i18next';\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { TableRow, TableCell, TextField } from '@material-ui/core'; // import rc from '../components/Utils.jsx';\n\nvar CourseInput = /*#__PURE__*/function (_React$Component) {\n  _inherits(CourseInput, _React$Component);\n\n  var _super = _createSuper(CourseInput);\n\n  function CourseInput() {\n    _classCallCheck(this, CourseInput);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CourseInput, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      console.log(\"Unmounting course \".concat(this.props.course.id));\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      console.log(nextProps.semester.courses.length);\n      console.log(JSON.stringify(this.props.semester) === JSON.stringify(nextProps.semester)); // if number of courses of given semester has changed, allow update\n\n      if (JSON.stringify(this.props.semester) === JSON.stringify(nextProps.semester) && this.props.semester.courses.length !== nextProps.semester.courses.length) return true;\n\n      if (JSON.stringify(this.props.course) === JSON.stringify(nextProps.course) // JSON.stringify(this.props.semester) === JSON.stringify(nextProps.semester)\n      ) {\n          // console.log(`Won't update course ${this.props.course.id}`);\n          return false;\n        }\n\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"Course \".concat(this.props.course.id, \" in semester \").concat(this.props.semester.number, \" rendered\"));\n      var _this$props = this.props,\n          course = _this$props.course,\n          semester = _this$props.semester,\n          onInputChange = _this$props.onInputChange,\n          onMarkOrCreditChange = _this$props.onMarkOrCreditChange,\n          onDeleteCourse = _this$props.onDeleteCourse;\n      var name = course.name,\n          credit = course.credit,\n          markOver100 = course.markOver100,\n          grade = course.grade;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TextField // id={`course-${course.id}-name`}\n            , {\n              name: \"name\",\n              value: name,\n              placeholder: \"e.g. Math 1032\",\n              size: \"small\",\n              variant: \"outlined\",\n              onChange: function onChange() {\n                return onInputChange(event, course, semester);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TextField // id={`course-${course.id}-credit`}\n            , {\n              name: \"credit\",\n              value: credit // type=\"number\"\n              // value={credit === 0 ? '' : credit}\n              ,\n              size: \"small\",\n              variant: \"outlined\",\n              onChange: function onChange() {\n                return onMarkOrCreditChange(event, course, semester);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TextField // id={`course-${id}-marks`}\n            // type=\"number\"\n            // TODO: when on mobile, set type to number.\n            , {\n              name: \"markOver100\",\n              value: markOver100,\n              size: \"small\",\n              variant: \"outlined\",\n              onChange: function onChange() {\n                return onMarkOrCreditChange(event, course, semester);\n              } // or onChange={(event) => props.onInputChange(event, props.course, props.semester)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            size: \"small\",\n            children: grade === '' ? '-' : grade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), semester.courses.length > 1 ? /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              paddingLeft: '0'\n            },\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"secondary\",\n              \"aria-label\": \"Delete course\",\n              onClick: function onClick() {\n                return onDeleteCourse(course, semester);\n              },\n              component: \"span\",\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n  }]);\n\n  return CourseInput;\n}(React.Component); // export default React.memo(CourseInput);\n// export default CourseInput;\n\n\nexport { CourseInput as default };","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/components/CourseInput.jsx"],"names":["Typography","React","Button","IconButton","DeleteIcon","TableRow","TableCell","TextField","CourseInput","console","log","props","course","id","nextProps","nextState","semester","courses","length","JSON","stringify","number","onInputChange","onMarkOrCreditChange","onDeleteCourse","name","credit","markOver100","grade","event","paddingLeft","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,8BAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,SAA9B,QAA+C,mBAA/C,C,CACA;;IAEqBC,W;;;;;;;;;;;;;2CACM;AACrBC,MAAAA,OAAO,CAACC,GAAR,6BAAiC,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,EAAnD;AACD;;;0CAEqBC,S,EAAWC,S,EAAW;AAC1CN,MAAAA,OAAO,CAACC,GAAR,CAAYI,SAAS,CAACE,QAAV,CAAmBC,OAAnB,CAA2BC,MAAvC;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYS,IAAI,CAACC,SAAL,CAAe,KAAKT,KAAL,CAAWK,QAA1B,MAAwCG,IAAI,CAACC,SAAL,CAAeN,SAAS,CAACE,QAAzB,CAApD,EAF0C,CAI1C;;AACA,UAAIG,IAAI,CAACC,SAAL,CAAe,KAAKT,KAAL,CAAWK,QAA1B,MAAwCG,IAAI,CAACC,SAAL,CAAeN,SAAS,CAACE,QAAzB,CAAxC,IACJ,KAAKL,KAAL,CAAWK,QAAX,CAAoBC,OAApB,CAA4BC,MAA5B,KAAuCJ,SAAS,CAACE,QAAV,CAAmBC,OAAnB,CAA2BC,MADlE,EAEE,OAAO,IAAP;;AAEF,UACEC,IAAI,CAACC,SAAL,CAAe,KAAKT,KAAL,CAAWC,MAA1B,MAAsCO,IAAI,CAACC,SAAL,CAAeN,SAAS,CAACF,MAAzB,CADxC,CAEE;AAFF,QAGE;AACA;AACA,iBAAO,KAAP;AACD;;AAED,aAAO,IAAP;AACD;;;6BAEQ;AACPH,MAAAA,OAAO,CAACC,GAAR,kBAAsB,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,EAAxC,0BAA0D,KAAKF,KAAL,CAAWK,QAAX,CAAoBK,MAA9E;AADO,wBAKH,KAAKV,KALF;AAAA,UAGLC,MAHK,eAGLA,MAHK;AAAA,UAGGI,QAHH,eAGGA,QAHH;AAAA,UAGaM,aAHb,eAGaA,aAHb;AAAA,UAILC,oBAJK,eAILA,oBAJK;AAAA,UAIiBC,cAJjB,eAIiBA,cAJjB;AAAA,UAMCC,IAND,GAMsCb,MANtC,CAMCa,IAND;AAAA,UAMOC,MANP,GAMsCd,MANtC,CAMOc,MANP;AAAA,UAMeC,WANf,GAMsCf,MANtC,CAMee,WANf;AAAA,UAM4BC,KAN5B,GAMsChB,MANtC,CAM4BgB,KAN5B;AAQP,0BACE;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,KAAK,MAAf;AAAA,kCACE,QAAC,SAAD;AAAA,mCACI,QAAC,SAAD,CACE;AADF;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,KAAK,EAAEH,IAHT;AAIE,cAAA,WAAW,EAAC,gBAJd;AAKE,cAAA,IAAI,EAAC,OALP;AAME,cAAA,OAAO,EAAC,UANV;AAOE,cAAA,QAAQ,EAAE;AAAA,uBAAMH,aAAa,CAACO,KAAD,EAAQjB,MAAR,EAAgBI,QAAhB,CAAnB;AAAA;AAPZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE,QAAC,SAAD;AAAA,mCACI,QAAC,SAAD,CACE;AADF;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,KAAK,EAAEU,MAHT,CAIE;AACA;AALF;AAME,cAAA,IAAI,EAAC,OANP;AAOE,cAAA,OAAO,EAAC,UAPV;AAQE,cAAA,QAAQ,EAAE;AAAA,uBAAMH,oBAAoB,CAACM,KAAD,EAAQjB,MAAR,EAAgBI,QAAhB,CAA1B;AAAA;AARZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAZF,eAwBE,QAAC,SAAD;AAAA,mCACE,QAAC,SAAD,CACE;AACA;AACA;AAHF;AAIE,cAAA,IAAI,EAAC,aAJP;AAKE,cAAA,KAAK,EAAEW,WALT;AAME,cAAA,IAAI,EAAC,OANP;AAOE,cAAA,OAAO,EAAC,UAPV;AAQE,cAAA,QAAQ,EAAE;AAAA,uBAAMJ,oBAAoB,CAACM,KAAD,EAAQjB,MAAR,EAAgBI,QAAhB,CAA1B;AAAA,eARZ,CASE;;AATF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAxBF,eAqCE,QAAC,SAAD;AAAW,YAAA,IAAI,EAAC,OAAhB;AAAA,sBACGY,KAAK,KAAK,EAAV,GAAe,GAAf,GAAqBA;AADxB;AAAA;AAAA;AAAA;AAAA,kBArCF,EAyCGZ,QAAQ,CAACC,OAAT,CAAiBC,MAAjB,GAA0B,CAA1B,gBACC,QAAC,SAAD;AAAW,YAAA,KAAK,EAAE;AAACY,cAAAA,WAAW,EAAE;AAAd,aAAlB;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,KAAK,EAAC,WADR;AAEE,4BAAW,eAFb;AAGE,cAAA,OAAO,EAAE;AAAA,uBAAMN,cAAc,CAACZ,MAAD,EAASI,QAAT,CAApB;AAAA,eAHX;AAIE,cAAA,SAAS,EAAC,MAJZ;AAAA,qCAME,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADD,GAWG,IApDN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AA2DD;;;;EA5FoCf,KAAK,CAAC8B,S,GA+F/C;AACA;;;SAhGqBvB,W","sourcesContent":["import Typography from '@material-ui/core/Typography';\n// import { useTranslation } from 'react-i18next';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { TableRow, TableCell, TextField } from '@material-ui/core';\n// import rc from '../components/Utils.jsx';\n\nexport default class CourseInput extends React.Component {\n    componentWillUnmount() {\n      console.log(`Unmounting course ${this.props.course.id}`);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      console.log(nextProps.semester.courses.length);\n      console.log(JSON.stringify(this.props.semester) === JSON.stringify(nextProps.semester))\n\n      // if number of courses of given semester has changed, allow update\n      if (JSON.stringify(this.props.semester) === JSON.stringify(nextProps.semester) &&\n      this.props.semester.courses.length !== nextProps.semester.courses.length)\n        return true;\n\n      if (\n        JSON.stringify(this.props.course) === JSON.stringify(nextProps.course)\n        // JSON.stringify(this.props.semester) === JSON.stringify(nextProps.semester)\n      ) {\n        // console.log(`Won't update course ${this.props.course.id}`);\n        return false;\n      }\n\n      return true;\n    }\n\n    render() {\n      console.log(`Course ${this.props.course.id} in semester ${this.props.semester.number} rendered`);\n      const {\n        course, semester, onInputChange,\n        onMarkOrCreditChange, onDeleteCourse\n      } = this.props;\n      const { name, credit, markOver100, grade } = course;\n\n      return (\n        <>\n          <TableRow hover>\n            <TableCell>\n                <TextField\n                  // id={`course-${course.id}-name`}\n                  name=\"name\"\n                  value={name}\n                  placeholder=\"e.g. Math 1032\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                  onChange={() => onInputChange(event, course, semester)}\n                />\n            </TableCell>\n            <TableCell>\n                <TextField\n                  // id={`course-${course.id}-credit`}\n                  name=\"credit\"\n                  value={credit}\n                  // type=\"number\"\n                  // value={credit === 0 ? '' : credit}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  onChange={() => onMarkOrCreditChange(event, course, semester)}\n                />\n            </TableCell>\n            <TableCell>\n              <TextField\n                // id={`course-${id}-marks`}\n                // type=\"number\"\n                // TODO: when on mobile, set type to number.\n                name=\"markOver100\"\n                value={markOver100}\n                size=\"small\"\n                variant=\"outlined\"\n                onChange={() => onMarkOrCreditChange(event, course, semester)}\n                // or onChange={(event) => props.onInputChange(event, props.course, props.semester)}\n              />\n            </TableCell>\n            <TableCell size=\"small\">\n              {grade === '' ? '-' : grade}\n            </TableCell>\n\n            {semester.courses.length > 1 ?\n              <TableCell style={{paddingLeft: '0'}}>\n                <IconButton\n                  color=\"secondary\"\n                  aria-label=\"Delete course\"\n                  onClick={() => onDeleteCourse(course, semester)}\n                  component=\"span\"\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </TableCell>\n              : null\n            }\n          </TableRow>\n        </>\n      );\n    }\n}\n\n// export default React.memo(CourseInput);\n// export default CourseInput;\n"]},"metadata":{},"sourceType":"module"}