{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/components/FinalResult.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Typography from '@material-ui/core/Typography';\nimport MoreInfo_Icon from '../components/MoreInfo_Icon';\n\nvar FinalResult = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(FinalResult, _React$PureComponent);\n\n  var _super = _createSuper(FinalResult);\n\n  function FinalResult() {\n    var _this;\n\n    _classCallCheck(this, FinalResult);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"calculateAverage\", function () {\n      var gpas = _this.props.gpas;\n      if (gpas.length === 0) return 0.00;\n      return parseFloat((gpas.reduce(function (a, b) {\n        return a + b;\n      }) / gpas.length).toFixed(2));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"calculateCumulativeGPA\", function () {\n      var allCourses = [];\n\n      var _iterator = _createForOfIteratorHelper(_this.props.semesters),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var semester = _step.value;\n\n          var _iterator2 = _createForOfIteratorHelper(semester.courses),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var course = _step2.value;\n              allCourses.push(course);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var dummySemester = {\n        number: 0,\n        gpa: 0.0,\n        courses: [].concat(allCourses)\n      };\n      return _this.props.calculateGPA(dummySemester);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setColor\", function (gpa) {\n      if (gpa >= 2.0) return 'primary';else return 'secondary';\n    });\n\n    return _this;\n  }\n\n  _createClass(FinalResult, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          gpas = _this$props.gpas,\n          t = _this$props.t;\n      var average = this.calculateAverage();\n      var cumulativeGPA = this.calculateCumulativeGPA();\n      var divStyle = {\n        borderTop: '2px solid rgba(144, 144, 144, 0.4)',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: '.7rem'\n      };\n\n      var secDivStyle = _objectSpread(_objectSpread({}, divStyle), {}, {\n        paddingTop: '0',\n        paddingBottom: '0'\n      });\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textTransform: 'uppercase',\n            textAlign: 'center',\n            color: 'dimgray'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: t('Your GPA')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), gpas.map(function (gpa, index) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: divStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: t('Semester') + (index + 1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, _this2), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: gpa >= 2.0 ? 'blue' : 'red'\n              },\n              children: gpa === 0 ? '0.00 / 4' : \"\".concat(gpa, \" / 4\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, _this2)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, _this2);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: secDivStyle,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            component: \"span\",\n            color: this.setColor(average),\n            children: [t('Average'), /*#__PURE__*/_jsxDEV(MoreInfo_Icon, {\n              content: t('Icon 1 content ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            component: \"span\",\n            color: this.setColor(average),\n            children: average === 0 ? '0.00 / 4' : \"\".concat(average, \" / 4\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: _objectSpread(_objectSpread({}, secDivStyle), {}, {\n            borderBottom: '2px solid rgba(144, 144, 144, 0.4)'\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            component: \"span\",\n            color: this.setColor(cumulativeGPA),\n            children: [t('Cumulative'), /*#__PURE__*/_jsxDEV(MoreInfo_Icon, {\n              content: t('Icon 2 content')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            component: \"span\",\n            color: this.setColor(cumulativeGPA),\n            children: cumulativeGPA === 0 ? '0.00 / 4' : \"\".concat(cumulativeGPA, \" / 4\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return FinalResult;\n}(React.PureComponent);\n\nexport { FinalResult as default };","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/components/FinalResult.jsx"],"names":["React","IconButton","InfoOutlinedIcon","ClickAwayListener","Typography","MoreInfo_Icon","FinalResult","gpas","props","length","parseFloat","reduce","a","b","toFixed","allCourses","semesters","semester","courses","course","push","dummySemester","number","gpa","calculateGPA","t","average","calculateAverage","cumulativeGPA","calculateCumulativeGPA","divStyle","borderTop","display","justifyContent","alignItems","padding","secDivStyle","paddingTop","paddingBottom","textTransform","textAlign","color","map","index","setColor","borderBottom","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Typography from '@material-ui/core/Typography';\nimport MoreInfo_Icon from '../components/MoreInfo_Icon';\n\nexport default class FinalResult extends React.PureComponent {\n  calculateAverage = () => {\n    const gpas = this.props.gpas;\n\n    if (gpas.length === 0)\n      return 0.00;\n    return parseFloat((gpas.reduce(\n      (a, b) => a + b\n    ) / gpas.length).toFixed(2));\n  }\n\n  calculateCumulativeGPA = () => {\n    var allCourses = [];\n\n    for(let semester of this.props.semesters) {\n      for(let course of semester.courses) {\n        allCourses.push(course);\n      }\n    }\n\n    const dummySemester = {\n      number: 0,\n      gpa: 0.0,\n      courses: [...allCourses]\n    };\n\n    return this.props.calculateGPA(dummySemester);\n  }\n\n  setColor = gpa => {\n    if (gpa >= 2.0) return 'primary';\n    else return 'secondary';\n  }\n\n  render() {\n    const { gpas, t } = this.props;\n    const average = this.calculateAverage();\n    const cumulativeGPA = this.calculateCumulativeGPA();\n\n    const divStyle = {\n      borderTop: '2px solid rgba(144, 144, 144, 0.4)',\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      padding: '.7rem',\n    };\n\n    const secDivStyle = {\n      ...divStyle,\n      paddingTop: '0',\n      paddingBottom: '0',\n    };\n\n    return (\n      <div>\n        <div style={{\n          textTransform: 'uppercase',\n          textAlign: 'center',\n          color: 'dimgray',\n        }}>\n          <h2>{t('Your GPA')}</h2>\n        </div>\n\n        {gpas.map(\n          (gpa, index) =>\n            <div\n              key={index}\n              style={divStyle}\n            >\n              <span>{t('Semester') + (index + 1)}</span>\n              <span style={{color: (gpa >= 2.0 ? 'blue' : 'red')}}>{gpa === 0 ? '0.00 / 4' : `${gpa} / 4`}</span>\n            </div>\n        )}\n\n        <div style={secDivStyle}>\n          <Typography\n            variant=\"subtitle2\"\n            component=\"span\"\n            color={this.setColor(average)}\n          >\n            {t('Average')}\n            <MoreInfo_Icon\n              content={t('Icon 1 content ')}\n            />\n          </Typography>\n\n          <Typography variant=\"subtitle2\" component=\"span\" color={this.setColor(average)}>\n            {average === 0 ? '0.00 / 4' : `${average} / 4`}\n          </Typography>\n        </div>\n        <div style={{...secDivStyle, borderBottom: '2px solid rgba(144, 144, 144, 0.4)'}}>\n          <Typography\n            variant=\"subtitle2\"\n            component=\"span\"\n            color={this.setColor(cumulativeGPA)}\n          >\n            {t('Cumulative')}\n            <MoreInfo_Icon\n              content={t('Icon 2 content')}\n            />\n          </Typography>\n\n          <Typography variant=\"subtitle2\" component=\"span\" color={this.setColor(cumulativeGPA)}>\n            {cumulativeGPA === 0 ? '0.00 / 4' : `${cumulativeGPA} / 4`}\n          </Typography>\n        </div>\n\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}