{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/components/Semester.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography'; // import { useTranslation } from 'react-i18next';\n\nimport CourseInput from '../components/CourseInput.jsx';\nimport rc from '../components/Utils.jsx';\nexport default function Semester(props) {\n  _s();\n\n  var _this = this;\n\n  // const { t } = useTranslation();\n  var _useState = useState({\n    number: '',\n    gpa: '-'\n  }),\n      semester = _useState[0],\n      setSemester = _useState[1];\n\n  var _useState2 = useState([]),\n      courses = _useState2[0],\n      setCourses = _useState2[1];\n  /* Add a course \"form\" to enter course info in the semester */\n\n\n  var addCourseInputForm = function addCourseInputForm() {\n    var numCourses = courses.length;\n    var id;\n    if (numCourses !== 0) // if there is a course\n      id = courses[numCourses - 1].id + 1; // get unused id by taking id of last course(max id in array) + 1\n    else id = 1;\n    setCourses([].concat(_toConsumableArray(courses), [{\n      id: id,\n      name: '',\n      credit: '',\n      marksOver100: '',\n      grade: '-'\n    }]));\n  };\n\n  var removeCourse = function removeCourse(id) {\n    var remainingCourses = courses.filter(function (course) {\n      return course.id !== id;\n    });\n    setCourses(remainingCourses);\n  };\n\n  var handleCourseInfoChange = function handleCourseInfoChange(modifiedCourse) {\n    var unchangedCourses = courses.filter(function (course) {\n      return course.id !== modifiedCourse.id;\n    });\n    setCourses([].concat(_toConsumableArray(unchangedCourses), [modifiedCourse]));\n  };\n\n  console.log(courses);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"Semester \".concat(props.number, \" form\"),\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Course name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Credit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Marks /100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Grade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [courses.map(function (course) {\n            return /*#__PURE__*/_jsxDEV(CourseInput, {\n              id: course.id,\n              name: course.name,\n              grade: course.grade,\n              marks: course.marksOver100,\n              credit: course.credit,\n              removeCourse: removeCourse(course.id),\n              handleCourseInfoChange: handleCourseInfoChange\n            }, course.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, _this);\n          }), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addCourseInputForm,\n            children: \"Add course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"GPA: \", props.gpa]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Semester, \"T0tDNK6RdzpHEbZClfICWnFIemk=\");\n\n_c = Semester;\n\nvar _c;\n\n$RefreshReg$(_c, \"Semester\");","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/components/Semester.jsx"],"names":["useState","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","Paper","Typography","CourseInput","rc","Semester","props","number","gpa","semester","setSemester","courses","setCourses","addCourseInputForm","numCourses","length","id","name","credit","marksOver100","grade","removeCourse","remainingCourses","filter","course","handleCourseInfoChange","modifiedCourse","unchangedCourses","console","log","map"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n// import { useTranslation } from 'react-i18next';\nimport CourseInput from '../components/CourseInput.jsx';\nimport rc from '../components/Utils.jsx';\n\nexport default function Semester(props) {\n    // const { t } = useTranslation();\n    const [semester, setSemester] = useState(\n      {\n        number: '',\n        gpa: '-'\n      }\n    );\n    const [courses, setCourses] = useState([]);\n\n    /* Add a course \"form\" to enter course info in the semester */\n    const addCourseInputForm = () => {\n      let numCourses = courses.length;\n      let id;\n\n      if (numCourses !== 0)   // if there is a course\n          id = courses[numCourses-1].id + 1;  // get unused id by taking id of last course(max id in array) + 1\n      else\n          id = 1;\n\n      setCourses([\n        ...courses,\n        {\n            id: id,\n            name: '',\n            credit: '',\n            marksOver100: '',\n            grade: '-'\n        }\n      ]);\n    }\n\n    const removeCourse = id => {\n      const remainingCourses = courses.filter(course => course.id !== id);\n      setCourses(remainingCourses);\n    }\n\n    const handleCourseInfoChange = modifiedCourse => {\n      const unchangedCourses = courses.filter(course => course.id !== modifiedCourse.id);\n      setCourses([\n        ...unchangedCourses,\n        modifiedCourse\n      ]);\n    }\n\n    console.log(courses);\n    return (\n      <>\n\n\n          <TableContainer component={Paper}>\n              {//<Table aria-label={`Semester ${props.number} form`}>\n              }\n              <Table aria-label={`Semester ${props.number} form`}>\n                  <TableHead>\n                      <TableRow>\n                          <TableCell>Course name</TableCell>\n                          <TableCell>Credit</TableCell>\n                          <TableCell>Marks /100</TableCell>\n                          <TableCell>Grade</TableCell>\n                      </TableRow>\n                  </TableHead>\n\n                  <TableBody>\n                      {//<p>Semester courses {semesterCourses.length}</p>\n                      }\n                      {courses.map(\n                          course => (\n                            <CourseInput\n                              key={course.id}\n                              id={course.id}\n                              name={course.name}\n                              grade={course.grade}\n                              marks={course.marksOver100}\n                              credit={course.credit}\n                              removeCourse={removeCourse(course.id)}\n                              handleCourseInfoChange={handleCourseInfoChange}\n                            />\n                          )\n                      )}\n                      <button onClick={addCourseInputForm}>Add course</button>\n                  </TableBody>\n              </Table>\n          </TableContainer>\n          <span>GPA: {props.gpa}</span>\n      </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}