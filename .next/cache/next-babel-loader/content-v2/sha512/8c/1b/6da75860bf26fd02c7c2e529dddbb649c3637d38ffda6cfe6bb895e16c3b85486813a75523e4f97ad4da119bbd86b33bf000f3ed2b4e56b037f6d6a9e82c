{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/components/DownloadResults.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Modal from '@material-ui/core/Modal';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { saveAs } from 'file-saver';\nimport domtoimage from 'dom-to-image';\n\nconst filter = node => {\n  if (node.classList !== undefined) {\n    // node.classList is a DOMTokenList and it doesn't have the array \"includes\" method but rather a \"contains\" method\n    if (node.classList.contains('semester-actions') || node.classList.contains('delete-cell')) return false;\n  }\n\n  if (node.tagName === \"BUTTON\" || node.tagName === \"button\") return false;\n  return true;\n};\n\nconst generateImage = () => {\n  var img = new Image(); // var img = React.createElement(\"img\", {}, null);\n  // console.log(img);\n  // var node = document.getElementById('semester-list');\n  // var container = document.getElementById('modal-image');\n\n  domtoimage.toPng(null, {\n    filter: filter\n  }).then(function (dataUrl) {\n    img.src = dataUrl;\n    img.id = 'results-image';\n    img.setAttribute('alt', 'Semester results'); // img.style.width = '35%';\n    // container.prepend(img);\n  }).catch(function (error) {\n    alert(\"An error occurred during the generation of the image.\");\n    console.error('oopss', error);\n  });\n  console.log(img);\n  return img;\n};\n\nexport default class DownloadResults extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"handleOpen\", () => {\n      this.setState({\n        open: true\n      });\n    });\n\n    _defineProperty(this, \"handleClose\", () => {\n      this.setState({\n        open: false\n      });\n    });\n\n    this.state = {\n      open: false\n    };\n    this.image = null;\n  }\n\n  componentDidMount() {\n    console.log(generateImage);\n    this.image = generateImage();\n  }\n\n  render() {\n    // const image = generateImage();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"download-results\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => this.handleOpen(),\n        startIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 22\n        }, this),\n        children: \"Download results as image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/components/DownloadResults.jsx"],"names":["React","Button","GetAppIcon","Modal","CloseIcon","IconButton","saveAs","domtoimage","filter","node","classList","undefined","contains","tagName","generateImage","img","Image","toPng","then","dataUrl","src","id","setAttribute","catch","error","alert","console","log","DownloadResults","Component","constructor","setState","open","state","image","componentDidMount","render","handleOpen"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,MAAMC,MAAM,GAAGC,IAAI,IAAI;AACrB,MAAIA,IAAI,CAACC,SAAL,KAAmBC,SAAvB,EAAkC;AAChC;AACA,QAAIF,IAAI,CAACC,SAAL,CAAeE,QAAf,CAAwB,kBAAxB,KAA+CH,IAAI,CAACC,SAAL,CAAeE,QAAf,CAAwB,aAAxB,CAAnD,EACE,OAAO,KAAP;AACH;;AAED,MAAIH,IAAI,CAACI,OAAL,KAAiB,QAAjB,IAA6BJ,IAAI,CAACI,OAAL,KAAiB,QAAlD,EACE,OAAO,KAAP;AAEF,SAAO,IAAP;AACD,CAXD;;AAaA,MAAMC,aAAa,GAAG,MAAM;AAC1B,MAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV,CAD0B,CAE1B;AACA;AACA;AACA;;AAEAT,EAAAA,UAAU,CAACU,KAAX,CAAiB,IAAjB,EAAuB;AAACT,IAAAA,MAAM,EAAEA;AAAT,GAAvB,EACGU,IADH,CACQ,UAAUC,OAAV,EAAmB;AACvBJ,IAAAA,GAAG,CAACK,GAAJ,GAAUD,OAAV;AACAJ,IAAAA,GAAG,CAACM,EAAJ,GAAS,eAAT;AACAN,IAAAA,GAAG,CAACO,YAAJ,CAAiB,KAAjB,EAAwB,kBAAxB,EAHuB,CAIvB;AACA;AACD,GAPH,EAQGC,KARH,CAQS,UAAUC,KAAV,EAAiB;AACtBC,IAAAA,KAAK,CAAC,uDAAD,CAAL;AACAC,IAAAA,OAAO,CAACF,KAAR,CAAc,OAAd,EAAuBA,KAAvB;AACD,GAXH;AAaAE,EAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ;AACA,SAAOA,GAAP;AACD,CAtBD;;AAwBA,eAAe,MAAMa,eAAN,SAA8B5B,KAAK,CAAC6B,SAApC,CAA8C;AAC3DC,EAAAA,WAAW,GAAG;AACZ;;AADY,wCASD,MAAM;AACjB,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KAba;;AAAA,yCAeA,MAAM;AAClB,WAAKD,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KAnBa;;AAGZ,SAAKC,KAAL,GAAa;AACXD,MAAAA,IAAI,EAAE;AADK,KAAb;AAGA,SAAKE,KAAL,GAAa,IAAb;AACD;;AAcDC,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,OAAO,CAACC,GAAR,CAAYb,aAAZ;AACA,SAAKoB,KAAL,GAAapB,aAAa,EAA1B;AACD;;AAEDsB,EAAAA,MAAM,GAAG;AACP;AAEA,wBACE;AAAK,MAAA,EAAE,EAAC,kBAAR;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAE,MAAM,KAAKC,UAAL,EAHjB;AAIE,QAAA,SAAS,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA3C0D","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Modal from '@material-ui/core/Modal';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { saveAs } from 'file-saver';\nimport domtoimage from 'dom-to-image';\n\n\nconst filter = node => {\n  if (node.classList !== undefined) {\n    // node.classList is a DOMTokenList and it doesn't have the array \"includes\" method but rather a \"contains\" method\n    if (node.classList.contains('semester-actions') || node.classList.contains('delete-cell'))\n      return false;\n  }\n\n  if (node.tagName === \"BUTTON\" || node.tagName === \"button\")\n    return false;\n\n  return true;\n}\n\nconst generateImage = () => {\n  var img = new Image();\n  // var img = React.createElement(\"img\", {}, null);\n  // console.log(img);\n  // var node = document.getElementById('semester-list');\n  // var container = document.getElementById('modal-image');\n\n  domtoimage.toPng(null, {filter: filter})\n    .then(function (dataUrl) {\n      img.src = dataUrl;\n      img.id = 'results-image';\n      img.setAttribute('alt', 'Semester results');\n      // img.style.width = '35%';\n      // container.prepend(img);\n    })\n    .catch(function (error) {\n      alert(\"An error occurred during the generation of the image.\");\n      console.error('oopss', error);\n    });\n\n  console.log(img);\n  return img;\n};\n\nexport default class DownloadResults extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      open: false,\n    };\n    this.image = null;\n  }\n\n  handleOpen = () => {\n    this.setState({\n      open: true\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    });\n  };\n\n  componentDidMount() {\n    console.log(generateImage);\n    this.image = generateImage();\n  }\n\n  render() {\n    // const image = generateImage();\n\n    return (\n      <div id=\"download-results\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.handleOpen()}\n          startIcon={<GetAppIcon />}\n        >\n          Download results as image\n        </Button>\n        \n      </div>\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}