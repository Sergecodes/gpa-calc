{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/components/LanguageSelector.jsx\",\n    _s = $RefreshSig$();\n\n// import Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport rc from '../components/Utils.jsx';\nexport default function LanguageSelector() {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _React$useState = React.useState('English'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var changeLanguage = function changeLanguage(event) {\n    setValue(event.target.value);\n    i18n.changeLanguage(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      style: {\n        backgroundColor: 'ghostwhite',\n        display: 'flex',\n        margin: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: t('Language')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        \"aria-label\": \"language\",\n        name: \"language\",\n        value: value,\n        onChange: changeLanguage,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 48\n          }, this),\n          value: \"en\",\n          label: t('English')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 48\n          }, this),\n          value: \"fr\",\n          label: t('French')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false) // <Typography color='primary' variant=\"body1\">\n  //     {`t('language.label')`}\n  // </Typography>\n  // <div onChange={changeLanguage}>\n  //     <input type=\"radio\" value=\"fr\" name=\"language\" defaultChecked /> French\n  //     <input type=\"radio\" value=\"en\" name=\"language\" /> English\n  // </div>\n  // or even <button onClick=\"i18next.changeLanguage('en')\">French</button>..\n  ;\n}\n\n_s(LanguageSelector, \"IgwwCdJ2WGJlSidOCBrORI29gfM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = LanguageSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageSelector\");","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/components/LanguageSelector.jsx"],"names":["React","useTranslation","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","rc","LanguageSelector","t","i18n","useState","value","setValue","changeLanguage","event","target","backgroundColor","display","margin"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,EAAP,MAAe,yBAAf;AAGA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AAAA,wBACnBP,cAAc,EADK;AAAA,MAC/BQ,CAD+B,mBAC/BA,CAD+B;AAAA,MAC5BC,IAD4B,mBAC5BA,IAD4B;;AAAA,wBAEbV,KAAK,CAACW,QAAN,CAAe,SAAf,CAFa;AAAA;AAAA,MAEhCC,KAFgC;AAAA,MAEzBC,QAFyB;;AAIvC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAC9BF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;AACAF,IAAAA,IAAI,CAACI,cAAL,CAAoBC,KAAK,CAACC,MAAN,CAAaJ,KAAjC;AACH,GAHD;;AAKA,sBACI;AAAA,2BACI,QAAC,WAAD;AAAa,MAAA,SAAS,EAAC,UAAvB;AAAkC,MAAA,KAAK,EAAE;AACrCK,QAAAA,eAAe,EAAE,YADoB;AAErCC,QAAAA,OAAO,EAAE,MAF4B;AAGrCC,QAAAA,MAAM,EAAE;AAH6B,OAAzC;AAAA,8BAMI,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,QAArB;AAAA,kBAA+BV,CAAC,CAAC,UAAD;AAAhC;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,UAAD;AAAY,sBAAW,UAAvB;AAAkC,QAAA,IAAI,EAAC,UAAvC;AAAkD,QAAA,KAAK,EAAEG,KAAzD;AAAgE,QAAA,QAAQ,EAAEE,cAA1E;AAAA,gCACI,QAAC,gBAAD;AAAkB,UAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kBAA3B;AAAsC,UAAA,KAAK,EAAC,IAA5C;AAAiD,UAAA,KAAK,EAAEL,CAAC,CAAC,SAAD;AAAzD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,gBAAD;AAAkB,UAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kBAA3B;AAAsC,UAAA,KAAK,EAAC,IAA5C;AAAiD,UAAA,KAAK,EAAEA,CAAC,CAAC,QAAD;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ,CAgBI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBJ;AAyBH;;GAlCuBD,gB;UACAP,c;;;KADAO,gB","sourcesContent":["// import Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport rc from '../components/Utils.jsx';\n\n\nexport default function LanguageSelector() {\n    const { t, i18n } = useTranslation();\n    const [value, setValue] = React.useState('English');\n\n    const changeLanguage = (event) => {\n        setValue(event.target.value);\n        i18n.changeLanguage(event.target.value);\n    }\n\n    return (\n        <>\n            <FormControl component=\"fieldset\" style={{\n                backgroundColor: 'ghostwhite',\n                display: 'flex',\n                margin: 'auto',\n                \n            }}>\n                <FormLabel component=\"legend\">{t('Language')}</FormLabel>\n                <RadioGroup aria-label=\"language\" name=\"language\" value={value} onChange={changeLanguage}>\n                    <FormControlLabel control={<Radio />} value=\"en\" label={t('English')} />\n                    <FormControlLabel control={<Radio />} value=\"fr\" label={t('French')} />\n                </RadioGroup>\n\n            </FormControl>\n        </>\n        // <Typography color='primary' variant=\"body1\">\n        //     {`t('language.label')`}\n        // </Typography>\n        // <div onChange={changeLanguage}>\n        //     <input type=\"radio\" value=\"fr\" name=\"language\" defaultChecked /> French\n        //     <input type=\"radio\" value=\"en\" name=\"language\" /> English\n        // </div>\n        // or even <button onClick=\"i18next.changeLanguage('en')\">French</button>..\n    );\n}"]},"metadata":{},"sourceType":"module"}