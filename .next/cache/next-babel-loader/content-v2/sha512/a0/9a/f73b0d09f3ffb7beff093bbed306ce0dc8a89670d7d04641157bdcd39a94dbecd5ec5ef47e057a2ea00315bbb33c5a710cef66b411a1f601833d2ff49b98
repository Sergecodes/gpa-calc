{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/pages/index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import { Suspense } from 'react';\nimport React from 'react'; // import LanguageSelector from \"../components/LanguageSelector.jsx\";\n\nimport Heading from \"../components/Heading.jsx\";\nimport Semester from \"../components/Semester.jsx\";\nimport FinalResult from \"../components/FinalResult.jsx\";\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Button from '@material-ui/core/Button';\nconst INITIAL_COURSES = [{\n  id: 1,\n  name: '',\n  credit: 0,\n  // weight(coeficient) of the course such as 3, 6..\n  markOver100: 0.0,\n  points: 0.0,\n  // example: 3.7, 4.0 ..\n  grade: '' // such as A, B..\n\n}, {\n  id: 2,\n  name: '',\n  credit: 0,\n  markOver100: 0.0,\n  points: 0.0,\n  grade: ''\n}, {\n  id: 3,\n  name: '',\n  credit: 0,\n  markOver100: 0.0,\n  points: 0.0,\n  grade: ''\n}];\nconst INITIAL_SEMESTER = {\n  number: 1,\n  gpa: 0.0,\n  courses: INITIAL_COURSES\n};\n\nclass GPACalculator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getPoints\", mark => {\n      // mark should never be > 100 nor < 0 nor invalid !\n      if (mark > 100) {\n        alert(\"Wrong input\");\n        return 0.0;\n      } else if (mark >= 80) return 4.00;else if (mark >= 75) return 3.70;else if (mark >= 70) return 3.30;else if (mark >= 65) return 3.00;else if (mark >= 60) return 2.70;else if (mark >= 55) return 2.30;else if (mark >= 50) return 2.00;else if (mark >= 45) return 1.70;else if (mark >= 40) return 1.30;else if (mark >= 35) return 1.00;else if (mark >= 30) return 0.00;else if (mark >= 0) return 0.00;else {\n        alert(\"Wrong input\");\n        return '-';\n      }\n    });\n\n    _defineProperty(this, \"getGrade\", mark => {\n      if (mark > 100) {\n        alert(\"Wrong input\");\n        return '-';\n      } else if (mark >= 80) return 'A';else if (mark >= 75) return 'A-';else if (mark >= 70) return 'B+';else if (mark >= 65) return 'B';else if (mark >= 60) return 'B-';else if (mark >= 55) return 'C+';else if (mark >= 50) return 'C';else if (mark >= 45) return 'C-';else if (mark >= 40) return 'D+';else if (mark >= 35) return 'D';else if (mark >= 30) return 'E';else if (mark >= 0) return 'F';else {\n        alert(\"Wrong input\");\n        return '-';\n      }\n    });\n\n    _defineProperty(this, \"getTotalCredit\", semester => {\n      const courses = [...semester.courses];\n      var totalCredit = 0;\n\n      for (let course of courses) totalCredit += course.credit;\n\n      return totalCredit;\n    });\n\n    _defineProperty(this, \"calculateGPA\", semester => {\n      const courses = [...semester.courses];\n      var sum = 0.0;\n\n      for (let course of courses) {\n        sum += course.credit * course.points;\n      }\n\n      var totalCredit = this.getTotalCredit(semester); // to prevent zero division error\n\n      if (totalCredit === 0) return 0.0;\n      var gpa = sum / totalCredit;\n      if (isNaN(gpa)) return 0.0;\n      return parseFloat(gpa.toFixed(2)); // return gpa in 2 dps\n    });\n\n    _defineProperty(this, \"handleInputChange\", (event, course, semester) => {\n      /* - get list of courses of given semester\n        - get course from courses (remove course)\n        - update course info\n        - place course back into courses\n        - get list of semesters, remove semester, update semester's courses info,\n        - set new state thus: .*/\n      const {\n        name,\n        value\n      } = event.target;\n      var semesters = [...this.state.semesters],\n          semesterCourses = [...semester.courses];\n\n      var course = _objectSpread({}, course);\n\n      course[name] = value; // semesterCourses.splice(course.id - 1, 1, course); or better still\n\n      semesterCourses[course.id - 1] = course;\n      semester.courses = [...semesterCourses];\n      semesters[semester.number - 1] = semester;\n      this.setState({\n        semesters\n      });\n    });\n\n    _defineProperty(this, \"isNum\", val => /^\\d+$/.test(val));\n\n    _defineProperty(this, \"isReal\", val => !isNaN(val) && !isNaN(parseFloat(val)));\n\n    _defineProperty(this, \"handleMarkOrCreditChange\", (event, course, semester) => {\n      const {\n        name\n      } = event.target;\n      var {\n        value\n      } = event.target;\n      console.log(name, value);\n      if (value === '') value = 0;\n\n      if (name === \"credit\") {\n        if (!this.isNum(value)) return;\n        value = parseInt(value, 10);\n        if (value < 0 || value > 10) return;\n      } else if (name === \"markOver100\") {\n        // parseFloat('9.') returns 9, thus decimal point is lost.\n        // To prevent this, only perform validation if value doesn't contain decimal point\n        if (!value.includes('.')) {\n          if (!this.isReal(value)) return;\n          value = parseFloat(value);\n          if (value < 0 || value > 100) return;\n        }\n      } // if (value === '')\n      //   value = 0;\n      // // NB: isNaN('') returns false, isNaN(0) also returns false\n      // if (isNaN(value) === true)\n      //   return;\n\n\n      var semesters = [...this.state.semesters],\n          semesterCourses = [...semester.courses];\n\n      var course = _objectSpread({}, course);\n\n      course[name] = value;\n\n      if (name === \"markOver100\") {\n        course.grade = this.getGrade(course.markOver100);\n        course.points = this.getPoints(course.markOver100);\n      }\n\n      console.log(course);\n      semesterCourses[course.id - 1] = course;\n      semester.courses = [...semesterCourses];\n      semester.gpa = this.calculateGPA(semester);\n      semesters[semester.number - 1] = semester;\n      this.setState({\n        semesters\n      });\n    });\n\n    _defineProperty(this, \"handleAddSemester\", () => {\n      var semesters = [...this.state.semesters]; // New semester's number is obtained by incrementing last semester's number which is equal to the number of semesters\n\n      var newSemesterNum = semesters.length + 1;\n      semesters.push({\n        number: newSemesterNum,\n        gpa: 0.0,\n        courses: INITIAL_COURSES\n      });\n      this.setState({\n        semesters\n      });\n      /*\n      this.setState(prevState => ({\n          semesters: [\n            ...prevState.semesters,\n            {\n                number: semesterNum,\n                gpa: 0.0,\n                courses: INITIAL_COURSES\n            }\n          ]\n      }));\n      */\n    });\n\n    _defineProperty(this, \"handleDeleteSemester\", semester => {\n      var semesters = [...this.state.semesters]; // We know that semesterIndex is always one short of the semesterNum\n\n      const semesterNum = semester.number,\n            semesterIndex = semesterNum - 1;\n      semesters = semesters.filter(sem => sem.number !== semesterNum); // for every semester whose number is beyond the semesterNum, decrement its number\n\n      for (let i = semesterIndex; i < semesters.length; i++) semesters[i].number = semesters[i].number - 1;\n\n      this.setState({\n        semesters\n      });\n    });\n\n    _defineProperty(this, \"handleResetSemester\", semester => {\n      var semesters = [...this.state.semesters],\n          semester = _objectSpread({}, semester);\n\n      const semesterIndex = semester.number - 1;\n      semester.courses = semester.courses.map(course => {\n        [course.name, course.credit, course.markOver100, course.points, course.grade] = ['', 0, 0.0, 0.0, ''];\n        return course;\n      });\n      semester.gpa = 0.0;\n      semesters[semesterIndex] = semester;\n      this.setState({\n        semesters\n      });\n    });\n\n    _defineProperty(this, \"handleAddCourse\", semester => {\n      var semesters = [...this.state.semesters];\n\n      var semester = _objectSpread({}, semester);\n\n      var semesterCourses = [...semester.courses];\n      const semesterIndex = semester.number - 1;\n      semesterCourses.push({\n        // new course's id is obtained by incrementing last course's id which is the number of courses\n        id: semesterCourses.length + 1,\n        name: '',\n        credit: 0,\n        markOver100: 0.0,\n        grade: ''\n      });\n      semester.courses = semesterCourses;\n      semesters[semesterIndex] = semester;\n      this.setState({\n        semesters\n      });\n    });\n\n    _defineProperty(this, \"handleDeleteCourse\", (course, semester) => {\n      var semesters = [...this.state.semesters];\n\n      var semester = _objectSpread({}, semester);\n\n      var semesterCourses = [...semester.courses];\n      const courseIndex = course.id - 1,\n            semesterIndex = semester.number - 1; // Remove course from list of semester's courses\n\n      semesterCourses = semesterCourses.filter(semCourse => semCourse.id !== course.id); // Reallocate ids(every course which comes after the deleted course's number is decremented)\n\n      for (let i = courseIndex; i < semesterCourses.length; i++) semesterCourses[i].id = semesterCourses[i].id - 1;\n\n      semester.courses = semesterCourses;\n      semester.gpa = this.calculateGPA(semester);\n      semesters[semesterIndex] = semester;\n      this.setState({\n        semesters\n      });\n    });\n\n    console.log(\"Semesters list rendered\");\n    this.state = {\n      semesters: [INITIAL_SEMESTER]\n    };\n  }\n\n  render() {\n    const {\n      semesters\n    } = this.state;\n    const numSemesters = semesters.length;\n    const gpas = semesters.map(semester => semester.gpa);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [numSemesters === 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"1 semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 35\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [numSemesters, \" semesters\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 61\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"semester-list\",\n          children: [semesters.map(semester => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Semester, {\n              semester: semester,\n              numSemesters: numSemesters,\n              onInputChange: this.handleInputChange,\n              onMarkOrCreditChange: this.handleMarkOrCreditChange,\n              onDeleteSemester: this.handleDeleteSemester,\n              onResetSemester: this.handleResetSemester,\n              onAddCourse: this.handleAddCourse,\n              onDeleteCourse: this.handleDeleteCourse\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 25\n            }, this)]\n          }, semester.number, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 20\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              border: '2px solid rgba(144, 144, 144, 0.4)',\n              width: '100%',\n              justifyContent: 'left',\n              paddingLeft: '1rem'\n            },\n            color: \"primary\",\n            onClick: this.handleAddSemester,\n            startIcon: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 28\n            }, this),\n            children: \"Add a semester\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FinalResult, {\n          gpas: gpas,\n          semesters: semesters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default GPACalculator;","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/pages/index.jsx"],"names":["React","Heading","Semester","FinalResult","AddCircleOutlineIcon","Button","INITIAL_COURSES","id","name","credit","markOver100","points","grade","INITIAL_SEMESTER","number","gpa","courses","GPACalculator","Component","constructor","props","mark","alert","semester","totalCredit","course","sum","getTotalCredit","isNaN","parseFloat","toFixed","event","value","target","semesters","state","semesterCourses","setState","val","test","console","log","isNum","parseInt","includes","isReal","getGrade","getPoints","calculateGPA","newSemesterNum","length","push","semesterNum","semesterIndex","filter","sem","i","map","courseIndex","semCourse","render","numSemesters","gpas","handleInputChange","handleMarkOrCreditChange","handleDeleteSemester","handleResetSemester","handleAddCourse","handleDeleteCourse","border","width","justifyContent","paddingLeft","handleAddSemester"],"mappings":"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","sourcesContent":["// import { Suspense } from 'react';\nimport React from 'react';\n// import LanguageSelector from \"../components/LanguageSelector.jsx\";\nimport Heading from \"../components/Heading.jsx\";\nimport Semester from \"../components/Semester.jsx\";\nimport FinalResult from \"../components/FinalResult.jsx\";\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Button from '@material-ui/core/Button';\n\nconst INITIAL_COURSES = [{\n  id: 1,\n  name: '',\n  credit: 0,  // weight(coeficient) of the course such as 3, 6..\n  markOver100: 0.0,\n  points: 0.0,  // example: 3.7, 4.0 ..\n  grade: '',  // such as A, B..\n}, {\n  id: 2,\n  name: '',\n  credit: 0,\n  markOver100: 0.0,\n  points: 0.0,\n  grade: '',\n}, {\n  id: 3,\n  name: '',\n  credit: 0,\n  markOver100: 0.0,\n  points: 0.0,\n  grade: '',\n}];\nconst INITIAL_SEMESTER = {\n  number: 1,\n  gpa: 0.0,\n  courses: INITIAL_COURSES\n};\n\nclass GPACalculator extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"Semesters list rendered\");\n\n    this.state = {\n      semesters: [INITIAL_SEMESTER]\n    }\n  }\n\n  getPoints = mark => {\n    // mark should never be > 100 nor < 0 nor invalid !\n    if (mark > 100) {\n      alert(\"Wrong input\");\n      return 0.0;\n    }\n    else if (mark >= 80)\n      return 4.00;\n    else if (mark >= 75)\n      return 3.70;\n    else if (mark >= 70)\n      return 3.30;\n    else if (mark >= 65)\n      return 3.00;\n    else if (mark >= 60)\n      return 2.70;\n    else if (mark >= 55)\n      return 2.30;\n    else if (mark >= 50)\n      return 2.00;\n    else if (mark >= 45)\n      return 1.70;\n    else if (mark >= 40)\n      return 1.30;\n    else if (mark >= 35)\n      return 1.00;\n    else if (mark >= 30)\n      return 0.00;\n    else if (mark >= 0)\n      return 0.00;\n    else {\n      alert(\"Wrong input\");\n      return '-';\n    }\n  }\n\n  getGrade = mark => {\n    if (mark > 100) {\n      alert(\"Wrong input\");\n      return '-';\n    }\n    else if (mark >= 80)\n      return 'A';\n    else if (mark >= 75)\n      return 'A-';\n    else if (mark >= 70)\n      return 'B+';\n    else if (mark >= 65)\n      return 'B';\n    else if (mark >= 60)\n      return 'B-';\n    else if (mark >= 55)\n      return 'C+';\n    else if (mark >= 50)\n      return 'C';\n    else if (mark >= 45)\n      return 'C-';\n    else if (mark >= 40)\n      return 'D+';\n    else if (mark >= 35)\n      return 'D';\n    else if (mark >= 30)\n      return 'E';\n    else if (mark >= 0)\n      return 'F';\n    else {\n      alert(\"Wrong input\");\n      return '-';\n    }\n  }\n\n  getTotalCredit = semester => {\n    const courses = [...semester.courses];\n    var totalCredit = 0;\n    for (let course of courses)\n      totalCredit += course.credit;\n\n    return totalCredit;\n  }\n\n  calculateGPA = semester => {\n    const courses = [...semester.courses];\n    var sum = 0.0;\n\n    for (let course of courses) {\n      sum += course.credit * course.points;\n    }\n\n    var totalCredit = this.getTotalCredit(semester);\n    // to prevent zero division error\n    if (totalCredit === 0)\n      return 0.0;\n\n    var gpa = sum / totalCredit;\n\n    if (isNaN(gpa))\n      return 0.0;\n    return parseFloat(gpa.toFixed(2));  // return gpa in 2 dps\n  }\n\n  handleInputChange = (event, course, semester) => {\n    /* - get list of courses of given semester\n      - get course from courses (remove course)\n      - update course info\n      - place course back into courses\n      - get list of semesters, remove semester, update semester's courses info,\n      - set new state thus: .*/\n    const { name, value } = event.target;\n    var semesters = [...this.state.semesters], semesterCourses = [...semester.courses];\n    var course = { ...course };\n    course[name] = value;\n\n    // semesterCourses.splice(course.id - 1, 1, course); or better still\n    semesterCourses[course.id-1] = course;\n    semester.courses = [...semesterCourses];\n\n    semesters[semester.number-1] = semester;\n    this.setState({ semesters });\n  }\n\n  /** Return whether or not the string is numeric(integral) */\n  isNum = val => /^\\d+$/.test(val);\n\n  isReal = val => !isNaN(val) && !isNaN(parseFloat(val));\n\n  handleMarkOrCreditChange = (event, course, semester) => {\n    const { name } = event.target;\n    var { value } = event.target;\n    console.log(name, value);\n\n    if (value === '')\n      value = 0;\n\n    if (name === \"credit\") {\n      if (!this.isNum(value)) return;\n\n      value = parseInt(value, 10);\n      if (value < 0 || value > 10) return;\n\n    } else if (name === \"markOver100\") {\n        // parseFloat('9.') returns 9, thus decimal point is lost.\n        // To prevent this, only perform validation if value doesn't contain decimal point\n        if (!value.includes('.')) {\n          if (!this.isReal(value)) return;\n          value = parseFloat(value);\n          if (value < 0 || value > 100) return;\n        }\n    }\n\n    // if (value === '')\n    //   value = 0;\n    // // NB: isNaN('') returns false, isNaN(0) also returns false\n    // if (isNaN(value) === true)\n    //   return;\n\n    var semesters = [...this.state.semesters], semesterCourses = [...semester.courses];\n    var course = { ...course };\n    course[name] = value;\n\n    if (name === \"markOver100\") {\n      course.grade = this.getGrade(course.markOver100);\n      course.points = this.getPoints(course.markOver100);\n    }\n\n    console.log(course);\n    semesterCourses[course.id-1] = course;\n    semester.courses = [...semesterCourses];\n    semester.gpa = this.calculateGPA(semester);\n\n    semesters[semester.number-1] = semester;\n    this.setState({ semesters });\n  }\n\n  handleAddSemester = () => {\n    var semesters = [...this.state.semesters];\n    // New semester's number is obtained by incrementing last semester's number which is equal to the number of semesters\n    var newSemesterNum = semesters.length + 1;\n\n    semesters.push({\n          number: newSemesterNum,\n          gpa: 0.0,\n          courses: INITIAL_COURSES\n    });\n\n    this.setState({ semesters });\n    /*\n    this.setState(prevState => ({\n        semesters: [\n          ...prevState.semesters,\n          {\n              number: semesterNum,\n              gpa: 0.0,\n              courses: INITIAL_COURSES\n          }\n        ]\n    }));\n    */\n  }\n\n  handleDeleteSemester = semester => {\n    var semesters = [...this.state.semesters];\n    // We know that semesterIndex is always one short of the semesterNum\n    const semesterNum = semester.number, semesterIndex = semesterNum - 1;\n\n    semesters = semesters.filter(sem => sem.number !== semesterNum);\n\n    // for every semester whose number is beyond the semesterNum, decrement its number\n    for (let i = semesterIndex; i < semesters.length; i++)\n      semesters[i].number = semesters[i].number - 1;\n\n    this.setState({ semesters });\n  }\n\n  handleResetSemester = semester => {\n    var semesters = [...this.state.semesters], semester = { ...semester };\n    const semesterIndex = semester.number - 1;\n\n    semester.courses = semester.courses.map(course => {\n      [course.name, course.credit, course.markOver100, course.points, course.grade] = ['', 0, 0.0, 0.0, ''];\n      return course;\n    });\n    semester.gpa = 0.0;\n    semesters[semesterIndex] = semester;\n\n    this.setState({ semesters });\n  }\n\n  handleAddCourse = semester => {\n    var semesters = [...this.state.semesters];\n    var semester = { ...semester };\n    var semesterCourses = [...semester.courses];\n    const semesterIndex = semester.number - 1;\n\n    semesterCourses.push({\n      // new course's id is obtained by incrementing last course's id which is the number of courses\n      id: semesterCourses.length + 1,\n      name: '',\n      credit: 0,\n      markOver100: 0.0,\n      grade: '',\n    });\n    semester.courses = semesterCourses;\n    semesters[semesterIndex] = semester;\n\n    this.setState({ semesters });\n  }\n\n  handleDeleteCourse = (course, semester) => {\n    var semesters = [...this.state.semesters];\n    var semester = { ...semester };\n    var semesterCourses = [...semester.courses];\n    const courseIndex = course.id - 1, semesterIndex = semester.number - 1;\n\n    // Remove course from list of semester's courses\n    semesterCourses = semesterCourses.filter(semCourse => semCourse.id !== course.id);\n\n    // Reallocate ids(every course which comes after the deleted course's number is decremented)\n    for (let i = courseIndex; i < semesterCourses.length; i++)\n      semesterCourses[i].id = semesterCourses[i].id -1;\n\n    semester.courses = semesterCourses;\n    semester.gpa = this.calculateGPA(semester);\n    semesters[semesterIndex] = semester;\n\n    this.setState({ semesters });\n  }\n\n  render() {\n      const { semesters } = this.state;\n      const numSemesters = semesters.length;\n      const gpas = semesters.map(semester => semester.gpa);\n\n      return (\n      \t<>\n      \t\t<Heading />\n      \t\t<br />\n      \t\t<main>\n            {numSemesters === 1 ? <span>1 semester</span> : <span>{numSemesters} semesters</span>}\n          \t<div className=\"semester-list\">\n      \t\t\t  \t{semesters.map(\n      \t\t          semester =>\n      \t\t          \t<React.Fragment key={semester.number}>\n      \t\t\t            <Semester\n                           semester={semester}\n                           numSemesters={numSemesters}\n                           onInputChange={this.handleInputChange}\n                           onMarkOrCreditChange={this.handleMarkOrCreditChange}\n                           onDeleteSemester={this.handleDeleteSemester}\n                           onResetSemester={this.handleResetSemester}\n                           onAddCourse={this.handleAddCourse}\n                           onDeleteCourse={this.handleDeleteCourse}\n      \t\t              />\n                        <br />\n                        <br />\n      \t              </React.Fragment>\n      \t\t        )}\n              <Button\n                style={{\n                  border: '2px solid rgba(144, 144, 144, 0.4)',\n                  width: '100%',\n                  justifyContent: 'left',\n                  paddingLeft: '1rem',\n                }}\n                color=\"primary\"\n                onClick={this.handleAddSemester}\n                startIcon={<AddCircleOutlineIcon />}\n                >\n                Add a semester\n              </Button>\n  \t        </div>\n            <br />\n            <FinalResult gpas={gpas} semesters={semesters} />\n      \t\t</main>\n        </>\n      );\n  }\n}\n\nexport default GPACalculator;\n"]},"metadata":{},"sourceType":"module"}