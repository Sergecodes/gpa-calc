{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/pages/index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import { Suspense } from 'react';\nimport React from 'react'; // import LanguageSelector from \"../components/LanguageSelector.jsx\";\n\nimport Heading from \"../components/Heading.jsx\";\nimport Semester from \"../components/Semester.jsx\";\nimport { nanoid } from 'nanoid';\nconst INITIAL_COURSES = [{\n  id: '1',\n  name: '',\n  credit: '',\n  marksOver100: '',\n  grade: '-'\n}, {\n  id: '2',\n  name: '',\n  credit: '',\n  marksOver100: '',\n  grade: '-'\n}, {\n  id: '3',\n  name: '',\n  credit: '',\n  marksOver100: '',\n  grade: '-'\n}];\n\nclass GPACalculator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"addSemester\", () => {\n      var semesters = [...this.state.semesters];\n      var semesterNum,\n          numSemesters = semesters.length;\n      if (numSemesters !== 0) semesterNum = parseInt(semesters[numSemesters - 1].number) + 1;else semesterNum = 1;\n      semesters.push({\n        number: semesterNum.toString(),\n        gpa: '-',\n        courses: INITIAL_COURSES\n      });\n      this.setState({\n        semesters\n      });\n      /*\n      this.setState(prevState => ({\n          semesters: [\n            ...prevState.semesters,\n            {\n                number: (semesterNum).toString(),\n                gpa: '-',\n                courses: INITIAL_COURSES\n            }\n          ]\n      }));\n      */\n    });\n\n    _defineProperty(this, \"handleInputChange\", (event, course, semester) => {\n      /* - get list of courses of given semester\n        - get course from courses (remove course)\n        - update course info\n        - place course back into courses\n        - get list of semesters, remove semester, update semester's courses info,\n        - set new state thus: .*/\n      const {\n        name,\n        value\n      } = event.target;\n      var semesters = [...this.state.semesters],\n          semesterCourses = [...semester.courses];\n\n      var course = _objectSpread({}, course);\n\n      course[name] = value; // ex. if course had id 1 (first course in semester i.e semester.courses[0]), insert in position 0\n\n      semesterCourses.splice(parseInt(course.id) - 1, 1, course);\n      semester.courses = [...semesterCourses];\n      semesters.splice(parseInt(semester.number) - 1, 1, semester);\n      this.setState({\n        semesters\n      }); // this.setState(prevState => ({\n      //   semesters // equivalent to semesters: semesters\n      // }), );\n    });\n\n    this.state = {\n      semesters: [{\n        number: '1',\n        // one semester initially\n        gpa: '-',\n        courses: INITIAL_COURSES\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Semesters: \", this.state.semesters.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.state.semesters.length, \" semester(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"semester-list\",\n          children: [this.state.semesters.map(semester => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Semester // key={nanoid()}\n            , {\n              number: semester.number,\n              gpa: semester.gpa,\n              courses: semester.courses,\n              semester: semester,\n              handleInputChange: this.handleInputChange // removeSemester={this.removeSemester}\n              // handleInfoChange={this.handleInfoChange}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this)]\n          }, semester.number, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 22\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.addSemester,\n            children: \"Add a Semester\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default GPACalculator;","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/pages/index.jsx"],"names":["React","Heading","Semester","nanoid","INITIAL_COURSES","id","name","credit","marksOver100","grade","GPACalculator","Component","constructor","props","semesters","state","semesterNum","numSemesters","length","parseInt","number","push","toString","gpa","courses","setState","event","course","semester","value","target","semesterCourses","splice","render","map","handleInputChange","addSemester"],"mappings":"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","sourcesContent":["// import { Suspense } from 'react';\nimport React from 'react';\n// import LanguageSelector from \"../components/LanguageSelector.jsx\";\nimport Heading from \"../components/Heading.jsx\";\nimport Semester from \"../components/Semester.jsx\";\nimport { nanoid } from 'nanoid';\n\nconst INITIAL_COURSES = [{\n  id: '1',\n  name: '',\n  credit: '',\n  marksOver100: '',\n  grade: '-',\n}, {\n  id: '2',\n  name: '',\n  credit: '',\n  marksOver100: '',\n  grade: '-',\n}, {\n  id: '3',\n  name: '',\n  credit: '',\n  marksOver100: '',\n  grade: '-',\n}];\n\nclass GPACalculator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      semesters: [\n        {\n          number: '1',  // one semester initially\n          gpa: '-',\n          courses: INITIAL_COURSES\n        }\n      ]\n    }\n\n  }\n\n  addSemester = () => {\n    var semesters = [...this.state.semesters];\n    var semesterNum, numSemesters = semesters.length;\n\n    if (numSemesters !== 0)\n        semesterNum = parseInt(semesters[numSemesters-1].number) + 1;\n    else\n        semesterNum = 1;\n    semesters.push(\n      {\n          number: (semesterNum).toString(),\n          gpa: '-',\n          courses: INITIAL_COURSES\n      }\n    );\n    this.setState({ semesters });\n    /*\n    this.setState(prevState => ({\n        semesters: [\n          ...prevState.semesters,\n          {\n              number: (semesterNum).toString(),\n              gpa: '-',\n              courses: INITIAL_COURSES\n          }\n        ]\n    }));\n    */\n  }\n\n  handleInputChange = (event, course, semester) => {\n    /* - get list of courses of given semester\n      - get course from courses (remove course)\n      - update course info\n      - place course back into courses\n      - get list of semesters, remove semester, update semester's courses info,\n      - set new state thus: .*/\n    const { name, value } = event.target;\n    var semesters = [...this.state.semesters], semesterCourses = [...semester.courses];\n    var course = { ...course };\n    course[name] = value;\n\n    // ex. if course had id 1 (first course in semester i.e semester.courses[0]), insert in position 0\n    semesterCourses.splice(parseInt(course.id)-1, 1, course);\n    semester.courses = [...semesterCourses];\n\n    semesters.splice(parseInt(semester.number)-1, 1, semester);\n    this.setState({ semesters });\n    // this.setState(prevState => ({\n    //   semesters // equivalent to semesters: semesters\n    // }), );\n  }\n\n  render() {\n      return (\n      \t<>\n          <p>Semesters: {this.state.semesters.length}</p>\n      \t\t<Heading />\n      \t\t<br />\n      \t\t<main>\n              <p>{this.state.semesters.length} semester(s)</p>\n              \t<div className=\"semester-list\">\n        \t\t\t  \t{this.state.semesters.map(\n        \t\t          semester =>\n        \t\t          \t<React.Fragment key={semester.number}>\n        \t\t\t            <Semester\n                             // key={nanoid()}\n          \t\t        \t\t   number={semester.number}\n          \t\t        \t\t   gpa={semester.gpa}\n                             courses={semester.courses}\n                             semester={semester}\n                             handleInputChange={this.handleInputChange}\n                             // removeSemester={this.removeSemester}\n                             // handleInfoChange={this.handleInfoChange}\n        \t\t              />\n        \t\t              <br />\n                          {// <button onClick={()  => removeSemester(semester.number)}>Remove Semester</button>\n                          }\n        \t              </React.Fragment>\n        \t\t        )}\n    \t        \t<button onClick={this.addSemester}>Add a Semester</button>\n\n    \t        </div>\n      \t\t</main>\n        </>\n      );\n  }\n}\n\nexport default GPACalculator;\n"]},"metadata":{},"sourceType":"module"}