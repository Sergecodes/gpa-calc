{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/components/DownloadResults.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Modal from '@material-ui/core/Modal';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { saveAs } from 'file-saver';\nimport domtoimage from 'dom-to-image';\n\nconst filter = node => {\n  if (node.classList !== undefined) {\n    // node.classList is a DOMTokenList and it doesn't have the array \"includes\" method but rather a \"contains\" method\n    if (node.classList.contains('semester-actions') || node.classList.contains('delete-cell')) return false;\n\n    if (node.classList.contains('MuiTextField-root')) {\n      var inputValue = node.childNodes[0].childNodes[0].value;\n      node.childNodes.forEach(child => child.remove());\n      node.textContent = inputValue;\n    }\n  }\n\n  if (node.tagName === \"BUTTON\" || node.tagName === \"button\") return false;\n  return true;\n};\n\nconst generateImage = () => {\n  var img = new Image(); // var img = React.createElement(\"img\", {}, null);\n\n  var node = document.getElementById('semester-list');\n  domtoimage.toPng(node, {\n    filter: filter\n  }).then(function (dataUrl) {\n    img.src = dataUrl;\n    img.id = 'results-image';\n    img.setAttribute('alt', 'Semester results');\n  }).catch(function (error) {\n    alert(\"An error occurred during the generation of the image.\");\n    console.error('oopss', error);\n  });\n  return img;\n};\n\nexport default class DownloadResults extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"handleOpen\", () => {\n      this.image = generateImage();\n      const $this = this;\n\n      this.image.onload = function () {\n        $this.setState({\n          open: true\n        });\n      };\n    });\n\n    _defineProperty(this, \"handleClose\", () => {\n      this.setState({\n        open: false\n      });\n    });\n\n    this.image = null;\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    const image = this.image;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"download-results\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => this.handleOpen(),\n        startIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 22\n        }, this),\n        children: \"Download results as image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: this.state.open,\n        onClose: () => this.handleClose(),\n        \"aria-label\": \"Semester results modal image\",\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'row-reverse'\n        },\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"Close modal\",\n            onClick: () => this.handleClose(),\n            component: \"span\",\n            style: {\n              alignSelf: 'start',\n              color: 'ghostwhite',\n              marginLeft: '3rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), image !== null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: image.src,\n              alt: image.alt,\n              id: image.id,\n              style: {\n                width: '70%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: image.src,\n              download: \"results.png\",\n              style: {\n                alignSelf: 'end',\n                position: 'relative',\n                bottom: '1rem',\n                left: '7rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => this.handleClose(),\n                style: {\n                  color: 'coral',\n                  backgroundColor: 'whitesmoke'\n                },\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/components/DownloadResults.jsx"],"names":["React","Button","GetAppIcon","Modal","CloseIcon","IconButton","saveAs","domtoimage","filter","node","classList","undefined","contains","inputValue","childNodes","value","forEach","child","remove","textContent","tagName","generateImage","img","Image","document","getElementById","toPng","then","dataUrl","src","id","setAttribute","catch","error","alert","console","DownloadResults","Component","constructor","image","$this","onload","setState","open","state","render","handleOpen","handleClose","display","justifyContent","flexDirection","alignSelf","color","marginLeft","alt","width","position","bottom","left","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Modal from '@material-ui/core/Modal';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { saveAs } from 'file-saver';\nimport domtoimage from 'dom-to-image';\n\n\nconst filter = node => {\n  if (node.classList !== undefined) {\n    // node.classList is a DOMTokenList and it doesn't have the array \"includes\" method but rather a \"contains\" method\n    if (node.classList.contains('semester-actions') || node.classList.contains('delete-cell'))\n      return false;\n\n    if (node.classList.contains('MuiTextField-root')) {\n      var inputValue = node.childNodes[0].childNodes[0].value;\n      node.childNodes.forEach(child => child.remove());\n      node.textContent = inputValue;\n    }\n  }\n\n  if (node.tagName === \"BUTTON\" || node.tagName === \"button\")\n    return false;\n\n  return true;\n}\n\nconst generateImage = () => {\n  var img = new Image();\n  // var img = React.createElement(\"img\", {}, null);\n  var node = document.getElementById('semester-list');\n\n  domtoimage.toPng(node, {filter: filter})\n    .then(function (dataUrl) {\n      img.src = dataUrl;\n      img.id = 'results-image';\n      img.setAttribute('alt', 'Semester results');\n    })\n    .catch(function (error) {\n      alert(\"An error occurred during the generation of the image.\");\n      console.error('oopss', error);\n    });\n\n  return img;\n};\n\n\nexport default class DownloadResults extends React.Component {\n  constructor() {\n    super();\n\n    this.image = null;\n    this.state = {\n      open: false,\n    };\n  }\n\n  handleOpen = () => {\n    this.image = generateImage();\n    const $this = this;\n\n    this.image.onload = function () {\n      $this.setState({\n        open: true\n      });\n    }\n\n  };\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    });\n  };\n\n  render() {\n    const image = this.image;\n\n    return (\n      <div id=\"download-results\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.handleOpen()}\n          startIcon={<GetAppIcon />}\n        >\n          Download results as image\n        </Button>\n        <Modal\n          open={this.state.open}\n          onClose={() => this.handleClose()}\n          aria-label=\"Semester results modal image\"\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'row-reverse'\n          }}\n        >\n          <>\n            <IconButton\n              aria-label=\"Close modal\"\n              onClick={() => this.handleClose()}\n              component=\"span\"\n              style={{alignSelf: 'start', color: 'ghostwhite', marginLeft: '3rem'}}\n            >\n              <CloseIcon />\n            </IconButton>\n            {image !== null ?\n              <>\n                <img\n                  src={image.src}\n                  alt={image.alt}\n                  id={image.id}\n                  style={{width: '70%'}}\n                />\n                <a\n                  href={image.src}\n                  download=\"results.png\"\n                  style={{\n                    alignSelf: 'end',\n                    position: 'relative',\n                    bottom: '1rem',\n                    left: '7rem'\n                  }}\n                >\n                  <Button\n                    variant=\"contained\"\n                    onClick={() => this.handleClose()}\n                    style={{color: 'coral', backgroundColor: 'whitesmoke'}}\n                  >\n                    Download\n                  </Button>\n                </a>\n              </>\n              : null\n            }\n          </>\n        </Modal>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}