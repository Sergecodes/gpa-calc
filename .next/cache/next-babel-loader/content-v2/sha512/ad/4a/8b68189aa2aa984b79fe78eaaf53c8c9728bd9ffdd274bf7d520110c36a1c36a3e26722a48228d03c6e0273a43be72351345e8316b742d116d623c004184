{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/components/DownloadPDF.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Button, Modal, IconButton } from '@material-ui/core';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { PDFDownloadLink, Page, Text, View, Image, Document, StyleSheet, PDFViewer } from '@react-pdf/renderer';\nimport ReactPDF from '@react-pdf/renderer';\nimport { generateImage } from '../components/DownloadImage.jsx';\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'row',\n    backgroundColor: '#eee'\n  }\n});\nexport default class DownloadPDF extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"MyDoc\", () => /*#__PURE__*/_jsxDEV(Document, {\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        size: \"A4\",\n        style: _objectSpread(_objectSpread({}, styles.page), {}, {\n          textAlign: 'center'\n        }),\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: this.image.src,\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this));\n\n    _defineProperty(this, \"handleClose\", () => {\n      var node = document.getElementById(`semester-${this.semesterNum} clone`);\n      node.style.display = \"none\";\n      this.setState({\n        open: false\n      });\n    });\n\n    _defineProperty(this, \"handleOpen\", () => {\n      this.image = generateImage(this.semesterNum);\n      const $this = this; // preserve the *this* object.\n\n      this.image.onload = function () {\n        // *this* here will be undefined ?(arrow function) so use $this\n        // console.log($this.image);\n        $this.setState({\n          open: true\n        });\n      };\n    });\n\n    this.image = null;\n    this.semesterNum = props.semesterNum;\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => this.handleOpen() // startIcon={<GetAppIcon />}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: '.5rem'\n          },\n          children: \"PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: this.state.open,\n        onClose: () => this.handleClose(),\n        \"aria-label\": `Semester ${this.semesterNum} results pdf modal`,\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'row-reverse'\n        },\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"Close modal\",\n            onClick: () => this.handleClose(),\n            component: \"span\",\n            style: {\n              alignSelf: 'start',\n              color: 'ghostwhite',\n              marginLeft: '3rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), this.image !== null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(PDFViewer, {\n              style: {\n                width: '70%',\n                marginLeft: '3rem'\n              },\n              children: this.MyDoc()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"contained\",\n              onClick: () => this.handleClose(),\n              style: {\n                alignSelf: 'end',\n                position: 'relative',\n                bottom: '2rem',\n                left: '2rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(PDFDownloadLink, {\n                document: this.MyDoc(),\n                fileName: `Semester ${this.semesterNum} results.pdf`,\n                style: {\n                  textDecoration: 'none',\n                  color: 'midnightblue'\n                },\n                children: ({\n                  blob,\n                  url,\n                  loading,\n                  error\n                }) => loading ? 'Loading...' : 'Download'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/components/DownloadPDF.jsx"],"names":["React","Button","Modal","IconButton","GetAppIcon","CloseIcon","PDFDownloadLink","Page","Text","View","Image","Document","StyleSheet","PDFViewer","ReactPDF","generateImage","styles","create","page","flexDirection","backgroundColor","DownloadPDF","PureComponent","constructor","props","textAlign","image","src","width","node","document","getElementById","semesterNum","style","display","setState","open","$this","onload","state","render","handleOpen","marginRight","handleClose","justifyContent","alignSelf","color","marginLeft","MyDoc","position","bottom","left","textDecoration","blob","url","loading","error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Modal, IconButton } from '@material-ui/core';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { PDFDownloadLink, Page, Text, View, Image, Document, StyleSheet, PDFViewer } from '@react-pdf/renderer';\nimport ReactPDF from '@react-pdf/renderer';\nimport { generateImage } from '../components/DownloadImage.jsx';\n\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'row',\n    backgroundColor: '#eee'\n  }\n});\n\n\nexport default class DownloadPDF extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.image = null;\n    this.semesterNum = props.semesterNum;\n    this.state = {\n      open: false,\n    };\n  }\n\n  MyDoc = () => (\n    <Document>\n      <Page size=\"A4\" style={{...styles.page, textAlign: 'center'}}>\n        <Image\n          src={this.image.src}\n          style={{width: '100%'}}\n        />\n      </Page>\n    </Document>\n  );\n\n  handleClose = () => {\n    var node = document.getElementById(`semester-${this.semesterNum} clone`);\n    node.style.display = \"none\";\n\n    this.setState({\n      open: false\n    });\n  }\n\n  handleOpen = () => {\n    this.image = generateImage(this.semesterNum);\n\n    const $this = this;  // preserve the *this* object.\n\n    this.image.onload = function () {\n      // *this* here will be undefined ?(arrow function) so use $this\n      // console.log($this.image);\n      $this.setState({\n        open: true\n      });\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.handleOpen()}\n          // startIcon={<GetAppIcon />}\n        >\n          <span style={{marginRight: '.5rem'}}>PDF</span>\n          <GetAppIcon />\n        </Button>\n        <Modal\n          open={this.state.open}\n          onClose={() => this.handleClose()}\n          aria-label={`Semester ${this.semesterNum} results pdf modal`}\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'row-reverse'\n          }}\n        >\n          <>\n            <IconButton\n              aria-label=\"Close modal\"\n              onClick={() => this.handleClose()}\n              component=\"span\"\n              style={{alignSelf: 'start', color: 'ghostwhite', marginLeft: '3rem'}}\n            >\n              <CloseIcon />\n            </IconButton>\n            {this.image !== null ?\n              <>\n                <PDFViewer style={{width: '70%', marginLeft: '3rem'}}>\n                  {this.MyDoc()}\n                </PDFViewer>\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  onClick={() => this.handleClose()}\n                  style={{\n                    alignSelf: 'end',\n                    position: 'relative',\n                    bottom: '2rem',\n                    left: '2rem'\n                  }}\n                >\n                  <PDFDownloadLink\n                    document={this.MyDoc()}\n                    fileName={`Semester ${this.semesterNum} results.pdf`}\n                    style={{textDecoration: 'none', color: 'midnightblue'}}\n                  >\n                      {({ blob, url, loading, error }) =>\n                        loading ? 'Loading...' : 'Download'\n                      }\n                  </PDFDownloadLink>\n                </Button>\n              </>\n              : null\n            }\n          </>\n        </Modal>\n      </>\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}