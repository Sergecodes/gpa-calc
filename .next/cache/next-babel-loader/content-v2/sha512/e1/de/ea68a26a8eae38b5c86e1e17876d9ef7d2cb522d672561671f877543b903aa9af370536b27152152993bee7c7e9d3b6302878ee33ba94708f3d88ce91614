{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/pages/index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import { Suspense } from 'react';\nimport React from 'react'; // import LanguageSelector from \"../components/LanguageSelector.jsx\";\n\nimport Heading from \"../components/Heading.jsx\";\nimport Semester from \"../components/Semester.jsx\"; // import { nanoid } from 'nanoid';\n\nconst INITIAL_COURSES = [{\n  id: '1',\n  name: '',\n  credit: '',\n  marksOver100: '',\n  grade: '-'\n}, {\n  id: '2',\n  name: '',\n  credit: '',\n  marksOver100: '',\n  grade: '-'\n}, {\n  id: '3',\n  name: '',\n  credit: '',\n  marksOver100: '',\n  grade: '-'\n}];\n\nclass GPACalculator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleInputChange\", (event, course, semester) => {\n      /* - get list of courses of given semester\n        - get course from courses (remove course)\n        - update course info\n        - place course back into courses\n        - get list of semesters, remove semester, update semester's courses info,\n        - set new state thus: .*/\n      const {\n        name,\n        value\n      } = event.target;\n      var semesters = [...this.state.semesters],\n          semesterCourses = [...semester.courses];\n\n      var course = _objectSpread({}, course);\n\n      course[name] = value; // ex. if course had id 1 (first course in semester i.e semester.courses[0]), insert in position 0\n\n      semesterCourses.splice(parseInt(course.id) - 1, 1, course);\n      semester.courses = [...semesterCourses];\n      semesters.splice(parseInt(semester.number) - 1, 1, semester);\n      this.setState({\n        semesters\n      }); // this.setState(prevState => ({\n      //   semesters // equivalent to semesters: semesters\n      // }), );\n    });\n\n    _defineProperty(this, \"addSemester\", () => {\n      var semesters = [...this.state.semesters],\n          numSemesters = semesters.length; // New semester's number is obtained by incrementing last semester's number\n\n      var semesterNum = parseInt(semesters[numSemesters - 1].number) + 1;\n      semesters.push({\n        number: semesterNum.toString(),\n        gpa: '-',\n        courses: INITIAL_COURSES\n      });\n      this.setState({\n        semesters\n      });\n      /*\n      this.setState(prevState => ({\n          semesters: [\n            ...prevState.semesters,\n            {\n                number: (semesterNum).toString(),\n                gpa: '-',\n                courses: INITIAL_COURSES\n            }\n          ]\n      }));\n      */\n    });\n\n    _defineProperty(this, \"deleteSemester\", () => {// TODO: number of semesters should never reach 0. in semester delete form, if number of semesters is 0,\n      // hide the delete button.\n      // was in add semester func: numSemesters === 0 ? semesterNum = 1 : semesterNum = parseInt(semesters[numSemesters-1].number) + 1;\n    });\n\n    console.log(\"semesters rendered\");\n    this.state = {\n      semesters: [{\n        number: '1',\n        // one semester initially\n        gpa: '-',\n        courses: INITIAL_COURSES\n      }]\n    };\n  }\n\n  render() {\n    const {\n      semesters\n    } = this.state;\n    const numSemesters = semesters.length;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [numSemesters === 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"1 semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 35\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [numSemesters, \" semesters\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 61\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"semester-list\",\n          children: [semesters.map(semester => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Semester // key={nanoid()}\n            , {\n              number: semester.number,\n              gpa: semester.gpa,\n              courses: semester.courses,\n              semester: semester,\n              handleInputChange: this.handleInputChange // removeSemester={this.removeSemester}\n              // handleInfoChange={this.handleInfoChange}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 23\n            }, this)]\n          }, semester.number, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 20\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.addSemester,\n            children: \"Add a Semester\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default GPACalculator;","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/pages/index.jsx"],"names":["React","Heading","Semester","INITIAL_COURSES","id","name","credit","marksOver100","grade","GPACalculator","Component","constructor","props","event","course","semester","value","target","semesters","state","semesterCourses","courses","splice","parseInt","number","setState","numSemesters","length","semesterNum","push","toString","gpa","console","log","render","map","handleInputChange","addSemester"],"mappings":"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","sourcesContent":["// import { Suspense } from 'react';\nimport React from 'react';\n// import LanguageSelector from \"../components/LanguageSelector.jsx\";\nimport Heading from \"../components/Heading.jsx\";\nimport Semester from \"../components/Semester.jsx\";\n// import { nanoid } from 'nanoid';\n\nconst INITIAL_COURSES = [{\n  id: '1',\n  name: '',\n  credit: '',\n  marksOver100: '',\n  grade: '-',\n}, {\n  id: '2',\n  name: '',\n  credit: '',\n  marksOver100: '',\n  grade: '-',\n}, {\n  id: '3',\n  name: '',\n  credit: '',\n  marksOver100: '',\n  grade: '-',\n}];\n\nclass GPACalculator extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"semesters rendered\");\n\n    this.state = {\n      semesters: [{\n        number: '1',  // one semester initially\n        gpa: '-',\n        courses: INITIAL_COURSES\n      }, ]\n    }\n  }\n\n  handleInputChange = (event, course, semester) => {\n    /* - get list of courses of given semester\n      - get course from courses (remove course)\n      - update course info\n      - place course back into courses\n      - get list of semesters, remove semester, update semester's courses info,\n      - set new state thus: .*/\n    const { name, value } = event.target;\n    var semesters = [...this.state.semesters], semesterCourses = [...semester.courses];\n    var course = { ...course };\n    course[name] = value;\n\n    // ex. if course had id 1 (first course in semester i.e semester.courses[0]), insert in position 0\n    semesterCourses.splice(parseInt(course.id)-1, 1, course);\n    semester.courses = [...semesterCourses];\n\n    semesters.splice(parseInt(semester.number)-1, 1, semester);\n    this.setState({ semesters });\n    // this.setState(prevState => ({\n    //   semesters // equivalent to semesters: semesters\n    // }), );\n  }\n\n  addSemester = () => {\n    var semesters = [...this.state.semesters], numSemesters = semesters.length;\n    // New semester's number is obtained by incrementing last semester's number\n    var semesterNum = parseInt(semesters[numSemesters-1].number) + 1;\n    semesters.push(\n      {\n          number: semesterNum.toString(),\n          gpa: '-',\n          courses: INITIAL_COURSES\n      }\n    );\n    this.setState({ semesters });\n    /*\n    this.setState(prevState => ({\n        semesters: [\n          ...prevState.semesters,\n          {\n              number: (semesterNum).toString(),\n              gpa: '-',\n              courses: INITIAL_COURSES\n          }\n        ]\n    }));\n    */\n  }\n\n  deleteSemester = () => {\n    // TODO: number of semesters should never reach 0. in semester delete form, if number of semesters is 0,\n    // hide the delete button.\n    // was in add semester func: numSemesters === 0 ? semesterNum = 1 : semesterNum = parseInt(semesters[numSemesters-1].number) + 1;\n  }\n\n  render() {\n      const { semesters } = this.state;\n      const numSemesters = semesters.length;\n      return (\n      \t<>\n      \t\t<Heading />\n      \t\t<br />\n      \t\t<main>\n            {numSemesters === 1 ? <span>1 semester</span> : <span>{numSemesters} semesters</span>}\n          \t<div className=\"semester-list\">\n      \t\t\t  \t{semesters.map(\n      \t\t          semester =>\n      \t\t          \t<React.Fragment key={semester.number}>\n      \t\t\t            <Semester\n                           // key={nanoid()}\n        \t\t        \t\t   number={semester.number}\n        \t\t        \t\t   gpa={semester.gpa}\n                           courses={semester.courses}\n                           semester={semester}\n                           handleInputChange={this.handleInputChange}\n                           // removeSemester={this.removeSemester}\n                           // handleInfoChange={this.handleInfoChange}\n      \t\t              />\n      \t\t              <br />\n                        {// <button onClick={()  => removeSemester(semester.number)}>Remove Semester</button>\n                        }\n      \t              </React.Fragment>\n      \t\t        )}\n  \t        \t<button onClick={this.addSemester}>Add a Semester</button>\n\n  \t        </div>\n      \t\t</main>\n        </>\n      );\n  }\n}\n\nexport default GPACalculator;\n"]},"metadata":{},"sourceType":"module"}