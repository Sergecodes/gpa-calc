{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/pages/index.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import { Suspense } from 'react';\nimport React from 'react'; // import LanguageSelector from \"../components/LanguageSelector.jsx\";\n\nimport Heading from \"../components/Heading.jsx\";\nimport Semester from \"../components/Semester.jsx\";\nimport { nanoid } from 'nanoid';\n\nclass GPACalculator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"addSemester\", () => {\n      var semesters = this.state.semesters;\n      var semesterNum,\n          numSemesters = semesters.length;\n      if (numSemesters !== 0) semesterNum = parseInt(semesters[numSemesters - 1].number) + 1;else semesterNum = 1;\n      this.setState(prevState => ({\n        semesters: [...prevState.semesters, {\n          number: semesterNum.toString(),\n          gpa: '-',\n          courses: this.initialCourses\n        }]\n      }));\n    });\n\n    _defineProperty(this, \"handleInputChange\", (event, course, semester) => {\n      /* - get list of courses of given semester\n        - get course from courses (remove course)\n        - update course info\n        - place course back into courses\n        - get list of semesters, remove semester, update semester's courses info,\n        - set new state thus: .*/\n      const {\n        name,\n        value\n      } = event.target;\n      var semesters = this.state.semesters;\n      var semesterCourses = semester.courses; // remove course from list of semester's courses\n\n      newSemesterCourses = semesterCourses.filter(semCourse => semCourse.id !== course.id); // change *name* attribute of course to *value*\n\n      course[`${name}`] = value; // ex. if course had id 1 (first course in semester i.e semester.courses[0]), insert in position 0\n\n      newSemesterCourses.splice(parseInt(course.id) - 1, 0, course);\n      var newSemesters = semesters.filter(sem => sem.number !== semester.number);\n      semester.courses = newSemesterCourses;\n      semesters.splice(parseInt(semester.number) - 1, 0, semester);\n      this.setState(prevState => ({\n        semesters: semesters\n      }));\n    });\n\n    this.initialCourses = [{\n      id: '1',\n      name: '',\n      credit: '',\n      marksOver100: '',\n      grade: '-'\n    }, {\n      id: '2',\n      name: '',\n      credit: '',\n      marksOver100: '',\n      grade: '-'\n    }, {\n      id: '3',\n      name: '',\n      credit: '',\n      marksOver100: '',\n      grade: '-'\n    }];\n    this.state = {\n      semesters: [{\n        number: '1',\n        // one semester initially\n        gpa: '-',\n        courses: this.initialCourses\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Semesters: \", this.state.semesters.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.state.semesters.length, \" semester(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"semester-list\",\n          children: [this.state.semesters.map(semester => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Semester, {\n              number: semester.number,\n              gpa: semester.gpa,\n              courses: semester.courses,\n              semester: semester,\n              handleInputChange: this.handleInputChange // removeSemester={this.removeSemester}\n              // handleInfoChange={this.handleInfoChange}\n\n            }, semester.number, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.addSemester,\n            children: \"Add a Semester\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default GPACalculator;","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/pages/index.jsx"],"names":["React","Heading","Semester","nanoid","GPACalculator","Component","constructor","props","semesters","state","semesterNum","numSemesters","length","parseInt","number","setState","prevState","toString","gpa","courses","initialCourses","event","course","semester","name","value","target","semesterCourses","newSemesterCourses","filter","semCourse","id","splice","newSemesters","sem","credit","marksOver100","grade","render","map","handleInputChange","addSemester"],"mappings":"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","sourcesContent":["// import { Suspense } from 'react';\nimport React from 'react';\n// import LanguageSelector from \"../components/LanguageSelector.jsx\";\nimport Heading from \"../components/Heading.jsx\";\nimport Semester from \"../components/Semester.jsx\";\nimport { nanoid } from 'nanoid';\n\nclass GPACalculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialCourses = [{\n      id: '1',\n      name: '',\n      credit: '',\n      marksOver100: '',\n      grade: '-',\n    }, {\n      id: '2',\n      name: '',\n      credit: '',\n      marksOver100: '',\n      grade: '-',\n    }, {\n      id: '3',\n      name: '',\n      credit: '',\n      marksOver100: '',\n      grade: '-',\n    }];\n\n    this.state = {\n      semesters: [\n        {\n          number: '1',  // one semester initially\n          gpa: '-',\n          courses: this.initialCourses\n        }\n      ]\n    }\n\n  }\n\n  addSemester = () => {\n    var semesters = this.state.semesters;\n    var semesterNum, numSemesters = semesters.length;\n\n    if (numSemesters !== 0)\n        semesterNum = parseInt(semesters[numSemesters-1].number) + 1;\n    else\n        semesterNum = 1;\n\n    this.setState(prevState => ({\n        semesters: [\n          ...prevState.semesters,\n          {\n              number: (semesterNum).toString(),\n              gpa: '-',\n              courses: this.initialCourses\n          }\n        ]\n    }));\n\n  }\n\n  handleInputChange = (event, course, semester) => {\n    /* - get list of courses of given semester\n      - get course from courses (remove course)\n      - update course info\n      - place course back into courses\n      - get list of semesters, remove semester, update semester's courses info,\n      - set new state thus: .*/\n    const { name, value } = event.target;\n    var semesters = this.state.semesters;\n    var semesterCourses = semester.courses;\n\n    // remove course from list of semester's courses\n    newSemesterCourses = semesterCourses.filter(semCourse => semCourse.id !== course.id);\n\n    // change *name* attribute of course to *value*\n    course[`${name}`] = value;\n\n    // ex. if course had id 1 (first course in semester i.e semester.courses[0]), insert in position 0\n    newSemesterCourses.splice(parseInt(course.id)-1, 0, course);\n\n    var newSemesters = semesters.filter(sem => sem.number !== semester.number);\n    semester.courses = newSemesterCourses;\n    semesters.splice(parseInt(semester.number)-1, 0, semester);\n\n    this.setState(prevState => ({\n      semesters: semesters\n    }));\n  }\n\n  render() {\n      return (\n      \t<>\n          <p>Semesters: {this.state.semesters.length}</p>\n      \t\t<Heading />\n      \t\t<br />\n      \t\t<main>\n              <p>{this.state.semesters.length} semester(s)</p>\n              \t<div className=\"semester-list\">\n        \t\t\t  \t{this.state.semesters.map(\n        \t\t          semester =>\n        \t\t          \t<>\n        \t\t\t            <Semester\n                             key={semester.number}\n          \t\t        \t\t   number={semester.number}\n          \t\t        \t\t   gpa={semester.gpa}\n                             courses={semester.courses}\n                             semester={semester}\n                             handleInputChange={this.handleInputChange}\n                             // removeSemester={this.removeSemester}\n                             // handleInfoChange={this.handleInfoChange}\n        \t\t              />\n        \t\t              <br />\n                          {// <button onClick={()  => removeSemester(semester.number)}>Remove Semester</button>\n                          }\n        \t              </>\n        \t\t        )}\n    \t        \t<button onClick={this.addSemester}>Add a Semester</button>\n\n    \t        </div>\n      \t\t</main>\n        </>\n      );\n  }\n}\n\nexport default GPACalculator;\n"]},"metadata":{},"sourceType":"module"}