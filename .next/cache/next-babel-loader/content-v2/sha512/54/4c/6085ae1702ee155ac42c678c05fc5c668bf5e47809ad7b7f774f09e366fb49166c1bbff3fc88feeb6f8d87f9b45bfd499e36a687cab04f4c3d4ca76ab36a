{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/pages/index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// import { Suspense } from 'react';\nimport React from 'react'; // import LanguageSelector from \"../components/LanguageSelector.jsx\";\n\nimport Heading from \"../components/Heading.jsx\";\nimport Semester from \"../components/Semester.jsx\"; // import { nanoid } from 'nanoid';\n\nvar INITIAL_COURSES = [{\n  id: '1',\n  name: '',\n  credit: '',\n  marksOver100: '',\n  grade: '-'\n}, {\n  id: '2',\n  name: '',\n  credit: '',\n  marksOver100: '',\n  grade: '-'\n}, {\n  id: '3',\n  name: '',\n  credit: '',\n  marksOver100: '',\n  grade: '-'\n}];\n\nvar GPACalculator = /*#__PURE__*/function (_React$Component) {\n  _inherits(GPACalculator, _React$Component);\n\n  var _super = _createSuper(GPACalculator);\n\n  function GPACalculator(props) {\n    var _this;\n\n    _classCallCheck(this, GPACalculator);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInputChange\", function (event, course, semester) {\n      /* - get list of courses of given semester\n        - get course from courses (remove course)\n        - update course info\n        - place course back into courses\n        - get list of semesters, remove semester, update semester's courses info,\n        - set new state thus: .*/\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      var semesters = _toConsumableArray(_this.state.semesters),\n          semesterCourses = _toConsumableArray(semester.courses);\n\n      var course = _objectSpread({}, course);\n\n      course[name] = value; // ex. if course had id 1 (first course in semester i.e semester.courses[0]), insert in position 0\n\n      semesterCourses.splice(parseInt(course.id) - 1, 1, course);\n      semester.courses = _toConsumableArray(semesterCourses);\n      semesters.splice(parseInt(semester.number) - 1, 1, semester);\n\n      _this.setState({\n        semesters: semesters\n      }); // this.setState(prevState => ({\n      //   semesters // equivalent to semesters: semesters\n      // }), );\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addSemester\", function () {\n      var semesters = _toConsumableArray(_this.state.semesters),\n          numSemesters = semesters.length; // New semester's number is obtained by incrementing last semester's number\n\n\n      var semesterNum = parseInt(semesters[numSemesters - 1].number) + 1;\n      semesters.push({\n        number: semesterNum.toString(),\n        gpa: '-',\n        courses: INITIAL_COURSES\n      });\n\n      _this.setState({\n        semesters: semesters\n      });\n      /*\n      this.setState(prevState => ({\n          semesters: [\n            ...prevState.semesters,\n            {\n                number: (semesterNum).toString(),\n                gpa: '-',\n                courses: INITIAL_COURSES\n            }\n          ]\n      }));\n      */\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteSemester\", function () {// TODO: number of semesters should never reach 0. in semester delete form, if number of semesters is 0,\n      // hide the delete button.\n      // was in add semester func: numSemesters === 0 ? semesterNum = 1 : semesterNum = parseInt(semesters[numSemesters-1].number) + 1;\n    });\n\n    console.log(\"Semesters list rendered\");\n    _this.state = {\n      semesters: [{\n        number: '1',\n        // one semester initially\n        gpa: '-',\n        courses: INITIAL_COURSES\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(GPACalculator, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var semesters = this.state.semesters;\n      var numSemesters = semesters.length;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          children: [numSemesters === 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"1 semester\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 35\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [numSemesters, \" semesters\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 61\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"semester-list\",\n            children: [semesters.map(function (semester) {\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Semester // key={nanoid()}\n                // number={semester.number}\n                // gpa={semester.gpa}\n                // courses={semester.courses}\n                , {\n                  semester: semester,\n                  handleInputChange: _this2.handleInputChange // removeSemester={this.removeSemester}\n                  // handleInfoChange={this.handleInfoChange}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 22\n                }, _this2), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 23\n                }, _this2)]\n              }, semester.number, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 20\n              }, _this2);\n            }), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.addSemester,\n              children: \"Add a Semester\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    }\n  }]);\n\n  return GPACalculator;\n}(React.Component);\n\nexport default GPACalculator;","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/pages/index.jsx"],"names":["React","Heading","Semester","INITIAL_COURSES","id","name","credit","marksOver100","grade","GPACalculator","props","event","course","semester","target","value","semesters","state","semesterCourses","courses","splice","parseInt","number","setState","numSemesters","length","semesterNum","push","toString","gpa","console","log","map","handleInputChange","addSemester","Component"],"mappings":"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","sourcesContent":["// import { Suspense } from 'react';\nimport React from 'react';\n// import LanguageSelector from \"../components/LanguageSelector.jsx\";\nimport Heading from \"../components/Heading.jsx\";\nimport Semester from \"../components/Semester.jsx\";\n// import { nanoid } from 'nanoid';\n\nconst INITIAL_COURSES = [{\n  id: '1',\n  name: '',\n  credit: '',\n  marksOver100: '',\n  grade: '-',\n}, {\n  id: '2',\n  name: '',\n  credit: '',\n  marksOver100: '',\n  grade: '-',\n}, {\n  id: '3',\n  name: '',\n  credit: '',\n  marksOver100: '',\n  grade: '-',\n}];\n\nclass GPACalculator extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"Semesters list rendered\");\n\n    this.state = {\n      semesters: [{\n        number: '1',  // one semester initially\n        gpa: '-',\n        courses: INITIAL_COURSES\n      }, ]\n    }\n  }\n\n  handleInputChange = (event, course, semester) => {\n    /* - get list of courses of given semester\n      - get course from courses (remove course)\n      - update course info\n      - place course back into courses\n      - get list of semesters, remove semester, update semester's courses info,\n      - set new state thus: .*/\n    const { name, value } = event.target;\n    var semesters = [...this.state.semesters], semesterCourses = [...semester.courses];\n    var course = { ...course };\n    course[name] = value;\n\n    // ex. if course had id 1 (first course in semester i.e semester.courses[0]), insert in position 0\n    semesterCourses.splice(parseInt(course.id)-1, 1, course);\n    semester.courses = [...semesterCourses];\n\n    semesters.splice(parseInt(semester.number)-1, 1, semester);\n    this.setState({ semesters });\n    // this.setState(prevState => ({\n    //   semesters // equivalent to semesters: semesters\n    // }), );\n  }\n\n  addSemester = () => {\n    var semesters = [...this.state.semesters], numSemesters = semesters.length;\n    // New semester's number is obtained by incrementing last semester's number\n    var semesterNum = parseInt(semesters[numSemesters-1].number) + 1;\n    semesters.push(\n      {\n          number: semesterNum.toString(),\n          gpa: '-',\n          courses: INITIAL_COURSES\n      }\n    );\n    this.setState({ semesters });\n    /*\n    this.setState(prevState => ({\n        semesters: [\n          ...prevState.semesters,\n          {\n              number: (semesterNum).toString(),\n              gpa: '-',\n              courses: INITIAL_COURSES\n          }\n        ]\n    }));\n    */\n  }\n\n  deleteSemester = () => {\n    // TODO: number of semesters should never reach 0. in semester delete form, if number of semesters is 0,\n    // hide the delete button.\n    // was in add semester func: numSemesters === 0 ? semesterNum = 1 : semesterNum = parseInt(semesters[numSemesters-1].number) + 1;\n  }\n\n  render() {\n      const { semesters } = this.state;\n      const numSemesters = semesters.length;\n      return (\n      \t<>\n      \t\t<Heading />\n      \t\t<br />\n      \t\t<main>\n            {numSemesters === 1 ? <span>1 semester</span> : <span>{numSemesters} semesters</span>}\n          \t<div className=\"semester-list\">\n      \t\t\t  \t{semesters.map(\n      \t\t          semester =>\n      \t\t          \t<React.Fragment key={semester.number}>\n      \t\t\t            <Semester\n                           // key={nanoid()}\n        \t\t        \t\t   // number={semester.number}\n        \t\t        \t\t   // gpa={semester.gpa}\n                           // courses={semester.courses}\n                           semester={semester}\n                           handleInputChange={this.handleInputChange}\n                           // removeSemester={this.removeSemester}\n                           // handleInfoChange={this.handleInfoChange}\n      \t\t              />\n      \t\t              <br />\n                        {// <button onClick={()  => removeSemester(semester.number)}>Remove Semester</button>\n                        }\n      \t              </React.Fragment>\n      \t\t        )}\n  \t        \t<button onClick={this.addSemester}>Add a Semester</button>\n\n  \t        </div>\n      \t\t</main>\n        </>\n      );\n  }\n}\n\nexport default GPACalculator;\n"]},"metadata":{},"sourceType":"module"}