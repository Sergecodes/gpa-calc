{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/pages/index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import { Suspense } from 'react';\nimport React from 'react'; // import LanguageSelector from \"../components/LanguageSelector.jsx\";\n\nimport Heading from \"../components/Heading.jsx\";\nimport Semester from \"../components/Semester.jsx\";\nimport { nanoid } from 'nanoid';\n\nclass GPACalculator extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    _defineProperty(this, \"addSemester\", () => {\n      var semesters = this.state.semesters;\n      var semesterNum,\n          numSemesters = semesters.length;\n      if (numSemesters !== 0) semesterNum = semesters[numSemesters - 1].number + 1;else semesterNum = 1;\n      this.setState(prevState => ({\n        semesters: [...prevState.semesters, {\n          number: semesterNum,\n          gpa: '-',\n          courses: initialCourses\n        }]\n      }));\n    });\n\n    _defineProperty(this, \"refreshSemesters\", event => {\n      const {\n        name,\n        value\n      } = event.target;\n      var unmodifiedSemesters = this.state.semesters.filter(semester => semester.number !== modifiedSemester.number);\n      unmodifiedSemesters.push(modifiedSemester);\n      const newSemesters = unmodifiedSemesters;\n      this.setState(prevState => ({\n        semesters: newSemesters\n      }));\n      console.log(this.state.semesters);\n    });\n\n    _defineProperty(this, \"removeSemester\", num => {\n      const remainingSemesters = this.state.semesters.filter(sem => sem.num !== num);\n      this.setState(prevState => ({\n        semesters: remainingSemesters\n      }));\n    });\n\n    _defineProperty(this, \"handleInfoChange\", event => {\n      // console.log(courseConcerned.id === course.id);  // true\n      setCourse(prevCourse => _objectSpread(_objectSpread({}, prevCourse), {}, {\n        [`${name}`]: value // set the value of the *name* attribute to *value*\n\n      })); // console.log(name, value);\n\n      console.log(course); // each course has its props with different values, so when this function is called,\n      // the semester that \"created\" the course will be called & not a random semester.\n\n      props.handleCourseInfoChange(course, props.semester); // TODO: on change remove the current GPA value\n    });\n\n    const _initialCourses = [{\n      id: '1',\n      name: '',\n      credit: '',\n      marksOver100: '',\n      grade: '-'\n    }, {\n      id: '2',\n      name: '',\n      credit: '',\n      marksOver100: '',\n      grade: '-'\n    }, {\n      id: '3',\n      name: '',\n      credit: '',\n      marksOver100: '',\n      grade: '-'\n    }];\n    this.state = {\n      semesters: [{\n        number: '',\n        gpa: '-',\n        courses: _initialCourses\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Semesters: \", this.state.semesters.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.state.semesters.length, \" semester(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"semester-list\",\n          children: [this.state.semesters.map(semester => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: semester.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Semester, {\n              number: semester.number,\n              gpa: semester.gpa,\n              removeSemester: this.removeSemester // semesters={semesters}\n              ,\n              handleInfoChange: this.handleInfoChange\n            }, semester.number, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.addSemester,\n            children: \"Add a Semester\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default GPACalculator;","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/pages/index.jsx"],"names":["React","Heading","Semester","nanoid","GPACalculator","Component","constructor","props","semesters","state","semesterNum","numSemesters","length","number","setState","prevState","gpa","courses","initialCourses","event","name","value","target","unmodifiedSemesters","filter","semester","modifiedSemester","push","newSemesters","console","log","num","remainingSemesters","sem","setCourse","prevCourse","course","handleCourseInfoChange","id","credit","marksOver100","grade","render","map","removeSemester","handleInfoChange","addSemester"],"mappings":"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","sourcesContent":["// import { Suspense } from 'react';\nimport React from 'react';\n// import LanguageSelector from \"../components/LanguageSelector.jsx\";\nimport Heading from \"../components/Heading.jsx\";\nimport Semester from \"../components/Semester.jsx\";\nimport { nanoid } from 'nanoid';\n\nclass GPACalculator extends React.Component {\n  constructor(props) {\n    super(props);\n    const initialCourses = [{\n      id: '1',\n      name: '',\n      credit: '',\n      marksOver100: '',\n      grade: '-',\n    }, {\n      id: '2',\n      name: '',\n      credit: '',\n      marksOver100: '',\n      grade: '-',\n    }, {\n      id: '3',\n      name: '',\n      credit: '',\n      marksOver100: '',\n      grade: '-',\n    }];\n\n    this.state = {\n      semesters: [\n        {\n          number: '',\n          gpa: '-',\n          courses: initialCourses\n        }\n      ]\n    }\n\n  }\n\n  addSemester = () => {\n    var semesters = this.state.semesters;\n    var semesterNum, numSemesters = semesters.length;\n\n    if (numSemesters !== 0)\n        semesterNum = semesters[numSemesters-1].number + 1;\n    else\n        semesterNum = 1;\n\n    this.setState(prevState => ({\n        semesters: [\n          ...prevState.semesters,\n          {\n              number: semesterNum,\n              gpa: '-',\n              courses: initialCourses\n          }\n        ]\n    }));\n\n  }\n\n  refreshSemesters = (event) => {\n    const { name, value } = event.target;\n    var unmodifiedSemesters = this.state.semesters.filter(semester => semester.number !== modifiedSemester.number);\n    unmodifiedSemesters.push(modifiedSemester);\n    const newSemesters = unmodifiedSemesters;\n    this.setState(prevState => ({\n      semesters: newSemesters\n    }));\n\n    console.log(this.state.semesters);\n  }\n\n  removeSemester = num => {\n    const remainingSemesters = this.state.semesters.filter(sem => sem.num !== num);\n    this.setState(prevState => ({\n      semesters: remainingSemesters\n    }));\n  }\n\n\n  handleInfoChange = (event) => {\n\n    // console.log(courseConcerned.id === course.id);  // true\n    setCourse(prevCourse => (\n      {\n        ...prevCourse,\n        [`${name}`]: value  // set the value of the *name* attribute to *value*\n      }\n    ));\n    // console.log(name, value);\n    console.log(course);\n    // each course has its props with different values, so when this function is called,\n    // the semester that \"created\" the course will be called & not a random semester.\n    props.handleCourseInfoChange(course, props.semester);\n    // TODO: on change remove the current GPA value\n  }\n\n  render() {\n      return (\n      \t<>\n          <p>Semesters: {this.state.semesters.length}</p>\n      \t\t<Heading />\n      \t\t<br />\n      \t\t<main>\n              <p>{this.state.semesters.length} semester(s)</p>\n              \t<div className=\"semester-list\">\n        \t\t\t  \t{this.state.semesters.map(\n        \t\t          semester =>\n        \t\t          \t<>\n        \t\t\t          \t<p>{semester.number}</p>\n        \t\t\t            <Semester\n                             key={semester.number}\n          \t\t        \t\t   number={semester.number}\n          \t\t        \t\t   gpa={semester.gpa}\n                             removeSemester={this.removeSemester}\n                             // semesters={semesters}\n                             handleInfoChange={this.handleInfoChange}\n        \t\t              />\n        \t\t              <br />\n                          {// <button onClick={()  => removeSemester(semester.number)}>Remove Semester</button>\n                          }\n        \t              </>\n        \t\t        )}\n    \t        \t<button onClick={this.addSemester}>Add a Semester</button>\n\n    \t        </div>\n\n      \t\t</main>\n        </>\n      );\n  }\n}\n\nexport default GPACalculator;\n"]},"metadata":{},"sourceType":"module"}