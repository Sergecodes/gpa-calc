{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Button, Modal, IconButton } from '@material-ui/core';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { PDFDownloadLink, Page, Text, View, Image, Document, StyleSheet, ReactPDF, PDFViewer } from '@react-pdf/renderer';\nimport { generateImage } from '../components/DownloadImage.jsx';\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'row',\n    backgroundColor: '#eee'\n  }\n});\nexport default class DownloadPDF extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"MyDoc\", () => /*#__PURE__*/_jsx(Document, {\n      children: /*#__PURE__*/_jsx(Page, {\n        size: \"A4\",\n        style: _objectSpread(_objectSpread({}, styles.page), {}, {\n          textAlign: 'center'\n        }),\n        children: /*#__PURE__*/_jsx(Image, {\n          src: this.image.src,\n          style: {\n            width: '100%'\n          }\n        })\n      })\n    }));\n\n    _defineProperty(this, \"handleClose\", () => {\n      var node = document.getElementById(`semester-${this.semesterNum} clone`);\n      node.style.display = \"none\";\n      this.setState({\n        open: false\n      });\n    });\n\n    _defineProperty(this, \"handleOpen\", () => {\n      this.image = generateImage(this.semesterNum);\n      const $this = this; // preserve the *this* object.\n\n      this.image.onload = function () {\n        // *this* here will be undefined ?(arrow function) so use $this\n        // console.log($this.image);\n        $this.setState({\n          open: true\n        });\n      };\n    });\n\n    this.image = null;\n    this.semesterNum = props.semesterNum;\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => this.handleOpen(),\n        endIcon: /*#__PURE__*/_jsx(GetAppIcon, {}),\n        children: \"PDF\"\n      }), /*#__PURE__*/_jsx(Modal, {\n        open: this.state.open,\n        onClose: () => this.handleClose(),\n        \"aria-label\": `Semester ${this.semesterNum} results pdf modal`,\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'row-reverse'\n        },\n        children: /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(IconButton, {\n            \"aria-label\": \"Close modal\",\n            onClick: () => this.handleClose(),\n            component: \"span\",\n            style: {\n              alignSelf: 'start',\n              color: 'ghostwhite',\n              marginLeft: '3rem'\n            },\n            children: /*#__PURE__*/_jsx(CloseIcon, {})\n          }), this.image !== null ? /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(PDFViewer, {\n              style: {\n                width: '70%',\n                marginTop: '2rem',\n                marginBottom: '3rem',\n                marginLeft: '3rem'\n              },\n              children: this.MyDoc()\n            }), /*#__PURE__*/_jsx(Button, {\n              color: \"secondary\",\n              variant: \"contained\",\n              onClick: () => this.handleClose(),\n              style: {\n                alignSelf: 'end',\n                position: 'relative',\n                bottom: '2rem',\n                left: '2rem'\n              },\n              children: /*#__PURE__*/_jsx(PDFDownloadLink, {\n                document: this.MyDoc(),\n                fileName: `Semester ${this.semesterNum} results.pdf`,\n                style: {\n                  textDecoration: 'none',\n                  color: 'midnightblue'\n                },\n                children: ({\n                  blob,\n                  url,\n                  loading,\n                  error\n                }) => loading ? t('Loading...') : t('Download')\n              })\n            })]\n          }) : null]\n        })\n      })]\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}