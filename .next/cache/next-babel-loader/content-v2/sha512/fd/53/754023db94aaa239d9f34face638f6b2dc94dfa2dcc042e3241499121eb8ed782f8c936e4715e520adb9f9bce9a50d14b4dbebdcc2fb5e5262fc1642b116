{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/components/CourseInput.jsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Typography from '@material-ui/core/Typography'; // import { useTranslation } from 'react-i18next';\n\nimport { useState } from 'react';\nimport { TableRow, TableCell, TextField } from '@material-ui/core';\nimport rc from '../components/Utils.jsx';\nexport default function CourseInput(props) {\n  _s();\n\n  // const { t } = useTranslation();\n  // const [ course, setCourse ] = useState(\n  //   {\n  //     id: props.id,\n  //     name: '',\n  //     credit: '',\n  //     marksOver100: '',\n  //     grade: '-',\n  //     semesterNumber: props.semesterNumber\n  //   }\n  // );\n  var courseConcerned = props.semester.courses.filter(function (course) {\n    return course.id === props.id;\n  })[0]; // console.log(courseConcerned);\n\n  var _useState = useState({\n    id: props.id,\n    name: props.name,\n    credit: props.credit,\n    marksOver100: props.marksOver100,\n    grade: props.grade,\n    semesterNumber: props.semesterNumber\n  }),\n      course = _useState[0],\n      setCourse = _useState[1];\n\n  var handleChange = function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value; // console.log(courseConcerned.id === course.id);  // true\n\n    setCourse(function (prevCourse) {\n      return _objectSpread(_objectSpread({}, prevCourse), {}, _defineProperty({}, \"\".concat(name), value));\n    }); // console.log(name, value);\n\n    console.log(course); // each course has its props with different values, so when this function is called,\n    // the semester that \"created\" the course will be called & not a random semester.\n\n    props.handleCourseInfoChange(course, props.semester); // TODO: on change remove the current GPA value\n  };\n\n  var handleMarksChange = function handleMarksChange(event) {\n    handleChange(event); // // TODO: recalculate and display gpa\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(TextField // id={`course-${course.id}-name`}\n        , {\n          name: \"name\",\n          value: course.name,\n          size: \"small\",\n          variant: \"outlined\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(TextField // id={`course-${course.id}-credit`}\n        , {\n          name: \"credit\",\n          value: course.credit,\n          size: \"small\",\n          variant: \"outlined\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(TextField // id={`course-${id}-marks`}\n        , {\n          name: \"marksOver100\",\n          value: course.marksOver100,\n          size: \"small\",\n          variant: \"outlined\",\n          onChange: handleMarksChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: course.grade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(CourseInput, \"cfJjAaOcdKGzyodnU1TAv1jY7bk=\");\n\n_c = CourseInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseInput\");","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/components/CourseInput.jsx"],"names":["Typography","useState","TableRow","TableCell","TextField","rc","CourseInput","props","courseConcerned","semester","courses","filter","course","id","name","credit","marksOver100","grade","semesterNumber","setCourse","handleChange","event","target","value","prevCourse","console","log","handleCourseInfoChange","handleMarksChange"],"mappings":"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","sourcesContent":["import Typography from '@material-ui/core/Typography';\n// import { useTranslation } from 'react-i18next';\nimport { useState } from 'react';\nimport { TableRow, TableCell, TextField } from '@material-ui/core';\nimport rc from '../components/Utils.jsx';\n\nexport default function CourseInput(props) {\n    // const { t } = useTranslation();\n    // const [ course, setCourse ] = useState(\n    //   {\n    //     id: props.id,\n    //     name: '',\n    //     credit: '',\n    //     marksOver100: '',\n    //     grade: '-',\n    //     semesterNumber: props.semesterNumber\n    //   }\n    // );\n    const courseConcerned = props.semester.courses.filter(course => course.id === props.id)[0];\n    // console.log(courseConcerned);\n    const [ course, setCourse ] = useState(\n      {\n        id: props.id,\n        name: props.name,\n        credit: props.credit,\n        marksOver100: props.marksOver100,\n        grade: props.grade,\n        semesterNumber: props.semesterNumber\n      }\n    );\n\n    const handleChange = (event) => {\n      const { name, value } = event.target;\n      // console.log(courseConcerned.id === course.id);  // true\n      setCourse(prevCourse => (\n        {\n          ...prevCourse,\n          [`${name}`]: value  // set the value of the *name* attribute to *value*\n        }\n      ));\n      // console.log(name, value);\n      console.log(course);\n      // each course has its props with different values, so when this function is called,\n      // the semester that \"created\" the course will be called & not a random semester.\n      props.handleCourseInfoChange(course, props.semester);\n      // TODO: on change remove the current GPA value\n    }\n\n    const handleMarksChange = (event) => {\n      handleChange(event);\n      // // TODO: recalculate and display gpa\n    }\n\n    return (\n      <>\n        <TableRow>\n          <TableCell>\n              <TextField\n                // id={`course-${course.id}-name`}\n                name=\"name\"\n                value={course.name}\n                size=\"small\"\n                variant=\"outlined\"\n                onChange={handleChange}\n              />\n          </TableCell>\n          <TableCell>\n              <TextField\n                // id={`course-${course.id}-credit`}\n                name=\"credit\"\n                value={course.credit}\n                size=\"small\"\n                variant=\"outlined\"\n                onChange={handleChange}\n              />\n          </TableCell>\n          <TableCell>\n              <TextField\n                // id={`course-${id}-marks`}\n                name=\"marksOver100\"\n                value={course.marksOver100}\n                size=\"small\"\n                variant=\"outlined\"\n                onChange={handleMarksChange}\n              />\n          </TableCell>\n          <TableCell>{course.grade}</TableCell>\n          {/*<TableCell>\n              <button onClick={props.removeCourse}>X</button>\n          </TableCell>\n          */}\n        </TableRow>\n        {// <Typography component=\"body1\">{props.grade}</Typography>\n        }\n      </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}