{"ast":null,"code":"import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport axios from 'axios';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next } from 'react-i18next';\ni18n.use(XHR).use(initReactI18next).init({\n  lng: 'en',\n  backend: {\n    /* translation file path */\n    ajax: axios,\n    // backends: [axios],\n    loadPath: '/i18n/translations/{{lng}}.json'\n  },\n  fallbackLng: 'en',\n  debug: true,\n  //  can have multiple namespace, in case you want to divide a huge translation\n  // into smaller pieces and load them on demand\n  ns: ['translations'],\n  defaultNS: 'translations',\n  // allow keys to be phrases having ':', '.'\n  keySeparator: false,\n  nsSeparator: false,\n  interpolation: {\n    escapeValue: false // formatSeparator: ','\n\n  },\n  react: {\n    wait: true // useSuspense: false  /* apparently it isn't yet supported by react -_- */\n\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/public/i18n/i18n.js"],"names":["i18n","Backend","axios","XHR","initReactI18next","use","init","lng","backend","ajax","loadPath","fallbackLng","debug","ns","defaultNS","keySeparator","nsSeparator","interpolation","escapeValue","react","wait"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AAEAJ,IAAI,CACCK,GADL,CACSF,GADT,EAEKE,GAFL,CAESD,gBAFT,EAGKE,IAHL,CAGU;AACFC,EAAAA,GAAG,EAAE,IADH;AAEFC,EAAAA,OAAO,EAAE;AACL;AACAC,IAAAA,IAAI,EAAEP,KAFD;AAGL;AACAQ,IAAAA,QAAQ,EAAE;AAJL,GAFP;AAQFC,EAAAA,WAAW,EAAE,IARX;AASFC,EAAAA,KAAK,EAAE,IATL;AAUF;AACA;AACAC,EAAAA,EAAE,EAAE,CAAC,cAAD,CAZF;AAaFC,EAAAA,SAAS,EAAE,cAbT;AAcF;AACAC,EAAAA,YAAY,EAAE,KAfZ;AAgBFC,EAAAA,WAAW,EAAE,KAhBX;AAiBFC,EAAAA,aAAa,EAAE;AACXC,IAAAA,WAAW,EAAE,KADF,CAEX;;AAFW,GAjBb;AAqBFC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAE,IADH,CAEH;;AAFG;AArBL,CAHV;AA8BA,eAAepB,IAAf","sourcesContent":["import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport axios from 'axios';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next } from 'react-i18next';\n\ni18n\n    .use(XHR)\n    .use(initReactI18next)\n    .init({\n        lng: 'en',\n        backend: {\n            /* translation file path */\n            ajax: axios,\n            // backends: [axios],\n            loadPath: '/i18n/translations/{{lng}}.json'\n        },\n        fallbackLng: 'en',\n        debug: true,\n        //  can have multiple namespace, in case you want to divide a huge translation\n        // into smaller pieces and load them on demand\n        ns: ['translations'],\n        defaultNS: 'translations',\n        // allow keys to be phrases having ':', '.'\n        keySeparator: false,\n        nsSeparator: false,\n        interpolation: {\n            escapeValue: false,\n            // formatSeparator: ','\n        },\n        react: {\n            wait: true,\n            // useSuspense: false  /* apparently it isn't yet supported by react -_- */\n        }\n    });\n\nexport default i18n;\n"]},"metadata":{},"sourceType":"module"}