{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/components/DownloadResults.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport { saveAs } from 'file-saver';\nimport domtoimage from 'dom-to-image';\nexport default class DownloadResults extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"filter\", node => {\n      console.log(node.tagName === 'button');\n      return node.tagName !== 'button';\n    });\n\n    _defineProperty(this, \"download\", () => {\n      var node = document.getElementById('semester-list');\n      domtoimage.toPng(node, {\n        filter: this.filter\n      }).then(function (dataUrl) {\n        var img = new Image();\n        img.src = dataUrl;\n        document.body.appendChild(img);\n      }).catch(function (error) {\n        console.error('oopss', error);\n      });\n    });\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.download(),\n      startIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }, this),\n      children: \"Download as png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/components/DownloadResults.jsx"],"names":["React","Button","GetAppIcon","saveAs","domtoimage","DownloadResults","Component","node","console","log","tagName","document","getElementById","toPng","filter","then","dataUrl","img","Image","src","body","appendChild","catch","error","componentDidMount","render","download"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,eAAe,MAAMC,eAAN,SAA8BL,KAAK,CAACM,SAApC,CAA8C;AAAA;AAAA;;AAAA,oCAElDC,IAAI,IAAI;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAL,KAAiB,QAA7B;AACA,aAAQH,IAAI,CAACG,OAAL,KAAiB,QAAzB;AACD,KAL0D;;AAAA,sCAOhD,MAAM;AACf,UAAIH,IAAI,GAAGI,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAX;AAEAR,MAAAA,UAAU,CAACS,KAAX,CAAiBN,IAAjB,EAAuB;AAACO,QAAAA,MAAM,EAAE,KAAKA;AAAd,OAAvB,EACGC,IADH,CACQ,UAAUC,OAAV,EAAmB;AACvB,YAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACAD,QAAAA,GAAG,CAACE,GAAJ,GAAUH,OAAV;AACAL,QAAAA,QAAQ,CAACS,IAAT,CAAcC,WAAd,CAA0BJ,GAA1B;AACD,OALH,EAMGK,KANH,CAMS,UAAUC,KAAV,EAAiB;AACtBf,QAAAA,OAAO,CAACe,KAAR,CAAc,OAAd,EAAuBA,KAAvB;AACD,OARH;AASD,KAnB0D;AAAA;;AAqB3DC,EAAAA,iBAAiB,GAAG,CAEnB;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKC,QAAL,EAHjB;AAIE,MAAA,SAAS,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AApC0D","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport { saveAs } from 'file-saver';\nimport domtoimage from 'dom-to-image';\n\nexport default class DownloadResults extends React.Component {\n\n  filter = node => {\n    console.log(node.tagName === 'button');\n    return (node.tagName !== 'button');\n  }\n\n  download = () => {\n    var node = document.getElementById('semester-list');\n\n    domtoimage.toPng(node, {filter: this.filter})\n      .then(function (dataUrl) {\n        var img = new Image();\n        img.src = dataUrl;\n        document.body.appendChild(img);\n      })\n      .catch(function (error) {\n        console.error('oopss', error);\n      });\n  }\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    return (\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => this.download()}\n        startIcon={<GetAppIcon />}\n      >\n        Download as png\n      </Button>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}