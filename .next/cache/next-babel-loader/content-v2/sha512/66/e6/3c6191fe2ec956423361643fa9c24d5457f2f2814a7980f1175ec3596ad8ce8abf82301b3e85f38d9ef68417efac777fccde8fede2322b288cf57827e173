{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/pages/index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import { Suspense } from 'react';\nimport React from 'react'; // import LanguageSelector from \"../components/LanguageSelector.jsx\";\n\nimport Heading from \"../components/Heading.jsx\";\nimport Semester from \"../components/Semester.jsx\";\nconst INITIAL_COURSES = [{\n  id: 1,\n  name: '',\n  credit: 0,\n  markOver100: 0.0,\n  points: 0.0,\n  grade: ''\n}, {\n  id: 2,\n  name: '',\n  credit: 0,\n  markOver100: 0.0,\n  points: 0.0,\n  grade: ''\n}, {\n  id: 3,\n  name: '',\n  credit: 0,\n  markOver100: 0.0,\n  points: 0.0,\n  grade: ''\n}];\nconst INITIAL_SEMESTER = {\n  number: 1,\n  gpa: 0.0,\n  courses: INITIAL_COURSES\n};\n\nclass GPACalculator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getPoint\", mark => {\n      switch (mark) {\n        case mark >= 80:\n          return 4.00;\n\n        case mark >= 75:\n          return 3.70;\n\n        case mark >= 70:\n          return 3.30;\n\n        case mark >= 65:\n          return 3.00;\n\n        case mark >= 60:\n          return 2.70;\n\n        case mark >= 55:\n          return 2.30;\n\n        case mark >= 50:\n          return 2.00;\n\n        case mark >= 45:\n          return 1.70;\n\n        case mark >= 40:\n          return 1.30;\n\n        case mark >= 35:\n          return 1.00;\n\n        case mark >= 30:\n          return 0.00;\n\n        case mark >= 0:\n          return 0.00;\n\n        default:\n          alert(\"Wrong input?\");\n        // return \"Unknown mark\"\n      }\n    });\n\n    _defineProperty(this, \"getGrade\", mark => {\n      // mark should be a float\n      switch (mark) {\n        case mark >= 80 && mark <= 100:\n          return 'A';\n\n        case mark >= 75:\n          return 'B';\n\n        case mark >= 70:\n          return 'B+';\n\n        case mark >= 65:\n          return 'B';\n\n        case mark >= 60:\n          return 'B-';\n\n        case mark >= 55:\n          return 'C+';\n\n        case mark >= 50:\n          return 'C';\n\n        case mark >= 45:\n          return 'C-';\n\n        case mark >= 40:\n          return 'D+';\n\n        case mark >= 35:\n          return 'D';\n\n        case mark >= 30:\n          return 'E';\n\n        case mark >= 0:\n          return 'F';\n\n        default:\n          alert(\"Wrong input?\");\n        // return \"Unknown mark\"\n      }\n    });\n\n    _defineProperty(this, \"getTotalCredit\", semester => {\n      const courses = [...semester.courses];\n      var totalCredit = 0;\n\n      for (let course of courses) totalCredit += course.credit;\n\n      return totalCredit;\n    });\n\n    _defineProperty(this, \"calculateGPA\", semester => {\n      const courses = [...semester.courses];\n      let sum = 0.0;\n      console.log(courses.length);\n\n      for (let course of courses) {\n        sum += course.credit * course.points;\n        console.log(sum);\n      }\n\n      var gpa = sum / this.getTotalCredit(semester);\n      return gpa;\n    });\n\n    _defineProperty(this, \"handleInputChange\", (event, course, semester) => {\n      /* - get list of courses of given semester\n        - get course from courses (remove course)\n        - update course info\n        - place course back into courses\n        - get list of semesters, remove semester, update semester's courses info,\n        - set new state thus: .*/\n      const {\n        name,\n        value\n      } = event.target;\n      var semesters = [...this.state.semesters],\n          semesterCourses = [...semester.courses];\n\n      var course = _objectSpread({}, course);\n\n      course[name] = value; // semesterCourses.splice(course.id - 1, 1, course); or better still\n\n      semesterCourses[course.id - 1] = course;\n      semester.courses = [...semesterCourses];\n      semesters[semester.number - 1] = semester;\n      this.setState({\n        semesters\n      });\n    });\n\n    _defineProperty(this, \"handleMarkOrCreditChange\", (event, course, semester) => {\n      // TODO: recalculate gpa based on new marks\n      const {\n        name,\n        value\n      } = event.target;\n      var semesters = [...this.state.semesters],\n          semesterCourses = [...semester.courses];\n\n      var course = _objectSpread({}, course);\n\n      course[name] = value;\n      semesterCourses[course.id - 1] = course;\n      semester.courses = [...semesterCourses];\n      semester.gpa = this.calculateGPA(semester);\n      semesters[semester.number - 1] = semester;\n      this.setState({\n        semesters\n      });\n    });\n\n    _defineProperty(this, \"handleAddSemester\", () => {\n      var semesters = [...this.state.semesters]; // New semester's number is obtained by incrementing last semester's number which is equal to the number of semesters\n\n      var newSemesterNum = semesters.length + 1;\n      semesters.push({\n        number: newSemesterNum,\n        gpa: 0.0,\n        courses: INITIAL_COURSES\n      });\n      this.setState({\n        semesters\n      });\n      /*\n      this.setState(prevState => ({\n          semesters: [\n            ...prevState.semesters,\n            {\n                number: semesterNum,\n                gpa: 0.0,\n                courses: INITIAL_COURSES\n            }\n          ]\n      }));\n      */\n    });\n\n    _defineProperty(this, \"handleDeleteSemester\", semester => {\n      var semesters = [...this.state.semesters]; // We know that semesterIndex is always one short of the semesterNum\n\n      semesters = semesters.filter(sem => sem.number !== semesterNum); // for every semester whose number is beyond semesterNum, decrement its number\n\n      for (let i = semesterIndex; i < semesters.length; i++) semesters[i].number = semesters[i].number - 1;\n\n      this.setState({\n        semesters\n      });\n    });\n\n    _defineProperty(this, \"handleResetSemester\", semester => {\n      var semesters = [...this.state.semesters],\n          semester = _objectSpread({}, semester);\n\n      const semesterIndex = semester.number - 1;\n      semester.courses = semester.courses.map(course => {\n        [course.name, course.credit, course.markOver100, course.grade] = ['', 0, 0.0, ''];\n        return course;\n      });\n      semester.gpa = 0.0;\n      semesters[semesterIndex] = semester;\n      this.setState({\n        semesters\n      });\n    });\n\n    _defineProperty(this, \"handleAddCourse\", semester => {\n      var semesters = [...this.state.semesters];\n\n      var semester = _objectSpread({}, semester);\n\n      var semesterCourses = [...semester.courses];\n      const semesterIndex = semester.number - 1;\n      semesterCourses.push({\n        // new course's id is obtained by incrementing last course's id which is the number of courses\n        id: semesterCourses.length + 1,\n        name: '',\n        credit: 0,\n        markOver100: 0.0,\n        grade: ''\n      });\n      semester.courses = semesterCourses;\n      semesters[semesterIndex] = semester;\n      this.setState({\n        semesters\n      });\n    });\n\n    _defineProperty(this, \"handleDeleteCourse\", (course, semester) => {\n      var semesters = [...this.state.semesters];\n\n      var semester = _objectSpread({}, semester);\n\n      var semesterCourses = [...semester.courses];\n      const courseIndex = course.id - 1,\n            semesterIndex = semester.number - 1;\n      semesterCourses = semesterCourses.filter(semCourse => semCourse.id !== course.id); // Reallocate ids(every course which comes after the deleted course's number is decremented)\n\n      for (let i = courseIndex; i < semesterCourses.length; i++) semesterCourses[i].id = semesterCourses[i].id - 1;\n\n      semester.courses = semesterCourses;\n      semesters[semesterIndex] = semester;\n      this.setState({\n        semesters\n      });\n    });\n\n    console.log(\"Semesters list rendered\");\n    this.state = {\n      semesters: [INITIAL_SEMESTER]\n    };\n  }\n\n  render() {\n    const {\n      semesters\n    } = this.state;\n    const numSemesters = semesters.length;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [numSemesters === 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"1 semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 35\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [numSemesters, \" semesters\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 61\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"semester-list\",\n          children: [semesters.map(semester => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Semester, {\n              semester: semester,\n              numSemesters: numSemesters,\n              onInputChange: this.handleInputChange,\n              onMarkOrCreditChange: this.handleMarkOrCreditChange,\n              onDeleteSemester: this.handleDeleteSemester,\n              onResetSemester: this.handleResetSemester,\n              onAddCourse: this.handleAddCourse,\n              onDeleteCourse: this.handleDeleteCourse\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 25\n            }, this)]\n          }, semester.number, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 20\n          }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleAddSemester,\n            children: \"Add a Semester\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default GPACalculator;","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/pages/index.jsx"],"names":["React","Heading","Semester","INITIAL_COURSES","id","name","credit","markOver100","points","grade","INITIAL_SEMESTER","number","gpa","courses","GPACalculator","Component","constructor","props","mark","alert","semester","totalCredit","course","sum","console","log","length","getTotalCredit","event","value","target","semesters","state","semesterCourses","setState","calculateGPA","newSemesterNum","push","filter","sem","semesterNum","i","semesterIndex","map","courseIndex","semCourse","render","numSemesters","handleInputChange","handleMarkOrCreditChange","handleDeleteSemester","handleResetSemester","handleAddCourse","handleDeleteCourse","handleAddSemester"],"mappings":"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","sourcesContent":["// import { Suspense } from 'react';\nimport React from 'react';\n// import LanguageSelector from \"../components/LanguageSelector.jsx\";\nimport Heading from \"../components/Heading.jsx\";\nimport Semester from \"../components/Semester.jsx\";\n\nconst INITIAL_COURSES = [{\n  id: 1,\n  name: '',\n  credit: 0,\n  markOver100: 0.0,\n  points: 0.0,\n  grade: '',\n}, {\n  id: 2,\n  name: '',\n  credit: 0,\n  markOver100: 0.0,\n  points: 0.0,\n  grade: '',\n}, {\n  id: 3,\n  name: '',\n  credit: 0,\n  markOver100: 0.0,\n  points: 0.0,\n  grade: '',\n}];\nconst INITIAL_SEMESTER = {\n  number: 1,\n  gpa: 0.0,\n  courses: INITIAL_COURSES\n};\n\nclass GPACalculator extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"Semesters list rendered\");\n\n    this.state = {\n      semesters: [INITIAL_SEMESTER]\n    }\n  }\n\n  getPoint = mark => {\n    switch (mark) {\n      case mark >= 80:\n        return 4.00;\n      case mark >= 75:\n        return 3.70;\n      case mark >= 70:\n        return 3.30;\n      case mark >= 65:\n        return 3.00;\n      case mark >= 60:\n        return 2.70;\n      case mark >= 55:\n        return 2.30;\n      case mark >= 50:\n        return 2.00;\n      case mark >= 45:\n        return 1.70;\n      case mark >= 40:\n        return 1.30;\n      case mark >= 35:\n        return 1.00;\n      case mark >= 30:\n        return 0.00;\n      case mark >= 0:\n        return 0.00;\n      default:\n        alert(\"Wrong input?\");\n        // return \"Unknown mark\"\n    }\n  }\n\n  getGrade = mark => {\n    // mark should be a float\n    switch (mark) {\n      case mark >= 80 && mark <= 100:\n        return 'A';\n      case mark >= 75:\n        return 'B';\n      case mark >= 70:\n        return 'B+';\n      case mark >= 65:\n        return 'B';\n      case mark >= 60:\n        return 'B-';\n      case mark >= 55:\n        return 'C+';\n      case mark >= 50:\n        return 'C';\n      case mark >= 45:\n        return 'C-';\n      case mark >= 40:\n        return 'D+';\n      case mark >= 35:\n        return 'D';\n      case mark >= 30:\n        return 'E';\n      case mark >= 0:\n        return 'F';\n      default:\n        alert(\"Wrong input?\");\n        // return \"Unknown mark\"\n    }\n  }\n\n  getTotalCredit = semester => {\n    const courses = [...semester.courses];\n    var totalCredit = 0;\n    for (let course of courses)\n      totalCredit += course.credit;\n\n    return totalCredit;\n  }\n\n  calculateGPA = semester => {\n    const courses = [...semester.courses];\n    let sum = 0.0;\n    console.log(courses.length);\n    for (let course of courses) {\n      sum += course.credit * course.points;\n      console.log(sum);\n    }\n\n    var gpa = sum / this.getTotalCredit(semester);\n    return gpa;\n  }\n\n  handleInputChange = (event, course, semester) => {\n    /* - get list of courses of given semester\n      - get course from courses (remove course)\n      - update course info\n      - place course back into courses\n      - get list of semesters, remove semester, update semester's courses info,\n      - set new state thus: .*/\n    const { name, value } = event.target;\n    var semesters = [...this.state.semesters], semesterCourses = [...semester.courses];\n    var course = { ...course };\n    course[name] = value;\n\n    // semesterCourses.splice(course.id - 1, 1, course); or better still\n    semesterCourses[course.id-1] = course;\n    semester.courses = [...semesterCourses];\n\n    semesters[semester.number-1] = semester;\n    this.setState({ semesters });\n  }\n\n  handleMarkOrCreditChange = (event, course, semester) => {\n    // TODO: recalculate gpa based on new marks\n    const { name, value } = event.target;\n    var semesters = [...this.state.semesters], semesterCourses = [...semester.courses];\n    var course = { ...course };\n    course[name] = value;\n\n    semesterCourses[course.id-1] = course;\n    semester.courses = [...semesterCourses];\n    semester.gpa = this.calculateGPA(semester);\n\n    semesters[semester.number-1] = semester;\n    this.setState({ semesters });\n  }\n\n  handleAddSemester = () => {\n    var semesters = [...this.state.semesters];\n    // New semester's number is obtained by incrementing last semester's number which is equal to the number of semesters\n    var newSemesterNum = semesters.length + 1;\n\n    semesters.push({\n          number: newSemesterNum,\n          gpa: 0.0,\n          courses: INITIAL_COURSES\n    });\n\n    this.setState({ semesters });\n    /*\n    this.setState(prevState => ({\n        semesters: [\n          ...prevState.semesters,\n          {\n              number: semesterNum,\n              gpa: 0.0,\n              courses: INITIAL_COURSES\n          }\n        ]\n    }));\n    */\n  }\n\n  handleDeleteSemester = semester => {\n    var semesters = [...this.state.semesters];\n    // We know that semesterIndex is always one short of the semesterNum\n\n    semesters = semesters.filter(sem => sem.number !== semesterNum);\n\n    // for every semester whose number is beyond semesterNum, decrement its number\n    for (let i = semesterIndex; i < semesters.length; i++)\n      semesters[i].number = semesters[i].number - 1;\n\n    this.setState({ semesters });\n  }\n\n  handleResetSemester = semester => {\n    var semesters = [...this.state.semesters], semester = { ...semester };\n    const semesterIndex = semester.number - 1;\n\n    semester.courses = semester.courses.map(course => {\n      [course.name, course.credit, course.markOver100, course.grade] = ['', 0, 0.0, ''];\n      return course;\n    });\n    semester.gpa = 0.0;\n    semesters[semesterIndex] = semester;\n\n    this.setState({ semesters });\n  }\n\n  handleAddCourse = semester => {\n    var semesters = [...this.state.semesters];\n    var semester = { ...semester };\n    var semesterCourses = [...semester.courses];\n    const semesterIndex = semester.number - 1;\n\n    semesterCourses.push({\n      // new course's id is obtained by incrementing last course's id which is the number of courses\n      id: semesterCourses.length + 1,\n      name: '',\n      credit: 0,\n      markOver100: 0.0,\n      grade: '',\n    });\n    semester.courses = semesterCourses;\n    semesters[semesterIndex] = semester;\n\n    this.setState({ semesters });\n  }\n\n  handleDeleteCourse = (course, semester) => {\n    var semesters = [...this.state.semesters];\n    var semester = { ...semester };\n    var semesterCourses = [...semester.courses];\n    const courseIndex = course.id - 1, semesterIndex = semester.number - 1;\n\n    semesterCourses = semesterCourses.filter(semCourse => semCourse.id !== course.id);\n\n    // Reallocate ids(every course which comes after the deleted course's number is decremented)\n    for (let i = courseIndex; i < semesterCourses.length; i++)\n      semesterCourses[i].id = semesterCourses[i].id -1;\n\n    semester.courses = semesterCourses;\n    semesters[semesterIndex] = semester;\n\n    this.setState({ semesters });\n  }\n\n  render() {\n      const { semesters } = this.state;\n      const numSemesters = semesters.length;\n\n      return (\n      \t<>\n      \t\t<Heading />\n      \t\t<br />\n      \t\t<main>\n            {numSemesters === 1 ? <span>1 semester</span> : <span>{numSemesters} semesters</span>}\n          \t<div className=\"semester-list\">\n      \t\t\t  \t{semesters.map(\n      \t\t          semester =>\n      \t\t          \t<React.Fragment key={semester.number}>\n      \t\t\t            <Semester\n                           semester={semester}\n                           numSemesters={numSemesters}\n                           onInputChange={this.handleInputChange}\n                           onMarkOrCreditChange={this.handleMarkOrCreditChange}\n                           onDeleteSemester={this.handleDeleteSemester}\n                           onResetSemester={this.handleResetSemester}\n                           onAddCourse={this.handleAddCourse}\n                           onDeleteCourse={this.handleDeleteCourse}\n      \t\t              />\n                        <br />\n      \t              </React.Fragment>\n      \t\t        )}\n              <br/>\n  \t        \t<button onClick={this.handleAddSemester}>Add a Semester</button>\n\n  \t        </div>\n      \t\t</main>\n        </>\n      );\n  }\n}\n\nexport default GPACalculator;\n"]},"metadata":{},"sourceType":"module"}