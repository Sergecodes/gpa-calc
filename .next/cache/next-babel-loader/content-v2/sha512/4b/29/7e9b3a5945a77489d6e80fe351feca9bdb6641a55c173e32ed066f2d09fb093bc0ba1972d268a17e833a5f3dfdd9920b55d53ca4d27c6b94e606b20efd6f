{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/components/DownloadResults.jsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Modal from '@material-ui/core/Modal';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { saveAs } from 'file-saver';\nimport domtoimage from 'dom-to-image';\n\nconst filter = node => {\n  if (node.classList !== undefined) {\n    // node.classList is a DOMTokenList and it doesn't have the array \"includes\" method but rather a \"contains\" method\n    if (node.classList.contains('semester-actions') || node.classList.contains('delete-cell')) return false;\n  }\n\n  if (node.tagName === \"BUTTON\" || node.tagName === \"button\") return false;\n  return true;\n};\n\nconst generateImage = () => {\n  // var img = new Image();\n  var img = /*#__PURE__*/React.createElement(\"img\", {}, null);\n  console.log(img);\n  var node = document.getElementById('semester-list'); // var container = document.getElementById('modal-image');\n\n  domtoimage.toPng(node, {\n    filter: filter\n  }).then(function (dataUrl) {\n    img.src = dataUrl;\n    img.id = 'results-image';\n    img.setAttribute('alt', 'Semester results'); // img.style.width = '35%';\n    // container.prepend(img);\n  }).catch(function (error) {\n    alert(\"An error occurred during the generation of the image.\");\n    console.error('oopss', error);\n  });\n  console.log(img);\n  return img;\n};\n\nexport default function DownloadResults() {\n  const [open, setOpen] = React.useState(false);\n  const image = generateImage();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"download-results\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleOpen,\n      startIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 20\n      }, this),\n      children: \"Download results as image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-label\": \"Semester results modal image\",\n      children: [/*#__PURE__*/_jsxDEV(IconButton // color=\"secondary\"\n      , {\n        \"aria-label\": \"Close modal\",\n        onClick: handleClose,\n        component: \"span\",\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), image]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/components/DownloadResults.jsx"],"names":["React","Button","GetAppIcon","Modal","CloseIcon","IconButton","saveAs","domtoimage","filter","node","classList","undefined","contains","tagName","generateImage","img","createElement","console","log","document","getElementById","toPng","then","dataUrl","src","id","setAttribute","catch","error","alert","DownloadResults","open","setOpen","useState","image","handleOpen","handleClose"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Modal from '@material-ui/core/Modal';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { saveAs } from 'file-saver';\nimport domtoimage from 'dom-to-image';\n\n\nconst filter = node => {\n  if (node.classList !== undefined) {\n    // node.classList is a DOMTokenList and it doesn't have the array \"includes\" method but rather a \"contains\" method\n    if (node.classList.contains('semester-actions') || node.classList.contains('delete-cell'))\n      return false;\n  }\n\n  if (node.tagName === \"BUTTON\" || node.tagName === \"button\")\n    return false;\n\n  return true;\n}\n\nconst generateImage = () => {\n  // var img = new Image();\n  var img = React.createElement(\"img\", {}, null);\n  console.log(img);\n  var node = document.getElementById('semester-list');\n  // var container = document.getElementById('modal-image');\n\n  domtoimage.toPng(node, {filter: filter})\n    .then(function (dataUrl) {\n      img.src = dataUrl;\n      img.id = 'results-image';\n      img.setAttribute('alt', 'Semester results');\n      // img.style.width = '35%';\n      // container.prepend(img);\n    })\n    .catch(function (error) {\n      alert(\"An error occurred during the generation of the image.\");\n      console.error('oopss', error);\n    });\n\n  console.log(img);\n  return img;\n};\n\nexport default function DownloadResults() {\n  const [open, setOpen] = React.useState(false);\n  const image = generateImage();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div id=\"download-results\">\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleOpen}\n        startIcon={<GetAppIcon />}\n      >\n        Download results as image\n      </Button>\n      <Modal open={open} onClose={handleClose} aria-label=\"Semester results modal image\">\n        <IconButton\n          // color=\"secondary\"\n          aria-label=\"Close modal\"\n          onClick={handleClose}\n          component=\"span\"\n        >\n          <CloseIcon />\n        </IconButton>\n        {image}\n      </Modal>\n    </div>\n  );\n\n}\n"]},"metadata":{},"sourceType":"module"}