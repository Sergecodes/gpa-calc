{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/components/DownloadResults.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport { saveAs } from 'file-saver';\nimport domtoimage from 'dom-to-image';\n\nvar DownloadResults = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(DownloadResults, _React$PureComponent);\n\n  var _super = _createSuper(DownloadResults);\n\n  function DownloadResults() {\n    var _this;\n\n    _classCallCheck(this, DownloadResults);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"filter\", function (node) {\n      if (node.classList !== undefined) {\n        // node.classList is a DOMTokenList and it doesn't have the array \"includes\" method but rather a \"contains\" method\n        if (node.classList.contains('semester-actions') || node.classList.contains('delete-cell')) return false;\n      }\n\n      if (node.tagName === \"BUTTON\" || node.tagName === \"button\") return false;\n      return true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"download\", function () {});\n\n    return _this;\n  }\n\n  _createClass(DownloadResults, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var node = document.getElementById('semester-list');\n      var container = document.getElementById('download-results');\n      domtoimage.toPng(node, {\n        filter: this.filter\n      }).then(function (dataUrl) {\n        var img = new Image();\n        img.src = dataUrl;\n        img.id = 'results-image';\n        img.style.width = '35%';\n        container.prepend(img);\n      })[\"catch\"](function (error) {\n        alert(\"An error occurred during the generation of the image.\");\n        console.error('oopss', error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"download-results\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: function onClick() {\n            return _this2.download();\n          },\n          startIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 22\n          }, this),\n          children: \"Download as png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return DownloadResults;\n}(React.PureComponent);\n\nexport { DownloadResults as default };","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/components/DownloadResults.jsx"],"names":["React","Button","GetAppIcon","saveAs","domtoimage","DownloadResults","node","classList","undefined","contains","tagName","document","getElementById","container","toPng","filter","then","dataUrl","img","Image","src","id","style","width","prepend","error","alert","console","download","PureComponent"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEqBC,e;;;;;;;;;;;;;;;;6DAEV,UAAAC,IAAI,EAAI;AACf,UAAIA,IAAI,CAACC,SAAL,KAAmBC,SAAvB,EAAkC;AAChC;AACA,YAAIF,IAAI,CAACC,SAAL,CAAeE,QAAf,CAAwB,kBAAxB,KAA+CH,IAAI,CAACC,SAAL,CAAeE,QAAf,CAAwB,aAAxB,CAAnD,EACE,OAAO,KAAP;AACH;;AAED,UAAIH,IAAI,CAACI,OAAL,KAAiB,QAAjB,IAA6BJ,IAAI,CAACI,OAAL,KAAiB,QAAlD,EACE,OAAO,KAAP;AAEF,aAAO,IAAP;AACD,K;;+DAoBU,YAAM,CAEhB,C;;;;;;;wCApBmB;AAClB,UAAIJ,IAAI,GAAGK,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAX;AACA,UAAIC,SAAS,GAAGF,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAhB;AAEAR,MAAAA,UAAU,CAACU,KAAX,CAAiBR,IAAjB,EAAuB;AAACS,QAAAA,MAAM,EAAE,KAAKA;AAAd,OAAvB,EACGC,IADH,CACQ,UAAUC,OAAV,EAAmB;AACvB,YAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACAD,QAAAA,GAAG,CAACE,GAAJ,GAAUH,OAAV;AACAC,QAAAA,GAAG,CAACG,EAAJ,GAAS,eAAT;AACAH,QAAAA,GAAG,CAACI,KAAJ,CAAUC,KAAV,GAAkB,KAAlB;AACAV,QAAAA,SAAS,CAACW,OAAV,CAAkBN,GAAlB;AACD,OAPH,WAQS,UAAUO,KAAV,EAAiB;AACtBC,QAAAA,KAAK,CAAC,uDAAD,CAAL;AACAC,QAAAA,OAAO,CAACF,KAAR,CAAc,OAAd,EAAuBA,KAAvB;AACD,OAXH;AAYD;;;6BAMQ;AAAA;;AACP,0BACE;AAAK,QAAA,EAAE,EAAC,kBAAR;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACG,QAAL,EAAN;AAAA,WAHX;AAIE,UAAA,SAAS,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAYD;;;;EAlD0C5B,KAAK,CAAC6B,a;;SAA9BxB,e","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport { saveAs } from 'file-saver';\nimport domtoimage from 'dom-to-image';\n\nexport default class DownloadResults extends React.PureComponent {\n\n  filter = node => {\n    if (node.classList !== undefined) {\n      // node.classList is a DOMTokenList and it doesn't have the array \"includes\" method but rather a \"contains\" method\n      if (node.classList.contains('semester-actions') || node.classList.contains('delete-cell'))\n        return false;\n    }\n\n    if (node.tagName === \"BUTTON\" || node.tagName === \"button\")\n      return false;\n\n    return true;\n  }\n\n  componentDidMount() {\n    var node = document.getElementById('semester-list');\n    var container = document.getElementById('download-results');\n\n    domtoimage.toPng(node, {filter: this.filter})\n      .then(function (dataUrl) {\n        var img = new Image();\n        img.src = dataUrl;\n        img.id = 'results-image';\n        img.style.width = '35%';\n        container.prepend(img);\n      })\n      .catch(function (error) {\n        alert(\"An error occurred during the generation of the image.\");\n        console.error('oopss', error);\n      });\n  }\n\n  download = () => {\n    \n  }\n\n  render() {\n    return (\n      <div id=\"download-results\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.download()}\n          startIcon={<GetAppIcon />}\n        >\n          Download as png\n        </Button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}