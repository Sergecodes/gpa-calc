{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/components/DownloadImage.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Semester from '../components/Semester.jsx';\nimport Button from '@material-ui/core/Button';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Modal from '@material-ui/core/Modal';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withTranslation } from 'react-i18next';\nimport domtoimage from 'dom-to-image';\nexport function generateImage(semesterNum) {\n  var img = new Image();\n  var node = document.getElementById(`semester-${semesterNum} clone`);\n  node.style.display = \"block\";\n  domtoimage.toPng(node).then(function (dataUrl) {\n    img.src = dataUrl;\n    img.id = 'results-image';\n    img.setAttribute('alt', `Semester ${semesterNum} results`);\n  }).catch(function (error) {\n    alert(\"An error occurred during the generation of the image.\");\n    console.error('oopss', error);\n  });\n  return img;\n}\n\nclass DownloadImage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleOpen\", () => {\n      this.image = generateImage(this.semesterNum);\n      const $this = this; // preserve the *this* object.\n\n      this.image.onload = function () {\n        // *this* here will be undefined ?(arrow function) so use $this\n        // console.log($this.image);\n        $this.setState({\n          open: true\n        });\n      };\n    });\n\n    _defineProperty(this, \"handleClose\", () => {\n      var node = document.getElementById(`semester-${this.semesterNum} clone`);\n      node.style.display = \"none\";\n      this.setState({\n        open: false\n      });\n    });\n\n    this.image = null;\n    this.semesterNum = props.semesterNum;\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    const image = this.image,\n          {\n      t\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => this.handleOpen(),\n        endIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 20\n        }, this),\n        children: t('Image')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: this.state.open,\n        onClose: () => this.handleClose(),\n        \"aria-label\": `Semester ${this.semesterNum} results modal image`,\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'row-reverse'\n        },\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"Close modal\",\n            onClick: () => this.handleClose(),\n            component: \"span\",\n            style: {\n              alignSelf: 'start',\n              color: 'ghostwhite',\n              marginLeft: '3rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), image !== null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: image.src,\n              alt: image.alt,\n              id: image.id,\n              style: {\n                width: '60%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: image.src,\n              download: `Semester {this.semesterNum} results.png`,\n              style: {\n                alignSelf: 'end',\n                position: 'relative',\n                bottom: '1rem',\n                right: '2rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"secondary\",\n                variant: \"contained\",\n                onClick: () => this.handleClose(),\n                disableElevation: true // style={{color: 'darkblue'}}\n                ,\n                children: t('Download')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default withTranslation('common')(DownloadImage);","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/components/DownloadImage.jsx"],"names":["React","Semester","Button","GetAppIcon","Modal","CloseIcon","IconButton","withTranslation","domtoimage","generateImage","semesterNum","img","Image","node","document","getElementById","style","display","toPng","then","dataUrl","src","id","setAttribute","catch","error","alert","console","DownloadImage","Component","constructor","props","image","$this","onload","setState","open","state","render","t","handleOpen","handleClose","justifyContent","flexDirection","alignSelf","color","marginLeft","alt","width","position","bottom","right"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAGA,OAAO,SAASC,aAAT,CAAuBC,WAAvB,EAAoC;AACzC,MAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACA,MAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAyB,YAAWL,WAAY,QAAhD,CAAX;AACAG,EAAAA,IAAI,CAACG,KAAL,CAAWC,OAAX,GAAqB,OAArB;AAEAT,EAAAA,UAAU,CAACU,KAAX,CAAiBL,IAAjB,EACGM,IADH,CACQ,UAAUC,OAAV,EAAmB;AACvBT,IAAAA,GAAG,CAACU,GAAJ,GAAUD,OAAV;AACAT,IAAAA,GAAG,CAACW,EAAJ,GAAS,eAAT;AACAX,IAAAA,GAAG,CAACY,YAAJ,CAAiB,KAAjB,EAAyB,YAAWb,WAAY,UAAhD;AACD,GALH,EAMGc,KANH,CAMS,UAAUC,KAAV,EAAiB;AACtBC,IAAAA,KAAK,CAAC,uDAAD,CAAL;AACAC,IAAAA,OAAO,CAACF,KAAR,CAAc,OAAd,EAAuBA,KAAvB;AACD,GATH;AAWA,SAAOd,GAAP;AACD;;AAED,MAAMiB,aAAN,SAA4B5B,KAAK,CAAC6B,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,wCAUN,MAAM;AACjB,WAAKC,KAAL,GAAavB,aAAa,CAAC,KAAKC,WAAN,CAA1B;AAEA,YAAMuB,KAAK,GAAG,IAAd,CAHiB,CAGI;;AAErB,WAAKD,KAAL,CAAWE,MAAX,GAAoB,YAAY;AAC9B;AACA;AACAD,QAAAA,KAAK,CAACE,QAAN,CAAe;AACbC,UAAAA,IAAI,EAAE;AADO,SAAf;AAGD,OAND;AAQD,KAvBkB;;AAAA,yCAyBL,MAAM;AAClB,UAAIvB,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAyB,YAAW,KAAKL,WAAY,QAArD,CAAX;AACAG,MAAAA,IAAI,CAACG,KAAL,CAAWC,OAAX,GAAqB,MAArB;AAEA,WAAKkB,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KAhCkB;;AAGjB,SAAKJ,KAAL,GAAa,IAAb;AACA,SAAKtB,WAAL,GAAmBqB,KAAK,CAACrB,WAAzB;AACA,SAAK2B,KAAL,GAAa;AACXD,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AA0BDE,EAAAA,MAAM,GAAG;AACP,UAAMN,KAAK,GAAG,KAAKA,KAAnB;AAAA,UAA0B;AAAEO,MAAAA;AAAF,QAAQ,KAAKR,KAAvC;AAEA,wBACE;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAE,MAAM,KAAKS,UAAL,EAHjB;AAIE,QAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAJX;AAAA,kBAMGD,CAAC,CAAC,OAAD;AANJ;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,KAAD;AACE,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWD,IADnB;AAEE,QAAA,OAAO,EAAE,MAAM,KAAKK,WAAL,EAFjB;AAGE,sBAAa,YAAW,KAAK/B,WAAY,sBAH3C;AAIE,QAAA,KAAK,EAAE;AACLO,UAAAA,OAAO,EAAE,MADJ;AAELyB,UAAAA,cAAc,EAAE,QAFX;AAGLC,UAAAA,aAAa,EAAE;AAHV,SAJT;AAAA,+BAUE;AAAA,kCACE,QAAC,UAAD;AACE,0BAAW,aADb;AAEE,YAAA,OAAO,EAAE,MAAM,KAAKF,WAAL,EAFjB;AAGE,YAAA,SAAS,EAAC,MAHZ;AAIE,YAAA,KAAK,EAAE;AAACG,cAAAA,SAAS,EAAE,OAAZ;AAAqBC,cAAAA,KAAK,EAAE,YAA5B;AAA0CC,cAAAA,UAAU,EAAE;AAAtD,aAJT;AAAA,mCAME,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,kBADF,EASGd,KAAK,KAAK,IAAV,gBACC;AAAA,oCACE;AACE,cAAA,GAAG,EAAEA,KAAK,CAACX,GADb;AAEE,cAAA,GAAG,EAAEW,KAAK,CAACe,GAFb;AAGE,cAAA,EAAE,EAAEf,KAAK,CAACV,EAHZ;AAIE,cAAA,KAAK,EAAE;AAAC0B,gBAAAA,KAAK,EAAE;AAAR;AAJT;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE;AACE,cAAA,IAAI,EAAEhB,KAAK,CAACX,GADd;AAEE,cAAA,QAAQ,EAAG,yCAFb;AAGE,cAAA,KAAK,EAAE;AACLuB,gBAAAA,SAAS,EAAE,KADN;AAELK,gBAAAA,QAAQ,EAAE,UAFL;AAGLC,gBAAAA,MAAM,EAAE,MAHH;AAILC,gBAAAA,KAAK,EAAE;AAJF,eAHT;AAAA,qCAUE,QAAC,MAAD;AACE,gBAAA,KAAK,EAAC,WADR;AAEE,gBAAA,OAAO,EAAC,WAFV;AAGE,gBAAA,OAAO,EAAE,MAAM,KAAKV,WAAL,EAHjB;AAIE,gBAAA,gBAAgB,MAJlB,CAKE;AALF;AAAA,0BAOGF,CAAC,CAAC,UAAD;AAPJ;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA,0BADD,GA6BG,IAtCN;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA,oBADF;AAgED;;AAtGyC;;AA0G5C,eAAehC,eAAe,CAAC,QAAD,CAAf,CAA0BqB,aAA1B,CAAf","sourcesContent":["import React from 'react';\nimport Semester from '../components/Semester.jsx';\nimport Button from '@material-ui/core/Button';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Modal from '@material-ui/core/Modal';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withTranslation } from 'react-i18next';\nimport domtoimage from 'dom-to-image';\n\n\nexport function generateImage(semesterNum) {\n  var img = new Image();\n  var node = document.getElementById(`semester-${semesterNum} clone`);\n  node.style.display = \"block\";\n\n  domtoimage.toPng(node)\n    .then(function (dataUrl) {\n      img.src = dataUrl;\n      img.id = 'results-image';\n      img.setAttribute('alt', `Semester ${semesterNum} results`);\n    })\n    .catch(function (error) {\n      alert(\"An error occurred during the generation of the image.\");\n      console.error('oopss', error);\n    });\n\n  return img;\n}\n\nclass DownloadImage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.image = null;\n    this.semesterNum = props.semesterNum;\n    this.state = {\n      open: false,\n    };\n  }\n\n  handleOpen = () => {\n    this.image = generateImage(this.semesterNum);\n\n    const $this = this;  // preserve the *this* object.\n\n    this.image.onload = function () {\n      // *this* here will be undefined ?(arrow function) so use $this\n      // console.log($this.image);\n      $this.setState({\n        open: true\n      });\n    };\n\n  }\n\n  handleClose = () => {\n    var node = document.getElementById(`semester-${this.semesterNum} clone`);\n    node.style.display = \"none\";\n\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    const image = this.image, { t } = this.props;\n\n    return (\n      <>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => this.handleOpen()}\n          endIcon={<GetAppIcon />}\n        >\n          {t('Image')}\n        </Button>\n        <Modal\n          open={this.state.open}\n          onClose={() => this.handleClose()}\n          aria-label={`Semester ${this.semesterNum} results modal image`}\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'row-reverse'\n          }}\n        >\n          <>\n            <IconButton\n              aria-label=\"Close modal\"\n              onClick={() => this.handleClose()}\n              component=\"span\"\n              style={{alignSelf: 'start', color: 'ghostwhite', marginLeft: '3rem'}}\n            >\n              <CloseIcon />\n            </IconButton>\n            {image !== null ?\n              <>\n                <img\n                  src={image.src}\n                  alt={image.alt}\n                  id={image.id}\n                  style={{width: '60%'}}\n                />\n                <a\n                  href={image.src}\n                  download={`Semester {this.semesterNum} results.png`}\n                  style={{\n                    alignSelf: 'end',\n                    position: 'relative',\n                    bottom: '1rem',\n                    right: '2rem'\n                  }}\n                >\n                  <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    onClick={() => this.handleClose()}\n                    disableElevation\n                    // style={{color: 'darkblue'}}\n                  >\n                    {t('Download')}\n                  </Button>\n                </a>\n              </>\n              : null\n            }\n          </>\n        </Modal>\n      </>\n    );\n  }\n\n}\n\nexport default withTranslation('common')(DownloadImage);\n"]},"metadata":{},"sourceType":"module"}