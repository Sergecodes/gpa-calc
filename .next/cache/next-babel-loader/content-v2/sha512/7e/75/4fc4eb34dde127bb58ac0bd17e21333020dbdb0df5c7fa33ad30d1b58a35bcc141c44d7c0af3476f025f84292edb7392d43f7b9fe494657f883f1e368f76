{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/components/CourseInput.jsx\";\nimport Typography from '@material-ui/core/Typography'; // import { useTranslation } from 'react-i18next';\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { TableRow, TableCell, TextField } from '@material-ui/core'; // import rc from '../components/Utils.jsx';\n\nexport default class CourseInput extends React.Component {\n  componentWillUnmount() {\n    console.log(`Unmounting course ${this.props.course.id}`);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // console.log(this.props.semester, nextProps.semester);\n    if (JSON.stringify(this.props.course) === JSON.stringify(nextProps.course) // JSON.stringify(this.props.semester) === JSON.stringify(nextProps.semester)\n    ) {\n        // console.log(`Won't update course ${this.props.course.id}`);\n        return false;\n      }\n\n    return true;\n  }\n\n  render() {\n    console.log(`Course ${this.props.course.id} in semester ${this.props.semester.number} rendered`);\n    const {\n      course,\n      semester,\n      onInputChange,\n      onMarkOrCreditChange,\n      onDeleteCourse\n    } = this.props;\n    const {\n      name,\n      credit,\n      markOver100,\n      grade\n    } = course;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(TableRow, {\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(TextField // id={`course-${course.id}-name`}\n          , {\n            name: \"name\",\n            value: name,\n            placeholder: \"e.g. Math 1032\",\n            size: \"small\",\n            variant: \"outlined\",\n            onChange: () => onInputChange(event, course, semester)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(TextField // id={`course-${course.id}-credit`}\n          , {\n            name: \"credit\",\n            value: credit // type=\"number\"\n            // value={credit === 0 ? '' : credit}\n            ,\n            size: \"small\",\n            variant: \"outlined\",\n            onChange: () => onMarkOrCreditChange(event, course, semester)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(TextField // id={`course-${id}-marks`}\n          // type=\"number\"\n          // TODO: when on mobile, set type to number.\n          , {\n            name: \"markOver100\",\n            value: markOver100,\n            size: \"small\",\n            variant: \"outlined\",\n            onChange: () => onMarkOrCreditChange(event, course, semester) // or onChange={(event) => props.onInputChange(event, props.course, props.semester)}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          size: \"small\",\n          children: grade === '' ? '-' : grade\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), semester.courses.length > 1 ? /*#__PURE__*/_jsxDEV(TableCell, {\n          style: {\n            paddingLeft: '0'\n          },\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"secondary\",\n            \"aria-label\": \"Delete course\",\n            onClick: () => onDeleteCourse(course, semester),\n            component: \"span\",\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false);\n  }\n\n} // export default React.memo(CourseInput);\n// export default CourseInput;","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/components/CourseInput.jsx"],"names":["Typography","React","Button","IconButton","DeleteIcon","TableRow","TableCell","TextField","CourseInput","Component","componentWillUnmount","console","log","props","course","id","shouldComponentUpdate","nextProps","nextState","JSON","stringify","render","semester","number","onInputChange","onMarkOrCreditChange","onDeleteCourse","name","credit","markOver100","grade","event","courses","length","paddingLeft"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,8BAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,SAA9B,QAA+C,mBAA/C,C,CACA;;AAEA,eAAe,MAAMC,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA0C;AACrDC,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoB,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,EAAG,EAAtD;AACD;;AAEDC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C;AACA,QACEC,IAAI,CAACC,SAAL,CAAe,KAAKP,KAAL,CAAWC,MAA1B,MAAsCK,IAAI,CAACC,SAAL,CAAeH,SAAS,CAACH,MAAzB,CADxC,CAEE;AAFF,MAGE;AACA;AACA,eAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACPV,IAAAA,OAAO,CAACC,GAAR,CAAa,UAAS,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,EAAG,gBAAe,KAAKF,KAAL,CAAWS,QAAX,CAAoBC,MAAO,WAArF;AACA,UAAM;AACJT,MAAAA,MADI;AACIQ,MAAAA,QADJ;AACcE,MAAAA,aADd;AAEJC,MAAAA,oBAFI;AAEkBC,MAAAA;AAFlB,QAGF,KAAKb,KAHT;AAIA,UAAM;AAAEc,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA,WAAhB;AAA6BC,MAAAA;AAA7B,QAAuChB,MAA7C;AAEA,wBACE;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,KAAK,MAAf;AAAA,gCACE,QAAC,SAAD;AAAA,iCACI,QAAC,SAAD,CACE;AADF;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,KAAK,EAAEa,IAHT;AAIE,YAAA,WAAW,EAAC,gBAJd;AAKE,YAAA,IAAI,EAAC,OALP;AAME,YAAA,OAAO,EAAC,UANV;AAOE,YAAA,QAAQ,EAAE,MAAMH,aAAa,CAACO,KAAD,EAAQjB,MAAR,EAAgBQ,QAAhB;AAP/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE,QAAC,SAAD;AAAA,iCACI,QAAC,SAAD,CACE;AADF;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,KAAK,EAAEM,MAHT,CAIE;AACA;AALF;AAME,YAAA,IAAI,EAAC,OANP;AAOE,YAAA,OAAO,EAAC,UAPV;AAQE,YAAA,QAAQ,EAAE,MAAMH,oBAAoB,CAACM,KAAD,EAAQjB,MAAR,EAAgBQ,QAAhB;AARtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAZF,eAwBE,QAAC,SAAD;AAAA,iCACE,QAAC,SAAD,CACE;AACA;AACA;AAHF;AAIE,YAAA,IAAI,EAAC,aAJP;AAKE,YAAA,KAAK,EAAEO,WALT;AAME,YAAA,IAAI,EAAC,OANP;AAOE,YAAA,OAAO,EAAC,UAPV;AAQE,YAAA,QAAQ,EAAE,MAAMJ,oBAAoB,CAACM,KAAD,EAAQjB,MAAR,EAAgBQ,QAAhB,CARtC,CASE;;AATF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAxBF,eAqCE,QAAC,SAAD;AAAW,UAAA,IAAI,EAAC,OAAhB;AAAA,oBACGQ,KAAK,KAAK,EAAV,GAAe,GAAf,GAAqBA;AADxB;AAAA;AAAA;AAAA;AAAA,gBArCF,EAyCGR,QAAQ,CAACU,OAAT,CAAiBC,MAAjB,GAA0B,CAA1B,gBACC,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE;AAACC,YAAAA,WAAW,EAAE;AAAd,WAAlB;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,KAAK,EAAC,WADR;AAEE,0BAAW,eAFb;AAGE,YAAA,OAAO,EAAE,MAAMR,cAAc,CAACZ,MAAD,EAASQ,QAAT,CAH/B;AAIE,YAAA,SAAS,EAAC,MAJZ;AAAA,mCAME,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD,GAWG,IApDN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AA2DD;;AArFoD,C,CAwFzD;AACA","sourcesContent":["import Typography from '@material-ui/core/Typography';\n// import { useTranslation } from 'react-i18next';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { TableRow, TableCell, TextField } from '@material-ui/core';\n// import rc from '../components/Utils.jsx';\n\nexport default class CourseInput extends React.Component {\n    componentWillUnmount() {\n      console.log(`Unmounting course ${this.props.course.id}`);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      // console.log(this.props.semester, nextProps.semester);\n      if (\n        JSON.stringify(this.props.course) === JSON.stringify(nextProps.course) \n        // JSON.stringify(this.props.semester) === JSON.stringify(nextProps.semester)\n      ) {\n        // console.log(`Won't update course ${this.props.course.id}`);\n        return false;\n      }\n\n      return true;\n    }\n\n    render() {\n      console.log(`Course ${this.props.course.id} in semester ${this.props.semester.number} rendered`);\n      const {\n        course, semester, onInputChange,\n        onMarkOrCreditChange, onDeleteCourse\n      } = this.props;\n      const { name, credit, markOver100, grade } = course;\n\n      return (\n        <>\n          <TableRow hover>\n            <TableCell>\n                <TextField\n                  // id={`course-${course.id}-name`}\n                  name=\"name\"\n                  value={name}\n                  placeholder=\"e.g. Math 1032\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                  onChange={() => onInputChange(event, course, semester)}\n                />\n            </TableCell>\n            <TableCell>\n                <TextField\n                  // id={`course-${course.id}-credit`}\n                  name=\"credit\"\n                  value={credit}\n                  // type=\"number\"\n                  // value={credit === 0 ? '' : credit}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  onChange={() => onMarkOrCreditChange(event, course, semester)}\n                />\n            </TableCell>\n            <TableCell>\n              <TextField\n                // id={`course-${id}-marks`}\n                // type=\"number\"\n                // TODO: when on mobile, set type to number.\n                name=\"markOver100\"\n                value={markOver100}\n                size=\"small\"\n                variant=\"outlined\"\n                onChange={() => onMarkOrCreditChange(event, course, semester)}\n                // or onChange={(event) => props.onInputChange(event, props.course, props.semester)}\n              />\n            </TableCell>\n            <TableCell size=\"small\">\n              {grade === '' ? '-' : grade}\n            </TableCell>\n\n            {semester.courses.length > 1 ?\n              <TableCell style={{paddingLeft: '0'}}>\n                <IconButton\n                  color=\"secondary\"\n                  aria-label=\"Delete course\"\n                  onClick={() => onDeleteCourse(course, semester)}\n                  component=\"span\"\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </TableCell>\n              : null\n            }\n          </TableRow>\n        </>\n      );\n    }\n}\n\n// export default React.memo(CourseInput);\n// export default CourseInput;\n"]},"metadata":{},"sourceType":"module"}