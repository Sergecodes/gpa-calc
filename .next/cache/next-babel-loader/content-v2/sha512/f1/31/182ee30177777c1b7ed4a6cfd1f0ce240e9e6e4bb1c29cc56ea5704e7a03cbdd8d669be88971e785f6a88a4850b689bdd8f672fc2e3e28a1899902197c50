{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/components/DownloadResults.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport { saveAs } from 'file-saver';\nimport domtoimage from 'dom-to-image';\n\nvar DownloadResults = /*#__PURE__*/function (_React$Component) {\n  _inherits(DownloadResults, _React$Component);\n\n  var _super = _createSuper(DownloadResults);\n\n  function DownloadResults() {\n    var _this;\n\n    _classCallCheck(this, DownloadResults);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"filter\", function (node) {\n      if (node.className === 'semester-actions') console.log(\"semester-actionssss\");\n      return node.tagName !== 'BUTTON';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"download\", function () {\n      var node = document.getElementById('semester-list');\n      console.log(node);\n      domtoimage.toPng(node, {\n        filter: _this.filter\n      }).then(function (dataUrl) {\n        var img = new Image();\n        img.src = dataUrl;\n        document.body.appendChild(img);\n      })[\"catch\"](function (error) {\n        console.error('oopss', error);\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(DownloadResults, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.download();\n        },\n        startIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 20\n        }, this),\n        children: \"Download as png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return DownloadResults;\n}(React.Component);\n\nexport { DownloadResults as default };","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/components/DownloadResults.jsx"],"names":["React","Button","GetAppIcon","saveAs","domtoimage","DownloadResults","node","className","console","log","tagName","document","getElementById","toPng","filter","then","dataUrl","img","Image","src","body","appendChild","error","download","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEqBC,e;;;;;;;;;;;;;;;;6DAEV,UAAAC,IAAI,EAAI;AAEf,UAAIA,IAAI,CAACC,SAAL,KAAmB,kBAAvB,EACEC,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACF,aAAQH,IAAI,CAACI,OAAL,KAAiB,QAAzB;AACD,K;;+DAEU,YAAM;AACf,UAAIJ,IAAI,GAAGK,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAX;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAF,MAAAA,UAAU,CAACS,KAAX,CAAiBP,IAAjB,EAAuB;AAACQ,QAAAA,MAAM,EAAE,MAAKA;AAAd,OAAvB,EACGC,IADH,CACQ,UAAUC,OAAV,EAAmB;AACvB,YAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACAD,QAAAA,GAAG,CAACE,GAAJ,GAAUH,OAAV;AACAL,QAAAA,QAAQ,CAACS,IAAT,CAAcC,WAAd,CAA0BJ,GAA1B;AACD,OALH,WAMS,UAAUK,KAAV,EAAiB;AACtBd,QAAAA,OAAO,CAACc,KAAR,CAAc,OAAd,EAAuBA,KAAvB;AACD,OARH;AASD,K;;;;;;;wCAEmB,CAEnB;;;6BAEQ;AAAA;;AACP,0BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,QAAL,EAAN;AAAA,SAHX;AAIE,QAAA,SAAS,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAUD;;;;EAtC0CvB,KAAK,CAACwB,S;;SAA9BnB,e","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport { saveAs } from 'file-saver';\nimport domtoimage from 'dom-to-image';\n\nexport default class DownloadResults extends React.Component {\n\n  filter = node => {\n\n    if (node.className === 'semester-actions')\n      console.log(\"semester-actionssss\")\n    return (node.tagName !== 'BUTTON');\n  }\n\n  download = () => {\n    var node = document.getElementById('semester-list');\n    console.log(node);\n    domtoimage.toPng(node, {filter: this.filter})\n      .then(function (dataUrl) {\n        var img = new Image();\n        img.src = dataUrl;\n        document.body.appendChild(img);\n      })\n      .catch(function (error) {\n        console.error('oopss', error);\n      });\n  }\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    return (\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => this.download()}\n        startIcon={<GetAppIcon />}\n      >\n        Download as png\n      </Button>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}