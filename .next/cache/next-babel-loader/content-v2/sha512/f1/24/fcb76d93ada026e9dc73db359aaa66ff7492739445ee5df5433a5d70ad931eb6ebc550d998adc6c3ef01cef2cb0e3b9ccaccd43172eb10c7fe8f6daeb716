{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/sergeman/Desktop/mgp-calculator-nextjs/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/sergeman/Desktop/mgp-calculator-nextjs/components/DownloadResults.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Modal from '@material-ui/core/Modal';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { saveAs } from 'file-saver';\nimport domtoimage from 'dom-to-image';\n\nvar filter = function filter(node) {\n  if (node.classList !== undefined) {\n    // node.classList is a DOMTokenList and it doesn't have the array \"includes\" method but rather a \"contains\" method\n    if (node.classList.contains('semester-actions') || node.classList.contains('delete-cell')) return false;\n  }\n\n  if (node.tagName === \"BUTTON\" || node.tagName === \"button\") return false;\n  return true;\n};\n\nvar generateImage = function generateImage() {\n  var img = new Image();\n  var node = document.getElementById('semester-list'); // var container = document.getElementById('modal-image');\n\n  domtoimage.toPng(node, {\n    filter: filter\n  }).then(function (dataUrl) {\n    img.src = dataUrl;\n    img.id = 'results-image';\n    img.setAttribute('alt', 'Semester results');\n    img.style.width = '35%'; // container.prepend(img);\n  })[\"catch\"](function (error) {\n    alert(\"An error occurred during the generation of the image.\");\n    console.error('oopss', error);\n  });\n  console.log(img);\n  return img;\n};\n\nexport default function DownloadResults() {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var image = generateImage();\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"download-results\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleOpen,\n      startIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 20\n      }, this),\n      children: \"Download results as image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-label\": \"Semester results modal image\",\n      children: [/*#__PURE__*/_jsxDEV(IconButton // color=\"secondary\"\n      , {\n        \"aria-label\": \"Close modal\",\n        onClick: handleClose,\n        component: \"span\",\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), image]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DownloadResults, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = DownloadResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"DownloadResults\");","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/components/DownloadResults.jsx"],"names":["React","Button","GetAppIcon","Modal","CloseIcon","IconButton","saveAs","domtoimage","filter","node","classList","undefined","contains","tagName","generateImage","img","Image","document","getElementById","toPng","then","dataUrl","src","id","setAttribute","style","width","error","alert","console","log","DownloadResults","useState","open","setOpen","image","handleOpen","handleClose"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Modal from '@material-ui/core/Modal';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { saveAs } from 'file-saver';\nimport domtoimage from 'dom-to-image';\n\n\nconst filter = node => {\n  if (node.classList !== undefined) {\n    // node.classList is a DOMTokenList and it doesn't have the array \"includes\" method but rather a \"contains\" method\n    if (node.classList.contains('semester-actions') || node.classList.contains('delete-cell'))\n      return false;\n  }\n\n  if (node.tagName === \"BUTTON\" || node.tagName === \"button\")\n    return false;\n\n  return true;\n}\n\nconst generateImage = () => {\n  var img = new Image();\n  var node = document.getElementById('semester-list');\n  // var container = document.getElementById('modal-image');\n\n  domtoimage.toPng(node, {filter: filter})\n    .then(function (dataUrl) {\n      img.src = dataUrl;\n      img.id = 'results-image';\n      img.setAttribute('alt', 'Semester results');\n      img.style.width = '35%';\n      // container.prepend(img);\n    })\n    .catch(function (error) {\n      alert(\"An error occurred during the generation of the image.\");\n      console.error('oopss', error);\n    });\n\n  console.log(img);\n  return img;\n};\n\nexport default function DownloadResults() {\n  const [open, setOpen] = React.useState(false);\n  const image = generateImage();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div id=\"download-results\">\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleOpen}\n        startIcon={<GetAppIcon />}\n      >\n        Download results as image\n      </Button>\n      <Modal open={open} onClose={handleClose} aria-label=\"Semester results modal image\">\n        <IconButton\n          // color=\"secondary\"\n          aria-label=\"Close modal\"\n          onClick={handleClose}\n          component=\"span\"\n        >\n          <CloseIcon />\n        </IconButton>\n        {image}\n      </Modal>\n    </div>\n  );\n\n}\n"]},"metadata":{},"sourceType":"module"}