{"ast":null,"code":"import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport { initReactI18next } from 'react-i18next';\ni18n.use(Backend).use(initReactI18next).init({\n  lng: 'fr',\n  backend: {\n    /* translation file path */\n    loadPath: '/i18n/translations/{{lng}}.json'\n  },\n  fallbackLng: 'fr',\n  debug: true,\n\n  /* can have multiple namespace, in case you want to divide a huge translation\n  into smaller pieces and load them on deman */\n  ns: ['translations'],\n  defaultNS: 'translations',\n  keySeparator: false,\n  interpolation: {\n    escapeValue: false,\n    formatSeparator: ','\n  },\n  react: {\n    useSuspense: false\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["/home/sergeman/Desktop/mgp-calculator-nextjs/public/i18n/i18n.js"],"names":["i18n","Backend","initReactI18next","use","init","lng","backend","loadPath","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","useSuspense"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AAEAF,IAAI,CACCG,GADL,CACSF,OADT,EAEKE,GAFL,CAESD,gBAFT,EAGKE,IAHL,CAGU;AACFC,EAAAA,GAAG,EAAE,IADH;AAGFC,EAAAA,OAAO,EAAE;AACL;AACAC,IAAAA,QAAQ,EAAE;AAFL,GAHP;AAOFC,EAAAA,WAAW,EAAE,IAPX;AAQFC,EAAAA,KAAK,EAAE,IARL;;AASF;AACR;AACQC,EAAAA,EAAE,EAAE,CAAC,cAAD,CAXF;AAYFC,EAAAA,SAAS,EAAE,cAZT;AAaFC,EAAAA,YAAY,EAAE,KAbZ;AAcFC,EAAAA,aAAa,EAAE;AACXC,IAAAA,WAAW,EAAE,KADF;AAEXC,IAAAA,eAAe,EAAE;AAFN,GAdb;AAkBFC,EAAAA,KAAK,EAAE;AACHC,IAAAA,WAAW,EAAE;AADV;AAlBL,CAHV;AA0BA,eAAejB,IAAf","sourcesContent":["import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport { initReactI18next } from 'react-i18next';\n\ni18n\n    .use(Backend)\n    .use(initReactI18next)\n    .init({\n        lng: 'fr',\n        \n        backend: {\n            /* translation file path */\n            loadPath: '/i18n/translations/{{lng}}.json'\n        },\n        fallbackLng: 'fr',\n        debug: true,\n        /* can have multiple namespace, in case you want to divide a huge translation\n        into smaller pieces and load them on deman */\n        ns: ['translations'],\n        defaultNS: 'translations',\n        keySeparator: false,\n        interpolation: {\n            escapeValue: false,\n            formatSeparator: ','\n        },\n        react: {\n            useSuspense: false\n        }\n    });\n\nexport default i18n;\n"]},"metadata":{},"sourceType":"module"}